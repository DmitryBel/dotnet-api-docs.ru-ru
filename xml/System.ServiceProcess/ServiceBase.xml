<Type Name="ServiceBase" FullName="System.ServiceProcess.ServiceBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2dbc0f7ae686463d4772e0cdd1f503f889472ddd" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56779386" /></Metadata><TypeSignature Language="C#" Value="public class ServiceBase : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceBase extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceBase&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceBase : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type ServiceBase = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.InstallerType(typeof(System.ServiceProcess.ServiceProcessInstaller))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Install.UserNTServiceDesigner, Microsoft.VisualStudio, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IRootDesigner")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="59f39-101">Предоставляет базовый класс для службы, которая будет существовать в рамках служебного приложения.</span><span class="sxs-lookup"><span data-stu-id="59f39-101">Provides a base class for a service that will exist as part of a service application.</span></span> <span data-ttu-id="59f39-102">При создании нового класса службы необходимо наследовать от класса <see cref="T:System.ServiceProcess.ServiceBase" />.</span><span class="sxs-lookup"><span data-stu-id="59f39-102"><see cref="T:System.ServiceProcess.ServiceBase" /> must be derived from when creating a new service class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-103">Являются производными от <xref:System.ServiceProcess.ServiceBase> при определении класса службы в приложении службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-103">Derive from <xref:System.ServiceProcess.ServiceBase> when defining your service class in a service application.</span></span> <span data-ttu-id="59f39-104">Любая используемая служба переопределяет <xref:System.ServiceProcess.ServiceBase.OnStart%2A> и <xref:System.ServiceProcess.ServiceBase.OnStop%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="59f39-104">Any useful service overrides the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> and <xref:System.ServiceProcess.ServiceBase.OnStop%2A> methods.</span></span> <span data-ttu-id="59f39-105">Для получения дополнительных возможностей, можно переопределить <xref:System.ServiceProcess.ServiceBase.OnPause%2A> и <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> с особое поведение в ответ на изменения в состоянии службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-105">For additional functionality, you can override <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> with specific behavior in response to changes in the service state.</span></span>  
  
 <span data-ttu-id="59f39-106">Служба — длительно исполняемом файле, который не поддерживает пользовательский интерфейс, и может не запускаться под учетной записью пользователя, выполнившего вход.</span><span class="sxs-lookup"><span data-stu-id="59f39-106">A service is a long-running executable that does not support a user interface, and which might not run under the logged-on user account.</span></span> <span data-ttu-id="59f39-107">Эта служба может работать без вмешательства пользователя, вход на компьютер.</span><span class="sxs-lookup"><span data-stu-id="59f39-107">The service can run without any user being logged on to the computer.</span></span>  
  
 <span data-ttu-id="59f39-108">По умолчанию службы работают с учетной записью System, который не совпадает с учетной записью администратора.</span><span class="sxs-lookup"><span data-stu-id="59f39-108">By default, services run under the System account, which is not the same as the Administrator account.</span></span> <span data-ttu-id="59f39-109">Невозможно изменить права учетной записи System.</span><span class="sxs-lookup"><span data-stu-id="59f39-109">You cannot change the rights of the System account.</span></span> <span data-ttu-id="59f39-110">Кроме того, можно использовать <xref:System.ServiceProcess.ServiceProcessInstaller> для указания учетной записи пользователя, под которой будет выполняться служба.</span><span class="sxs-lookup"><span data-stu-id="59f39-110">Alternatively, you can use a <xref:System.ServiceProcess.ServiceProcessInstaller> to specify a user account under which the service will run.</span></span>  
  
 <span data-ttu-id="59f39-111">Исполняемый файл может содержать более одной службы, но может содержать отдельный <xref:System.ServiceProcess.ServiceInstaller> для каждой службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-111">An executable can contain more than one service but must contain a separate <xref:System.ServiceProcess.ServiceInstaller> for each service.</span></span> <span data-ttu-id="59f39-112"><xref:System.ServiceProcess.ServiceInstaller> Регистрирует экземпляр службы в системе.</span><span class="sxs-lookup"><span data-stu-id="59f39-112">The <xref:System.ServiceProcess.ServiceInstaller> instance registers the service with the system.</span></span> <span data-ttu-id="59f39-113">Установщик также связывает каждой службы, можно использовать для записи команды службы журнала событий.</span><span class="sxs-lookup"><span data-stu-id="59f39-113">The installer also associates each service with an event log that you can use to record service commands.</span></span> <span data-ttu-id="59f39-114">`main()` Функция в исполняемом файле, определяет, какие службы должны выполняться.</span><span class="sxs-lookup"><span data-stu-id="59f39-114">The `main()` function in the executable defines which services should run.</span></span> <span data-ttu-id="59f39-115">Текущий рабочий каталог службы — каталог системы, а не от каталога, в котором находится исполняемый файл.</span><span class="sxs-lookup"><span data-stu-id="59f39-115">The current working directory of the service is the system directory, not the directory in which the executable is located.</span></span>  
  
 <span data-ttu-id="59f39-116">При запуске службы, система находит исполняемый файл и запускает <xref:System.ServiceProcess.ServiceBase.OnStart%2A> метод для этой службы, содержащихся в исполняемый файл.</span><span class="sxs-lookup"><span data-stu-id="59f39-116">When you start a service, the system locates the executable and runs the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> method for that service, contained within the executable.</span></span> <span data-ttu-id="59f39-117">Тем не менее со службой не так же, как выполнение исполняемого объекта.</span><span class="sxs-lookup"><span data-stu-id="59f39-117">However, running the service is not the same as running the executable.</span></span> <span data-ttu-id="59f39-118">Исполняемый файл загружает только служба.</span><span class="sxs-lookup"><span data-stu-id="59f39-118">The executable only loads the service.</span></span> <span data-ttu-id="59f39-119">Службе осуществляется через диспетчер управления службами в (например, остановки и запуска).</span><span class="sxs-lookup"><span data-stu-id="59f39-119">The service is accessed (for example, started and stopped) through the Service Control Manager.</span></span>  
  
 <span data-ttu-id="59f39-120">Исполняемый файл вызывает <xref:System.ServiceProcess.ServiceBase> производного класса конструктор первое время вызвать Start в службе.</span><span class="sxs-lookup"><span data-stu-id="59f39-120">The executable calls the <xref:System.ServiceProcess.ServiceBase> derived class's constructor the first time you call Start on the service.</span></span> <span data-ttu-id="59f39-121"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> Обработки команд метод вызывается сразу после выполнения конструктора.</span><span class="sxs-lookup"><span data-stu-id="59f39-121">The <xref:System.ServiceProcess.ServiceBase.OnStart%2A> command-handling method is called immediately after the constructor executes.</span></span> <span data-ttu-id="59f39-122">Конструктор не выполняется после первой загрузки службы, поэтому необходимости в разделении обработки, выполняемой с помощью конструктора от выполнения <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span><span class="sxs-lookup"><span data-stu-id="59f39-122">The constructor is not executed again after the first time the service has been loaded, so it is necessary to separate the processing performed by the constructor from that performed by <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span> <span data-ttu-id="59f39-123">Все ресурсы, которые могут быть сняты по <xref:System.ServiceProcess.ServiceBase.OnStop%2A> должны создаваться в <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span><span class="sxs-lookup"><span data-stu-id="59f39-123">Any resources that can be released by <xref:System.ServiceProcess.ServiceBase.OnStop%2A> should be created in <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span> <span data-ttu-id="59f39-124">Создание ресурсов в конструкторе предотвращает их создание при запуске службы после <xref:System.ServiceProcess.ServiceBase.OnStop%2A> выпустила ресурсы.</span><span class="sxs-lookup"><span data-stu-id="59f39-124">Creating resources in the constructor prevents them from being created properly if the service is started again after <xref:System.ServiceProcess.ServiceBase.OnStop%2A> has released the resources.</span></span>  
  
 <span data-ttu-id="59f39-125">Диспетчер управления службами (SCM) предоставляет способ взаимодействия со службой.</span><span class="sxs-lookup"><span data-stu-id="59f39-125">The Service Control Manager (SCM) provides a way to interact with the service.</span></span> <span data-ttu-id="59f39-126">Диспетчер управления Службами можно использовать для передачи в службу Start, Stop, Pause, продолжить или пользовательские команды.</span><span class="sxs-lookup"><span data-stu-id="59f39-126">You can use the SCM to pass Start, Stop, Pause, Continue, or custom commands into the service.</span></span> <span data-ttu-id="59f39-127">Диспетчер управления Службами использует значения <xref:System.ServiceProcess.ServiceBase.CanStop%2A> и <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> для определения, принимает ли служба остановки, приостановки или продолжения работы команды.</span><span class="sxs-lookup"><span data-stu-id="59f39-127">The SCM uses the values of <xref:System.ServiceProcess.ServiceBase.CanStop%2A> and <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> to determine whether the service accepts Stop, Pause, or Continue commands.</span></span> <span data-ttu-id="59f39-128">Остановить, приостановить и продолжить включены в контекст SCM меню, только если соответствующее свойство <xref:System.ServiceProcess.ServiceBase.CanStop%2A> или <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> является `true` в классе службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-128">Stop, Pause, and Continue are enabled in the SCM's context menus only if the corresponding property <xref:System.ServiceProcess.ServiceBase.CanStop%2A> or <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `true` in the service class.</span></span> <span data-ttu-id="59f39-129">Если параметр включен, команда передается в службу, и <xref:System.ServiceProcess.ServiceBase.OnStop%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, или <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> вызывается.</span><span class="sxs-lookup"><span data-stu-id="59f39-129">If enabled, the command is passed to the service, and <xref:System.ServiceProcess.ServiceBase.OnStop%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, or <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> is called.</span></span> <span data-ttu-id="59f39-130">Если <xref:System.ServiceProcess.ServiceBase.CanStop%2A>, <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>, или <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> — `false`, соответствующий метод обработки команд (таких как <xref:System.ServiceProcess.ServiceBase.OnStop%2A>) не будут обрабатываться, даже если вы уже был реализован.</span><span class="sxs-lookup"><span data-stu-id="59f39-130">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A>, <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>, or <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`, the corresponding command-handling method (such as <xref:System.ServiceProcess.ServiceBase.OnStop%2A>) will not be processed, even if you have implemented the method.</span></span>  
  
 <span data-ttu-id="59f39-131">Можно использовать <xref:System.ServiceProcess.ServiceController> класс можно сделать программным образом какие SCM делает, с помощью пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="59f39-131">You can use the <xref:System.ServiceProcess.ServiceController> class to do programmatically what the SCM does using a user interface.</span></span> <span data-ttu-id="59f39-132">Можно автоматизировать задачи, доступные в консоли.</span><span class="sxs-lookup"><span data-stu-id="59f39-132">You can automate the tasks available in the console.</span></span> <span data-ttu-id="59f39-133">Если <xref:System.ServiceProcess.ServiceBase.CanStop%2A>, <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>, или <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> — `true` , но не реализовали соответствующий метод обработки команд (таких как <xref:System.ServiceProcess.ServiceBase.OnStop%2A>) система создает исключение и игнорирует команду.</span><span class="sxs-lookup"><span data-stu-id="59f39-133">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A>, <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>, or <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `true` but you have not implemented a corresponding command-handling method (such as <xref:System.ServiceProcess.ServiceBase.OnStop%2A>) the system throws an exception and ignores the command.</span></span>  
  
 <span data-ttu-id="59f39-134">Необходимо реализовать <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, <xref:System.ServiceProcess.ServiceBase.OnStop%2A>, или любой другой метод в <xref:System.ServiceProcess.ServiceBase>.</span><span class="sxs-lookup"><span data-stu-id="59f39-134">You do not have to implement <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, <xref:System.ServiceProcess.ServiceBase.OnStop%2A>, or any other method in <xref:System.ServiceProcess.ServiceBase>.</span></span> <span data-ttu-id="59f39-135">Тем не менее, поведение службы описана в <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, поэтому как минимум, следует переопределить этот член.</span><span class="sxs-lookup"><span data-stu-id="59f39-135">However, the service's behavior is described in <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, so at minimum, this member should be overridden.</span></span> <span data-ttu-id="59f39-136">`main()` Функция исполняемого файла регистрирует службу в исполняемый файл с помощью диспетчера службы путем вызова <xref:System.ServiceProcess.ServiceBase.Run%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="59f39-136">The `main()` function of the executable registers the service in the executable with the Service Control Manager by calling the <xref:System.ServiceProcess.ServiceBase.Run%2A> method.</span></span> <span data-ttu-id="59f39-137"><xref:System.ServiceProcess.ServiceBase.ServiceName%2A> Свойство <xref:System.ServiceProcess.ServiceBase> объект, передаваемый в <xref:System.ServiceProcess.ServiceBase.Run%2A> метод должен соответствовать <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> свойство установщика службы для этой службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-137">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> property of the <xref:System.ServiceProcess.ServiceBase> object passed to the <xref:System.ServiceProcess.ServiceBase.Run%2A> method must match the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> property of the service installer for that service.</span></span>  
  
 <span data-ttu-id="59f39-138">Можно использовать `InstallUtil.exe` для установки служб в вашей системе.</span><span class="sxs-lookup"><span data-stu-id="59f39-138">You can use `InstallUtil.exe` to install services on your system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="59f39-139">Можно указать журнал, отличный от журнала событий приложения для получения уведомлений о вызовов службы, но ни один <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> ни <xref:System.ServiceProcess.ServiceBase.EventLog%2A> свойство можно написать пользовательский журнал.</span><span class="sxs-lookup"><span data-stu-id="59f39-139">You can specify a log other than the Application event log to receive notification of service calls, but neither the <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> nor the <xref:System.ServiceProcess.ServiceBase.EventLog%2A> property can write to a custom log.</span></span> <span data-ttu-id="59f39-140">Задайте <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> для `false` Если вы не хотите использовать автоматического ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="59f39-140">Set <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `false` if you do not want to use automatic logging.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceProcessInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceInstaller" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59f39-141">Создает новый экземпляр класса <see cref="T:System.ServiceProcess.ServiceBase" />.</span><span class="sxs-lookup"><span data-stu-id="59f39-141">Creates a new instance of the <see cref="T:System.ServiceProcess.ServiceBase" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-142">Не создавайте экземпляр <xref:System.ServiceProcess.ServiceBase> класса.</span><span class="sxs-lookup"><span data-stu-id="59f39-142">Do not create an instance of the <xref:System.ServiceProcess.ServiceBase> class.</span></span> <span data-ttu-id="59f39-143">Вместо этого являются производными от <xref:System.ServiceProcess.ServiceBase> и создание экземпляра производного класса.</span><span class="sxs-lookup"><span data-stu-id="59f39-143">Instead, derive from <xref:System.ServiceProcess.ServiceBase> and instantiate your derived class.</span></span> <span data-ttu-id="59f39-144">Минимальное, вам нужно реализовать конструктор для класса, производного от <xref:System.ServiceProcess.ServiceBase> является установка <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> в компоненте.</span><span class="sxs-lookup"><span data-stu-id="59f39-144">The minimum you need to implement in the constructor for a class inherited from <xref:System.ServiceProcess.ServiceBase> is to set the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> on your component.</span></span> <span data-ttu-id="59f39-145">Требуется дополнительная обработка в конструкторе.</span><span class="sxs-lookup"><span data-stu-id="59f39-145">No other processing is specifically required in the constructor.</span></span> <span data-ttu-id="59f39-146">Должен обрабатывать большинство инициализации в <xref:System.ServiceProcess.ServiceBase.OnStart%2A> , а не в конструкторе.</span><span class="sxs-lookup"><span data-stu-id="59f39-146">You should handle most initialization in <xref:System.ServiceProcess.ServiceBase.OnStart%2A> rather than in the constructor.</span></span> <span data-ttu-id="59f39-147">В противном случае нет никакой гарантии, которые объекты повторной инициализации при перезагрузке службы после ее остановки.</span><span class="sxs-lookup"><span data-stu-id="59f39-147">Otherwise, there is no guarantee the objects will be reinitialized when you restart a service after it has been stopped.</span></span>  
  
 <span data-ttu-id="59f39-148">При переопределении в производном классе конструктор, вызовите конструктор базового класса в коде.</span><span class="sxs-lookup"><span data-stu-id="59f39-148">If you override the constructor in your derived class, call the base class constructor in your code.</span></span>  
  
 <span data-ttu-id="59f39-149"><xref:System.ServiceProcess.ServiceBase> Конструктора задает <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> для `true`.</span><span class="sxs-lookup"><span data-stu-id="59f39-149">The <xref:System.ServiceProcess.ServiceBase> constructor sets <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `true`.</span></span> <span data-ttu-id="59f39-150">Если вы не хотите автоматически записывать вызовы к службе из диспетчера управления службами (SCM), задайте <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> для `false`.</span><span class="sxs-lookup"><span data-stu-id="59f39-150">If you do not want to automatically log calls to the service from the Service Control Manager (SCM), set <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `false`.</span></span>  
  
 <span data-ttu-id="59f39-151">Если исполняемый файл содержит одну службу, система вызывает конструктор службы при выборе из диспетчера управления Службами Start.</span><span class="sxs-lookup"><span data-stu-id="59f39-151">If the executable contains a single service, the system calls the service's constructor when Start is selected from the SCM, and runs the destructor if Stop is called.</span></span>  
  
 <span data-ttu-id="59f39-152">Если исполняемый файл содержит несколько служб, вызов запуска для одной службы вызывает конструкторы для вызова для всех служб в исполняемом файле, но запускается только указанную службу.</span><span class="sxs-lookup"><span data-stu-id="59f39-152">If the executable contains multiple services, calling Start on one service causes the constructors to be called for all services in the executable, but only the specified service is started.</span></span> <span data-ttu-id="59f39-153">Деструкторы для служб, выполняются друг с другом, когда все службы были остановлены, не по отдельности при остановке каждой службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-153">Destructors for the services are run together when all services have been stopped, not individually when each service is stopped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="59f39-154">Если конструктор базового класса, необходимо явно вызвать его в конструкторе производного класса.</span><span class="sxs-lookup"><span data-stu-id="59f39-154">If you override the base class constructor, you should explicitly call it in the constructor of your derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.AutoLog" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])" />
      </Docs>
    </Member>
    <Member MemberName="AutoLog">
      <MemberSignature Language="C#" Value="public bool AutoLog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoLog" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.AutoLog" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoLog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoLog { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoLog : bool with get, set" Usage="System.ServiceProcess.ServiceBase.AutoLog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SBAutoLog")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59f39-155">Определяет необходимость записи в журнал событий команд запуска, останова, паузы и возобновления.</span><span class="sxs-lookup"><span data-stu-id="59f39-155">Indicates whether to report Start, Stop, Pause, and Continue commands in the event log.</span></span></summary>
        <value><span data-ttu-id="59f39-156"><see langword="true" /> — данные должны записываться в журнал событий; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="59f39-156"><see langword="true" /> to report information in the event log; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-157">Установка <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> для `true` указывает службе журнала событий приложений, ошибки команд, а также информацию об изменении состояния для запустить, остановить, приостановить и продолжить события в службе.</span><span class="sxs-lookup"><span data-stu-id="59f39-157">Setting <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `true` instructs the service to use the Application event log to report command failures, as well as state change information for Start, Stop, Pause, and Continue events on the service.</span></span> <span data-ttu-id="59f39-158">Имя службы используется в качестве журнала <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="59f39-158">The name of the service is used as the log's <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="59f39-159">Чтобы сообщить сведения настраиваемый журнал событий, а не в журнале приложений, задайте <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> для `false` и записать инструкции в методах обработки команд <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, или <xref:System.ServiceProcess.ServiceBase.OnStop%2A> для публикации в соответствующий журнал.</span><span class="sxs-lookup"><span data-stu-id="59f39-159">To report information to a custom event log rather than the Application log, set <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `false` and write instructions within the command-handling methods <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, or <xref:System.ServiceProcess.ServiceBase.OnStop%2A> to post to the appropriate log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="59f39-160"><xref:System.ServiceProcess.ServiceBase.ServiceName%2A>, Является строкой источника для журнала событий, необходимо задать, прежде чем служба пытается выполнить запись в журнал событий.</span><span class="sxs-lookup"><span data-stu-id="59f39-160">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A>, which supplies the source string for the event log, must be set before the service attempts to write to the event log.</span></span> <span data-ttu-id="59f39-161">Исключение при попытке доступ к журналу событий, прежде чем задать имя источника.</span><span class="sxs-lookup"><span data-stu-id="59f39-161">Trying to access the event log before the source name is set throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.EventLog" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
      </Docs>
    </Member>
    <Member MemberName="CanHandlePowerEvent">
      <MemberSignature Language="C#" Value="public bool CanHandlePowerEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanHandlePowerEvent" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      <MemberSignature Language="VB.NET" Value="Public Property CanHandlePowerEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanHandlePowerEvent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanHandlePowerEvent : bool with get, set" Usage="System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59f39-162">Получает или задает значение, указывающее, может ли служба обрабатывать уведомления об изменениях состояния питания компьютера.</span><span class="sxs-lookup"><span data-stu-id="59f39-162">Gets or sets a value indicating whether the service can handle notifications of computer power status changes.</span></span></summary>
        <value><span data-ttu-id="59f39-163"><see langword="true" />, если служба обрабатывает изменения состояния питания, указанные в классе <see cref="T:System.ServiceProcess.PowerBroadcastStatus" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="59f39-163"><see langword="true" /> if the service handles the computer power status changes indicated in the <see cref="T:System.ServiceProcess.PowerBroadcastStatus" /> class, otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-164">При изменениях состояния питания компьютера, диспетчер управления службами (SCM) проверяет, принимает ли служба по значение <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="59f39-164">When the computer power status changes, the Service Control Manager (SCM) verifies whether the service accepts power event commands using the value of <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A>.</span></span>  
  
 <span data-ttu-id="59f39-165">Если <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A> — `true`, команда передается в службу и <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> метод вызывается в том случае, если определено.</span><span class="sxs-lookup"><span data-stu-id="59f39-165">If <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A> is `true`, the command is passed to the service and the <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> method is called if defined.</span></span> <span data-ttu-id="59f39-166">Если <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> не реализован в производном классе, SCM обрабатывает события питания с помощью пустой базовый класс <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="59f39-166">If <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> is not implemented in the derived class, the SCM handles the power event through the empty base class <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="59f39-167">Это свойство изменено после запуска службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-167">This property is modified after the service was started.</span></span></exception>
        <altmember cref="T:System.ServiceProcess.PowerBroadcastStatus" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
      </Docs>
    </Member>
    <Member MemberName="CanHandleSessionChangeEvent">
      <MemberSignature Language="C#" Value="public bool CanHandleSessionChangeEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanHandleSessionChangeEvent" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Property CanHandleSessionChangeEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanHandleSessionChangeEvent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanHandleSessionChangeEvent : bool with get, set" Usage="System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59f39-168">Получает или задает значение, показывающее, может ли служба обрабатывать события изменения сеанса, принимаемые от сеанса сервера терминалов.</span><span class="sxs-lookup"><span data-stu-id="59f39-168">Gets or sets a value that indicates whether the service can handle session change events received from a Terminal Server session.</span></span></summary>
        <value><span data-ttu-id="59f39-169"><see langword="true" />, если служба может обрабатывать события изменения сеанса сервера терминалов; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="59f39-169"><see langword="true" /> if the service can handle Terminal Server session change events; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="59f39-170">Это свойство изменено после запуска службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-170">This property is modified after the service was started.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      </Docs>
    </Member>
    <Member MemberName="CanPauseAndContinue">
      <MemberSignature Language="C#" Value="public bool CanPauseAndContinue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPauseAndContinue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
      <MemberSignature Language="VB.NET" Value="Public Property CanPauseAndContinue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPauseAndContinue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanPauseAndContinue : bool with get, set" Usage="System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59f39-171">Получает или задает значение, определяющее возможность приостановки и возобновления работы службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-171">Gets or sets a value indicating whether the service can be paused and resumed.</span></span></summary>
        <value><span data-ttu-id="59f39-172"><see langword="true" />, если работу службы можно приостановить; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="59f39-172"><see langword="true" /> if the service can be paused; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-173">Установите для параметра <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> свойства в конструкторе для службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-173">Set the value of the <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> property in the constructor for the service.</span></span>  
  
 <span data-ttu-id="59f39-174">Если служба приостановлена, она останавливается, это происходит.</span><span class="sxs-lookup"><span data-stu-id="59f39-174">When a service is paused, it halts what it is doing.</span></span> <span data-ttu-id="59f39-175">При продолжении работы службы (через диспетчер управления службами или программным способом), <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> выполняется.</span><span class="sxs-lookup"><span data-stu-id="59f39-175">When you continue the service (either through the Service Control Manager or programmatically), <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> runs.</span></span>  
  
 <span data-ttu-id="59f39-176">При передаче запроса на приостановку службе сэкономить системные ресурсы.</span><span class="sxs-lookup"><span data-stu-id="59f39-176">Sending a Pause request to the service can conserve system resources.</span></span> <span data-ttu-id="59f39-177">Приостановка освобождаются все системные ресурсы, но не Stop.</span><span class="sxs-lookup"><span data-stu-id="59f39-177">Pause may not release all system resources, but Stop does.</span></span> <span data-ttu-id="59f39-178"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> и <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> часто применяется для уменьшения обработки, чем <xref:System.ServiceProcess.ServiceBase.OnStop%2A> и <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span><span class="sxs-lookup"><span data-stu-id="59f39-178"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> are often implemented to perform less processing than <xref:System.ServiceProcess.ServiceBase.OnStop%2A> and <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span>  
  
 <span data-ttu-id="59f39-179">Когда <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> — `true`, переопределить <xref:System.ServiceProcess.ServiceBase.OnPause%2A> и <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> для указания обработки, которое должно выполняться, когда диспетчер управления службами (SCM) передает запрос на приостановку или остановку службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-179">When <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `true`, override <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> to specify the processing that should occur when the Service Control Manager (SCM) passes a Pause or Continue request to your service.</span></span> <span data-ttu-id="59f39-180"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> должен быть реализован, чтобы отменить обработку в <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span><span class="sxs-lookup"><span data-stu-id="59f39-180"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> should be implemented to undo the processing in <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span></span>  
  
 <span data-ttu-id="59f39-181">Если <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> — `false`, не будут передаваться приостановить или продолжить запросов в службу, поэтому <xref:System.ServiceProcess.ServiceBase.OnPause%2A> и <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> методы не вызываются, даже если они реализованы.</span><span class="sxs-lookup"><span data-stu-id="59f39-181">If <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`, the SCM will not pass Pause or Continue requests to the service, so the <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> methods will not be called even if they are implemented.</span></span> <span data-ttu-id="59f39-182">В диспетчер управления Службами `Pause` и `Continue` элементы будут отключены при <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> является `false`.</span><span class="sxs-lookup"><span data-stu-id="59f39-182">In the SCM, the `Pause` and `Continue` controls are disabled when <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="59f39-183">Служба уже запущена.</span><span class="sxs-lookup"><span data-stu-id="59f39-183">The service has already been started.</span></span> <span data-ttu-id="59f39-184">После запуска службы свойство <see cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" /> изменить нельзя.</span><span class="sxs-lookup"><span data-stu-id="59f39-184">The <see cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" /> property cannot be changed once the service has started.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      </Docs>
    </Member>
    <Member MemberName="CanShutdown">
      <MemberSignature Language="C#" Value="public bool CanShutdown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShutdown" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Property CanShutdown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanShutdown { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanShutdown : bool with get, set" Usage="System.ServiceProcess.ServiceBase.CanShutdown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59f39-185">Получает или задает значение, определяющее необходимость уведомления службы о завершении работы системы.</span><span class="sxs-lookup"><span data-stu-id="59f39-185">Gets or sets a value indicating whether the service should be notified when the system is shutting down.</span></span></summary>
        <value><span data-ttu-id="59f39-186"><see langword="true" />, если служба должна получать уведомление о завершении работы системы; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="59f39-186"><see langword="true" /> if the service should be notified when the system is shutting down; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="59f39-187">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="59f39-187">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-188">Если <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A> является `true`, служба является уведомление о завершении работы системы.</span><span class="sxs-lookup"><span data-stu-id="59f39-188">If <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A> is `true`, the service is notified when the system is shutting down.</span></span> <span data-ttu-id="59f39-189">При завершении работы <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> метод вызывается в том случае, если он был реализован в производном классе.</span><span class="sxs-lookup"><span data-stu-id="59f39-189">At shutdown, the <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> method is called if it has been implemented in your derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="59f39-190">Только системой <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> методом, выполняемым; служба может вызывать его, но это не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="59f39-190">Only the system should cause the <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> method to execute; the service can call it, but this is not recommended.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="59f39-191">Служба уже запущена.</span><span class="sxs-lookup"><span data-stu-id="59f39-191">The service has already been started.</span></span> <span data-ttu-id="59f39-192">После запуска службы свойство <see cref="P:System.ServiceProcess.ServiceBase.CanShutdown" /> изменить нельзя.</span><span class="sxs-lookup"><span data-stu-id="59f39-192">The <see cref="P:System.ServiceProcess.ServiceBase.CanShutdown" /> property cannot be changed once the service has started.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      </Docs>
    </Member>
    <Member MemberName="CanStop">
      <MemberSignature Language="C#" Value="public bool CanStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanStop" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanStop" />
      <MemberSignature Language="VB.NET" Value="Public Property CanStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanStop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanStop : bool with get, set" Usage="System.ServiceProcess.ServiceBase.CanStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59f39-193">Получает или задает значение, определяющее, можно ли остановить работу службы после ее запуска.</span><span class="sxs-lookup"><span data-stu-id="59f39-193">Gets or sets a value indicating whether the service can be stopped once it has started.</span></span></summary>
        <value><span data-ttu-id="59f39-194"><see langword="true" />, если возможны останов службы и вызов метода <see cref="M:System.ServiceProcess.ServiceBase.OnStop" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="59f39-194"><see langword="true" /> if the service can be stopped and the <see cref="M:System.ServiceProcess.ServiceBase.OnStop" /> method called; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-195">При вызове службы, диспетчер управления службами (SCM) проверяет, принимает ли служба команды Stop, используя значение <xref:System.ServiceProcess.ServiceBase.CanStop%2A>.</span><span class="sxs-lookup"><span data-stu-id="59f39-195">When Stop is called on a service, the Service Control Manager (SCM) verifies whether the service accepts Stop commands using the value of <xref:System.ServiceProcess.ServiceBase.CanStop%2A>.</span></span> <span data-ttu-id="59f39-196">Для большинства служб, значение <xref:System.ServiceProcess.ServiceBase.CanStop%2A> является `true`, но некоторые службы операционной системы, например, не позволяет пользователю выпадов.</span><span class="sxs-lookup"><span data-stu-id="59f39-196">For most services, the value of <xref:System.ServiceProcess.ServiceBase.CanStop%2A> is `true`, but some operating system services, for example, do not allow the user to stop them.</span></span>  
  
 <span data-ttu-id="59f39-197">Если <xref:System.ServiceProcess.ServiceBase.CanStop%2A> — `true`, команда Stop передается в службу и <xref:System.ServiceProcess.ServiceBase.OnStop%2A> метод вызывается в том случае, если он определен.</span><span class="sxs-lookup"><span data-stu-id="59f39-197">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A> is `true`, the Stop command is passed to the service and the <xref:System.ServiceProcess.ServiceBase.OnStop%2A> method is called if it is defined.</span></span> <span data-ttu-id="59f39-198">Если <xref:System.ServiceProcess.ServiceBase.OnStop%2A> не реализован в производном классе обрабатывает SCM, команды Stop через пустой базовый класс <xref:System.ServiceProcess.ServiceBase.OnStop%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="59f39-198">If <xref:System.ServiceProcess.ServiceBase.OnStop%2A> is not implemented in the derived class, the SCM handles the Stop command through the empty base class <xref:System.ServiceProcess.ServiceBase.OnStop%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="59f39-199">Служба уже запущена.</span><span class="sxs-lookup"><span data-stu-id="59f39-199">The service has already been started.</span></span> <span data-ttu-id="59f39-200">После запуска службы свойство <see cref="P:System.ServiceProcess.ServiceBase.CanStop" /> изменить нельзя.</span><span class="sxs-lookup"><span data-stu-id="59f39-200">The <see cref="P:System.ServiceProcess.ServiceBase.CanStop" /> property cannot be changed once the service has started.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="serviceBase.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="59f39-201">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="59f39-201"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="59f39-202">Уничтожает ресурсы (кроме памяти), используемые классом <see cref="T:System.ServiceProcess.ServiceBase" />.</span><span class="sxs-lookup"><span data-stu-id="59f39-202">Disposes of the resources (other than memory) used by the <see cref="T:System.ServiceProcess.ServiceBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-203">Вызовите <xref:System.ServiceProcess.ServiceBase.Dispose%2A> в производном классе (и с его помощью в <xref:System.ServiceProcess.ServiceBase> класс) когда вы закончите, с помощью производного класса.</span><span class="sxs-lookup"><span data-stu-id="59f39-203">Call <xref:System.ServiceProcess.ServiceBase.Dispose%2A> in your derived class (and through it, in the <xref:System.ServiceProcess.ServiceBase> class) when you are finished using the derived class.</span></span> <span data-ttu-id="59f39-204"><xref:System.ServiceProcess.ServiceBase.Dispose%2A> Метод оставляет производного класса окажется в неработоспособном состоянии.</span><span class="sxs-lookup"><span data-stu-id="59f39-204">The <xref:System.ServiceProcess.ServiceBase.Dispose%2A> method leaves the derived class in an unusable state.</span></span> <span data-ttu-id="59f39-205">После вызова метода <xref:System.ServiceProcess.ServiceBase.Dispose%2A>, необходимо освободить все ссылки в производный класс и <xref:System.ServiceProcess.ServiceBase> , они резервирует память может быть освобожден при коллекцией мусора.</span><span class="sxs-lookup"><span data-stu-id="59f39-205">After calling <xref:System.ServiceProcess.ServiceBase.Dispose%2A>, you must release all references to the derived class and <xref:System.ServiceProcess.ServiceBase> so the memory they were occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="59f39-206">Всегда вызывайте метод <xref:System.ServiceProcess.ServiceBase.Dispose%2A> перед освобождением последней ссылки на класс, производный от <xref:System.ServiceProcess.ServiceBase>.</span><span class="sxs-lookup"><span data-stu-id="59f39-206">Always call <xref:System.ServiceProcess.ServiceBase.Dispose%2A> before you release your last reference to the class derived from <xref:System.ServiceProcess.ServiceBase>.</span></span> <span data-ttu-id="59f39-207">В противном случае ресурсы <xref:System.ServiceProcess.ServiceBase> и производного класса при использовании будет не должна освобождаться до сбора мусора вызывает деструкторы объектов.</span><span class="sxs-lookup"><span data-stu-id="59f39-207">Otherwise, the resources <xref:System.ServiceProcess.ServiceBase> and the derived class are using will not be freed until garbage collection calls the objects' destructors.</span></span>  
  
 <span data-ttu-id="59f39-208"><xref:System.ServiceProcess.ServiceBase.OnStop%2A> часто применяется для обработки кода в <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, вместе с вызовом <xref:System.ServiceProcess.ServiceBase.Dispose%2A>.</span><span class="sxs-lookup"><span data-stu-id="59f39-208"><xref:System.ServiceProcess.ServiceBase.OnStop%2A> is often implemented to process the code in <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, combined with a call to <xref:System.ServiceProcess.ServiceBase.Dispose%2A>.</span></span> <span data-ttu-id="59f39-209">Если вы решили сделать это в производном классе, обычно реализуют <xref:System.ServiceProcess.ServiceBase.OnStart%2A> выделить все, что <xref:System.ServiceProcess.ServiceBase.Dispose%2A> выпуска.</span><span class="sxs-lookup"><span data-stu-id="59f39-209">If you choose to do this in your derived class, it is customary to implement <xref:System.ServiceProcess.ServiceBase.OnStart%2A> to allocate whatever <xref:System.ServiceProcess.ServiceBase.Dispose%2A> released.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceBase.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="EventLog">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.EventLog EventLog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.EventLog EventLog" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.EventLog" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EventLog As EventLog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::EventLog ^ EventLog { System::Diagnostics::EventLog ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EventLog : System.Diagnostics.EventLog" Usage="System.ServiceProcess.ServiceBase.EventLog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59f39-210">Получает журнал событий, который можно использовать для записи в журнал событий приложения уведомлений о вызовах команд службы, например, команд запуска и останова.</span><span class="sxs-lookup"><span data-stu-id="59f39-210">Gets an event log you can use to write notification of service command calls, such as Start and Stop, to the Application event log.</span></span></summary>
        <value><span data-ttu-id="59f39-211">Экземпляр <see cref="T:System.Diagnostics.EventLog" />, источник которого регистрируется в журнале приложения.</span><span class="sxs-lookup"><span data-stu-id="59f39-211">An <see cref="T:System.Diagnostics.EventLog" /> instance whose source is registered to the Application log.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-212">Конструктор инициализирует <xref:System.ServiceProcess.ServiceBase.EventLog%2A> свойство для экземпляра с <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType> и <xref:System.Diagnostics.EventLog.Log%2A?displayProperty=nameWithType> заданными свойствами.</span><span class="sxs-lookup"><span data-stu-id="59f39-212">The constructor initializes the <xref:System.ServiceProcess.ServiceBase.EventLog%2A> property to an instance with the <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.EventLog.Log%2A?displayProperty=nameWithType> properties set.</span></span> <span data-ttu-id="59f39-213">Источником является <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> службы, и журнал — журнал приложения на компьютере.</span><span class="sxs-lookup"><span data-stu-id="59f39-213">The source is the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> of the service, and the log is the computer's Application log.</span></span> <span data-ttu-id="59f39-214">Эти значения задаются автоматически и для автоматического ведения журнала команд службы невозможно изменить.</span><span class="sxs-lookup"><span data-stu-id="59f39-214">These values are set automatically and cannot be changed for automatic logging of service commands.</span></span>  
  
 <span data-ttu-id="59f39-215">Когда <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> является `true`, Start, Stop, Pause, продолжить и пользовательские команды автоматически записываются в журнал событий приложений.</span><span class="sxs-lookup"><span data-stu-id="59f39-215">When <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> is `true`, Start, Stop, Pause, Continue, and custom commands are recorded automatically in the Application event log.</span></span> <span data-ttu-id="59f39-216">Можно использовать <xref:System.ServiceProcess.ServiceBase.EventLog%2A> свойство для записи журнала, а также дополнительные сообщения.</span><span class="sxs-lookup"><span data-stu-id="59f39-216">You can use the <xref:System.ServiceProcess.ServiceBase.EventLog%2A> property to write additional messages to that log as well.</span></span> <span data-ttu-id="59f39-217">Компонент вызывает метод <xref:System.Diagnostics.EventLog.WriteEntry%2A?displayProperty=nameWithType> с помощью этого <xref:System.ServiceProcess.ServiceBase.EventLog%2A> член.</span><span class="sxs-lookup"><span data-stu-id="59f39-217">The component calls <xref:System.Diagnostics.EventLog.WriteEntry%2A?displayProperty=nameWithType> using this <xref:System.ServiceProcess.ServiceBase.EventLog%2A> member.</span></span>  
  
 <span data-ttu-id="59f39-218">Чтобы сообщить сведения настраиваемый журнал событий, а не в журнале приложений, задайте <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> для `false` и записать инструкции в методах обработки команд <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, или <xref:System.ServiceProcess.ServiceBase.OnStop%2A> для публикации в соответствующий журнал.</span><span class="sxs-lookup"><span data-stu-id="59f39-218">To report information to a custom event log rather than the Application log, set <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `false` and write instructions within the command-handling methods <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, or <xref:System.ServiceProcess.ServiceBase.OnStop%2A> to post to the appropriate log.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.AutoLog" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="ExitCode">
      <MemberSignature Language="C#" Value="public int ExitCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExitCode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.ExitCode" />
      <MemberSignature Language="VB.NET" Value="Public Property ExitCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExitCode { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ExitCode : int with get, set" Usage="System.ServiceProcess.ServiceBase.ExitCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59f39-219">Получает или задает код завершения для службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-219">Gets or sets the exit code for the service.</span></span></summary>
        <value><span data-ttu-id="59f39-220">Код завершения для службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-220">The exit code for the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-221">Задайте <xref:System.ServiceProcess.ServiceBase.ExitCode%2A> ненулевое значение перед остановкой службы в случае ошибки к диспетчеру управления службами.</span><span class="sxs-lookup"><span data-stu-id="59f39-221">Set the <xref:System.ServiceProcess.ServiceBase.ExitCode%2A> property to a non-zero value before stopping the service to indicate an error to the Service Control Manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxNameLength">
      <MemberSignature Language="C#" Value="public const int MaxNameLength = 80;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxNameLength = (80)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceProcess.ServiceBase.MaxNameLength" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxNameLength As Integer  = 80" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxNameLength = 80;" />
      <MemberSignature Language="F#" Value="val mutable MaxNameLength : int" Usage="System.ServiceProcess.ServiceBase.MaxNameLength" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>80</MemberValue>
      <Docs>
        <summary><span data-ttu-id="59f39-222">Указывает максимальный размер имени службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-222">Indicates the maximum size for a service name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-223">ServiceName и DisplayName имеют ограничения на размер, необходимо соблюдать при задании свойств для класса службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-223">ServiceName and DisplayName both have size restrictions that must be observed when setting the properties on your service class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.ServiceName" />
      </Docs>
    </Member>
    <Member MemberName="OnContinue">
      <MemberSignature Language="C#" Value="protected virtual void OnContinue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContinue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnContinue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContinue ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContinue();" />
      <MemberSignature Language="F#" Value="abstract member OnContinue : unit -&gt; unit&#xA;override this.OnContinue : unit -&gt; unit" Usage="serviceBase.OnContinue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59f39-224">Если метод <see cref="M:System.ServiceProcess.ServiceBase.OnContinue" /> реализован в производном классе, он запускается при передаче службе команды возобновления диспетчером служб.</span><span class="sxs-lookup"><span data-stu-id="59f39-224">When implemented in a derived class, <see cref="M:System.ServiceProcess.ServiceBase.OnContinue" /> runs when a Continue command is sent to the service by the Service Control Manager (SCM).</span></span> <span data-ttu-id="59f39-225">Задает действия, подлежащие выполнению при возобновлении нормальной работы службы после ее приостановки.</span><span class="sxs-lookup"><span data-stu-id="59f39-225">Specifies actions to take when a service resumes normal functioning after being paused.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-226">Реализуйте <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> отражения ответ приложения <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span><span class="sxs-lookup"><span data-stu-id="59f39-226">Implement <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> to mirror your application's response to <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span></span> <span data-ttu-id="59f39-227">При продолжении работы службы (через консоль служб или программным способом), <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> обработки выполняется и служба снова становится активным.</span><span class="sxs-lookup"><span data-stu-id="59f39-227">When you continue the service (either through the Services console or programmatically), the <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> processing runs, and the service becomes active again.</span></span>  
  
 <span data-ttu-id="59f39-228"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> должен быть переопределен при <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> свойство `true`.</span><span class="sxs-lookup"><span data-stu-id="59f39-228"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> is expected to be overridden when the <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="59f39-229">Если <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> — `false`, не будут передаваться приостановить или продолжить запросов в службу, поэтому <xref:System.ServiceProcess.ServiceBase.OnPause%2A> и <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> методы не вызываются, даже если они реализованы.</span><span class="sxs-lookup"><span data-stu-id="59f39-229">If <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`, the SCM will not pass Pause or Continue requests to the service, so the <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> methods will not be called even if they are implemented.</span></span> <span data-ttu-id="59f39-230">В диспетчер управления Службами `Pause` и `Continue` элементы будут отключены при <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> является `false`.</span><span class="sxs-lookup"><span data-stu-id="59f39-230">In the SCM, the `Pause` and `Continue` controls are disabled when <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnCustomCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCustomCommand (int command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCustomCommand(int32 command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCustomCommand (command As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCustomCommand(int command);" />
      <MemberSignature Language="F#" Value="abstract member OnCustomCommand : int -&gt; unit&#xA;override this.OnCustomCommand : int -&gt; unit" Usage="serviceBase.OnCustomCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="59f39-231">Сообщение команды, направляемое службе.</span><span class="sxs-lookup"><span data-stu-id="59f39-231">The command message sent to the service.</span></span></param>
        <summary><span data-ttu-id="59f39-232">Если метод <see cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" /> реализован в производном классе, он выполняется при передаче службе пользовательской команды диспетчером служб.</span><span class="sxs-lookup"><span data-stu-id="59f39-232">When implemented in a derived class, <see cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" /> executes when the Service Control Manager (SCM) passes a custom command to the service.</span></span> <span data-ttu-id="59f39-233">Задает действия, подлежащие выполнению при появлении команды с указанным значением параметра.</span><span class="sxs-lookup"><span data-stu-id="59f39-233">Specifies actions to take when a command with the specified parameter value occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-234"><xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> позволяет указать дополнительные функции, запуск, остановка, приостановка и возобновление службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-234"><xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> lets you specify additional functionality beyond starting, stopping, pausing and continuing services.</span></span>  
  
 <span data-ttu-id="59f39-235">Диспетчер управления Службами не проверяет пользовательскую команду, чтобы проверить, поддерживает ли служба `command` переданный параметр.</span><span class="sxs-lookup"><span data-stu-id="59f39-235">The SCM does not examine the custom command to verify whether the service supports the `command` parameter passed in.</span></span> <span data-ttu-id="59f39-236">Он передает пользовательскую команду непосредственно к службе.</span><span class="sxs-lookup"><span data-stu-id="59f39-236">It passes the custom command directly to the service.</span></span> <span data-ttu-id="59f39-237">Если служба не распознает `command` параметр, он не выполняет никаких действий.</span><span class="sxs-lookup"><span data-stu-id="59f39-237">If the service does not recognize the `command` parameter, it does nothing.</span></span>  
  
 <span data-ttu-id="59f39-238">Пользовательские команды вызываются <xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A> инструкции в <xref:System.ServiceProcess.ServiceController> компонента.</span><span class="sxs-lookup"><span data-stu-id="59f39-238">Custom commands are raised by an <xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A> statement in a <xref:System.ServiceProcess.ServiceController> component.</span></span> <span data-ttu-id="59f39-239">Использование оператора switch или, если... Выберите условие для обработки команды, которые задаются в службе.</span><span class="sxs-lookup"><span data-stu-id="59f39-239">Use a switch statement or if..then condition to handle the custom commands you define on your service.</span></span>  
  
 <span data-ttu-id="59f39-240">Только значения для пользовательских команд, которые можно определить в вашем приложении или использовать в <xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> распространяются от 128 до 255.</span><span class="sxs-lookup"><span data-stu-id="59f39-240">The only values for a custom command that you can define in your application or use in <xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> are those between 128 and 255.</span></span> <span data-ttu-id="59f39-241">Целые числа меньше 128 соответствуют значениям резервируемых системой.</span><span class="sxs-lookup"><span data-stu-id="59f39-241">Integers below 128 correspond to system-reserved values.</span></span>  
  
 <span data-ttu-id="59f39-242">Если <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> свойство `true`, пользовательские команды, как и другие команды, записи в журнал событий, чтобы сообщить, успешно ли завершилось выполнение метода.</span><span class="sxs-lookup"><span data-stu-id="59f39-242">If the <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> property is `true`, custom commands, like all other commands, write entries to the event log to report whether the method execution succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
      </Docs>
    </Member>
    <Member MemberName="OnPause">
      <MemberSignature Language="C#" Value="protected virtual void OnPause ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnPause" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPause ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPause();" />
      <MemberSignature Language="F#" Value="abstract member OnPause : unit -&gt; unit&#xA;override this.OnPause : unit -&gt; unit" Usage="serviceBase.OnPause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59f39-243">Если этот метод реализован в производном классе, он выполняется при передаче службе команды паузы диспетчером служб.</span><span class="sxs-lookup"><span data-stu-id="59f39-243">When implemented in a derived class, executes when a Pause command is sent to the service by the Service Control Manager (SCM).</span></span> <span data-ttu-id="59f39-244">Задает действия, подлежащие выполнению при приостановке работы службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-244">Specifies actions to take when a service pauses.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-245">Используйте <xref:System.ServiceProcess.ServiceBase.OnPause%2A> для указания действий, выполняемых, когда служба получает команды приостановки.</span><span class="sxs-lookup"><span data-stu-id="59f39-245">Use <xref:System.ServiceProcess.ServiceBase.OnPause%2A> to specify the processing that occurs when the service receives a Pause command.</span></span> <span data-ttu-id="59f39-246"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> должен быть переопределен при <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> свойство `true`.</span><span class="sxs-lookup"><span data-stu-id="59f39-246"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> is expected to be overridden when the <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="59f39-247">Когда вы продолжение работы приостановленной службы (либо через консоль служб или программным способом) <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> обработки запускается, и служба снова становится активным.</span><span class="sxs-lookup"><span data-stu-id="59f39-247">When you continue a paused service (either through the Services console or programmatically), the <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> processing is run, and the service becomes active again.</span></span>  
  
 <span data-ttu-id="59f39-248">Данная команда приостановки только позволяет приложению реагировать на определенное событие.</span><span class="sxs-lookup"><span data-stu-id="59f39-248">The Pause command only allows your application to react to a specific event.</span></span> <span data-ttu-id="59f39-249"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> не выполняет никаких действий не определить его, чтобы сделать службу.</span><span class="sxs-lookup"><span data-stu-id="59f39-249"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> does nothing to the service that you do not define it to do.</span></span>  
  
 <span data-ttu-id="59f39-250">При передаче запроса на приостановку службе сохранения ресурсов системы, так как паузы не требует освобождения всех системных ресурсов.</span><span class="sxs-lookup"><span data-stu-id="59f39-250">Sending a Pause request to the service can conserve system resources because Pause need not release all system resources.</span></span> <span data-ttu-id="59f39-251">Например если потоки открытых процессом, приостановка службы, а не ее остановки потоки оставаться открытым, поэтому не нужно перераспределить их, если служба по-прежнему.</span><span class="sxs-lookup"><span data-stu-id="59f39-251">For example, if threads have been opened by the process, pausing a service rather than stopping it can allow the threads to remain open, obviating the need to reallocate them when the service continues.</span></span> <span data-ttu-id="59f39-252">Если вы определяете приостановить, чтобы освободить все ресурсы системы, он ведет себя как команды остановки.</span><span class="sxs-lookup"><span data-stu-id="59f39-252">If you define Pause to release all system resources, it behaves like a Stop command.</span></span>  
  
 <span data-ttu-id="59f39-253">Задайте <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> для `true`и Переопределите <xref:System.ServiceProcess.ServiceBase.OnPause%2A> и <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> для указания обработки, которое должно выполняться, когда диспетчер управления Службами передает запрос на приостановку или остановку службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-253">Set <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> to `true`, and override <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> to specify the processing that should occur when the SCM passes a Pause or Continue request to your service.</span></span> <span data-ttu-id="59f39-254"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> должен быть реализован, чтобы отменить обработку в <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span><span class="sxs-lookup"><span data-stu-id="59f39-254"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> should be implemented to undo the processing in <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span></span>  
  
 <span data-ttu-id="59f39-255">Если <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> — `false`, не будут передаваться приостановить или продолжить запросов в службу, поэтому <xref:System.ServiceProcess.ServiceBase.OnPause%2A> и <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> методы не вызываются, даже если реализованы.</span><span class="sxs-lookup"><span data-stu-id="59f39-255">If <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`, the SCM will not pass Pause or Continue requests to the service, so the <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> methods will not be called even if implemented.</span></span> <span data-ttu-id="59f39-256">В диспетчер управления Службами `Pause` и `Continue` элементы будут отключены при <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> является `false`.</span><span class="sxs-lookup"><span data-stu-id="59f39-256">In the SCM, the `Pause` and `Continue` controls are disabled when <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnPowerEvent">
      <MemberSignature Language="C#" Value="protected virtual bool OnPowerEvent (System.ServiceProcess.PowerBroadcastStatus powerStatus);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnPowerEvent(valuetype System.ServiceProcess.PowerBroadcastStatus powerStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnPowerEvent (powerStatus As PowerBroadcastStatus) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnPowerEvent(System::ServiceProcess::PowerBroadcastStatus powerStatus);" />
      <MemberSignature Language="F#" Value="abstract member OnPowerEvent : System.ServiceProcess.PowerBroadcastStatus -&gt; bool&#xA;override this.OnPowerEvent : System.ServiceProcess.PowerBroadcastStatus -&gt; bool" Usage="serviceBase.OnPowerEvent powerStatus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="powerStatus" Type="System.ServiceProcess.PowerBroadcastStatus" />
      </Parameters>
      <Docs>
        <param name="powerStatus"><span data-ttu-id="59f39-257">Класс <see cref="T:System.ServiceProcess.PowerBroadcastStatus" />, определяющий выдаваемое системой уведомление о состоянии питания.</span><span class="sxs-lookup"><span data-stu-id="59f39-257">A <see cref="T:System.ServiceProcess.PowerBroadcastStatus" /> that indicates a notification from the system about its power status.</span></span></param>
        <summary><span data-ttu-id="59f39-258">Если этот метод реализован в производном классе, он выполняется при изменении состояния питания компьютера.</span><span class="sxs-lookup"><span data-stu-id="59f39-258">When implemented in a derived class, executes when the computer's power status has changed.</span></span> <span data-ttu-id="59f39-259">Это применимо для переносных компьютеров, когда они переходят в режим приостановки (этот режим отличается от режима завершения работы системы).</span><span class="sxs-lookup"><span data-stu-id="59f39-259">This applies to laptop computers when they go into suspended mode, which is not the same as a system shutdown.</span></span></summary>
        <returns><span data-ttu-id="59f39-260">Если этот метод реализован в производном классе, возвращаемое значение определяется требованиями приложения.</span><span class="sxs-lookup"><span data-stu-id="59f39-260">When implemented in a derived class, the needs of your application determine what value to return.</span></span> <span data-ttu-id="59f39-261">Например, если передается состояние широковещания <see langword="QuerySuspend" />, можно заставить приложение отклонять запрос с возвратом значения <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="59f39-261">For example, if a <see langword="QuerySuspend" /> broadcast status is passed, you could cause your application to reject the query by returning <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-262">Используйте <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> для указания действий, выполняемых при системного события, определенного в <xref:System.ServiceProcess.PowerBroadcastStatus> происходит перечисления — например, когда компьютер находится в режиме приостановки или разрядке батареи.</span><span class="sxs-lookup"><span data-stu-id="59f39-262">Use <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> to specify the processing that occurs when the system event indicated in the <xref:System.ServiceProcess.PowerBroadcastStatus> enumeration occurs--for example, when the computer is placed in suspended mode or indicates low battery power.</span></span>  
  
 <span data-ttu-id="59f39-263"><xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> должен быть переопределен при <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A> свойство `true`.</span><span class="sxs-lookup"><span data-stu-id="59f39-263"><xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> is expected to be overridden when the <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionChange">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionChange (System.ServiceProcess.SessionChangeDescription changeDescription);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionChange(valuetype System.ServiceProcess.SessionChangeDescription changeDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionChange (changeDescription As SessionChangeDescription)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionChange(System::ServiceProcess::SessionChangeDescription changeDescription);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionChange : System.ServiceProcess.SessionChangeDescription -&gt; unit&#xA;override this.OnSessionChange : System.ServiceProcess.SessionChangeDescription -&gt; unit" Usage="serviceBase.OnSessionChange changeDescription" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeDescription" Type="System.ServiceProcess.SessionChangeDescription" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="changeDescription"><span data-ttu-id="59f39-264">Структура, определяющая тип изменения.</span><span class="sxs-lookup"><span data-stu-id="59f39-264">A structure that identifies the change type.</span></span></param>
        <summary><span data-ttu-id="59f39-265">Выполняется при получении события изменения от сеанса сервера терминалов.</span><span class="sxs-lookup"><span data-stu-id="59f39-265">Executes when a change event is received from a Terminal Server session.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-266">Необходимо задать <xref:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent%2A> свойства `true` для запуска этого метода.</span><span class="sxs-lookup"><span data-stu-id="59f39-266">You must set the <xref:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent%2A> property to `true` to enable the execution of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent" />
        <altmember cref="T:System.ServiceProcess.SessionChangeDescription" />
      </Docs>
    </Member>
    <Member MemberName="OnShutdown">
      <MemberSignature Language="C#" Value="protected virtual void OnShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnShutdown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShutdown ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShutdown();" />
      <MemberSignature Language="F#" Value="abstract member OnShutdown : unit -&gt; unit&#xA;override this.OnShutdown : unit -&gt; unit" Usage="serviceBase.OnShutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59f39-267">Если этот метод реализован в производном классе, он выполняется при завершении работы системы.</span><span class="sxs-lookup"><span data-stu-id="59f39-267">When implemented in a derived class, executes when the system is shutting down.</span></span> <span data-ttu-id="59f39-268">Задает действия, выполняемые непосредственно перед завершением работы системы.</span><span class="sxs-lookup"><span data-stu-id="59f39-268">Specifies what should occur immediately prior to the system shutting down.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-269">Используйте <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> для указания действий, выполняемых при завершении работы системы.</span><span class="sxs-lookup"><span data-stu-id="59f39-269">Use <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> to specify the processing that occurs when the system shuts down.</span></span>  
  
 <span data-ttu-id="59f39-270">Это событие происходит только в том случае, когда операционная система завершает работу, не в том случае, если компьютер выключен.</span><span class="sxs-lookup"><span data-stu-id="59f39-270">This event occurs only when the operating system is shut down, not when the computer is turned off.</span></span>  
  
 <span data-ttu-id="59f39-271"><xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> должен быть переопределен при <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A> свойство `true`.</span><span class="sxs-lookup"><span data-stu-id="59f39-271"><xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> is expected to be overridden when the <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnStart">
      <MemberSignature Language="C#" Value="protected virtual void OnStart (string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStart(string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStart (args As String())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStart(cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnStart : string[] -&gt; unit&#xA;override this.OnStart : string[] -&gt; unit" Usage="serviceBase.OnStart args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="59f39-272">Данные, передаваемые командой запуска.</span><span class="sxs-lookup"><span data-stu-id="59f39-272">Data passed by the start command.</span></span></param>
        <summary><span data-ttu-id="59f39-273">Если этот метод реализован в производном классе, он выполняется при передаче службе команды запуска диспетчером служб или при запуске операционной системы (для служб, запускаемых автоматически).</span><span class="sxs-lookup"><span data-stu-id="59f39-273">When implemented in a derived class, executes when a Start command is sent to the service by the Service Control Manager (SCM) or when the operating system starts (for a service that starts automatically).</span></span> <span data-ttu-id="59f39-274">Задает действия, подлежащие выполнению при запуске службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-274">Specifies actions to take when the service starts.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-275">Используйте <xref:System.ServiceProcess.ServiceBase.OnStart%2A> для указания действий, выполняемых, когда служба получает команды запуска.</span><span class="sxs-lookup"><span data-stu-id="59f39-275">Use <xref:System.ServiceProcess.ServiceBase.OnStart%2A> to specify the processing that occurs when the service receives a Start command.</span></span> <span data-ttu-id="59f39-276"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> — метод, в котором задается поведение службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-276"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> is the method in which you specify the behavior of the service.</span></span> <span data-ttu-id="59f39-277"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> может принимать аргументы, как способ передачи данных, но такое использование возникает редко.</span><span class="sxs-lookup"><span data-stu-id="59f39-277"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> can take arguments as a way to pass data, but this usage is rare.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="59f39-278">Не используйте конструктор для выполнения обработки, который должен быть в <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span><span class="sxs-lookup"><span data-stu-id="59f39-278">Do not use the constructor to perform processing that should be in <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span> <span data-ttu-id="59f39-279">Используйте <xref:System.ServiceProcess.ServiceBase.OnStart%2A> для обработки инициализации службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-279">Use <xref:System.ServiceProcess.ServiceBase.OnStart%2A> to handle all initialization of your service.</span></span> <span data-ttu-id="59f39-280">Конструктор вызывается в том случае, когда приложение в исполняемый файл выполняется, не в том случае, при запуске службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-280">The constructor is called when the application's executable runs, not when the service runs.</span></span> <span data-ttu-id="59f39-281">Исполняемый объект запускается перед <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span><span class="sxs-lookup"><span data-stu-id="59f39-281">The executable runs before <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span> <span data-ttu-id="59f39-282">При продолжении, например, конструктор не вызывается снова, поскольку диспетчер управления Службами объект уже находится в памяти.</span><span class="sxs-lookup"><span data-stu-id="59f39-282">When you continue, for example, the constructor is not called again because the SCM already holds the object in memory.</span></span> <span data-ttu-id="59f39-283">Если <xref:System.ServiceProcess.ServiceBase.OnStop%2A> освобождает ресурсы, выделенные в конструкторе, а не в <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, необходимые ресурсы не приведет к созданию еще раз во второй раз вызове службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-283">If <xref:System.ServiceProcess.ServiceBase.OnStop%2A> releases resources allocated in the constructor rather than in <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, the needed resources would not be created again the second time the service is called.</span></span>  
  
 <span data-ttu-id="59f39-284">Службы можно задать для автоматического запуска после перезапуска компьютера, задав <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> на установщику службы <xref:System.ServiceProcess.ServiceStartMode.Automatic>.</span><span class="sxs-lookup"><span data-stu-id="59f39-284">Services can be set to start automatically when the computer reboots by setting the <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> on the service's installer to <xref:System.ServiceProcess.ServiceStartMode.Automatic>.</span></span> <span data-ttu-id="59f39-285">В таком случае <xref:System.ServiceProcess.ServiceBase.OnStart%2A> будет вызываться при запуске системы.</span><span class="sxs-lookup"><span data-stu-id="59f39-285">In such a situation, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> would be called at system startup.</span></span>  
  
 <span data-ttu-id="59f39-286"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> должен переопределяться в производном классе.</span><span class="sxs-lookup"><span data-stu-id="59f39-286"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> is expected to be overridden in the derived class.</span></span> <span data-ttu-id="59f39-287">Для службы быть полезным <xref:System.ServiceProcess.ServiceBase.OnStart%2A> и <xref:System.ServiceProcess.ServiceBase.OnStop%2A> следует реализовать в классе службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-287">For the service to be useful, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> and <xref:System.ServiceProcess.ServiceBase.OnStop%2A> should both be implemented in your service class.</span></span>  
  
 <span data-ttu-id="59f39-288">Обработать аргументы инициализации для службы в <xref:System.ServiceProcess.ServiceBase.OnStart%2A> метод, не в методе Main.</span><span class="sxs-lookup"><span data-stu-id="59f39-288">Process initialization arguments for the service in the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> method, not in the Main method.</span></span> <span data-ttu-id="59f39-289">Аргументы в `args` массива параметров можно задать вручную в окне «Свойства» для службы в консоли службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-289">The arguments in the `args` parameter array can be set manually in the properties window for the service in the Services console.</span></span> <span data-ttu-id="59f39-290">Аргументы, введенные в консоль, не сохраняются; они передаются в службу единовременно при запуске службы с помощью панели управления.</span><span class="sxs-lookup"><span data-stu-id="59f39-290">The arguments entered in the console are not saved; they are passed to the service on a one-time basis when the service is started from the control panel.</span></span> <span data-ttu-id="59f39-291">Аргументы, которые должны присутствовать автоматически при запуске служба может размещаться в ImagePath строковое значение для ключа реестра службы (HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\  *\< Имя службы >*).</span><span class="sxs-lookup"><span data-stu-id="59f39-291">Arguments that must be present when the service is automatically started can be placed in the ImagePath string value for the service's registry key (HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<service name>*).</span></span> <span data-ttu-id="59f39-292">Аргументы можно получить из реестра с помощью <xref:System.Environment.GetCommandLineArgs%2A> метода, например: `string[] imagePathArgs = Environment.GetCommandLineArgs();`.</span><span class="sxs-lookup"><span data-stu-id="59f39-292">You can obtain the arguments from the registry using the <xref:System.Environment.GetCommandLineArgs%2A> method, for example:  `string[] imagePathArgs = Environment.GetCommandLineArgs();`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnStop">
      <MemberSignature Language="C#" Value="protected virtual void OnStop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnStop" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStop ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStop();" />
      <MemberSignature Language="F#" Value="abstract member OnStop : unit -&gt; unit&#xA;override this.OnStop : unit -&gt; unit" Usage="serviceBase.OnStop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59f39-293">Если этот метод реализован в производном классе, он выполняется при передаче службе команды останова диспетчером служб.</span><span class="sxs-lookup"><span data-stu-id="59f39-293">When implemented in a derived class, executes when a Stop command is sent to the service by the Service Control Manager (SCM).</span></span> <span data-ttu-id="59f39-294">Задает действия, подлежащие выполнению при останове службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-294">Specifies actions to take when a service stops running.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-295">Используйте <xref:System.ServiceProcess.ServiceBase.OnStop%2A> для указания действия, выполняемые при получении службой команды остановки.</span><span class="sxs-lookup"><span data-stu-id="59f39-295">Use <xref:System.ServiceProcess.ServiceBase.OnStop%2A> to specify the processing that occurs when the service receives a Stop command.</span></span>  
  
 <span data-ttu-id="59f39-296">Когда диспетчер управления Службами получает команды остановки, она использует значение <xref:System.ServiceProcess.ServiceBase.CanStop%2A> Чтобы проверить, принимает ли служба команды Stop.</span><span class="sxs-lookup"><span data-stu-id="59f39-296">When the SCM receives a Stop command, it uses the value of <xref:System.ServiceProcess.ServiceBase.CanStop%2A> to verify whether the service accepts Stop commands.</span></span> <span data-ttu-id="59f39-297">Если <xref:System.ServiceProcess.ServiceBase.CanStop%2A> — `true`, команда Stop передается в службу и <xref:System.ServiceProcess.ServiceBase.OnStop%2A> метод вызывается в том случае, если он определен.</span><span class="sxs-lookup"><span data-stu-id="59f39-297">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A> is `true`, the Stop command is passed to the service, and the <xref:System.ServiceProcess.ServiceBase.OnStop%2A> method is called if it is defined.</span></span> <span data-ttu-id="59f39-298">Если <xref:System.ServiceProcess.ServiceBase.OnStop%2A> не реализован в службе, SCM обрабатывает команду остановки.</span><span class="sxs-lookup"><span data-stu-id="59f39-298">If <xref:System.ServiceProcess.ServiceBase.OnStop%2A> is not implemented in the service, the SCM handles the Stop command.</span></span>  
  
 <span data-ttu-id="59f39-299">Если <xref:System.ServiceProcess.ServiceBase.CanStop%2A> является `false`, диспетчер управления Службами не обрабатывает команду остановки.</span><span class="sxs-lookup"><span data-stu-id="59f39-299">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A> is `false`, the SCM ignores the Stop command.</span></span> <span data-ttu-id="59f39-300">Не передается в службу.</span><span class="sxs-lookup"><span data-stu-id="59f39-300">It is not passed to the service.</span></span> <span data-ttu-id="59f39-301">Возвращает команду остановки и создает исключение.</span><span class="sxs-lookup"><span data-stu-id="59f39-301">The Stop command returns and throws an exception.</span></span>  
  
 <span data-ttu-id="59f39-302"><xref:System.ServiceProcess.ServiceBase.OnStop%2A> должен переопределяться в производном классе.</span><span class="sxs-lookup"><span data-stu-id="59f39-302"><xref:System.ServiceProcess.ServiceBase.OnStop%2A> is expected to be overridden in the derived class.</span></span> <span data-ttu-id="59f39-303">Для службы быть полезным <xref:System.ServiceProcess.ServiceBase.OnStart%2A> и <xref:System.ServiceProcess.ServiceBase.OnStop%2A> следует реализовать в классе службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-303">For the service to be useful, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> and <xref:System.ServiceProcess.ServiceBase.OnStop%2A> should both be implemented in your service class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RequestAdditionalTime">
      <MemberSignature Language="C#" Value="public void RequestAdditionalTime (int milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestAdditionalTime(int32 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequestAdditionalTime (milliseconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RequestAdditionalTime(int milliseconds);" />
      <MemberSignature Language="F#" Value="member this.RequestAdditionalTime : int -&gt; unit" Usage="serviceBase.RequestAdditionalTime milliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="milliseconds"><span data-ttu-id="59f39-304">Запрашиваемое время в миллисекундах.</span><span class="sxs-lookup"><span data-stu-id="59f39-304">The requested time in milliseconds.</span></span></param>
        <summary><span data-ttu-id="59f39-305">Запрашивает дополнительное время для отложенной операции.</span><span class="sxs-lookup"><span data-stu-id="59f39-305">Requests additional time for a pending operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-306"><xref:System.ServiceProcess.ServiceBase.RequestAdditionalTime%2A> Метод предназначен для вызова переопределенным <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, или <xref:System.ServiceProcess.ServiceBase.OnStop%2A> методы, чтобы запросить дополнительное время для отложенной операции, чтобы предотвратить маркировки диспетчера управления службами (SCM) Служба как не отвечает.</span><span class="sxs-lookup"><span data-stu-id="59f39-306">The <xref:System.ServiceProcess.ServiceBase.RequestAdditionalTime%2A> method is intended to be called by the overridden <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, or <xref:System.ServiceProcess.ServiceBase.OnStop%2A> methods to request additional time for a pending operation, to prevent the Service Control Manager (SCM) from marking the service as not responding.</span></span>  <span data-ttu-id="59f39-307">Если ожидающая операция не продолжить, пауза, запуска или остановки, <xref:System.InvalidOperationException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="59f39-307">If the pending operation is not a continue, pause, start, or stop, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="59f39-308">Служба не находится в состоянии ожидания.</span><span class="sxs-lookup"><span data-stu-id="59f39-308">The service is not in a pending state.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Run">
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="59f39-309">Предоставляет основную точку входа для исполняемого файла службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-309">Provides the main entry point for a service executable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.ServiceProcess.ServiceBase service);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.ServiceProcess.ServiceBase service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Run (service As ServiceBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(System::ServiceProcess::ServiceBase ^ service);" />
      <MemberSignature Language="F#" Value="static member Run : System.ServiceProcess.ServiceBase -&gt; unit" Usage="System.ServiceProcess.ServiceBase.Run service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.ServiceProcess.ServiceBase" />
      </Parameters>
      <Docs>
        <param name="service"><span data-ttu-id="59f39-310">Класс <see cref="T:System.ServiceProcess.ServiceBase" />, определяющий службу для запуска.</span><span class="sxs-lookup"><span data-stu-id="59f39-310">A <see cref="T:System.ServiceProcess.ServiceBase" /> which indicates a service to start.</span></span></param>
        <summary><span data-ttu-id="59f39-311">Регистрирует исполняемый файл для службы с помощью диспетчера служб.</span><span class="sxs-lookup"><span data-stu-id="59f39-311">Registers the executable for a service with the Service Control Manager (SCM).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-312">Вызывают эту перегрузку `main()` функция исполняемый файл, чтобы зарегистрировать службу с помощью диспетчера службы Service.</span><span class="sxs-lookup"><span data-stu-id="59f39-312">Call this overload in the `main()` function of the service executable to register the service with the Service Control Manager.</span></span> <span data-ttu-id="59f39-313">После вызова метода <xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%29>, диспетчер управления службами выдает команды запуска, который приводит к вызову для <xref:System.ServiceProcess.ServiceBase.OnStart%2A> метод в службе.</span><span class="sxs-lookup"><span data-stu-id="59f39-313">After you call <xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%29>, the Service Control Manager issues a Start command, which results in a call to the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> method in the service.</span></span> <span data-ttu-id="59f39-314">Служба не запущена, пока не будет выполнена команда запуска.</span><span class="sxs-lookup"><span data-stu-id="59f39-314">The service is not started until the Start command is executed.</span></span>  
  
 <span data-ttu-id="59f39-315"><xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType> Так же, как вызывается метод <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> для приложений Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="59f39-315">The <xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType> method is called in much the same way as <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> for Windows Forms applications.</span></span>  
  
 <span data-ttu-id="59f39-316">Если <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> — `true`, запись записывается в журнал событий, если указанной службы `service` параметра не запускается.</span><span class="sxs-lookup"><span data-stu-id="59f39-316">If <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> is `true`, an entry is written to the event log if the service specified by the `service` parameter fails to start.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="59f39-317"><paramref name="service" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="59f39-317"><paramref name="service" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.#ctor" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.ServiceProcess.ServiceBase[] services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.ServiceProcess.ServiceBase[] services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Run (services As ServiceBase())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(cli::array &lt;System::ServiceProcess::ServiceBase ^&gt; ^ services);" />
      <MemberSignature Language="F#" Value="static member Run : System.ServiceProcess.ServiceBase[] -&gt; unit" Usage="System.ServiceProcess.ServiceBase.Run services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.ServiceProcess.ServiceBase[]" />
      </Parameters>
      <Docs>
        <param name="services"><span data-ttu-id="59f39-318">Массив экземпляров ServiceBase, определяющих службы для запуска.</span><span class="sxs-lookup"><span data-stu-id="59f39-318">An array of ServiceBase instances, which indicate services to start.</span></span></param>
        <summary><span data-ttu-id="59f39-319">Регистрирует исполняемый файл для нескольких служб с помощью диспетчера служб.</span><span class="sxs-lookup"><span data-stu-id="59f39-319">Registers the executable for multiple services with the Service Control Manager (SCM).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-320">Вызывают эту перегрузку `main()` функции службы для регистрации служб с помощью диспетчера служб.</span><span class="sxs-lookup"><span data-stu-id="59f39-320">Call this overload in the `main()` function of the service executable to register the services with the Service Control Manager.</span></span> <span data-ttu-id="59f39-321">После вызова метода <xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%5B%5D%29>, диспетчер управления службами выдает команды запуска, которые приводят к вызовы <xref:System.ServiceProcess.ServiceBase.OnStart%2A> методы в службах.</span><span class="sxs-lookup"><span data-stu-id="59f39-321">After you call <xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%5B%5D%29>, the Service Control Manager issues Start commands, which result in calls to the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> methods in the services.</span></span> <span data-ttu-id="59f39-322">Службы не запущены, пока не будут выполнены команды запуска.</span><span class="sxs-lookup"><span data-stu-id="59f39-322">The services are not started until the Start commands are executed.</span></span>  
  
 <span data-ttu-id="59f39-323"><xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType> Так же, как вызывается метод <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> метод для приложений Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="59f39-323">The <xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType> method is called in much the same way as the <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> method for Windows Forms applications.</span></span>  
  
 <span data-ttu-id="59f39-324">Если <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> является `true`, запись записывается в журнал событий, если происходит сбой запуска любой службы в массиве.</span><span class="sxs-lookup"><span data-stu-id="59f39-324">If <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> is `true`, an entry is written to the event log if any service in the array fails to start.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="59f39-325">Отсутствует служба для запуска.</span><span class="sxs-lookup"><span data-stu-id="59f39-325">You did not supply a service to start.</span></span> <span data-ttu-id="59f39-326">Массив может иметь значение <see langword="null" /> или быть пустым.</span><span class="sxs-lookup"><span data-stu-id="59f39-326">The array might be <see langword="null" /> or empty.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.#ctor" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="ServiceHandle">
      <MemberSignature Language="C#" Value="protected IntPtr ServiceHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ServiceHandle" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.ServiceHandle" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property IntPtr ServiceHandle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceHandle : nativeint" Usage="System.ServiceProcess.ServiceBase.ServiceHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59f39-327">Получает дескриптор управления службой.</span><span class="sxs-lookup"><span data-stu-id="59f39-327">Gets the service control handle for the service.</span></span></summary>
        <value><span data-ttu-id="59f39-328">Структура <see cref="T:System.IntPtr" />, содержащая дескриптор управления службой.</span><span class="sxs-lookup"><span data-stu-id="59f39-328">An <see cref="T:System.IntPtr" /> structure that contains the service control handle for the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-329">Дескриптор управления службой используется для взаимодействия с диспетчера управления службами (SCM).</span><span class="sxs-lookup"><span data-stu-id="59f39-329">The service control handle is used to communicate with the Service Control Manager (SCM).</span></span>  <span data-ttu-id="59f39-330">Дескриптор может использоваться для обновления сведений о состоянии диспетчера управления службами для вызова службы с помощью неуправляемых `SetServiceStatus` функции.</span><span class="sxs-lookup"><span data-stu-id="59f39-330">The handle can be used to update the service control manager's status information for the calling service using the unmanaged `SetServiceStatus` function.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="59f39-331">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="59f39-331">for access to unmanaged code.</span></span> <span data-ttu-id="59f39-332">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="59f39-332">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ServiceMainCallback">
      <MemberSignature Language="C#" Value="public void ServiceMainCallback (int argCount, IntPtr argPointer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ServiceMainCallback(int32 argCount, native int argPointer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.ServiceMainCallback(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ServiceMainCallback (argCount As Integer, argPointer As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ServiceMainCallback(int argCount, IntPtr argPointer);" />
      <MemberSignature Language="F#" Value="member this.ServiceMainCallback : int * nativeint -&gt; unit" Usage="serviceBase.ServiceMainCallback (argCount, argPointer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argCount" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="argPointer" Type="System.IntPtr" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argCount"><span data-ttu-id="59f39-333">Число аргументов в массиве аргументов.</span><span class="sxs-lookup"><span data-stu-id="59f39-333">The number of arguments in the argument array.</span></span></param>
        <param name="argPointer"><span data-ttu-id="59f39-334">Структура <see cref="T:System.IntPtr" />, указывающая на массив аргументов.</span><span class="sxs-lookup"><span data-stu-id="59f39-334">An <see cref="T:System.IntPtr" /> structure that points to an array of arguments.</span></span></param>
        <summary><span data-ttu-id="59f39-335">Регистрирует обработчик команд и запускает службу.</span><span class="sxs-lookup"><span data-stu-id="59f39-335">Registers the command handler and starts the service.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string with get, set" Usage="System.ServiceProcess.ServiceBase.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SBServiceName")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59f39-336">Получает или задает короткое имя, используемое для идентификации службы в системе.</span><span class="sxs-lookup"><span data-stu-id="59f39-336">Gets or sets the short name used to identify the service to the system.</span></span></summary>
        <value><span data-ttu-id="59f39-337">Имя службы.</span><span class="sxs-lookup"><span data-stu-id="59f39-337">The name of the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-338"><xref:System.ServiceProcess.ServiceBase.ServiceName%2A> Определяет службу к диспетчеру управления службами.</span><span class="sxs-lookup"><span data-stu-id="59f39-338">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> identifies the service to the Service Control Manager.</span></span> <span data-ttu-id="59f39-339">Значение этого свойства должно быть идентично имени службы в <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType> свойства соответствующего класса установщика.</span><span class="sxs-lookup"><span data-stu-id="59f39-339">The value of this property must be identical to the name recorded for the service in the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType> property of the corresponding installer class.</span></span> <span data-ttu-id="59f39-340">В коде <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> службы обычно задается в `main()` функция исполняемого файла.</span><span class="sxs-lookup"><span data-stu-id="59f39-340">In code, the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> of the service is usually set in the `main()` function of the executable.</span></span>  
  
 <span data-ttu-id="59f39-341"><xref:System.ServiceProcess.ServiceBase.ServiceName%2A> Также используется для указания <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType> связанные с <xref:System.ServiceProcess.ServiceBase.EventLog%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="59f39-341">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> is also used to specify the <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType> associated with the <xref:System.ServiceProcess.ServiceBase.EventLog%2A> property.</span></span> <span data-ttu-id="59f39-342">Это <xref:System.ServiceProcess.ServiceBase.EventLog%2A> — это экземпляр, который записывает сведения о командах службы в журнал приложений.</span><span class="sxs-lookup"><span data-stu-id="59f39-342">This <xref:System.ServiceProcess.ServiceBase.EventLog%2A> is an instance that writes service command information to the Application log.</span></span>  
  
 <span data-ttu-id="59f39-343"><xref:System.ServiceProcess.ServiceBase.ServiceName%2A>, Является строкой источника для журнала событий, необходимо задать перед началом записи в журнал событий.</span><span class="sxs-lookup"><span data-stu-id="59f39-343">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A>, which supplies the source string for the event log, must be set before the service writes to the event log.</span></span> <span data-ttu-id="59f39-344">Пытается получить доступ к журналу событий, прежде чем задать имя источника вызывает исключение, исключение.</span><span class="sxs-lookup"><span data-stu-id="59f39-344">Trying to access the event log before the source name is set causes an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="59f39-345">Служба уже запущена.</span><span class="sxs-lookup"><span data-stu-id="59f39-345">The service has already been started.</span></span> <span data-ttu-id="59f39-346">После запуска службы свойство <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /> изменить нельзя.</span><span class="sxs-lookup"><span data-stu-id="59f39-346">The <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /> property cannot be changed once the service has started.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="59f39-347">Указанное имя представляет собой строку нулевой длины или больше, чем <see cref="F:System.ServiceProcess.ServiceBase.MaxNameLength" />, либо указанное имя содержит прямую или обратную косую черту.</span><span class="sxs-lookup"><span data-stu-id="59f39-347">The specified name is a zero-length string or is longer than <see cref="F:System.ServiceProcess.ServiceBase.MaxNameLength" />, or the specified name contains forward slash or backslash characters.</span></span></exception>
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="serviceBase.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59f39-348">Останавливает работающую службу.</span><span class="sxs-lookup"><span data-stu-id="59f39-348">Stops the executing service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59f39-349"><xref:System.ServiceProcess.ServiceBase.Stop%2A> Метод устанавливает состояние службы, чтобы указать, находится в состоянии ожидания остановки и вызовы <xref:System.ServiceProcess.ServiceBase.OnStop%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="59f39-349">The <xref:System.ServiceProcess.ServiceBase.Stop%2A> method sets the service state to indicate a stop is pending and calls the <xref:System.ServiceProcess.ServiceBase.OnStop%2A> method.</span></span>  <span data-ttu-id="59f39-350">После остановки приложения состояния службы переходит в остановленное.</span><span class="sxs-lookup"><span data-stu-id="59f39-350">After the application is stopped, the service state is set to stopped.</span></span> <span data-ttu-id="59f39-351">Если приложение является размещенной службы, будет выгружен домен приложения.</span><span class="sxs-lookup"><span data-stu-id="59f39-351">If the application is a hosted service, the application domain is unloaded.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
      </Docs>
    </Member>
  </Members>
</Type>