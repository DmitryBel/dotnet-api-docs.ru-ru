<Type Name="ResourceReader" FullName="System.Resources.ResourceReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf7a67a258c9d35bde90d29a438b1379dff2335c" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58691141" /></Metadata><TypeSignature Language="C#" Value="public sealed class ResourceReader : System.Resources.IResourceReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResourceReader extends System.Object implements class System.Collections.IEnumerable, class System.IDisposable, class System.Resources.IResourceReader" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResourceReader&#xA;Implements IResourceReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceReader sealed : System::Resources::IResourceReader" />
  <TypeSignature Language="F#" Value="type ResourceReader = class&#xA;    interface IResourceReader&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.Reader</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Resources.IResourceReader</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="28c8a-101">Перечисляет ресурсы в двоичном файле ресурсов (RESOURCES) путем последовательного считывания пар "ключ-значение" ресурсов.</span><span class="sxs-lookup"><span data-stu-id="28c8a-101">Enumerates the resources in a binary resources (.resources) file by reading sequential resource name/value pairs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="28c8a-102"><xref:System.Resources.ResourceReader> Класс предоставляет стандартную реализацию <xref:System.Resources.IResourceReader> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="28c8a-102">The <xref:System.Resources.ResourceReader> class provides a standard implementation of the <xref:System.Resources.IResourceReader> interface.</span></span> <span data-ttu-id="28c8a-103">Объект <xref:System.Resources.ResourceReader> экземпляр представляет автономный RESOURCES-файла или файла .resources, внедренного в сборку.</span><span class="sxs-lookup"><span data-stu-id="28c8a-103">A <xref:System.Resources.ResourceReader> instance represents either a standalone .resources file or a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="28c8a-104">Он позволяет перечислить ресурсы в RESOURCES-файла и извлечь его пары "имя значение".</span><span class="sxs-lookup"><span data-stu-id="28c8a-104">It is used to enumerate the resources in a .resources file and retrieve its name/value pairs.</span></span> <span data-ttu-id="28c8a-105">Он отличается от <xref:System.Resources.ResourceManager> класс, который используется для получения указанных именованных ресурсов из RESOURCES-файла, внедренного в сборку.</span><span class="sxs-lookup"><span data-stu-id="28c8a-105">It differs from the <xref:System.Resources.ResourceManager> class, which is used to retrieve specified named resources from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="28c8a-106"><xref:System.Resources.ResourceManager> Класс используется для извлечения ресурсов, имена которых известны заранее, тогда как <xref:System.Resources.ResourceReader> класс полезен для извлечения ресурсов, которого номер или точные имена не известны во время компиляции.</span><span class="sxs-lookup"><span data-stu-id="28c8a-106">The <xref:System.Resources.ResourceManager> class is used to retrieve resources whose names are known in advance, whereas the <xref:System.Resources.ResourceReader> class is useful for retrieving resources whose number or precise names are not known at compile time.</span></span> <span data-ttu-id="28c8a-107">Например приложение может использовать файл ресурсов для хранения сведений о конфигурации, организованных в разделах и элементов в разделе, когда количество разделов или элементов в разделе, не известен заранее.</span><span class="sxs-lookup"><span data-stu-id="28c8a-107">For example, an application may use a resources file to store configuration information that is organized into sections and items in a section, where the number of sections or items in a section is not known in advance.</span></span> <span data-ttu-id="28c8a-108">Ресурсы могут называться затем универсально (такие как `Section1`, `Section1Item1`, `Section1Item2`, и так далее) и получать с помощью <xref:System.Resources.ResourceReader> объекта.</span><span class="sxs-lookup"><span data-stu-id="28c8a-108">Resources can then be named generically (such as `Section1`, `Section1Item1`, `Section1Item2`, and so on) and retrieved by using a <xref:System.Resources.ResourceReader> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="28c8a-109">Этот тип реализует <xref:System.IDisposable> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="28c8a-109">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="28c8a-110">Когда вы закончите, используя тип, следует освободить его прямо или косвенно.</span><span class="sxs-lookup"><span data-stu-id="28c8a-110">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="28c8a-111">Чтобы удалить тип напрямую, вызовите его <xref:System.IDisposable.Dispose%2A> метод в `try` / `catch` блока.</span><span class="sxs-lookup"><span data-stu-id="28c8a-111">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="28c8a-112">Чтобы избавиться от его косвенно, используйте языковой конструкции, такие как `using` (в C#) или `Using` (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="28c8a-112">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="28c8a-113">Дополнительные сведения см. в разделе «С помощью объекта, реализует IDisposable» <xref:System.IDisposable> разделу интерфейса.</span><span class="sxs-lookup"><span data-stu-id="28c8a-113">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="28c8a-114">Дополнительные сведения об использовании <xref:System.Resources.ResourceReader> класса, в следующих разделах:</span><span class="sxs-lookup"><span data-stu-id="28c8a-114">For more information about using the <xref:System.Resources.ResourceReader> class, see the following sections:</span></span>  
  
-   [<span data-ttu-id="28c8a-115">Создание экземпляра объекта ResourceReader</span><span class="sxs-lookup"><span data-stu-id="28c8a-115">Instantiating a ResourceReader object</span></span>](#instantiate)  
  
-   [<span data-ttu-id="28c8a-116">Перечисление ресурсов объект ResourceReader</span><span class="sxs-lookup"><span data-stu-id="28c8a-116">Enumerating a ResourceReader object's resources</span></span>](#enumerate)  
  
    -   [<span data-ttu-id="28c8a-117">Извлечение ресурсов с помощью свойства IDictionaryEnumerator</span><span class="sxs-lookup"><span data-stu-id="28c8a-117">Retrieving resources by using IDictionaryEnumerator properties</span></span>](#idictionaryenumerator)  
  
    -   [<span data-ttu-id="28c8a-118">Извлечение ресурсов по имени с GetResourceData</span><span class="sxs-lookup"><span data-stu-id="28c8a-118">Retrieving resources by name with GetResourceData</span></span>](#getresourcedata)  
  
<a name="instantiate"></a>   
## <a name="instantiating-a-resourcereader-object"></a><span data-ttu-id="28c8a-119">Создание экземпляра объекта ResourceReader</span><span class="sxs-lookup"><span data-stu-id="28c8a-119">Instantiating a ResourceReader Object</span></span>  
 <span data-ttu-id="28c8a-120">RESOURCES-файл является двоичным файлом, который был скомпилирован из текстового файла или XML-файл .resx с [Resgen.exe (генератор файлов ресурсов)](~/docs/framework/tools/resgen-exe-resource-file-generator.md).</span><span class="sxs-lookup"><span data-stu-id="28c8a-120">A .resources file is a binary file that has been compiled from either a text file or an XML .resx file by [Resgen.exe (Resource File Generator)](~/docs/framework/tools/resgen-exe-resource-file-generator.md).</span></span> <span data-ttu-id="28c8a-121">Объект <xref:System.Resources.ResourceReader> объект может представлять отдельном Resources-файле или в RESOURCES-файл, встроенный в сборку.</span><span class="sxs-lookup"><span data-stu-id="28c8a-121">A <xref:System.Resources.ResourceReader> object can represent either a standalone .resources file or a .resources file that has been embedded in an assembly.</span></span>  
  
 <span data-ttu-id="28c8a-122">Для создания экземпляра <xref:System.Resources.ResourceReader> который операции чтения из автономного RESOURCES-файл, использовать <xref:System.Resources.ResourceReader> конструктора класса входного потока или строка, содержащая имя файла .resources.</span><span class="sxs-lookup"><span data-stu-id="28c8a-122">To instantiate a <xref:System.Resources.ResourceReader> object that reads from a standalone .resources file, use the <xref:System.Resources.ResourceReader> class constructor with either an input stream or a string that contains the .resources file name.</span></span> <span data-ttu-id="28c8a-123">В следующем примере оба подхода.</span><span class="sxs-lookup"><span data-stu-id="28c8a-123">The following example illustrates both approaches.</span></span> <span data-ttu-id="28c8a-124">Создает экземпляр первый <xref:System.Resources.ResourceReader> , представляющий RESOURCES-файл с именем `Resources1.resources` с помощью имени файла.</span><span class="sxs-lookup"><span data-stu-id="28c8a-124">The first instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources1.resources` by using its file name.</span></span> <span data-ttu-id="28c8a-125">Создает второй <xref:System.Resources.ResourceReader> , представляющий RESOURCES-файл с именем `Resources2.resources` с помощью потока, созданного из файла.</span><span class="sxs-lookup"><span data-stu-id="28c8a-125">The second instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources2.resources` by using a stream created from the file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#2)]  
  
 <span data-ttu-id="28c8a-126">Чтобы создать <xref:System.Resources.ResourceReader> , представляющий внедренный RESOURCES-файл, создать экземпляр <xref:System.Reflection.Assembly> объекта из сборки, в который внедрены RESOURCES-файл.</span><span class="sxs-lookup"><span data-stu-id="28c8a-126">To create a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file, instantiate an <xref:System.Reflection.Assembly> object from the assembly in which the .resources file is embedded.</span></span> <span data-ttu-id="28c8a-127">Его <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> возвращает <xref:System.IO.Stream> объект, который может быть передан в <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="28c8a-127">Its <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method returns a <xref:System.IO.Stream> object that can be passed to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="28c8a-128">В следующем примере создается <xref:System.Resources.ResourceReader> , представляющий внедренный RESOURCES-файл.</span><span class="sxs-lookup"><span data-stu-id="28c8a-128">The following example instantiates a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#3)]
 [!code-vb[System.Resources.ResourceReader.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#3)]  
  
<a name="enumerate"></a>   
## <a name="enumerating-a-resourcereader-objects-resources"></a><span data-ttu-id="28c8a-129">Перечисление ресурсов объект ResourceReader</span><span class="sxs-lookup"><span data-stu-id="28c8a-129">Enumerating a ResourceReader Object's Resources</span></span>  
 <span data-ttu-id="28c8a-130">Чтобы перечислить ресурсы в RESOURCES-файл, вызовите <xref:System.Resources.ResourceReader.GetEnumerator%2A> метод, возвращающий <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> объекта.</span><span class="sxs-lookup"><span data-stu-id="28c8a-130">To enumerate the resources in a .resources file, you call the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method, which returns an <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="28c8a-131">Вы вызываете `IDictionaryEnumerator.MoveNext` метод для перехода из одного ресурса к другому.</span><span class="sxs-lookup"><span data-stu-id="28c8a-131">You call the `IDictionaryEnumerator.MoveNext` method to move from one resource to the next.</span></span> <span data-ttu-id="28c8a-132">Этот метод возвращает `false` при были перечислены все ресурсы в RESOURCES-файл.</span><span class="sxs-lookup"><span data-stu-id="28c8a-132">The method returns `false` when all the resources in the .resources file have been enumerated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="28c8a-133">Несмотря на то что <xref:System.Resources.ResourceReader> класс реализует <xref:System.Collections.IEnumerable> интерфейс и <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> метод, <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> метод не предоставляет <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> реализации.</span><span class="sxs-lookup"><span data-stu-id="28c8a-133">Although the <xref:System.Resources.ResourceReader> class implements the <xref:System.Collections.IEnumerable> interface and the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> method, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method does not provide the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="28c8a-134">Вместо этого <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> возвращает метод <xref:System.Collections.IDictionaryEnumerator> объект интерфейса, который предоставляет доступ к паре имя значение для каждого ресурса.</span><span class="sxs-lookup"><span data-stu-id="28c8a-134">Instead, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method  returns an <xref:System.Collections.IDictionaryEnumerator> interface object that provides access to each resource's name/value pair.</span></span>  
  
 <span data-ttu-id="28c8a-135">Можно получить отдельные ресурсы коллекции одним из двух способов:</span><span class="sxs-lookup"><span data-stu-id="28c8a-135">You can retrieve the individual resources in the collection in two ways:</span></span>  
  
-   <span data-ttu-id="28c8a-136">Можно выполнить итерацию каждого ресурса в <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> сбора и использования <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> свойств для извлечения ресурсов имя и значение.</span><span class="sxs-lookup"><span data-stu-id="28c8a-136">You can iterate each resource in the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and use <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> properties to retrieve the resource name and value.</span></span> <span data-ttu-id="28c8a-137">Этот способ рекомендуется использовать, если все ресурсы имеют тот же тип, или вы знаете тип данных каждого ресурса.</span><span class="sxs-lookup"><span data-stu-id="28c8a-137">We recommend this technique when all the resources are of the same type, or you know the data type of each resource.</span></span>  
  
-   <span data-ttu-id="28c8a-138">Имя каждого ресурса можно получить при прохождении <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> коллекции и вызвать <xref:System.Resources.ResourceReader.GetResourceData%2A> метод для извлечения данных ресурса.</span><span class="sxs-lookup"><span data-stu-id="28c8a-138">You can retrieve the name of each resource when you iterate the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and call the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve the resource's data.</span></span> <span data-ttu-id="28c8a-139">Мы рекомендуем этот подход, если вы не знаете тип данных каждого ресурса, или если предыдущий подход будет вызвано исключение.</span><span class="sxs-lookup"><span data-stu-id="28c8a-139">We recommend this approach when you do not know the data type of each resource or if the previous approach throws exceptions.</span></span>  
  
<a name="idictionaryenumerator"></a>   
### <a name="retrieving-resources-by-using-idictionaryenumerator-properties"></a><span data-ttu-id="28c8a-140">Извлечение ресурсов с помощью свойства IDictionaryEnumerator</span><span class="sxs-lookup"><span data-stu-id="28c8a-140">Retrieving Resources by Using IDictionaryEnumerator Properties</span></span>  
 <span data-ttu-id="28c8a-141">Первый метод перечисления ресурсы в RESOURCES-файл включает в себя напрямую извлечение пары имя значение для каждого ресурса.</span><span class="sxs-lookup"><span data-stu-id="28c8a-141">The first method of enumerating the resources in a .resources file involves directly retrieving each resource's name/value pair.</span></span> <span data-ttu-id="28c8a-142">После вызова метода `IDictionaryEnumerator.MoveNext` имя метода для перемещения для каждого ресурса в коллекции, можно извлечь ресурс из <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> свойства и данные ресурсов из <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="28c8a-142">After you call the `IDictionaryEnumerator.MoveNext` method to move to each resource in the collection, you can retrieve the resource name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property and the resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="28c8a-143">В следующем примере показано, как получить имя и значение каждого ресурса в RESOURCES-файл с помощью <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> и <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="28c8a-143">The following example shows how to retrieve the name and value of each resource in a .resources file by using the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="28c8a-144">Для выполнения этого примера, создайте текстовый файл с именем ApplicationResources.txt для определения строковые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="28c8a-144">To run the example, create the following text file named ApplicationResources.txt to define string resources.</span></span>  
  
```  
Title="Contact Information"  
Label1="First Name:"  
Label2="Middle Name:"  
Label3="Last Name:"  
Label4="SSN:"  
Label5="Street Address:"  
Label6="City:"  
Label7="State:"  
Label8="Zip Code:"  
Label9="Home Phone:"  
Label10="Business Phone:"  
Label11="Mobile Phone:"  
Label12="Other Phone:"  
Label13="Fax:"  
Label14="Email Address:"  
Label15="Alternate Email Address:"  
```  
  
 <span data-ttu-id="28c8a-145">Затем можно преобразовать текстовый файл ресурсов в двоичный файл с именем ApplicationResources.resources, используя следующую команду:</span><span class="sxs-lookup"><span data-stu-id="28c8a-145">You can then convert the text resource file to a binary file named ApplicationResources.resources by using the following command:</span></span>  
  
 <span data-ttu-id="28c8a-146">**resgen ApplicationResources.txt**</span><span class="sxs-lookup"><span data-stu-id="28c8a-146">**resgen ApplicationResources.txt**</span></span>  
  
 <span data-ttu-id="28c8a-147">В следующем примере затем используется <xref:System.Resources.ResourceReader> класс перечислить каждый ресурс в двоичный RESOURCES-файл автономных и для отображения имени ключа и соответствующее значение.</span><span class="sxs-lookup"><span data-stu-id="28c8a-147">The following example then uses the <xref:System.Resources.ResourceReader> class to enumerate each resource in the standalone binary .resources file and to display its key name and corresponding value.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/class1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/class1.vb#1)]  
  
 <span data-ttu-id="28c8a-148">Попытка получить данные ресурсов из <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> свойство можно вызывать следующие исключения:</span><span class="sxs-lookup"><span data-stu-id="28c8a-148">The attempt to retrieve resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property can throw the following exceptions:</span></span>  
  
-   <span data-ttu-id="28c8a-149">Объект <xref:System.FormatException> Если данные не в требуемом формате.</span><span class="sxs-lookup"><span data-stu-id="28c8a-149">A <xref:System.FormatException> if the data is not in the expected format.</span></span>  
  
-   <span data-ttu-id="28c8a-150">Объект <xref:System.IO.FileNotFoundException> Если не удается найти сборку, содержащую тип, к которой принадлежит данные.</span><span class="sxs-lookup"><span data-stu-id="28c8a-150">A <xref:System.IO.FileNotFoundException> if the assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <span data-ttu-id="28c8a-151">Объект <xref:System.TypeLoadException> Если тип, к которой принадлежит данных не может быть не найден.</span><span class="sxs-lookup"><span data-stu-id="28c8a-151">A <xref:System.TypeLoadException> if the type to which the data belongs cannot be cannot be found.</span></span>  
  
 <span data-ttu-id="28c8a-152">Как правило возникают эти исключения, если RESOURCES-файл был изменен вручную, если сборки, в которой определен тип, либо не были включены с приложением или был случайно удален, или в том случае, если сборка является более старой версии, который предшествовал тип.</span><span class="sxs-lookup"><span data-stu-id="28c8a-152">Typically, these exceptions are thrown if the .resources file has been modified manually, if the assembly in which a type is defined has either not been included with an application or has been inadvertently deleted, or if the assembly is an older version that predates a type.</span></span> <span data-ttu-id="28c8a-153">Если возникает одно из этих исключений, можно получить ресурсы, перечисление каждого ресурса и вызвав <xref:System.Resources.ResourceReader.GetResourceData%2A> метод, как показано в следующем разделе.</span><span class="sxs-lookup"><span data-stu-id="28c8a-153">If one of these exceptions is thrown, you can retrieve resources by enumerating each resource and calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method, as the following section shows.</span></span> <span data-ttu-id="28c8a-154">Такой подход предоставляет некоторую информацию о данных ввода, <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> попыталась вернуть свойство.</span><span class="sxs-lookup"><span data-stu-id="28c8a-154">This approach provides you with some information about the data type that the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property attempted to return.</span></span>  
  
<a name="getresourcedata"></a>   
### <a name="retrieving-resources-by-name-with-getresourcedata"></a><span data-ttu-id="28c8a-155">Извлечение ресурсов по имени с GetResourceData</span><span class="sxs-lookup"><span data-stu-id="28c8a-155">Retrieving Resources by Name with GetResourceData</span></span>  
 <span data-ttu-id="28c8a-156">Второй подход к перечисление ресурсов в RESOURCES-файл также включает в себя перемещение ресурсов в файле, вызвав `IDictionaryEnumerator.MoveNext` метод.</span><span class="sxs-lookup"><span data-stu-id="28c8a-156">The second approach to enumerating resources in a .resources file also involves navigating through the resources in the file by calling the `IDictionaryEnumerator.MoveNext` method.</span></span> <span data-ttu-id="28c8a-157">Для каждого ресурса, извлечении имени ресурса из <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> свойство, которое затем передается <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29> метод для извлечения данных ресурса.</span><span class="sxs-lookup"><span data-stu-id="28c8a-157">For each resource, you retrieve the resource's name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property, which is then passed to the <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29> method to retrieve the resource's data.</span></span> <span data-ttu-id="28c8a-158">Это значение возвращается в виде массива байтов в `resourceData` аргумент.</span><span class="sxs-lookup"><span data-stu-id="28c8a-158">This is returned as a byte array in the `resourceData` argument.</span></span>  
  
 <span data-ttu-id="28c8a-159">Этот подход является менее удобны, чем получение ресурса имя и значение из <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> и <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> свойства, поскольку он возвращает фактическое количество байтов, которые образуют значение ресурса.</span><span class="sxs-lookup"><span data-stu-id="28c8a-159">This approach is more awkward than retrieving the resource name and value from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties, because it returns the actual bytes that form the resource value.</span></span> <span data-ttu-id="28c8a-160">Тем не менее, если попытка получить ресурс вызывает исключение, <xref:System.Resources.ResourceReader.GetResourceData%2A> метод может помочь определить источник исключения, указав сведения о типе данных ресурса.</span><span class="sxs-lookup"><span data-stu-id="28c8a-160">However, if the attempt to retrieve the resource throws an exception, the <xref:System.Resources.ResourceReader.GetResourceData%2A> method can help identify the source of the exception by supplying information about the resource's data type.</span></span> <span data-ttu-id="28c8a-161">Дополнительные сведения о строку, указывающую на тип данных ресурса, см. в разделе <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span><span class="sxs-lookup"><span data-stu-id="28c8a-161">For more information about the string that indicates the resource's data type, see <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span></span>  
  
 <span data-ttu-id="28c8a-162">Как использовать этот подход для извлечения ресурсов, так и для обработки исключений, которые вызываются в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="28c8a-162">The following example illustrates how to use this approach to retrieve resources and to handle any exceptions that are thrown.</span></span> <span data-ttu-id="28c8a-163">Он программным образом создает двоичный RESOURCES-файл, который содержит четыре строки, второе логическое значение, одним целым числом, одного точечного рисунка и один произвольный `DateTimeTZI` объекта.</span><span class="sxs-lookup"><span data-stu-id="28c8a-163">It programmatically creates a binary .resources file that contains four strings, one Boolean, one integer, one bitmap, and one custom `DateTimeTZI` object.</span></span> <span data-ttu-id="28c8a-164">Чтобы запустить пример, сделайте следующее:</span><span class="sxs-lookup"><span data-stu-id="28c8a-164">To run the example, do the following:</span></span>  
  
1.  <span data-ttu-id="28c8a-165">Создать сборку с именем Library.dll, содержащий `DateTimeTZI` структуры.</span><span class="sxs-lookup"><span data-stu-id="28c8a-165">Create an assembly named Library.dll that contains the `DateTimeTZI` structure.</span></span> <span data-ttu-id="28c8a-166">Ниже приведен исходный код для сборки.</span><span class="sxs-lookup"><span data-stu-id="28c8a-166">The following is the source code for the assembly.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/library.cs#4)]
     [!code-vb[System.Resources.ResourceReader.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/library.vb#4)]  
  
     <span data-ttu-id="28c8a-167">Скомпилируйте исходный код на языке C# с помощью следующей команды:</span><span class="sxs-lookup"><span data-stu-id="28c8a-167">Compile the source code in C# by using the following command:</span></span>  
  
    ```  
    csc /t:library library.cs  
    ```  
  
     <span data-ttu-id="28c8a-168">Или можно выполнить компиляцию в Visual Basic с помощью следующей команды:</span><span class="sxs-lookup"><span data-stu-id="28c8a-168">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc library.vb /t:library  
    ```  
  
2.  <span data-ttu-id="28c8a-169">Скомпилируйте и выполните следующий исходный код, который создает в RESOURCES-файл с именем ContactResources.resources.</span><span class="sxs-lookup"><span data-stu-id="28c8a-169">Compile and execute the following source code, which creates a .resources file named ContactResources.resources.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/createresourceex1.cs#5)]
     [!code-vb[System.Resources.ResourceReader.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/createresourceex1.vb#5)]  
  
     <span data-ttu-id="28c8a-170">Файл исходного кода называется CreateResources.cs.</span><span class="sxs-lookup"><span data-stu-id="28c8a-170">The source code file is named CreateResources.cs.</span></span> <span data-ttu-id="28c8a-171">Его можно скомпилировать в C# с помощью следующей команды:</span><span class="sxs-lookup"><span data-stu-id="28c8a-171">You can compile it in C# by using the following command:</span></span>  
  
    ```  
    csc CreateResources.cs /r:library.dll  
    ```  
  
     <span data-ttu-id="28c8a-172">Или можно выполнить компиляцию в Visual Basic с помощью следующей команды:</span><span class="sxs-lookup"><span data-stu-id="28c8a-172">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc CreateResources.vb /r:library.dll  
    ```  
  
3.  <span data-ttu-id="28c8a-173">Скомпилируйте и запустите следующий код, чтобы перечислить ресурсы в файле ContactResources.resources.</span><span class="sxs-lookup"><span data-stu-id="28c8a-173">Compile and run the following code to enumerate the resources in the ContactResources.resources file.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/readresourceex1.cs#6)]
     [!code-vb[System.Resources.ResourceReader.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/readresourceex1.vb#6)]  
  
     <span data-ttu-id="28c8a-174">После внесения изменений в исходный код (например, выдав намеренно <xref:System.FormatException> в конце `try` блок) или переименование Library.dll сборки, чтобы он недоступен во время выполнения, можно запустить пример, чтобы просмотреть как вызовы <xref:System.Resources.ResourceReader.GetResourceData%2A> позволяют извлечь или повторно создать некоторые сведения о ресурсах.</span><span class="sxs-lookup"><span data-stu-id="28c8a-174">After modifying the source code (for example, by deliberately throwing a <xref:System.FormatException> at the end of the `try` block) or renaming the Library.dll assembly so that it is unavailable at runtime, you can run the example to see how calls to <xref:System.Resources.ResourceReader.GetResourceData%2A> enable you to retrieve or recreate some resource information.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28c8a-175">Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="28c8a-175">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="28c8a-176">[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)].</span><span class="sxs-lookup"><span data-stu-id="28c8a-176">[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)].</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceReader : System.IO.Stream -&gt; System.Resources.ResourceReader" Usage="new System.Resources.ResourceReader stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="28c8a-177">Входной поток для чтения ресурсов.</span><span class="sxs-lookup"><span data-stu-id="28c8a-177">The input stream for reading resources.</span></span></param>
        <summary><span data-ttu-id="28c8a-178">Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResourceReader" /> для заданного потока.</span><span class="sxs-lookup"><span data-stu-id="28c8a-178">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28c8a-179"><xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> Конструктор создает <xref:System.Resources.ResourceReader> объект, который извлекает ресурсы из RESOURCES-файл автономного или из .resources файл, который является, внедренных в сборку.</span><span class="sxs-lookup"><span data-stu-id="28c8a-179">The <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources either from a standalone .resources file or from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="28c8a-180">Чтобы прочитать текст из автономного RESOURCES-файл, следует создать <xref:System.IO.Stream> объект и передать его в <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="28c8a-180">To read from a standalone .resources file, instantiate a <xref:System.IO.Stream> object and pass it to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="28c8a-181">Чтобы прочитать текст из внедренный RESOURCES-файл, вызовите <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> метод, с учетом регистра именем RESOURCES-файл и передайте возвращенный <xref:System.IO.Stream> объект <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="28c8a-181">To read from an embedded .resources file, call the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method with the case-sensitive name of the .resources file, and pass the returned <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  
  
[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]
  
## Examples  
 <span data-ttu-id="28c8a-182">В примере этого раздела используется следующий txt-файл с именем `PatientForm.txt` для определения ресурсов, используемых приложением.</span><span class="sxs-lookup"><span data-stu-id="28c8a-182">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="28c8a-183">Txt-файл можно скомпилировать в RESOURCES-файл, выполнив следующую команду:</span><span class="sxs-lookup"><span data-stu-id="28c8a-183">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="28c8a-184">**Resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="28c8a-184">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="28c8a-185">В следующем примере предполагается, что файл ресурсов внедряется в сборку, содержащую исполняемый код приложения.</span><span class="sxs-lookup"><span data-stu-id="28c8a-185">The following example assumes that the resource file is embedded in the assembly that contains the application's executable code.</span></span> <span data-ttu-id="28c8a-186">Он извлекает файл ресурсов с именем `PatientForm.resources` из текущей выполняемой сборки и отображает имя и значение каждого из его ресурсы.</span><span class="sxs-lookup"><span data-stu-id="28c8a-186">It retrieves a resource file named `PatientForm.resources` from the currently executing assemblies and displays the name and value of each of its resources.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream1.vb#1)]  
  
 <span data-ttu-id="28c8a-187">Если в примере C# называется `Example.cs`, можно выполнить компиляцию с помощью следующей команды:</span><span class="sxs-lookup"><span data-stu-id="28c8a-187">If the C# example is named `Example.cs`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="28c8a-188">**CSC Example.cs /res:PatientForm.resources**</span><span class="sxs-lookup"><span data-stu-id="28c8a-188">**csc Example.cs /res:PatientForm.resources**</span></span>  
  
 <span data-ttu-id="28c8a-189">Если в примере Visual Basic называется `Example.vb`, можно выполнить компиляцию с помощью следующей команды:</span><span class="sxs-lookup"><span data-stu-id="28c8a-189">If the Visual Basic example is named `Example.vb`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="28c8a-190">**Vbc Example.vb /res:PatientForm.resources**</span><span class="sxs-lookup"><span data-stu-id="28c8a-190">**vbc Example.vb /res:PatientForm.resources**</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28c8a-191">Параметр <paramref name="stream" /> недоступен для чтения.</span><span class="sxs-lookup"><span data-stu-id="28c8a-191">The <paramref name="stream" /> parameter is not readable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28c8a-192">Параметр <paramref name="stream" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28c8a-192">The <paramref name="stream" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="28c8a-193">При доступе к <paramref name="stream" /> произошла ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="28c8a-193">An I/O error has occurred while accessing <paramref name="stream" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="28c8a-194">для предоставления служб сериализации.</span><span class="sxs-lookup"><span data-stu-id="28c8a-194">for providing serialization services.</span></span> <span data-ttu-id="28c8a-195">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="28c8a-195">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="28c8a-196">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span><span class="sxs-lookup"><span data-stu-id="28c8a-196">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="28c8a-197">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="28c8a-197">requires full trust for the immediate caller.</span></span> <span data-ttu-id="28c8a-198">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="28c8a-198">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceReader : string -&gt; System.Resources.ResourceReader" Usage="new System.Resources.ResourceReader fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="28c8a-199">Путь к файлу и имя файла ресурсов для чтения.</span><span class="sxs-lookup"><span data-stu-id="28c8a-199">The path and name of the resource file to read.</span></span> <span data-ttu-id="28c8a-200">В параметре <c>filename</c> регистр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="28c8a-200"><c>filename</c> is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="28c8a-201">Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResourceReader" /> для указанного именованного файла ресурсов.</span><span class="sxs-lookup"><span data-stu-id="28c8a-201">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified named resource file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28c8a-202"><xref:System.Resources.ResourceReader.%23ctor%28System.String%29> Конструктор создает <xref:System.Resources.ResourceReader> объект, который извлекает ресурсы из автономного RESOURCES-файл.</span><span class="sxs-lookup"><span data-stu-id="28c8a-202">The <xref:System.Resources.ResourceReader.%23ctor%28System.String%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources from a standalone .resources file.</span></span> <span data-ttu-id="28c8a-203">Чтобы получить ресурсы из внедренный RESOURCES-файл, используйте <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="28c8a-203">To retrieve resources from an embedded .resources file, use the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  

[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]

## Examples  
 <span data-ttu-id="28c8a-204">В примере этого раздела используется следующий txt-файл с именем `PatientForm.txt` для определения ресурсов, используемых приложением.</span><span class="sxs-lookup"><span data-stu-id="28c8a-204">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="28c8a-205">Можно скомпилировать этот txt-файл в RESOURCES-файл, выполнив следующую команду:</span><span class="sxs-lookup"><span data-stu-id="28c8a-205">You can compile this .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="28c8a-206">**Resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="28c8a-206">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="28c8a-207">В следующем примере перечисляются ресурсы в `PatientForm.resources` и отображает имя и значение каждого из них.</span><span class="sxs-lookup"><span data-stu-id="28c8a-207">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28c8a-208">Параметр <paramref name="fileName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28c8a-208">The <paramref name="fileName" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="28c8a-209">Не удается найти файл.</span><span class="sxs-lookup"><span data-stu-id="28c8a-209">The file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="28c8a-210">Произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="28c8a-210">An I/O error has occurred.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="28c8a-211">Файле ресурса имеет недопустимый формат.</span><span class="sxs-lookup"><span data-stu-id="28c8a-211">The resource file has an invalid format.</span></span> <span data-ttu-id="28c8a-212">Например, длина файла может быть равна нулю.</span><span class="sxs-lookup"><span data-stu-id="28c8a-212">For example, the length of the file may be zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="resourceReader.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28c8a-213">Освобождает все ресурсы операционной системы, связанные с этим объектом <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="28c8a-213">Releases all operating system resources associated with this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28c8a-214"><xref:System.Resources.ResourceReader.Close%2A> может безопасно вызываться несколько раз.</span><span class="sxs-lookup"><span data-stu-id="28c8a-214"><xref:System.Resources.ResourceReader.Close%2A> can be safely called multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28c8a-215">В следующем примере перемещается по ресурсам файла и отображает все найденные пары ключ/значение.</span><span class="sxs-lookup"><span data-stu-id="28c8a-215">The following example moves through a file's resources and displays all the key/value pairs it finds.</span></span> <span data-ttu-id="28c8a-216">В этом коде используется <xref:System.Resources.ResourceReader.Close%2A> метод, чтобы завершить работу <xref:System.Resources.ResourceReader> и освободить все ресурсы, используемые в нем.</span><span class="sxs-lookup"><span data-stu-id="28c8a-216">The code then uses the <xref:System.Resources.ResourceReader.Close%2A> method to shut down the <xref:System.Resources.ResourceReader> and to release all resources used by it.</span></span>  
  
 [!code-cpp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="resourceReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28c8a-217">Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="28c8a-217">Releases all resources used by the current instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28c8a-218">Когда вы закончите, с помощью этого <xref:System.Resources.ResourceReader>, вызовите <xref:System.Resources.ResourceReader.Dispose%2A> освободить все ресурсы, используемые этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="28c8a-218">When you are finished using this instance of <xref:System.Resources.ResourceReader>, call <xref:System.Resources.ResourceReader.Dispose%2A> to release all resources used by this instance.</span></span> <span data-ttu-id="28c8a-219">Следует удалить дополнительные ссылки на это <xref:System.Resources.ResourceReader> экземпляр таким образом, чтобы сборщик мусора мог освободить память экземпляра вместо того чтобы постоянно активным для заключительной обработки.</span><span class="sxs-lookup"><span data-stu-id="28c8a-219">You should eliminate further references to this <xref:System.Resources.ResourceReader> instance so that the garbage collector can reclaim the memory of the instance instead of keeping it alive for finalization.</span></span>  
  
 <span data-ttu-id="28c8a-220"><xref:System.Resources.ResourceReader.Dispose%2A> вызывает закрытый метод Dispose(Boolean), который содержит код для освобождения управляемых и неуправляемых ресурсов.</span><span class="sxs-lookup"><span data-stu-id="28c8a-220"><xref:System.Resources.ResourceReader.Dispose%2A> calls the private Dispose(Boolean) method, which contains the code to release managed and unmanaged resources.</span></span> <span data-ttu-id="28c8a-221">Дополнительные сведения см. в разделе [реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="28c8a-221">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="resourceReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28c8a-222">Возвращает перечислитель для данного объекта <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="28c8a-222">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></summary>
        <returns><span data-ttu-id="28c8a-223">Перечислитель для данного объекта <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="28c8a-223">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28c8a-224">Как правило, перечислить ресурсы путем вызова <xref:System.Resources.ResourceReader.GetEnumerator%2A> метод и затем повторный вызов <xref:System.Collections.IEnumerator.MoveNext%2A> метод возвращенного <xref:System.Collections.IDictionaryEnumerator> объекта до выполнения метода `false`.</span><span class="sxs-lookup"><span data-stu-id="28c8a-224">Typically, you enumerate resources by calling the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method and then repeatedly calling the <xref:System.Collections.IEnumerator.MoveNext%2A> method on the returned <xref:System.Collections.IDictionaryEnumerator> object until the method returns `false`.</span></span> <span data-ttu-id="28c8a-225">Имя ресурса доступен из <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> свойство; свое значение из <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="28c8a-225">The resource name is available from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property; its value from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="28c8a-226">В примере показано, как перечислить ресурсы таким образом.</span><span class="sxs-lookup"><span data-stu-id="28c8a-226">The example illustrates how to enumerate resources in this way.</span></span>  
  
 <span data-ttu-id="28c8a-227">Реализация <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> свойства <xref:System.Resources.ResourceReader> класса можно вызывать следующие исключения:</span><span class="sxs-lookup"><span data-stu-id="28c8a-227">The implementation of the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property by the <xref:System.Resources.ResourceReader> class can throw the following exceptions:</span></span>  
  
-   <xref:System.IO.FileNotFoundException>  
  
     <span data-ttu-id="28c8a-228">Не удается найти сборку, содержащую тип, к которой принадлежит данные.</span><span class="sxs-lookup"><span data-stu-id="28c8a-228">The assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <xref:System.FormatException>  
  
     <span data-ttu-id="28c8a-229">Данные не в требуемом формате.</span><span class="sxs-lookup"><span data-stu-id="28c8a-229">The data is not in the expected format.</span></span>  
  
-   <xref:System.TypeLoadException>  
  
     <span data-ttu-id="28c8a-230">Не удается найти тип, к которой принадлежит данные.</span><span class="sxs-lookup"><span data-stu-id="28c8a-230">The type to which the data belongs cannot be found.</span></span>  
  
 <span data-ttu-id="28c8a-231">Можно обработать исключение, вызвав метод <xref:System.Resources.ResourceReader.GetResourceData%2A> метод для извлечения сведений о типе данных и массив байтов, назначенные именованный ресурс.</span><span class="sxs-lookup"><span data-stu-id="28c8a-231">You can handle the exception by calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve information about the data type and the byte array assigned to the named resource.</span></span> <span data-ttu-id="28c8a-232">Дополнительные сведения см. в разделе «Получение ресурсов по имени с GetResourceData» <xref:System.Resources.ResourceReader> разделе, посвященном классу.</span><span class="sxs-lookup"><span data-stu-id="28c8a-232">For more information, see the "Retrieving Resources by Name with GetResourceData" section in the <xref:System.Resources.ResourceReader> class topic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="28c8a-233"><xref:System.Resources.ResourceReader> Класс включает два метода, которые возвращают перечислителей.</span><span class="sxs-lookup"><span data-stu-id="28c8a-233">The <xref:System.Resources.ResourceReader> class includes two methods that return enumerators.</span></span> <span data-ttu-id="28c8a-234"><xref:System.Resources.ResourceReader.GetEnumerator%2A> Возвращает метод <xref:System.Collections.IDictionaryEnumerator> объекта интерфейса и рекомендуемый метод, который вызывается, когда перечисление ресурсов.</span><span class="sxs-lookup"><span data-stu-id="28c8a-234">The <xref:System.Resources.ResourceReader.GetEnumerator%2A> method returns an <xref:System.Collections.IDictionaryEnumerator> interface object and is the recommended method to call when enumerating resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28c8a-235">В примере этого раздела используется следующий txt-файл с именем `PatientForm.txt` для определения ресурсов, используемых приложением.</span><span class="sxs-lookup"><span data-stu-id="28c8a-235">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="28c8a-236">Txt-файл можно скомпилировать в RESOURCES-файл, выполнив следующую команду:</span><span class="sxs-lookup"><span data-stu-id="28c8a-236">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="28c8a-237">**Resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="28c8a-237">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="28c8a-238">В следующем примере перечисляются ресурсы в `PatientForm.resources` и отображает имя и значение каждого из них.</span><span class="sxs-lookup"><span data-stu-id="28c8a-238">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28c8a-239">Устройство чтения уже закрыто или удалено, поэтому доступ невозможен.</span><span class="sxs-lookup"><span data-stu-id="28c8a-239">The reader has been closed or disposed, and cannot be accessed.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceData">
      <MemberSignature Language="C#" Value="public void GetResourceData (string resourceName, out string resourceType, out byte[] resourceData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetResourceData(string resourceName, [out] string&amp; resourceType, [out] unsigned int8[]&amp; resourceData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetResourceData (resourceName As String, ByRef resourceType As String, ByRef resourceData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetResourceData(System::String ^ resourceName, [Runtime::InteropServices::Out] System::String ^ % resourceType, [Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % resourceData);" />
      <MemberSignature Language="F#" Value="member this.GetResourceData : string *  *  -&gt; unit" Usage="resourceReader.GetResourceData (resourceName, resourceType, resourceData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="resourceType" Type="System.String" RefType="out" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="resourceData" Type="System.Byte[]" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="resourceName"><span data-ttu-id="28c8a-240">Имя ресурса.</span><span class="sxs-lookup"><span data-stu-id="28c8a-240">The name of a resource.</span></span></param>
        <param name="resourceType"><span data-ttu-id="28c8a-241">При возвращении этого метода содержит строку, представляющую имя типа извлекаемого ресурса.</span><span class="sxs-lookup"><span data-stu-id="28c8a-241">When this method returns, contains a string that represents the type name of the retrieved resource.</span></span> <span data-ttu-id="28c8a-242">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="28c8a-242">This parameter is passed uninitialized.</span></span></param>
        <param name="resourceData"><span data-ttu-id="28c8a-243">Когда этот метод возвращает значение, оно содержит массив байтов, являющийся двоичным представлением извлеченного типа.</span><span class="sxs-lookup"><span data-stu-id="28c8a-243">When this method returns, contains a byte array that is the binary representation of the retrieved type.</span></span> <span data-ttu-id="28c8a-244">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="28c8a-244">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="28c8a-245">Получает имя типа и данные именованного ресурса из открытого файла ресурсов или потока.</span><span class="sxs-lookup"><span data-stu-id="28c8a-245">Retrieves the type name and data of a named resource from an open resource file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28c8a-246"><xref:System.Resources.ResourceReader.GetResourceData%2A> Метод возвращает значение именованного ресурса в виде массива байтов.</span><span class="sxs-lookup"><span data-stu-id="28c8a-246">The <xref:System.Resources.ResourceReader.GetResourceData%2A> method retrieves the value of a named resource as a byte array.</span></span> <span data-ttu-id="28c8a-247">Обычно используется, когда <xref:System.Collections.IDictionaryEnumerator.Value%2A> свойство вызывает исключение при попытке получить значение ресурса.</span><span class="sxs-lookup"><span data-stu-id="28c8a-247">It is typically used when the <xref:System.Collections.IDictionaryEnumerator.Value%2A> property throws an exception when it tries to retrieve the value of a resource.</span></span>  
  
 <span data-ttu-id="28c8a-248">`resourceType` — Это строка, представляющая тип данных ресурса.</span><span class="sxs-lookup"><span data-stu-id="28c8a-248">`resourceType` is a string that represents the data type of the resource.</span></span> <span data-ttu-id="28c8a-249">Это может быть любой из следующих значений:</span><span class="sxs-lookup"><span data-stu-id="28c8a-249">It can be any of the following values:</span></span>  
  
-   <span data-ttu-id="28c8a-250">Строковое представление `ResourceTypeCode` член перечисления, указывающее тип данных ресурса.</span><span class="sxs-lookup"><span data-stu-id="28c8a-250">The string representation of a `ResourceTypeCode` enumeration member that indicates the data type of the resource.</span></span> <span data-ttu-id="28c8a-251">`ResourceTypeCode` — Закрытое перечисление, используемый сюда указывают, что специальные двоичный формат используется для хранения одно из 19 общие типы данных.</span><span class="sxs-lookup"><span data-stu-id="28c8a-251">`ResourceTypeCode` is a private enumeration that is used by .to indicate that a special binary format is used to store one of 19 common data types.</span></span> <span data-ttu-id="28c8a-252">К ним относятся типы-примитивы платформы .NET Framework (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), а также <xref:System.String>, <xref:System.DateTime>, и <xref:System.TimeSpan>, кроме того, `ResourceTypeCode` перечисление содержит значения, показанные в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="28c8a-252">These include the .NET Framework primitive data types (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), as well as <xref:System.String>, <xref:System.DateTime>, and <xref:System.TimeSpan>, In addition, the `ResourceTypeCode` enumeration includes the values shown in the following table.</span></span>  
  
    |<span data-ttu-id="28c8a-253">Значение ResourceTypeCode</span><span class="sxs-lookup"><span data-stu-id="28c8a-253">ResourceTypeCode value</span></span>|<span data-ttu-id="28c8a-254">Описание</span><span class="sxs-lookup"><span data-stu-id="28c8a-254">Description</span></span>|  
    |----------------------------|-----------------|  
    |`ResourceTypeCode.ByteArray`|<span data-ttu-id="28c8a-255">Данные представляют собой массив байтов.</span><span class="sxs-lookup"><span data-stu-id="28c8a-255">The data is a byte array.</span></span> <span data-ttu-id="28c8a-256">Эти данные часто введите результаты из вызова <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="28c8a-256">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> method.</span></span>|  
    |`ResourceTypeCode.Null`|<span data-ttu-id="28c8a-257">Данные является пустой ссылкой.</span><span class="sxs-lookup"><span data-stu-id="28c8a-257">The data is a null reference.</span></span> <span data-ttu-id="28c8a-258">Эти данные часто введите результаты из вызова <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType> метод с объекта, значение которого равно `null`.</span><span class="sxs-lookup"><span data-stu-id="28c8a-258">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType> method with an object whose value is `null`.</span></span>|  
    |`ResourceTypeCode.Stream`|<span data-ttu-id="28c8a-259">Данные хранятся в виде потока.</span><span class="sxs-lookup"><span data-stu-id="28c8a-259">The data is stored in a stream.</span></span> <span data-ttu-id="28c8a-260">Эти данные часто введите результаты из вызова <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> или <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="28c8a-260">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> or <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType> method.</span></span>|  
  
     <span data-ttu-id="28c8a-261">Предположим, что `resourceData` не был поврежден, его можно обычно преобразования из массива байтов обратно в исходное значение путем вызова <xref:System.BitConverter> или <xref:System.IO.BinaryReader> метод.</span><span class="sxs-lookup"><span data-stu-id="28c8a-261">Assuming that `resourceData` has not been corrupted, it can usually be converted from a byte array back to its original value by calling a <xref:System.BitConverter> or <xref:System.IO.BinaryReader> method.</span></span>  
  
-   <span data-ttu-id="28c8a-262">Строка, содержащая полное имя типа которого сериализованных данных назначается `resourceData` аргумент (например, `System.String`).</span><span class="sxs-lookup"><span data-stu-id="28c8a-262">A string that contains the fully qualified name of the type whose serialized data is assigned to the `resourceData` argument (for example, `System.String`).</span></span> <span data-ttu-id="28c8a-263">Кроме того для типов, которые не являются частью библиотеки классов .NET Framework, строка содержит имя, версию, язык и региональные параметры и открытый ключ сборки, содержащей тип.</span><span class="sxs-lookup"><span data-stu-id="28c8a-263">In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type.</span></span> <span data-ttu-id="28c8a-264">Например, следующая строка указывает, что сериализованные данные представляет экземпляр `Person` введите `Extensions` пространства имен, которое находится в версии 1.0 сборки с именем служебной программы, который содержит открытый ключ не и без заданного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28c8a-264">For example, the following string indicates that the serialized data represents an instance of the `Person` type in the `Extensions` namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.</span></span>  
  
     `Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`  
  
     <span data-ttu-id="28c8a-265">Предположим, что `resourceData` не поврежден и что доступен тип источника, `resourceData` могут преобразовываться из массива байтов обратно в исходное значение, преобразовав массив байтов для <xref:System.IO.Stream> объект и передает поток <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType>метод.</span><span class="sxs-lookup"><span data-stu-id="28c8a-265">Assuming that `resourceData` has not been corrupted and that the source type is available, `resourceData` can be converted from a byte array back to its original value by converting the byte array to a <xref:System.IO.Stream> object and passing the stream to the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="28c8a-266">Строка, используемая для описания типа данных в <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> вызов метода.</span><span class="sxs-lookup"><span data-stu-id="28c8a-266">The string used to describe the data type in the <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28c8a-267"><paramref name="resourceName" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28c8a-267"><paramref name="resourceName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28c8a-268"><paramref name="resourceName" /> — не существует.</span><span class="sxs-lookup"><span data-stu-id="28c8a-268"><paramref name="resourceName" /> does not exist.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="28c8a-269">Недопустимый тип параметра <paramref name="resourceName" />.</span><span class="sxs-lookup"><span data-stu-id="28c8a-269"><paramref name="resourceName" /> has an invalid type.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="28c8a-270">Извлеченные данные ресурсов повреждены.</span><span class="sxs-lookup"><span data-stu-id="28c8a-270">The retrieved resource data is corrupt.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28c8a-271">Текущий объект <see cref="T:System.Resources.ResourceReader" /> не инициализирован (скорее всего, потому что он закрыт).</span><span class="sxs-lookup"><span data-stu-id="28c8a-271">The current <see cref="T:System.Resources.ResourceReader" /> object is not initialized, probably because it is closed.</span></span></exception>
        <altmember cref="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28c8a-272">Возвращает перечислитель для данного объекта <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="28c8a-272">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></summary>
        <returns><span data-ttu-id="28c8a-273">Перечислитель для данного объекта <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="28c8a-273">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28c8a-274"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> является явной реализацией интерфейса.</span><span class="sxs-lookup"><span data-stu-id="28c8a-274"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> is an explicit interface implementation.</span></span> <span data-ttu-id="28c8a-275">Он может использоваться только при условии, что экземпляр класса <xref:System.Resources.ResourceReader> приведен к типу интерфейса <xref:System.Collections.IEnumerable>.</span><span class="sxs-lookup"><span data-stu-id="28c8a-275">It can be used only when the <xref:System.Resources.ResourceReader> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span> <span data-ttu-id="28c8a-276">Рекомендуемый подход для перечисления ресурсов в RESOURCES-файл является вызов <xref:System.Collections.IEnumerator.MoveNext%2A> метод <xref:System.Collections.IDictionaryEnumerator> объект, возвращаемый <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="28c8a-276">The recommended approach to enumerating the resources in a .resources file is to call the <xref:System.Collections.IEnumerator.MoveNext%2A> method of the <xref:System.Collections.IDictionaryEnumerator> object returned by the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28c8a-277">Средство чтения уже закрыто, поэтому доступ невозможен.</span><span class="sxs-lookup"><span data-stu-id="28c8a-277">The reader has already been closed and cannot be accessed.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28c8a-278">Освобождает ресурсы, используемые объектом <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="28c8a-278">Releases the resources used by the <see cref="T:System.Resources.ResourceReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="28c8a-279">Вызов Dispose позволяет ресурсы, используемые <xref:System.Resources.ResourceReader> перераспределить для других целей.</span><span class="sxs-lookup"><span data-stu-id="28c8a-279">Calling Dispose allows the resources used by the <xref:System.Resources.ResourceReader> to be reallocated for other purposes.</span></span> <span data-ttu-id="28c8a-280">Дополнительные сведения о Dispose, см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="28c8a-280">For more information about Dispose, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>

## Examples  
<span data-ttu-id="28c8a-281">В следующем примере кода проходит через файловые ресурсы и выводит на экран все найденные пары ключ/значение.</span><span class="sxs-lookup"><span data-stu-id="28c8a-281">The following code example moves through a file's resources and prints out all the key/value pairs it finds.</span></span> <span data-ttu-id="28c8a-282">В этом коде используется метод theIDisposable.Dispose завершение работы <xref:System.Resources.ResourceReader> и освободить все ресурсы, используемые в нем.</span><span class="sxs-lookup"><span data-stu-id="28c8a-282">The code then uses theIDisposable.Dispose method to shut down the <xref:System.Resources.ResourceReader> and to release all resources used by it.</span></span>

```vb
Imports System
Imports System.Resources
Imports System.Collections

Public Class ReadResources

    Public Shared Sub Main(args() As String)
        ' Create a resource reader for items.resources 
        ' and get an enumerator to iterate through the file. 
        Dim reader As IResourceReader = New ResourceReader("items.resources")
        Dim en As IDictionaryEnumerator = reader.GetEnumerator()

        ' Iterate through the file, printing the key and value pairs. 
        While en.MoveNext()
            Console.WriteLine()
            Console.WriteLine("Name: {0}", en.Key)
            Console.WriteLine("Value: {0}", en.Value)
        End While 

        ' Clean up all resources associated with the reader. 
        ' Calling Dispose is equivalent to calling Close.
        reader.Dispose()
    End Sub 

End Class
```

```csharp
using System;
using System.Resources;
using System.Collections;

public class ReadResources 
{
    public static void Main(string[] args) 
    {
        // Create a resource reader for items.resources 
        // and get an enumerator to iterate through the file.
        IResourceReader reader = new ResourceReader("items.resources");
        IDictionaryEnumerator en = reader.GetEnumerator();

        // Iterate through the file, printing the key/value pairs. 
        while (en.MoveNext()) 
        {
            Console.WriteLine();
            Console.WriteLine("Name: {0}", en.Key);
            Console.WriteLine("Value: {0}", en.Value);
        }

        // Clean up all resources associated with the reader. 
        // Calling Dispose is equivalent to calling Close.
        reader.Dispose();
    }
}
```

```cpp
using namespace System;
using namespace System::Resources;
using namespace System::Collections;
int main()
{
   array<String^>^args = Environment::GetCommandLineArgs();

   // Create a resource reader for items.resources 
   // and get an enumerator to iterate through the file.
   IResourceReader^ reader = gcnew ResourceReader( "items.resources" );
   IDictionaryEnumerator^ en = reader->GetEnumerator();

   // Iterate through the file, printing the key/value pairs. 
   while ( en->MoveNext() )
   {
      Console::WriteLine();
      Console::WriteLine( "Name: {0}", en->Key );
      Console::WriteLine( "Value: {0}", en->Value );
   }

   // Clean up all resources associated with the reader. 
   // Calling the destructor is equivalent to calling Close.
   reader->~IResourceReader();
}
```

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>