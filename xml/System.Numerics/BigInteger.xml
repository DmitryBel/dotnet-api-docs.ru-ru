<Type Name="BigInteger" FullName="System.Numerics.BigInteger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="25b8a83fb6abf9461df4eb28775fe2b7b8ef21dc" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56367511" /></Metadata><TypeSignature Language="C#" Value="public struct BigInteger : IComparable, IComparable&lt;System.Numerics.BigInteger&gt;, IEquatable&lt;System.Numerics.BigInteger&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit BigInteger extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Numerics.BigInteger&gt;, class System.IEquatable`1&lt;valuetype System.Numerics.BigInteger&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Numerics.BigInteger" />
  <TypeSignature Language="VB.NET" Value="Public Structure BigInteger&#xA;Implements IComparable, IComparable(Of BigInteger), IEquatable(Of BigInteger), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class BigInteger : IComparable, IComparable&lt;System::Numerics::BigInteger&gt;, IEquatable&lt;System::Numerics::BigInteger&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type BigInteger = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Numerics</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Numerics</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Numerics.BigInteger&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Numerics.BigInteger&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ccb84-101">Представляет произвольно большое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="ccb84-101">Represents an arbitrarily large signed integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-102"><xref:System.Numerics.BigInteger> Тип является неизменяемым типом, представляющим произвольно большое целое число, значение которого теоретически не имеет верхней или нижней границы.</span><span class="sxs-lookup"><span data-stu-id="ccb84-102">The <xref:System.Numerics.BigInteger> type is an immutable type that represents an arbitrarily large integer whose value in theory has no upper or lower bounds.</span></span> <span data-ttu-id="ccb84-103">Члены <xref:System.Numerics.BigInteger> повторяют других целочисленных типов ( <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, и <xref:System.UInt64> типы).</span><span class="sxs-lookup"><span data-stu-id="ccb84-103">The members of the <xref:System.Numerics.BigInteger> type closely parallel those of other integral types (the <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64> types).</span></span> <span data-ttu-id="ccb84-104">Этот тип отличается от других целочисленных типов в [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], которые имеют диапазон, заданный их `MinValue` и `MaxValue` свойства.</span><span class="sxs-lookup"><span data-stu-id="ccb84-104">This type differs from the other integral types in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], which have a range indicated by their `MinValue` and `MaxValue` properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ccb84-105">Так как <xref:System.Numerics.BigInteger> тип является неизменяемым (см. в разделе [Изменяемость и BigInteger-структура](#mutability)) и так как он не имеет верхней или нижней границы, <xref:System.OutOfMemoryException> может быть создано для любой операции, которое вызывает <xref:System.Numerics.BigInteger> значение расти слишком большой.</span><span class="sxs-lookup"><span data-stu-id="ccb84-105">Because the <xref:System.Numerics.BigInteger> type is immutable (see [Mutability and the BigInteger Structure](#mutability)) and because it has no upper or lower bounds, an <xref:System.OutOfMemoryException> can be thrown for any operation that causes a <xref:System.Numerics.BigInteger> value to grow too large.</span></span>  
  
## <a name="instantiating-a-biginteger-object"></a><span data-ttu-id="ccb84-106">Создание экземпляра объекта BigInteger</span><span class="sxs-lookup"><span data-stu-id="ccb84-106">Instantiating a BigInteger Object</span></span>  
 <span data-ttu-id="ccb84-107">Можно создать экземпляр <xref:System.Numerics.BigInteger> объекта несколькими способами:</span><span class="sxs-lookup"><span data-stu-id="ccb84-107">You can instantiate a <xref:System.Numerics.BigInteger> object in several ways:</span></span>  
  
-   <span data-ttu-id="ccb84-108">Можно использовать `new` ключевое слово и предоставить любое значение целочисленного типа или с плавающей запятой в качестве параметра <xref:System.Numerics.BigInteger> конструктор.</span><span class="sxs-lookup"><span data-stu-id="ccb84-108">You can use the `new` keyword and provide any integral or floating-point value as a parameter to the <xref:System.Numerics.BigInteger> constructor.</span></span> <span data-ttu-id="ccb84-109">(Значения с плавающей запятой, усекаются, прежде чем они назначаются <xref:System.Numerics.BigInteger>.) В следующем примере показано, как использовать `new` ключевое слово для создания экземпляра <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-109">(Floating-point values are truncated before they are assigned to the <xref:System.Numerics.BigInteger>.) The following example illustrates how to use the `new` keyword to instantiate <xref:System.Numerics.BigInteger> values.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#1)]
     [!code-vb[System.Numerics.BigInteger.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#1)]  
  
-   <span data-ttu-id="ccb84-110">Можно объявить <xref:System.Numerics.BigInteger> переменной и назначить его значение так же, как бы любого числового типа, если это значение является целочисленным типом.</span><span class="sxs-lookup"><span data-stu-id="ccb84-110">You can declare a <xref:System.Numerics.BigInteger> variable and assign it a value just as you would any numeric type, as long as that value is an integral type.</span></span> <span data-ttu-id="ccb84-111">В следующем примере используется назначение для создания <xref:System.Numerics.BigInteger> значение из <xref:System.Int64>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-111">The following example uses assignment to create a <xref:System.Numerics.BigInteger> value from an <xref:System.Int64>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#2)]
     [!code-vb[System.Numerics.BigInteger.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#2)]  
  
-   <span data-ttu-id="ccb84-112">Можно присвоить значение с плавающей запятой или decimal <xref:System.Numerics.BigInteger> объекта, если приведение значения, или преобразовать его.</span><span class="sxs-lookup"><span data-stu-id="ccb84-112">You can assign a decimal or floating-point value to a <xref:System.Numerics.BigInteger> object if you cast the value or convert it first.</span></span> <span data-ttu-id="ccb84-113">В следующем примере приводится (в C#) или явным образом преобразует (в Visual Basic) <xref:System.Double> и <xref:System.Decimal> значение <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-113">The following example explicitly casts (in C#) or converts (in Visual Basic) a <xref:System.Double> and a <xref:System.Decimal> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#3)]
     [!code-vb[System.Numerics.BigInteger.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#3)]  
  
 <span data-ttu-id="ccb84-114">Эти методы позволяют создавать экземпляры <xref:System.Numerics.BigInteger> только типы объектов, значение которого находится в диапазоне одного из существующих числовым.</span><span class="sxs-lookup"><span data-stu-id="ccb84-114">These methods enable you to instantiate a <xref:System.Numerics.BigInteger> object whose value is in the range of one of the existing numeric types only.</span></span> <span data-ttu-id="ccb84-115">Можно создать экземпляр <xref:System.Numerics.BigInteger> объект, значение которого может превышать диапазон существующих числовых типов в одном из трех способов:</span><span class="sxs-lookup"><span data-stu-id="ccb84-115">You can instantiate a <xref:System.Numerics.BigInteger> object whose value can exceed the range of the existing numeric types in one of three ways:</span></span>  
  
-   <span data-ttu-id="ccb84-116">Можно использовать `new` ключевое слово и предоставить массив байтов любого размера для <xref:System.Numerics.BigInteger.%23ctor%2A?displayProperty=nameWithType> конструктор.</span><span class="sxs-lookup"><span data-stu-id="ccb84-116">You can use the `new` keyword and provide a byte array of any size to the <xref:System.Numerics.BigInteger.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="ccb84-117">Например:</span><span class="sxs-lookup"><span data-stu-id="ccb84-117">For example:</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#4)]
     [!code-vb[System.Numerics.BigInteger.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#4)]  
  
-   <span data-ttu-id="ccb84-118">Можно вызвать <xref:System.Numerics.BigInteger.Parse%2A> или <xref:System.Numerics.BigInteger.TryParse%2A> методы для преобразования строкового представления числа в <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-118">You can call the <xref:System.Numerics.BigInteger.Parse%2A> or <xref:System.Numerics.BigInteger.TryParse%2A> methods to convert the string representation of a number to a <xref:System.Numerics.BigInteger>.</span></span> <span data-ttu-id="ccb84-119">Например:</span><span class="sxs-lookup"><span data-stu-id="ccb84-119">For example:</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#5)]
     [!code-vb[System.Numerics.BigInteger.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#5)]  
  
-   <span data-ttu-id="ccb84-120">Можно вызвать `static` (`Shared` в Visual Basic) <xref:System.Numerics.BigInteger> метод, который выполняет некоторые операции в числовом выражении и возвращает вычисляемые <xref:System.Numerics.BigInteger> результат.</span><span class="sxs-lookup"><span data-stu-id="ccb84-120">You can call a `static` (`Shared` in Visual Basic) <xref:System.Numerics.BigInteger> method that performs some operation on a numeric expression and returns a calculated <xref:System.Numerics.BigInteger> result.</span></span> <span data-ttu-id="ccb84-121">Следующий пример делает это путем cubing <xref:System.UInt64.MaxValue?displayProperty=nameWithType> и присваивание результата для <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-121">The following example does this by cubing <xref:System.UInt64.MaxValue?displayProperty=nameWithType> and assigning the result to a <xref:System.Numerics.BigInteger>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#6)]
     [!code-vb[System.Numerics.BigInteger.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#6)]  
  
 <span data-ttu-id="ccb84-122">Значение неинициализированной <xref:System.Numerics.BigInteger> является <xref:System.Numerics.BigInteger.Zero%2A>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-122">The uninitialized value of a <xref:System.Numerics.BigInteger> is <xref:System.Numerics.BigInteger.Zero%2A>.</span></span>  
  
## <a name="performing-operations-on-biginteger-values"></a><span data-ttu-id="ccb84-123">Выполнение операций над значениями BigInteger</span><span class="sxs-lookup"><span data-stu-id="ccb84-123">Performing Operations on BigInteger Values</span></span>  
 <span data-ttu-id="ccb84-124">Можно использовать <xref:System.Numerics.BigInteger> экземпляра так же, как любой целочисленный тип.</span><span class="sxs-lookup"><span data-stu-id="ccb84-124">You can use a <xref:System.Numerics.BigInteger> instance as you would use any other integral type.</span></span> <span data-ttu-id="ccb84-125"><xref:System.Numerics.BigInteger> перегружает стандартные числовые операторы для выполнения основных математических операций, таких как сложение, вычитание, деление, умножение, вычитание, отрицание и Унарное отрицание.</span><span class="sxs-lookup"><span data-stu-id="ccb84-125"><xref:System.Numerics.BigInteger> overloads the standard numeric operators to enable you to perform basic mathematical operations such as addition, subtraction, division, multiplication, subtraction, negation, and unary negation.</span></span> <span data-ttu-id="ccb84-126">Вы также можете использовать стандартные числовые операторы для сравнения двух <xref:System.Numerics.BigInteger> значения друг с другом.</span><span class="sxs-lookup"><span data-stu-id="ccb84-126">You can also use the standard numeric operators to compare two <xref:System.Numerics.BigInteger> values with each other.</span></span> <span data-ttu-id="ccb84-127">Другие целочисленные типы, такие как <xref:System.Numerics.BigInteger> также поддерживает побитового `And`, `Or`, `XOr`, shift и операторы сдвига вправо.</span><span class="sxs-lookup"><span data-stu-id="ccb84-127">Like the other integral types, <xref:System.Numerics.BigInteger> also supports the bitwise `And`, `Or`, `XOr`, left shift, and right shift operators.</span></span> <span data-ttu-id="ccb84-128">Для языков, которые не поддерживают пользовательские операторы <xref:System.Numerics.BigInteger> структура также предоставляет эквивалентные методы для выполнения математических операций.</span><span class="sxs-lookup"><span data-stu-id="ccb84-128">For languages that do not support custom operators, the <xref:System.Numerics.BigInteger> structure also provides equivalent methods for performing mathematical operations.</span></span> <span data-ttu-id="ccb84-129">К ним относятся <xref:System.Numerics.BigInteger.Add%2A>, <xref:System.Numerics.BigInteger.Divide%2A>, <xref:System.Numerics.BigInteger.Multiply%2A>, <xref:System.Numerics.BigInteger.Negate%2A>, <xref:System.Numerics.BigInteger.Subtract%2A>и несколько других.</span><span class="sxs-lookup"><span data-stu-id="ccb84-129">These include <xref:System.Numerics.BigInteger.Add%2A>, <xref:System.Numerics.BigInteger.Divide%2A>, <xref:System.Numerics.BigInteger.Multiply%2A>, <xref:System.Numerics.BigInteger.Negate%2A>, <xref:System.Numerics.BigInteger.Subtract%2A>, and several others.</span></span>  
  
 <span data-ttu-id="ccb84-130">Многие члены <xref:System.Numerics.BigInteger> структура напрямую соответствуют членами других целочисленных типов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-130">Many members of the <xref:System.Numerics.BigInteger> structure correspond directly to members of the other integral types.</span></span> <span data-ttu-id="ccb84-131">Кроме того <xref:System.Numerics.BigInteger> добавляет члены следующего вида:</span><span class="sxs-lookup"><span data-stu-id="ccb84-131">In addition, <xref:System.Numerics.BigInteger> adds members such as the following:</span></span>  
  
-   <span data-ttu-id="ccb84-132"><xref:System.Numerics.BigInteger.Sign%2A>, который возвращает значение, указывающее знак <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-132"><xref:System.Numerics.BigInteger.Sign%2A>, which returns a value that indicates the sign of a <xref:System.Numerics.BigInteger> value.</span></span>  
  
-   <span data-ttu-id="ccb84-133"><xref:System.Numerics.BigInteger.Abs%2A>, который возвращает абсолютное значение <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-133"><xref:System.Numerics.BigInteger.Abs%2A>, which returns the absolute value of a <xref:System.Numerics.BigInteger> value.</span></span>  
  
-   <span data-ttu-id="ccb84-134"><xref:System.Numerics.BigInteger.DivRem%2A>, который возвращает частное и остаток от операции деления.</span><span class="sxs-lookup"><span data-stu-id="ccb84-134"><xref:System.Numerics.BigInteger.DivRem%2A>, which returns both the quotient and remainder of a division operation.</span></span>  
  
-   <span data-ttu-id="ccb84-135"><xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A>, который возвращает наибольший общий делитель двух <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-135"><xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A>, which returns the greatest common divisor of two <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="ccb84-136">Многие из этих дополнительных членов соответствуют членам <xref:System.Math> класс, который предоставляет функциональные возможности для работы с числовых типов-примитивов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-136">Many of these additional members correspond to the members of the <xref:System.Math> class, which provides the functionality to work with the primitive numeric types.</span></span>  
  
<a name="mutability"></a>   
## <a name="mutability-and-the-biginteger-structure"></a><span data-ttu-id="ccb84-137">Изменяемость и BigInteger-структура</span><span class="sxs-lookup"><span data-stu-id="ccb84-137">Mutability and the BigInteger Structure</span></span>  
 <span data-ttu-id="ccb84-138">В следующем примере создается <xref:System.Numerics.BigInteger> объекта и затем увеличивает его значение на единицу.</span><span class="sxs-lookup"><span data-stu-id="ccb84-138">The following example instantiates a <xref:System.Numerics.BigInteger> object and then increments its value by one.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#1)]  
  
 <span data-ttu-id="ccb84-139">Несмотря на то, что в этом примере отображается в том, чтобы изменить значение существующего объекта, это не так.</span><span class="sxs-lookup"><span data-stu-id="ccb84-139">Although this example appears to modify the value of the existing object, this is not the case.</span></span> <span data-ttu-id="ccb84-140"><xref:System.Numerics.BigInteger> объекты являются неизменяемыми, означающее, что внутренне, среда CLR фактически создает новый <xref:System.Numerics.BigInteger> объекта и присваивает ей значение 1 больше, чем предыдущее значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-140"><xref:System.Numerics.BigInteger> objects are immutable, which means that internally, the common language runtime actually creates a new <xref:System.Numerics.BigInteger> object and assigns it a value one greater than its previous value.</span></span> <span data-ttu-id="ccb84-141">Затем этот новый объект возвращается вызывающему объекту.</span><span class="sxs-lookup"><span data-stu-id="ccb84-141">This new object is then returned to the caller.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ccb84-142">Числовые типы в .NET Framework также являются неизменяемыми.</span><span class="sxs-lookup"><span data-stu-id="ccb84-142">The other numeric types in the .NET Framework are also immutable.</span></span> <span data-ttu-id="ccb84-143">Тем не менее поскольку <xref:System.Numerics.BigInteger> тип не имеет верхней или нижней границы, его значения может расширяться слишком большой и оказывают заметного влияния на производительность.</span><span class="sxs-lookup"><span data-stu-id="ccb84-143">However, because the <xref:System.Numerics.BigInteger> type has no upper or lower bounds, its values can grow extremely large and have a measurable impact on performance.</span></span>  
  
 <span data-ttu-id="ccb84-144">Несмотря на то, что этот процесс является прозрачным для вызывающего, она страдает производительность.</span><span class="sxs-lookup"><span data-stu-id="ccb84-144">Although this process is transparent to the caller, it does incur a performance penalty.</span></span> <span data-ttu-id="ccb84-145">В некоторых случаях, особенно когда повторяющиеся операции выполняются в цикле с очень больших <xref:System.Numerics.BigInteger> значения, снижения производительности может быть значительным.</span><span class="sxs-lookup"><span data-stu-id="ccb84-145">In some cases, especially when repeated operations are performed in a loop on very large <xref:System.Numerics.BigInteger> values, that performance penalty can be significant.</span></span> <span data-ttu-id="ccb84-146">Например, в следующем примере операция выполняется несколько раз до миллионов раз и <xref:System.Numerics.BigInteger> значение увеличивается на единицу каждый раз при успешном выполнении операции.</span><span class="sxs-lookup"><span data-stu-id="ccb84-146">For example, in the following example, an operation is performed repetitively up to a million times, and a <xref:System.Numerics.BigInteger> value is incremented by one every time the operation succeeds.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#12)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#12)]  
  
 <span data-ttu-id="ccb84-147">В таком случае можно повысить производительность путем выполнения всех промежуточных назначений <xref:System.Int32> переменной.</span><span class="sxs-lookup"><span data-stu-id="ccb84-147">In such a case, you can improve performance by performing all intermediate assignments to an <xref:System.Int32> variable.</span></span> <span data-ttu-id="ccb84-148">Конечное значение переменной затем могут быть назначены <xref:System.Numerics.BigInteger> объекта после выхода из цикла.</span><span class="sxs-lookup"><span data-stu-id="ccb84-148">The final value of the variable can then be assigned to the <xref:System.Numerics.BigInteger> object when the loop exits.</span></span> <span data-ttu-id="ccb84-149">Ниже приведен пример.</span><span class="sxs-lookup"><span data-stu-id="ccb84-149">The following example provides an illustration.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#3)]  
  
## <a name="working-with-byte-arrays-and-hexadecimal-strings"></a><span data-ttu-id="ccb84-150">Работа с массивами байтов и шестнадцатеричные строки</span><span class="sxs-lookup"><span data-stu-id="ccb84-150">Working with Byte Arrays and Hexadecimal Strings</span></span>  
 <span data-ttu-id="ccb84-151">При преобразовании <xref:System.Numerics.BigInteger> значения в массив байтов, либо если массивы байтов, чтобы преобразовать <xref:System.Numerics.BigInteger> значения, необходимо учитывать порядок байтов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-151">If you convert <xref:System.Numerics.BigInteger> values to byte arrays, or if you convert byte arrays to <xref:System.Numerics.BigInteger> values, you must consider the order of bytes.</span></span> <span data-ttu-id="ccb84-152"><xref:System.Numerics.BigInteger> Структура ожидает отдельных байтов в массив байтов в прямом порядке (то есть, младшие байты значения предшествуют более высокого порядка байтов).</span><span class="sxs-lookup"><span data-stu-id="ccb84-152">The <xref:System.Numerics.BigInteger> structure expects the individual bytes in a byte array to appear in little-endian order (that is, the lower-order bytes of the value precede the higher-order bytes).</span></span> <span data-ttu-id="ccb84-153">Вы можете приема-передачи <xref:System.Numerics.BigInteger> значение путем вызова метода <xref:System.Numerics.BigInteger.ToByteArray%2A> метод и передав получившийся в результате байт массив <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> конструктора, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-153">You can round-trip a <xref:System.Numerics.BigInteger> value by calling the <xref:System.Numerics.BigInteger.ToByteArray%2A> method and then passing the resulting byte array to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#1)]  
  
 <span data-ttu-id="ccb84-154">Для создания экземпляра <xref:System.Numerics.BigInteger> значение из массива байтов, представляющий значение некоторого целочисленного типа, можно передать целое значение в <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> и затем передайте полученный байтового массива в том, чтобы <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="ccb84-154">To instantiate a <xref:System.Numerics.BigInteger> value from a byte array that represents a value of some other integral type, you can pass the integral value to the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method, and then pass the resulting byte array to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span> <span data-ttu-id="ccb84-155">В следующем примере создается <xref:System.Numerics.BigInteger> значение из массива байтов, представляющий <xref:System.Int16> значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-155">The following example instantiates a <xref:System.Numerics.BigInteger> value from a byte array that represents an <xref:System.Int16> value.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#2)]  
  
 <span data-ttu-id="ccb84-156"><xref:System.Numerics.BigInteger> Структура предполагается, что отрицательные значения хранятся с помощью представления дополнение до двух.</span><span class="sxs-lookup"><span data-stu-id="ccb84-156">The <xref:System.Numerics.BigInteger> structure assumes that negative values are stored by using two's complement representation.</span></span> <span data-ttu-id="ccb84-157">Так как <xref:System.Numerics.BigInteger> структура представляет числовое значение с не фиксированной длины, <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> конструктор всегда интерпретирует значащий бит последнего байта в массиве как бит знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-157">Because the <xref:System.Numerics.BigInteger> structure represents a numeric value with no fixed length, the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor always interprets the most significant bit of the last byte in the array as a sign bit.</span></span> <span data-ttu-id="ccb84-158">Чтобы предотвратить <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> конструктор с толку двух дополнением представлением отрицательное значение знака и величины представлением положительное значение, положительные значения в котором наиболее значащему разряду последнего байта в массиве байтов Обычно набор должен включать в себя дополнительные байт, значение которого равно 0.</span><span class="sxs-lookup"><span data-stu-id="ccb84-158">To prevent the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor from confusing the two's complement representation of a negative value with the sign and magnitude representation of a positive value, positive values in which the most significant bit of the last byte in the byte array would ordinarily be set should include an additional byte whose value is 0.</span></span> <span data-ttu-id="ccb84-159">Например, 0xC0 0xBD 0xF0 0xFF является шестнадцатеричным представлением с прямым порядком байтов 1 000 000 или 4 293 967 296.</span><span class="sxs-lookup"><span data-stu-id="ccb84-159">For example, 0xC0 0xBD 0xF0 0xFF is the little-endian hexadecimal representation of either -1,000,000 or 4,293,967,296.</span></span> <span data-ttu-id="ccb84-160">Поскольку наиболее значимого бита последнего байта в этом массиве, значение массива байтов будет интерпретироваться по <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> конструктор в качестве-1,000,000.</span><span class="sxs-lookup"><span data-stu-id="ccb84-160">Because the most significant bit of the last byte in this array is on, the value of the byte array would be interpreted by the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor as -1,000,000.</span></span> <span data-ttu-id="ccb84-161">Для создания экземпляра <xref:System.Numerics.BigInteger> , значение которого задано положительное число, массив байтов, элементы которого являются 0xC0 0xBD 0xF0 0xFF 0x00 должно быть передано в конструктор.</span><span class="sxs-lookup"><span data-stu-id="ccb84-161">To instantiate a <xref:System.Numerics.BigInteger> whose value is positive, a byte array whose elements are 0xC0 0xBD 0xF0 0xFF 0x00 must be passed to the constructor.</span></span> <span data-ttu-id="ccb84-162">Это показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-162">The following example illustrates this.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#3)]  
  
 <span data-ttu-id="ccb84-163">Байтовые массивы, созданные <xref:System.Numerics.BigInteger.ToByteArray%2A> метода из положительные значения включают этот байт очень нулевое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-163">Byte arrays created by the <xref:System.Numerics.BigInteger.ToByteArray%2A> method from positive values include this extra zero-value byte.</span></span> <span data-ttu-id="ccb84-164">Таким образом <xref:System.Numerics.BigInteger> структуры можно гарантировать правильное обратное преобразование значений, их назначения и последующего восстановления из байтовых массивов, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-164">Therefore, the <xref:System.Numerics.BigInteger> structure can successfully round-trip values by assigning them to, and then restoring them from, byte arrays, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#4)]  
  
 <span data-ttu-id="ccb84-165">Тем не менее, необходимо добавить этот дополнительный байтовый нулевое значение в массивы байтов, который динамически создаются разработчиком или возвращаемые методы, которые преобразуют целых чисел без знака в массивы байтов (такие как <xref:System.BitConverter.GetBytes%28System.UInt16%29?displayProperty=nameWithType>, <xref:System.BitConverter.GetBytes%28System.UInt32%29?displayProperty=nameWithType>, и <xref:System.BitConverter.GetBytes%28System.UInt64%29?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="ccb84-165">However, you may need to add this additional zero-value byte to byte arrays that are created dynamically by the developer or that are returned by methods that convert unsigned integers to byte arrays (such as <xref:System.BitConverter.GetBytes%28System.UInt16%29?displayProperty=nameWithType>, <xref:System.BitConverter.GetBytes%28System.UInt32%29?displayProperty=nameWithType>, and <xref:System.BitConverter.GetBytes%28System.UInt64%29?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="ccb84-166">При синтаксическом анализе в шестнадцатеричную строку, <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> и <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> методы предполагается, что если значащий бит первого байта в строке, или если первая цифра шестнадцатеричные строки представляет нижний четыре бита значение в байтах, значение равно представлены с помощью двух представление дополнения до единицы.</span><span class="sxs-lookup"><span data-stu-id="ccb84-166">When parsing a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> and <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> methods assume that if the most significant bit of the first byte in the string is set, or if the first hexadecimal digit of the string represents the lower four bits of a byte value, the value is represented by using two's complement representation.</span></span> <span data-ttu-id="ccb84-167">Например «FF01» и «F01» представляют десятичное значение -255.</span><span class="sxs-lookup"><span data-stu-id="ccb84-167">For example, both "FF01" and "F01" represent the decimal value -255.</span></span> <span data-ttu-id="ccb84-168">Чтобы отличать положительное из отрицательные значения, положительные значения должен включать нулем.</span><span class="sxs-lookup"><span data-stu-id="ccb84-168">To differentiate positive from negative values, positive values should include a leading zero.</span></span> <span data-ttu-id="ccb84-169">Соответствующие перегрузки <xref:System.Numerics.BigInteger.ToString%2A> при передаче строки формата «X», метод добавления начальных нулей в возвращаемой шестнадцатеричные строки для положительных значений.</span><span class="sxs-lookup"><span data-stu-id="ccb84-169">The relevant overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, when they are passed the "X" format string, add a leading zero to the returned hexadecimal string for positive values.</span></span> <span data-ttu-id="ccb84-170">Это делает возможным выполнение цикла обработки <xref:System.Numerics.BigInteger> значения с помощью <xref:System.Numerics.BigInteger.ToString%2A> и <xref:System.Numerics.BigInteger.Parse%2A> методы, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-170">This makes it possible to round-trip <xref:System.Numerics.BigInteger> values by using the <xref:System.Numerics.BigInteger.ToString%2A> and <xref:System.Numerics.BigInteger.Parse%2A> methods, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#5)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#5)]  
  
 <span data-ttu-id="ccb84-171">Тем не менее, шестнадцатеричных строк, созданных вызывающими `ToString` методы других целочисленных типов или перегрузки <xref:System.Convert.ToString%2A> метод, который включают `toBase` параметр указывает знак значения или тип источника данных, из которого шестнадцатеричная строка является производным.</span><span class="sxs-lookup"><span data-stu-id="ccb84-171">However, the hexadecimal strings created by calling the `ToString` methods of the other integral types or the overloads of the <xref:System.Convert.ToString%2A> method that include a `toBase` parameter do not indicate the sign of the value or the source data type from which the hexadecimal string was derived.</span></span> <span data-ttu-id="ccb84-172">Успешно создание экземпляров <xref:System.Numerics.BigInteger> значение из строки требует некоторой дополнительной логики.</span><span class="sxs-lookup"><span data-stu-id="ccb84-172">Successfully instantiating a <xref:System.Numerics.BigInteger> value from such a string requires some additional logic.</span></span> <span data-ttu-id="ccb84-173">Следующий пример предоставляет одна возможная реализация.</span><span class="sxs-lookup"><span data-stu-id="ccb84-173">The following example provides one possible implementation.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples2.cs#6)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb84-174">Инициализирует новый экземпляр структуры <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-174">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : byte[] -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-175">Массив значений типа byte в прямом порядке байтов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-175">An array of byte values in little-endian order.</span></span></param>
        <summary><span data-ttu-id="ccb84-176">Инициализирует новый экземпляр структуры <see cref="T:System.Numerics.BigInteger" />, используя значения в массиве типа byte.</span><span class="sxs-lookup"><span data-stu-id="ccb84-176">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using the values in a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-177">Отдельные байты в `value` массива должен быть в прямом порядке из младшего байта на старший байт.</span><span class="sxs-lookup"><span data-stu-id="ccb84-177">The individual bytes in the `value` array should be in little-endian order, from lowest-order byte to highest-order byte.</span></span> <span data-ttu-id="ccb84-178">Например числовое значение 1,000,000,000,000 представляется, как показано в следующей таблице:</span><span class="sxs-lookup"><span data-stu-id="ccb84-178">For example, the numeric value 1,000,000,000,000 is represented as shown in the following table:</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ccb84-179">Шестнадцатеричная строка</span><span class="sxs-lookup"><span data-stu-id="ccb84-179">Hexadecimal string</span></span>|<span data-ttu-id="ccb84-180">E8D4A51000</span><span class="sxs-lookup"><span data-stu-id="ccb84-180">E8D4A51000</span></span>|  
|<span data-ttu-id="ccb84-181">Массив байтов (сначала минимальный индекс)</span><span class="sxs-lookup"><span data-stu-id="ccb84-181">Byte array (lowest index first)</span></span>|<span data-ttu-id="ccb84-182">00 10 A5 D4 E8 00</span><span class="sxs-lookup"><span data-stu-id="ccb84-182">00 10 A5 D4 E8 00</span></span>|  
  
 <span data-ttu-id="ccb84-183">Большинство методов, которые преобразуют числовые значения в массив байтов, таких как <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> и <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType>, возвращающих массивы байтов в прямом порядке.</span><span class="sxs-lookup"><span data-stu-id="ccb84-183">Most methods that convert numeric values to byte arrays, such as <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> and <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType>, return byte arrays in little-endian order.</span></span>  
  
 <span data-ttu-id="ccb84-184">Конструктор ожидает положительные значения в массиве байтов для использования представление знака и величины, а отрицательные значения для использования двух представление дополнения до единицы.</span><span class="sxs-lookup"><span data-stu-id="ccb84-184">The constructor expects positive values in the byte array to use sign-and-magnitude representation, and negative values to use two's complement representation.</span></span> <span data-ttu-id="ccb84-185">Другими словами если старший бит самого старшего байта в `value` имеет значение, полученный в результате <xref:System.Numerics.BigInteger> имеет отрицательное значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-185">In other words, if the highest-order bit of the highest-order byte in `value` is set, the resulting <xref:System.Numerics.BigInteger> value is negative.</span></span> <span data-ttu-id="ccb84-186">В зависимости от исходного массива байтов это может привести к положительное значение, чтобы быть ошибочно интерпретирована как отрицательное значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-186">Depending on the source of the byte array, this may cause a positive value to be misinterpreted as a negative value.</span></span> <span data-ttu-id="ccb84-187">Байтовые массивы обычно создаются следующими способами:</span><span class="sxs-lookup"><span data-stu-id="ccb84-187">Byte arrays are typically generated in the following ways:</span></span>  
  
-   <span data-ttu-id="ccb84-188">Путем вызова <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-188">By calling the <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ccb84-189">Поскольку этот метод возвращает массив байтов с самого старшего бита самого старшего байта в массиве равным нулю для положительных значений, нет возможности неправильной интерпретации положительного значения как отрицательное.</span><span class="sxs-lookup"><span data-stu-id="ccb84-189">Because this method returns a byte array with the highest-order bit of the highest-order byte in the array set to zero for positive values, there is no chance of misinterpreting a positive value as negative.</span></span> <span data-ttu-id="ccb84-190">Неизмененный байтовые массивы, созданные <xref:System.Numerics.BigInteger.ToByteArray%2A> всегда обратимость, когда они передаются в метод <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="ccb84-190">Unmodified byte arrays created by the <xref:System.Numerics.BigInteger.ToByteArray%2A> method always successfully round-trip when they are passed to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span>  
  
-   <span data-ttu-id="ccb84-191">Путем вызова <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> метода и передача целое число со знаком в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="ccb84-191">By calling the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method and passing it a signed integer as a parameter.</span></span> <span data-ttu-id="ccb84-192">Поскольку целых чисел со знаком обрабатывают представление знака и величины и представление дополнение до двух, нет возможности неправильной интерпретации положительного значения как отрицательное.</span><span class="sxs-lookup"><span data-stu-id="ccb84-192">Because signed integers handle both sign-and-magnitude representation and two's complement representation, there is no chance of misinterpreting a positive value as negative.</span></span>  
  
-   <span data-ttu-id="ccb84-193">Путем вызова <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> метода и передача целое число без знака в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="ccb84-193">By calling the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method and passing it an unsigned integer as a parameter.</span></span> <span data-ttu-id="ccb84-194">Так как целые числа без знака, представлены только своей величиной, положительные значения могут быть ошибочно интерпретирована как отрицательные значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-194">Because unsigned integers are represented by their magnitude only, positive values can be misinterpreted as negative values.</span></span> <span data-ttu-id="ccb84-195">Во избежание этой ошибочной интерпретации можно добавить значение нулевой длины в конец массива.</span><span class="sxs-lookup"><span data-stu-id="ccb84-195">To prevent this misinterpretation, you can add a zero-byte value to the end of the array.</span></span> <span data-ttu-id="ccb84-196">В следующем разделе приведен пример.</span><span class="sxs-lookup"><span data-stu-id="ccb84-196">The example in the next section provides an illustration.</span></span>  
  
-   <span data-ttu-id="ccb84-197">Создав массив байтов либо динамически или статически не обязательно вызова любого из предыдущих методов, или путем изменения существующего массива байтов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-197">By creating a byte array either dynamically or statically without necessarily calling any of the previous methods, or by modifying an existing byte array.</span></span> <span data-ttu-id="ccb84-198">Чтобы предотвратить положительные значения ошибочно интерпретированы как отрицательные значения, можно добавить значение нулевой длины в конец массива.</span><span class="sxs-lookup"><span data-stu-id="ccb84-198">To prevent positive values from being misinterpreted as negative values, you can add a zero-byte value to the end of the array.</span></span>  
  
 <span data-ttu-id="ccb84-199">Если `value` — это пустой <xref:System.Byte> массива, новый <xref:System.Numerics.BigInteger> инициализации объекта значение <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-199">If `value` is an empty <xref:System.Byte> array, the new <xref:System.Numerics.BigInteger> object is initialized to a value of <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ccb84-200">Если `value` — `null`, конструктор вызывает <xref:System.ArgumentNullException>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-200">If `value` is `null`, the constructor throws an <xref:System.ArgumentNullException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-201">В следующем примере создается <xref:System.Numerics.BigInteger> объекта из массива байтов 5-элемент, значение которого равно {5, 4, 3, 2, 1}.</span><span class="sxs-lookup"><span data-stu-id="ccb84-201">The following example instantiates a <xref:System.Numerics.BigInteger> object from a 5-element byte array whose value is {5, 4, 3, 2, 1}.</span></span> <span data-ttu-id="ccb84-202">Затем он отобразит <xref:System.Numerics.BigInteger> значение, представленное в виде десятичных и шестнадцатеричных чисел, на консоль.</span><span class="sxs-lookup"><span data-stu-id="ccb84-202">It then displays the <xref:System.Numerics.BigInteger> value, represented as both decimal and hexadecimal numbers, to the console.</span></span> <span data-ttu-id="ccb84-203">Сравнение входной массив с выходными данными текста позволяет понять, почему эта перегрузка <xref:System.Numerics.BigInteger> конструктор класса создает <xref:System.Numerics.BigInteger> объект, значение которого равно 4328719365 (или 0x102030405).</span><span class="sxs-lookup"><span data-stu-id="ccb84-203">A comparison of the input array with the text output makes it clear why this overload of the <xref:System.Numerics.BigInteger> class constructor creates a <xref:System.Numerics.BigInteger> object whose value is 4328719365 (or 0x102030405).</span></span> <span data-ttu-id="ccb84-204">Первый элемент массива байтов, значение которого равно 5, определяет значение младшего байта <xref:System.Numerics.BigInteger> объект, являющийся 0x05.</span><span class="sxs-lookup"><span data-stu-id="ccb84-204">The first element of the byte array, whose value is 5, defines the value of the lowest-order byte of the <xref:System.Numerics.BigInteger> object, which is 0x05.</span></span> <span data-ttu-id="ccb84-205">Второй элемент массива байтов, значение которого равно 4, определяет значение для второй байт <xref:System.Numerics.BigInteger> объект, являющийся 0x04 и т. д.</span><span class="sxs-lookup"><span data-stu-id="ccb84-205">The second element of the byte array, whose value is 4, defines the value of the second byte of the <xref:System.Numerics.BigInteger> object, which is 0x04, and so on.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ctors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#1)]  
  
 <span data-ttu-id="ccb84-206">В следующем примере создается положительного и отрицательного <xref:System.Numerics.BigInteger> значений, они передаются в <xref:System.Numerics.BigInteger.ToByteArray%2A> метод, а затем восстанавливает исходное <xref:System.Numerics.BigInteger> значения из полученного байтового массива.</span><span class="sxs-lookup"><span data-stu-id="ccb84-206">The following example instantiates a positive and a negative <xref:System.Numerics.BigInteger> value, passes them to the <xref:System.Numerics.BigInteger.ToByteArray%2A> method, and then restores the original <xref:System.Numerics.BigInteger> values from the resulting byte array.</span></span> <span data-ttu-id="ccb84-207">Обратите внимание на то, что два значения представляются одинаковые байтовые массивы.</span><span class="sxs-lookup"><span data-stu-id="ccb84-207">Note that the two values are represented by identical byte arrays.</span></span> <span data-ttu-id="ccb84-208">Единственное различие между ними заключается в том, в значащий бит последнего элемента в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-208">The only difference between them is in the most significant bit of the last element in the byte array.</span></span> <span data-ttu-id="ccb84-209">Этот бит имеет значение (значение байта — 0xFF), если массив создается на основе отрицательное <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-209">This bit is set (the value of the byte is 0xFF) if the array is created from a negative <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="ccb84-210">Бит не задано (значение байта равно нулю), если массив создается на основе положительное <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-210">The bit is not set (the value of the byte is zero), if the array is created from a positive <xref:System.Numerics.BigInteger> value.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.ctors#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#2)]  
  
 <span data-ttu-id="ccb84-211">В следующем примере показано, как убедитесь в том, что положительное значение не создается неправильно как отрицательное значение, добавив в байтах, значение которого равно нулю, в конец массива.</span><span class="sxs-lookup"><span data-stu-id="ccb84-211">The following example illustrates how to make sure that a positive value is not incorrectly instantiated as a negative value by adding a byte whose value is zero to the end of the array.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.ctors#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ccb84-212"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-212"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.ToByteArray" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::Decimal value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : decimal -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-213">Десятичное число.</span><span class="sxs-lookup"><span data-stu-id="ccb84-213">A decimal number.</span></span></param>
        <summary><span data-ttu-id="ccb84-214">Инициализирует новый экземпляр структуры <see cref="T:System.Numerics.BigInteger" />, используя значение <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-214">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-215">Результат вызова этого конструктора идентична явного присвоения <xref:System.Decimal> значение <xref:System.Numerics.BigInteger> переменной.</span><span class="sxs-lookup"><span data-stu-id="ccb84-215">The result of calling this constructor is identical to explicitly assigning a <xref:System.Decimal> value to a <xref:System.Numerics.BigInteger> variable.</span></span>  
  
 <span data-ttu-id="ccb84-216">Вызов этого конструктора может привести к потере данных; Дробная часть `value` усекается при создании экземпляра <xref:System.Numerics.BigInteger> объекта.</span><span class="sxs-lookup"><span data-stu-id="ccb84-216">Calling this constructor can cause data loss; any fractional part of `value` is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-217">Следующий пример иллюстрирует использование <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> конструктора для создания <xref:System.Numerics.BigInteger> объекта.</span><span class="sxs-lookup"><span data-stu-id="ccb84-217">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="ccb84-218">Он определяет массив <xref:System.Decimal> значения, а затем передает каждого значения <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="ccb84-218">It defines an array of <xref:System.Decimal> values, and then passes each value to the <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> constructor.</span></span> <span data-ttu-id="ccb84-219">Обратите внимание, что <xref:System.Decimal> значение усекается вместо округления при его назначении <xref:System.Numerics.BigInteger> объекта.</span><span class="sxs-lookup"><span data-stu-id="ccb84-219">Note that the <xref:System.Decimal> value is truncated instead of rounded when it is assigned to the <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#4)]
 [!code-vb[System.Numerics.BigInteger.ctors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(double value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : double -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-220">Значение с плавающей точкой двойной точности.</span><span class="sxs-lookup"><span data-stu-id="ccb84-220">A double-precision floating-point value.</span></span></param>
        <summary><span data-ttu-id="ccb84-221">Инициализирует новый экземпляр структуры <see cref="T:System.Numerics.BigInteger" />, используя значение с плавающей запятой двойной точности.</span><span class="sxs-lookup"><span data-stu-id="ccb84-221">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a double-precision floating-point value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-222">Дробная часть `value` параметр усекается при создании экземпляра <xref:System.Numerics.BigInteger> объекта.</span><span class="sxs-lookup"><span data-stu-id="ccb84-222">Any fractional part of the `value` parameter is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="ccb84-223">Из-за недостатка точности <xref:System.Double> тип данных, вызвав этот конструктор может привести к потере данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-223">Because of the lack of precision of the <xref:System.Double> data type, calling this constructor can cause data loss.</span></span>  
  
 <span data-ttu-id="ccb84-224"><xref:System.Numerics.BigInteger> Значение, полученный в результате вызова этого конструктора, полученный в результате явного присвоения значению <xref:System.Double> значение <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-224">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from explicitly assigning a <xref:System.Double> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-225">Следующий пример иллюстрирует использование <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29> конструктора для создания <xref:System.Numerics.BigInteger> объекта.</span><span class="sxs-lookup"><span data-stu-id="ccb84-225">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="ccb84-226">Также показывает потерю точности, которая может возникнуть при использовании <xref:System.Double> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-226">It also illustrates the loss of precision that may occur when you use the <xref:System.Double> data type.</span></span> <span data-ttu-id="ccb84-227">Объект <xref:System.Double> назначается большое значение, которое затем присваивается <xref:System.Numerics.BigInteger> объекта.</span><span class="sxs-lookup"><span data-stu-id="ccb84-227">A <xref:System.Double> is assigned a large value, which is then assigned to a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="ccb84-228">Как показывает вывод, это назначение включает потеря точности.</span><span class="sxs-lookup"><span data-stu-id="ccb84-228">As the output shows, this assignment involves a loss of precision.</span></span> <span data-ttu-id="ccb84-229">Оба значения затем увеличиваются на единицу.</span><span class="sxs-lookup"><span data-stu-id="ccb84-229">Both values are then incremented by one.</span></span> <span data-ttu-id="ccb84-230">Выход показывает, что <xref:System.Numerics.BigInteger> объекта отражает измененное значение, тогда как <xref:System.Double> не делает.</span><span class="sxs-lookup"><span data-stu-id="ccb84-230">The output shows that the <xref:System.Numerics.BigInteger> object reflects the changed value, whereas the <xref:System.Double> object does not.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#5)]
 [!code-vb[System.Numerics.BigInteger.ctors#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ccb84-231"><paramref name="value" /> имеет значение <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> или <see cref="F:System.Double.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-231"><paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(int value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : int -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-232">32-разрядное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="ccb84-232">A 32-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="ccb84-233">Инициализирует новый экземпляр структуры <see cref="T:System.Numerics.BigInteger" />, используя 32-разрядное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="ccb84-233">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a 32-bit signed integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-234">Нет потери точности при создании экземпляра <xref:System.Numerics.BigInteger> объекта с помощью этого конструктора.</span><span class="sxs-lookup"><span data-stu-id="ccb84-234">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> object by using this constructor.</span></span>  
  
 <span data-ttu-id="ccb84-235"><xref:System.Numerics.BigInteger> Значение, полученный в результате вызова этого конструктора, полученный в результате присвоения значению <xref:System.Int32> значение <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-235">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning an <xref:System.Int32> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
 <span data-ttu-id="ccb84-236"><xref:System.Numerics.BigInteger> Структура не имеет конструктора с параметром типа <xref:System.Byte>, <xref:System.Int16>, <xref:System.SByte>, или <xref:System.UInt16>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-236">The <xref:System.Numerics.BigInteger> structure does not include constructors with a parameter of type <xref:System.Byte>, <xref:System.Int16>, <xref:System.SByte>, or <xref:System.UInt16>.</span></span> <span data-ttu-id="ccb84-237">Тем не менее <xref:System.Int32> тип поддерживает неявное преобразование 8-разрядных и 16-разрядных целых чисел со знаком и без знака в 32-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="ccb84-237">However, the <xref:System.Int32> type supports the implicit conversion of 8-bit and 16-bit signed and unsigned integers to signed 32-bit integers.</span></span> <span data-ttu-id="ccb84-238">В результате этот конструктор вызывается, если `value` любой из этих четырех целых типов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-238">As a result, this constructor is called if `value` is any one of these four integral types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-239">В следующем примере вызывается <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29> конструктора для создания <xref:System.Numerics.BigInteger> значений в массиве 32-разрядных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="ccb84-239">The following example calls the <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29> constructor to instantiate <xref:System.Numerics.BigInteger> values from an array of 32-bit integers.</span></span> <span data-ttu-id="ccb84-240">Также использует неявное преобразование, чтобы присвоить каждое значение 32-разрядное целое число, чтобы <xref:System.Numerics.BigInteger> переменной.</span><span class="sxs-lookup"><span data-stu-id="ccb84-240">It also uses implicit conversion to assign each 32-bit integer value to a <xref:System.Numerics.BigInteger> variable.</span></span> <span data-ttu-id="ccb84-241">Затем сравнивает два значения для определения того, что полученный в результате <xref:System.Numerics.BigInteger> значения совпадают.</span><span class="sxs-lookup"><span data-stu-id="ccb84-241">It then compares the two values to establish that the resulting <xref:System.Numerics.BigInteger> values are the same.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#6)]
 [!code-vb[System.Numerics.BigInteger.ctors#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(long value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : int64 -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-242">64-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="ccb84-242">A 64-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="ccb84-243">Инициализирует новый экземпляр структуры <see cref="T:System.Numerics.BigInteger" />, используя 64-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="ccb84-243">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a 64-bit signed integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-244">Нет потери точности при создании экземпляра <xref:System.Numerics.BigInteger> объекта с помощью этого конструктора.</span><span class="sxs-lookup"><span data-stu-id="ccb84-244">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> object by using this constructor.</span></span>  
  
 <span data-ttu-id="ccb84-245"><xref:System.Numerics.BigInteger> Значение, полученный в результате вызова этого конструктора, полученный в результате присвоения значению <xref:System.Int64> значение <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-245">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning an <xref:System.Int64> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-246">В следующем примере вызывается <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29> конструктора для создания <xref:System.Numerics.BigInteger> значений в массиве 64-разрядных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="ccb84-246">The following example calls the <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29> constructor to instantiate <xref:System.Numerics.BigInteger> values from an array of 64-bit integers.</span></span> <span data-ttu-id="ccb84-247">Также использует неявное преобразование, чтобы присвоить каждое значение 64-разрядное целое число, чтобы <xref:System.Numerics.BigInteger> переменной.</span><span class="sxs-lookup"><span data-stu-id="ccb84-247">It also uses implicit conversion to assign each 64-bit integer value to a <xref:System.Numerics.BigInteger> variable.</span></span> <span data-ttu-id="ccb84-248">Затем сравнивает два значения для определения того, что полученный в результате <xref:System.Numerics.BigInteger> значения совпадают.</span><span class="sxs-lookup"><span data-stu-id="ccb84-248">It then compares the two values to establish that the resulting <xref:System.Numerics.BigInteger> values are the same.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#7)]
 [!code-vb[System.Numerics.BigInteger.ctors#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(float value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : single -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-249">Значение с плавающей точкой одинарной точности.</span><span class="sxs-lookup"><span data-stu-id="ccb84-249">A single-precision floating-point value.</span></span></param>
        <summary><span data-ttu-id="ccb84-250">Инициализирует новый экземпляр структуры <see cref="T:System.Numerics.BigInteger" />, используя значение с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="ccb84-250">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a single-precision floating-point value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-251">Дробная часть `value` параметр усекается при создании экземпляра <xref:System.Numerics.BigInteger> объекта.</span><span class="sxs-lookup"><span data-stu-id="ccb84-251">Any fractional part of the `value` parameter is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="ccb84-252">Из-за недостатка точности <xref:System.Single> тип данных, вызов этого конструктора может привести к потере данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-252">Because of the lack of precision of the <xref:System.Single> data type, calling this constructor can result in data loss.</span></span>  
  
 <span data-ttu-id="ccb84-253"><xref:System.Numerics.BigInteger> Значение, полученный в результате вызова этого конструктора, полученный в результате явного присвоения значению <xref:System.Single> значение <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-253">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from explicitly assigning a <xref:System.Single> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-254">Следующий пример иллюстрирует использование <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29> конструктора для создания <xref:System.Numerics.BigInteger> объекта.</span><span class="sxs-lookup"><span data-stu-id="ccb84-254">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="ccb84-255">Также показывает потерю точности, которая может возникнуть при использовании <xref:System.Single> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-255">It also illustrates the loss of precision that may occur when you use the <xref:System.Single> data type.</span></span> <span data-ttu-id="ccb84-256">Объект <xref:System.Single> назначается больших отрицательное значение, которое затем присваивается <xref:System.Numerics.BigInteger> объекта.</span><span class="sxs-lookup"><span data-stu-id="ccb84-256">A <xref:System.Single> is assigned a large negative value, which is then assigned to a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="ccb84-257">Как показывает вывод, это назначение включает потеря точности.</span><span class="sxs-lookup"><span data-stu-id="ccb84-257">As the output shows, this assignment involves a loss of precision.</span></span> <span data-ttu-id="ccb84-258">Оба значения затем увеличиваются на единицу.</span><span class="sxs-lookup"><span data-stu-id="ccb84-258">Both values are then incremented by one.</span></span> <span data-ttu-id="ccb84-259">Выход показывает, что <xref:System.Numerics.BigInteger> объекта отражает измененное значение, тогда как <xref:System.Single> не делает.</span><span class="sxs-lookup"><span data-stu-id="ccb84-259">The output shows that the <xref:System.Numerics.BigInteger> object reflects the changed value, whereas the <xref:System.Single> object does not.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#8)]
 [!code-vb[System.Numerics.BigInteger.ctors#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ccb84-260"><paramref name="value" /> имеет значение <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> или <see cref="F:System.Single.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-260"><paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" />, or <see cref="F:System.Single.PositiveInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : uint32 -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-261">32-разрядное целое значение без знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-261">An unsigned 32-bit integer value.</span></span></param>
        <summary><span data-ttu-id="ccb84-262">Инициализирует новый экземпляр структуры <see cref="T:System.Numerics.BigInteger" />, используя 32-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-262">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using an unsigned 32-bit integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-263">Нет потери точности при создании экземпляра <xref:System.Numerics.BigInteger> с помощью этого конструктора.</span><span class="sxs-lookup"><span data-stu-id="ccb84-263">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> using this constructor.</span></span>  
  
 <span data-ttu-id="ccb84-264"><xref:System.Numerics.BigInteger> Значение, полученный в результате вызова этого конструктора, полученный в результате присвоения значению <xref:System.UInt32> значение <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-264">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning a <xref:System.UInt32> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-265">В следующем примере используется <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29> конструктор и оператор присваивания для инициализации <xref:System.Numerics.BigInteger> значений в массиве 32-разрядных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="ccb84-265">The following example uses the <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29> constructor and an assignment statement to initialize <xref:System.Numerics.BigInteger> values from an array of unsigned 32-bit integers.</span></span> <span data-ttu-id="ccb84-266">Затем он сравнивает два значения, чтобы продемонстрировать, что два метода инициализации <xref:System.Numerics.BigInteger> значение давать одинаковые результаты.</span><span class="sxs-lookup"><span data-stu-id="ccb84-266">It then compares the two values to demonstrate that the two methods of initializing a <xref:System.Numerics.BigInteger> value produce identical results.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#9)]
 [!code-vb[System.Numerics.BigInteger.ctors#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#9)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : uint64 -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-267">64-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-267">An unsigned 64-bit integer.</span></span></param>
        <summary><span data-ttu-id="ccb84-268">Инициализирует новый экземпляр структуры <see cref="T:System.Numerics.BigInteger" />, используя 64-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-268">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure with an unsigned 64-bit integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-269">Нет потери точности при создании экземпляра <xref:System.Numerics.BigInteger> с помощью этого конструктора.</span><span class="sxs-lookup"><span data-stu-id="ccb84-269">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> using this constructor.</span></span>  
  
 <span data-ttu-id="ccb84-270"><xref:System.Numerics.BigInteger> Значение, полученный в результате вызова этого конструктора, полученный в результате присвоения значению <xref:System.UInt64> значение <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-270">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning a <xref:System.UInt64> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-271">В следующем примере используется <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29> конструктора для создания <xref:System.Numerics.BigInteger> объект, значение которого равно <xref:System.UInt64.MaxValue>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-271">The following example uses the <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object whose value is equal to <xref:System.UInt64.MaxValue>.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#10)]
 [!code-vb[System.Numerics.BigInteger.ctors#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (ReadOnlySpan&lt;byte&gt; value, bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value, bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.ReadOnlySpan{System.Byte},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ReadOnlySpan(Of Byte), Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : ReadOnlySpan&lt;byte&gt; * bool * bool -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger (value, isUnsigned, isBigEndian)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="isUnsigned" Type="System.Boolean" />
        <Parameter Name="isBigEndian" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="isUnsigned">To be added.</param>
        <param name="isBigEndian">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Abs (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Abs(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Abs(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Abs : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-272">Число.</span><span class="sxs-lookup"><span data-stu-id="ccb84-272">A number.</span></span></param>
        <summary><span data-ttu-id="ccb84-273">Получает абсолютное значение объекта <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-273">Gets the absolute value of a <see cref="T:System.Numerics.BigInteger" /> object.</span></span></summary>
        <returns><span data-ttu-id="ccb84-274">Абсолютное значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-274">The absolute value of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-275">Абсолютное значение числа — это число без знака, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="ccb84-275">The absolute value of a number is that number without its sign, as shown in the following table.</span></span>  
  
|<span data-ttu-id="ccb84-276">Параметр `value`</span><span class="sxs-lookup"><span data-stu-id="ccb84-276">`value` parameter</span></span>|<span data-ttu-id="ccb84-277">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="ccb84-277">Return value</span></span>|  
|-----------------------|------------------|  
|<span data-ttu-id="ccb84-278">`value` >= 0</span><span class="sxs-lookup"><span data-stu-id="ccb84-278">`value` >= 0</span></span>|`value`|  
|<span data-ttu-id="ccb84-279">`value` < 0</span><span class="sxs-lookup"><span data-stu-id="ccb84-279">`value` < 0</span></span>|<span data-ttu-id="ccb84-280">`value` \* -1</span><span class="sxs-lookup"><span data-stu-id="ccb84-280">`value` \* -1</span></span>|  
  
 <span data-ttu-id="ccb84-281"><xref:System.Numerics.BigInteger.Abs%2A> Метод эквивалентен <xref:System.Math.Abs%2A?displayProperty=nameWithType> метод для числовых типов-примитивов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-281">The <xref:System.Numerics.BigInteger.Abs%2A> method is equivalent to the <xref:System.Math.Abs%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-282">В следующем примере используется <xref:System.Numerics.BigInteger.Abs%2A> метод для преобразования <xref:System.Numerics.BigInteger> значение из двух дополнением представления в представление знака и величины до его сериализации в файл.</span><span class="sxs-lookup"><span data-stu-id="ccb84-282">The following example uses the <xref:System.Numerics.BigInteger.Abs%2A> method to convert a <xref:System.Numerics.BigInteger> value from two's complement representation to sign-and-magnitude representation before serializing it to a file.</span></span> <span data-ttu-id="ccb84-283">Данные в файле затем десериализуется и назначенный для нового <xref:System.Numerics.BigInteger> объекта.</span><span class="sxs-lookup"><span data-stu-id="ccb84-283">Data in the file is then deserialized and assigned to a new <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Abs/cs/Abs1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Abs/vb/Abs1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Abs(System.SByte)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Add (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Add(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Add(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Add : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Add (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-284">Первое из складываемых значений.</span><span class="sxs-lookup"><span data-stu-id="ccb84-284">The first value to add.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-285">Второе из складываемых значений.</span><span class="sxs-lookup"><span data-stu-id="ccb84-285">The second value to add.</span></span></param>
        <summary><span data-ttu-id="ccb84-286">Складывает два значения <see cref="T:System.Numerics.BigInteger" /> и возвращает результат.</span><span class="sxs-lookup"><span data-stu-id="ccb84-286">Adds two <see cref="T:System.Numerics.BigInteger" /> values and returns the result.</span></span></summary>
        <returns><span data-ttu-id="ccb84-287">Сумма <paramref name="left" /> и <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-287">The sum of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-288">Языки, не поддерживающих перегрузку операторов или пользовательские операторы могут использовать <xref:System.Numerics.BigInteger.Add%2A> метод для выполнения сложения с помощью <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-288">Languages that do not support operator overloading or custom operators can use the <xref:System.Numerics.BigInteger.Add%2A> method to perform addition using <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="ccb84-289"><xref:System.Numerics.BigInteger.Add%2A> Метод является полезным замены для оператора сложения, при создании экземпляра <xref:System.Numerics.BigInteger> переменной, назначив ей суммы, полученный в результате сложения, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-289">The <xref:System.Numerics.BigInteger.Add%2A> method is a useful substitute for the addition operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it a sum that results from addition, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (left As BigInteger, right As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Compare : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; int" Usage="System.Numerics.BigInteger.Compare (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-290">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-290">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-291">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-291">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-292">Сравнивает два значения <see cref="T:System.Numerics.BigInteger" /> и возвращает целое значение, которое показывает, больше или меньше первое значение по сравнению со вторым или равно ему.</span><span class="sxs-lookup"><span data-stu-id="ccb84-292">Compares two <see cref="T:System.Numerics.BigInteger" /> values and returns an integer that indicates whether the first value is less than, equal to, or greater than the second value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-293">Знаковое целое число, которое определяет относительные значения параметров <paramref name="left" /> и <paramref name="right" />, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="ccb84-293">A signed integer that indicates the relative values of <paramref name="left" /> and <paramref name="right" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="ccb84-294">Значение</span><span class="sxs-lookup"><span data-stu-id="ccb84-294">Value</span></span> 
 </term><description> <span data-ttu-id="ccb84-295">Условие</span><span class="sxs-lookup"><span data-stu-id="ccb84-295">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="ccb84-296">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="ccb84-296">Less than zero</span></span> 
 </term><description><span data-ttu-id="ccb84-297">Значение <paramref name="left" /> меньше <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-297"><paramref name="left" /> is less than <paramref name="right" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ccb84-298">Нуль</span><span class="sxs-lookup"><span data-stu-id="ccb84-298">Zero</span></span> 
 </term><description><span data-ttu-id="ccb84-299"><paramref name="left" /> равняется <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-299"><paramref name="left" /> equals <paramref name="right" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ccb84-300">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="ccb84-300">Greater than zero</span></span> 
 </term><description><span data-ttu-id="ccb84-301">Значение <paramref name="left" /> больше значения <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-301"><paramref name="left" /> is greater than <paramref name="right" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-302">Несмотря на то что <xref:System.Numerics.BigInteger> тип имеет не фиксированный диапазон, выполняется сравнение <xref:System.Numerics.BigInteger> значения не характеризуется недостаточной точности, характеризующий сравнение чисел с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="ccb84-302">Although the <xref:System.Numerics.BigInteger> type has no fixed range, comparisons of <xref:System.Numerics.BigInteger> values are not characterized by the lack of precision that characterizes the comparison of floating-point numbers.</span></span> <span data-ttu-id="ccb84-303">В следующем примере сравниваются два <xref:System.Numerics.BigInteger> значения, которые отличаются на единицу и оба имеют из 1 896 цифр.</span><span class="sxs-lookup"><span data-stu-id="ccb84-303">The following example compares two <xref:System.Numerics.BigInteger> values that differ by one and that each have 1,896 digits.</span></span> <span data-ttu-id="ccb84-304"><xref:System.Numerics.BigInteger.Compare%2A> Метод неправильно сообщает, что два значения не равны.</span><span class="sxs-lookup"><span data-stu-id="ccb84-304">The <xref:System.Numerics.BigInteger.Compare%2A> method correctly reports that the two values are not equal.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Compare/cs/Compare1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Compare/vb/Compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.CompareTo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb84-305">Сравнивает значение данного экземпляра с другим значением и возвращает целое число, которое показывает, является ли значение данного экземпляра меньшим, большим или равным другому значению.</span><span class="sxs-lookup"><span data-stu-id="ccb84-305">Compares the value of this instance with another value and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the other value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (long other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(long other);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : int64 -&gt; int" Usage="bigInteger.CompareTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="ccb84-306">64-разрядное знаковое целое число для сравнения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-306">The signed 64-bit integer to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-307">Сравнивает данный экземпляр с 64-разрядным знаковым целым числом и возвращает целое число, которое показывает, является ли значение данного экземпляра меньшим, большим или равным значению 64-битового знакового целого числа.</span><span class="sxs-lookup"><span data-stu-id="ccb84-307">Compares this instance to a signed 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the signed 64-bit integer.</span></span></summary>
        <returns><span data-ttu-id="ccb84-308">Знаковое целое число, определяющее, как соотносятся между собой данный экземпляр и объект <paramref name="other" />. Возможные соотношения показаны в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="ccb84-308">A signed integer value that indicates the relationship of this instance to <paramref name="other" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="ccb84-309">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="ccb84-309">Return value</span></span> 
 </term><description> <span data-ttu-id="ccb84-310">Описание</span><span class="sxs-lookup"><span data-stu-id="ccb84-310">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="ccb84-311">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="ccb84-311">Less than zero</span></span> 
 </term><description> <span data-ttu-id="ccb84-312">Текущий экземпляр меньше значения параметра <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-312">The current instance is less than <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ccb84-313">Нуль</span><span class="sxs-lookup"><span data-stu-id="ccb84-313">Zero</span></span> 
 </term><description> <span data-ttu-id="ccb84-314">Текущий экземпляр равен значению параметра <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-314">The current instance equals <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ccb84-315">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="ccb84-315">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="ccb84-316">Текущий экземпляр больше значения параметра <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-316">The current instance is greater than <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-317">Если `other` — <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, или <xref:System.UInt32> , он неявно преобразуется в значение <xref:System.Int64> значения при <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-317">If `other` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-318">В следующем примере демонстрируется результат вызова метода <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> метод целыми значениями.</span><span class="sxs-lookup"><span data-stu-id="ccb84-318">The following example illustrates the result of calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> method with integral values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example2.cs#3)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example2.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Numerics.BigInteger other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Numerics.BigInteger other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Numerics::BigInteger other);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : System.Numerics.BigInteger -&gt; int&#xA;override this.CompareTo : System.Numerics.BigInteger -&gt; int" Usage="bigInteger.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="ccb84-319">Объект для сравнения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-319">The object to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-320">Сравнивает данный экземпляр с другим экземпляром <see cref="T:System.Numerics.BigInteger" /> и возвращает целое число, которое показывает, является ли значение данного экземпляра меньшим, большим или равным значению указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="ccb84-320">Compares this instance to a second <see cref="T:System.Numerics.BigInteger" /> and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</span></span></summary>
        <returns><span data-ttu-id="ccb84-321">Знаковое целое число, определяющее, как соотносятся между собой данный экземпляр и объект <paramref name="other" />. Возможные соотношения показаны в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="ccb84-321">A signed integer value that indicates the relationship of this instance to <paramref name="other" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="ccb84-322">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="ccb84-322">Return value</span></span> 
 </term><description> <span data-ttu-id="ccb84-323">Описание</span><span class="sxs-lookup"><span data-stu-id="ccb84-323">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="ccb84-324">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="ccb84-324">Less than zero</span></span> 
 </term><description> <span data-ttu-id="ccb84-325">Текущий экземпляр меньше значения параметра <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-325">The current instance is less than <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ccb84-326">Нуль</span><span class="sxs-lookup"><span data-stu-id="ccb84-326">Zero</span></span> 
 </term><description> <span data-ttu-id="ccb84-327">Текущий экземпляр равен значению параметра <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-327">The current instance equals <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ccb84-328">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="ccb84-328">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="ccb84-329">Текущий экземпляр больше значения параметра <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-329">The current instance is greater than <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-330">Эта перегрузка <xref:System.Numerics.BigInteger.CompareTo%2A> реализует метод <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-330">This overload of the <xref:System.Numerics.BigInteger.CompareTo%2A> method implements the <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ccb84-331">Используется универсальная коллекция объектов для упорядочения элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="ccb84-331">It is used by generic collection objects to order the items in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-332">Следующий пример иллюстрирует использование <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29> для упорядочивания списка `StarInfo` объектов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-332">The following example illustrates the use of the <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29> method to order a list of `StarInfo` objects.</span></span> <span data-ttu-id="ccb84-333">Каждый `StarInfo` объект предоставляет сведения о имени звезды и расстояния от Земли в милях.</span><span class="sxs-lookup"><span data-stu-id="ccb84-333">Each `StarInfo` object provides information about a star's name and its distance from the Earth in miles.</span></span> <span data-ttu-id="ccb84-334">`StarInfo` реализует <xref:System.IComparable%601> интерфейс, позволяющий `StarInfo` объектов следует отсортировать с универсальных классов коллекций.</span><span class="sxs-lookup"><span data-stu-id="ccb84-334">`StarInfo` implements the <xref:System.IComparable%601> interface, which enables `StarInfo` objects to be sorted by generic collection classes.</span></span> <span data-ttu-id="ccb84-335">Его <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> реализации просто создает оболочку для вызова <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-335">Its <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> implementation just wraps a call to <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29>.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example1.vb#1)]  
  
 <span data-ttu-id="ccb84-336">Следующий код создает экземпляр четыре `StarInfo` объектов и сохраняет их в универсальной <xref:System.Collections.Generic.List%601> объекта.</span><span class="sxs-lookup"><span data-stu-id="ccb84-336">The following code then instantiates four `StarInfo` objects and stores them in a generic <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="ccb84-337">После <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType> вызывается метод, `StarInfo` объекты отображаются в порядке расстоянию от Земли.</span><span class="sxs-lookup"><span data-stu-id="ccb84-337">After the <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType> method is called, `StarInfo` objects are displayed in order of their distance from the Earth.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="bigInteger.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ccb84-338">Объект для сравнения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-338">The object to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-339">Сравнивает данный экземпляр с указанным объектом и возвращает целое число, которое показывает, является ли значение данного экземпляра меньше, больше или равно значению заданного объекта.</span><span class="sxs-lookup"><span data-stu-id="ccb84-339">Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</span></span></summary>
        <returns><span data-ttu-id="ccb84-340">Знаковое целое число, определяющее, как соотносятся между собой текущий экземпляр и параметр <paramref name="obj" />. Возможные соотношения показаны в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="ccb84-340">A signed integer that indicates the relationship of the current instance to the <paramref name="obj" /> parameter, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="ccb84-341">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="ccb84-341">Return value</span></span> 
 </term><description> <span data-ttu-id="ccb84-342">Описание</span><span class="sxs-lookup"><span data-stu-id="ccb84-342">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="ccb84-343">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="ccb84-343">Less than zero</span></span> 
 </term><description> <span data-ttu-id="ccb84-344">Текущий экземпляр меньше значения параметра <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-344">The current instance is less than <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ccb84-345">Нуль</span><span class="sxs-lookup"><span data-stu-id="ccb84-345">Zero</span></span> 
 </term><description> <span data-ttu-id="ccb84-346">Текущий экземпляр равен значению параметра <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-346">The current instance equals <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ccb84-347">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="ccb84-347">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="ccb84-348">Текущий экземпляр больше значения параметра <paramref name="obj" /> или параметр <paramref name="obj" /> равен <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-348">The current instance is greater than <paramref name="obj" />, or the <paramref name="obj" /> parameter is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-349">Эта перегрузка <xref:System.Numerics.BigInteger.CompareTo%2A> реализует метод <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-349">This overload of the <xref:System.Numerics.BigInteger.CompareTo%2A> method implements the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ccb84-350">Используется неуниверсальную коллекцию объектов для упорядочения элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="ccb84-350">It is used by non-generic collection objects to order the items in the collection.</span></span>  
  
 <span data-ttu-id="ccb84-351">`obj` Параметр должен иметь одно из следующих:</span><span class="sxs-lookup"><span data-stu-id="ccb84-351">The `obj` parameter must be one of the following:</span></span>  
  
-   <span data-ttu-id="ccb84-352">Объект, тип которого во время выполнения равно <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-352">An object whose run-time type is <xref:System.Numerics.BigInteger>.</span></span>  
  
-   <span data-ttu-id="ccb84-353"><xref:System.Object> Переменной, значение которого равно `null`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-353">An <xref:System.Object> variable whose value is `null`.</span></span> <span data-ttu-id="ccb84-354">Если значение `obj` параметр `null`, метод возвращает 1, означающее, что текущий экземпляр больше, чем `obj`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-354">If the value of the `obj` parameter is `null`, the method returns 1, which indicates that the current instance is greater than `obj`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-355">В следующем примере вызывается <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> метод для сравнения <xref:System.Numerics.BigInteger> значение с каждым элементом в массиве объектов</span><span class="sxs-lookup"><span data-stu-id="ccb84-355">The following example calls the <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> method to compare a <xref:System.Numerics.BigInteger> value with each element in an object array</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example2.cs#4)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ccb84-356"><paramref name="obj" /> не является объектом <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-356"><paramref name="obj" /> is not a <see cref="T:System.Numerics.BigInteger" />.</span></span></exception>
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (ulong other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(unsigned int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::UInt64 other);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : uint64 -&gt; int" Usage="bigInteger.CompareTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="ccb84-357">64-разрядное целое число без знака для сравнения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-357">The unsigned 64-bit integer to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-358">Сравнивает данный экземпляр с 64-разрядным целым числом без знака и возвращает целое число, которое показывает, является ли значение данного экземпляра меньшим или большим по сравнению со значением 64-битового целого числа без знака или равным ему.</span><span class="sxs-lookup"><span data-stu-id="ccb84-358">Compares this instance to an unsigned 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the unsigned 64-bit integer.</span></span></summary>
        <returns><span data-ttu-id="ccb84-359">Целое число со знаком, определяющее, как соотносятся между собой данный экземпляр и объект <paramref name="other" />. Возможные соотношения показаны в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="ccb84-359">A signed integer that indicates the relative value of this instance and <paramref name="other" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="ccb84-360">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="ccb84-360">Return value</span></span> 
 </term><description> <span data-ttu-id="ccb84-361">Описание</span><span class="sxs-lookup"><span data-stu-id="ccb84-361">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="ccb84-362">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="ccb84-362">Less than zero</span></span> 
 </term><description> <span data-ttu-id="ccb84-363">Текущий экземпляр меньше значения параметра <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-363">The current instance is less than <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ccb84-364">Нуль</span><span class="sxs-lookup"><span data-stu-id="ccb84-364">Zero</span></span> 
 </term><description> <span data-ttu-id="ccb84-365">Текущий экземпляр равен значению параметра <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-365">The current instance equals <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ccb84-366">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="ccb84-366">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="ccb84-367">Текущий экземпляр больше значения параметра <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-367">The current instance is greater than <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Divide (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Divide(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Divide(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member Divide : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Divide (dividend, divisor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="ccb84-368">Значение, которое необходимо разделить.</span><span class="sxs-lookup"><span data-stu-id="ccb84-368">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="ccb84-369">Значение, на которое необходимо разделить.</span><span class="sxs-lookup"><span data-stu-id="ccb84-369">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="ccb84-370">Делит одно значение <see cref="T:System.Numerics.BigInteger" /> на другое и возвращает результат.</span><span class="sxs-lookup"><span data-stu-id="ccb84-370">Divides one <see cref="T:System.Numerics.BigInteger" /> value by another and returns the result.</span></span></summary>
        <returns><span data-ttu-id="ccb84-371">Частное от деления.</span><span class="sxs-lookup"><span data-stu-id="ccb84-371">The quotient of the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-372"><xref:System.Numerics.BigInteger.Divide%2A> Метод выполняет целочисленное деление; любой остаток от деления отбрасывается.</span><span class="sxs-lookup"><span data-stu-id="ccb84-372">The <xref:System.Numerics.BigInteger.Divide%2A> method performs integer division; any remainder that results from the division is discarded.</span></span> <span data-ttu-id="ccb84-373">Чтобы выполнить целочисленное деление, сохраняя остаток, вызовите <xref:System.Numerics.BigInteger.DivRem%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-373">To perform integer division while preserving the remainder, call the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span> <span data-ttu-id="ccb84-374">Чтобы получить только остаток, вызовите <xref:System.Numerics.BigInteger.Remainder%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-374">To retrieve only the remainder, call the <xref:System.Numerics.BigInteger.Remainder%2A> method.</span></span>  
  
 <span data-ttu-id="ccb84-375"><xref:System.Numerics.BigInteger.Divide%2A> Метод может использоваться в языках программирования, не поддерживающих перегрузку операторов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-375">The <xref:System.Numerics.BigInteger.Divide%2A> method can be used by languages that do not support operator overloading.</span></span> <span data-ttu-id="ccb84-376">Его поведение идентично поведению деления, используя оператор деления.</span><span class="sxs-lookup"><span data-stu-id="ccb84-376">Its behavior is identical to division using the division operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-377">В следующем примере создается массив <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-377">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-378">Затем он использует каждый элемент как частное в операции деления, которая использует <xref:System.Numerics.BigInteger.Divide%2A> метод, оператор деления (/) и <xref:System.Numerics.BigInteger.DivRem%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-378">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="ccb84-379">Значение параметра <paramref name="divisor" /> равно нулю (0).</span><span class="sxs-lookup"><span data-stu-id="ccb84-379"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
        <altmember cref="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger DivRem (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor, out System.Numerics.BigInteger remainder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger DivRem(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor, [out] valuetype System.Numerics.BigInteger&amp; remainder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (dividend As BigInteger, divisor As BigInteger, ByRef remainder As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger DivRem(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor, [Runtime::InteropServices::Out] System::Numerics::BigInteger % remainder);" />
      <MemberSignature Language="F#" Value="static member DivRem : System.Numerics.BigInteger * System.Numerics.BigInteger *  -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.DivRem (dividend, divisor, remainder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
        <Parameter Name="remainder" Type="System.Numerics.BigInteger" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="ccb84-380">Значение, которое необходимо разделить.</span><span class="sxs-lookup"><span data-stu-id="ccb84-380">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="ccb84-381">Значение, на которое необходимо разделить.</span><span class="sxs-lookup"><span data-stu-id="ccb84-381">The value to divide by.</span></span></param>
        <param name="remainder"><span data-ttu-id="ccb84-382">После выполнения данного метода содержит значение <see cref="T:System.Numerics.BigInteger" />, представляющее остаток от деления.</span><span class="sxs-lookup"><span data-stu-id="ccb84-382">When this method returns, contains a <see cref="T:System.Numerics.BigInteger" /> value that represents the remainder from the division.</span></span> <span data-ttu-id="ccb84-383">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="ccb84-383">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="ccb84-384">Делит одно значение <see cref="T:System.Numerics.BigInteger" /> на другое, возвращает результат, а также возвращает остаток в виде параметра вывода.</span><span class="sxs-lookup"><span data-stu-id="ccb84-384">Divides one <see cref="T:System.Numerics.BigInteger" /> value by another, returns the result, and returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="ccb84-385">Частное от деления.</span><span class="sxs-lookup"><span data-stu-id="ccb84-385">The quotient of the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-386">Этот метод сохраняет частное и остаток от деления целое число.</span><span class="sxs-lookup"><span data-stu-id="ccb84-386">This method preserves both the quotient and the remainder that results from integer division.</span></span> <span data-ttu-id="ccb84-387">Если вы не заинтересованы в остаток, используйте <xref:System.Numerics.BigInteger.Divide%2A> метода или оператор деления; если только вас интересует остаток, используйте <xref:System.Numerics.BigInteger.Remainder%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-387">If you are not interested in the remainder, use the <xref:System.Numerics.BigInteger.Divide%2A> method or the division operator; if you are only interested in the remainder, use the <xref:System.Numerics.BigInteger.Remainder%2A> method.</span></span>  
  
 <span data-ttu-id="ccb84-388">Возвращаемый знак `remainder` значение совпадает со значением знак `dividend` параметра.</span><span class="sxs-lookup"><span data-stu-id="ccb84-388">The sign of the returned `remainder` value is the same as the sign of the `dividend` parameter.</span></span>  
  
 <span data-ttu-id="ccb84-389">Поведение <xref:System.Numerics.BigInteger.DivRem%2A> метод идентична <xref:System.Math.DivRem%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-389">The behavior of the <xref:System.Numerics.BigInteger.DivRem%2A> method is identical to that of the <xref:System.Math.DivRem%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-390">В следующем примере создается массив <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-390">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-391">Затем он использует каждый элемент как частное в операции деления, которая использует <xref:System.Numerics.BigInteger.Divide%2A> метод, оператор деления (/) и <xref:System.Numerics.BigInteger.DivRem%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-391">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="ccb84-392">Значение параметра <paramref name="divisor" /> равно нулю (0).</span><span class="sxs-lookup"><span data-stu-id="ccb84-392"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb84-393">Возвращает значение, определяющее, равны ли два числовых значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-393">Returns a value that indicates whether two numeric values are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (long other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(long other);" />
      <MemberSignature Language="F#" Value="override this.Equals : int64 -&gt; bool" Usage="bigInteger.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="ccb84-394">64-разрядное целое число со знаком для сравнения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-394">The signed 64-bit integer value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-395">Возвращает значение, определяющее, равны ли текущий экземпляр и 64-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="ccb84-395">Returns a value that indicates whether the current instance and a signed 64-bit integer have the same value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-396">Значение <see langword="true" />, если 64-разрядное целое число со знаком и текущий экземпляр равны; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-396"><see langword="true" /> if the signed 64-bit integer and the current instance have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-397">Если `other` — <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, или <xref:System.UInt32> , он неявно преобразуется в значение <xref:System.Int64> значение при вызове метода.</span><span class="sxs-lookup"><span data-stu-id="ccb84-397">If `other` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the method is called.</span></span>  
  
 <span data-ttu-id="ccb84-398">Чтобы определить связь между двумя объектами, вместо простой проверки на предмет равенства, вызовите <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-398">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-399">В следующем примере создается <xref:System.Numerics.BigInteger> объекта из каждого целого типа, за исключением <xref:System.UInt64>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-399">The following example instantiates a <xref:System.Numerics.BigInteger> object from each integral type except <xref:System.UInt64>.</span></span> <span data-ttu-id="ccb84-400">Затем он вызывает <xref:System.Numerics.BigInteger.Equals%28System.Int64%29> метод для сравнения <xref:System.Numerics.BigInteger> значение исходное значение целое число, которое было передано <xref:System.Numerics.BigInteger> конструктор.</span><span class="sxs-lookup"><span data-stu-id="ccb84-400">It then calls the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29> method to compare the <xref:System.Numerics.BigInteger> value with the original integer value that was passed to the <xref:System.Numerics.BigInteger> constructor.</span></span> <span data-ttu-id="ccb84-401">Как показывает вывод, значения равны, в каждом конкретном случае.</span><span class="sxs-lookup"><span data-stu-id="ccb84-401">As the output shows, the values are equal in each case.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals.cpp#1)]
 [!code-csharp[System.Numerics.BigInteger.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Numerics.BigInteger other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Numerics.BigInteger other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Numerics::BigInteger other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Numerics.BigInteger -&gt; bool" Usage="bigInteger.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="ccb84-402">Объект для сравнения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-402">The object to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-403">Возвращает значение, определяющее равны ли текущий экземпляр и указанный объект <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-403">Returns a value that indicates whether the current instance and a specified <see cref="T:System.Numerics.BigInteger" /> object have the same value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-404">Значение <see langword="true" />, если значения данного объекта <see cref="T:System.Numerics.BigInteger" /> и объекта <paramref name="other" /> совпадают; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-404"><see langword="true" /> if this <see cref="T:System.Numerics.BigInteger" /> object and <paramref name="other" /> have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-405">Этот метод реализует <xref:System.IEquatable%601> интерфейс, а также выполняет немного лучше, чем <xref:System.Numerics.BigInteger.Equals%28System.Object%29> так, как его не требуется преобразовать `other` параметр <xref:System.Numerics.BigInteger> объекта.</span><span class="sxs-lookup"><span data-stu-id="ccb84-405">This method implements the <xref:System.IEquatable%601> interface and performs slightly better than <xref:System.Numerics.BigInteger.Equals%28System.Object%29> because it does not have to convert the `other` parameter to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="ccb84-406">Чтобы определить отношения между ними <xref:System.Numerics.BigInteger> объекты вместо простой проверки на равенство, вызывать <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-406">To determine the relationship between the two <xref:System.Numerics.BigInteger> objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-407">В следующем примере сравниваются приблизительное расстояние от нескольких звезд сравнивается с расстоянием Эпсилон араметр от земли, чтобы определить, равны ли они.</span><span class="sxs-lookup"><span data-stu-id="ccb84-407">The following example compares the approximate distance of several stars from Earth with the distance of Epsilon Indi from Earth to determine whether they are equal.</span></span> <span data-ttu-id="ccb84-408">В примере используется каждая перегрузка <xref:System.Numerics.BigInteger.Equals%2A> метод для проверки на равенство.</span><span class="sxs-lookup"><span data-stu-id="ccb84-408">The example uses each overload of the <xref:System.Numerics.BigInteger.Equals%2A> method to test for equality.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals2.cpp#2)]
 [!code-csharp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="bigInteger.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ccb84-409">Объект для сравнения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-409">The object to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-410">Возвращает значение, определяющее, равны ли текущий экземпляр и указанный объект.</span><span class="sxs-lookup"><span data-stu-id="ccb84-410">Returns a value that indicates whether the current instance and a specified object have the same value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-411">Значение <see langword="true" />, если аргумент <paramref name="obj" /> — это объект <see cref="T:System.Numerics.BigInteger" />, и его значение равно значению текущего экземпляра <see cref="T:System.Numerics.BigInteger" />. В противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-411"><see langword="true" /> if the <paramref name="obj" /> argument is a <see cref="T:System.Numerics.BigInteger" /> object, and its value is equal to the value of the current <see cref="T:System.Numerics.BigInteger" /> instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-412">Если `obj` аргумент не является <xref:System.Numerics.BigInteger> значение, метод возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-412">If the `obj` argument is not a <xref:System.Numerics.BigInteger> value, the method returns `false`.</span></span> <span data-ttu-id="ccb84-413">Этот метод возвращает `true` только если `obj` является <xref:System.Numerics.BigInteger> экземпляра, значение которого равен текущему экземпляру.</span><span class="sxs-lookup"><span data-stu-id="ccb84-413">The method returns `true` only if `obj` is a <xref:System.Numerics.BigInteger> instance whose value is equal to the current instance.</span></span>  
  
 <span data-ttu-id="ccb84-414">Чтобы определить связь между двумя объектами, вместо простой проверки на предмет равенства, вызовите <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-414">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-415">В следующем примере определяется параллельной <xref:System.Object> и <xref:System.Numerics.BigInteger> массивов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-415">The following example defines parallel <xref:System.Object> and <xref:System.Numerics.BigInteger> arrays.</span></span> <span data-ttu-id="ccb84-416">Каждый элемент массива имеет то же значение, что и соответствующий элемент второго массива.</span><span class="sxs-lookup"><span data-stu-id="ccb84-416">Each element of one array has the same value as the corresponding element of the second array.</span></span> <span data-ttu-id="ccb84-417">Как видно в результатах показано в примере, экземпляр в <xref:System.Numerics.BigInteger> массива считается равным экземпляру в <xref:System.Object> массив только в том случае, если последнее <xref:System.Numerics.BigInteger> и равны значения их.</span><span class="sxs-lookup"><span data-stu-id="ccb84-417">As the output from the example shows, the instance in the <xref:System.Numerics.BigInteger> array is considered to be equal to the instance in the <xref:System.Object> array only if the latter is a <xref:System.Numerics.BigInteger> and their values are equal.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/Equals_Obj1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/Equals_Obj1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ulong other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(unsigned int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::UInt64 other);" />
      <MemberSignature Language="F#" Value="override this.Equals : uint64 -&gt; bool" Usage="bigInteger.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="ccb84-418">64-разрядное целое число без знака для сравнения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-418">The unsigned 64-bit integer to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-419">Возвращает значение, определяющее, равны ли текущий экземпляр и 64-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-419">Returns a value that indicates whether the current instance and an unsigned 64-bit integer have the same value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-420">Значение <see langword="true" />, если текущий экземпляр и 64-разрядное целое число без знака равны; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-420"><see langword="true" /> if the current instance and the unsigned 64-bit integer have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-421">Чтобы определить связь между двумя объектами, вместо простой проверки на предмет равенства, вызовите <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-421">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-422">В следующем примере сравниваются приблизительное расстояние от нескольких звезд сравнивается с расстоянием Эпсилон араметр от земли, чтобы определить, равны ли они.</span><span class="sxs-lookup"><span data-stu-id="ccb84-422">The following example compares the approximate distance of several stars from Earth with the distance of Epsilon Indi from Earth to determine whether they are equal.</span></span> <span data-ttu-id="ccb84-423">В примере используется каждая перегрузка <xref:System.Numerics.BigInteger.Equals%2A> метод для проверки на равенство.</span><span class="sxs-lookup"><span data-stu-id="ccb84-423">The example uses each overload of the <xref:System.Numerics.BigInteger.Equals%2A> method to test for equality.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals2.cpp#2)]
 [!code-csharp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public int GetByteCount (bool isUnsigned = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetByteCount(bool isUnsigned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GetByteCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteCount (Optional isUnsigned As Boolean = false) As Integer" />
      <MemberSignature Language="F#" Value="member this.GetByteCount : bool -&gt; int" Usage="bigInteger.GetByteCount isUnsigned" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isUnsigned" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isUnsigned">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="bigInteger.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ccb84-424">Возвращает хэш-код для текущего объекта <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-424">Returns the hash code for the current <see cref="T:System.Numerics.BigInteger" /> object.</span></span></summary>
        <returns><span data-ttu-id="ccb84-425">Хэш-код в виде 32-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="ccb84-425">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreatestCommonDivisor">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger GreatestCommonDivisor (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger GreatestCommonDivisor(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreatestCommonDivisor (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger GreatestCommonDivisor(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member GreatestCommonDivisor : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.GreatestCommonDivisor (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-426">Первое значение в вычитании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-426">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-427">Второе значение в вычитании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-427">The second value.</span></span></param>
        <summary><span data-ttu-id="ccb84-428">Находит наибольший общий делитель двух значений <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-428">Finds the greatest common divisor of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="ccb84-429">Наибольший общий делитель значений <paramref name="left" /> и <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-429">The greatest common divisor of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-430">Наибольший общий делитель — наибольшее число, в котором два <xref:System.Numerics.BigInteger> значений можно разделить без остатка.</span><span class="sxs-lookup"><span data-stu-id="ccb84-430">The greatest common divisor is the largest number into which the two <xref:System.Numerics.BigInteger> values can be divided without returning a remainder.</span></span>  
  
 <span data-ttu-id="ccb84-431">Если `left` и `right` параметры являются числами ненулевое значение, метод всегда возвращает по крайней мере значение 1, так как все числа, которые могут быть разделены на 1.</span><span class="sxs-lookup"><span data-stu-id="ccb84-431">If the `left` and `right` parameters are non-zero numbers, the method always returns at least a value of 1 because all numbers can be divided by 1.</span></span> <span data-ttu-id="ccb84-432">Если один из параметров равно нулю, метод возвращает абсолютное значение параметра ненулевое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-432">If either parameter is zero, the method returns the absolute value of the non-zero parameter.</span></span> <span data-ttu-id="ccb84-433">Если оба значения равны нулю, метод возвращает 0.</span><span class="sxs-lookup"><span data-stu-id="ccb84-433">If both values are zero, the method returns zero.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ccb84-434">Наибольший общий делитель значений очень больших вычислений `left` и `right` может быть очень длительной операцией.</span><span class="sxs-lookup"><span data-stu-id="ccb84-434">Computing the greatest common divisor of very large values of `left` and `right` can be a very time-consuming operation.</span></span>  
  
 <span data-ttu-id="ccb84-435">Значение, возвращенное <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> метод всегда является положительным, независимо от того, знак `left` и `right` параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-435">The value returned by the <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> method is always positive regardless of the sign of the `left` and `right` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-436">В следующем примере показан вызов <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> метод обработке ошибок и исключений необходимо предоставить полезную информацию о <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-436">The following example illustrates a call to the <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> method and the exception handling necessary to provide useful information about an <xref:System.ArgumentOutOfRangeException>.</span></span> <span data-ttu-id="ccb84-437">Результат показывает, что наибольший общий делитель этих двух чисел равно 1.</span><span class="sxs-lookup"><span data-stu-id="ccb84-437">The result indicates that the greatest common divisor of these two numbers is 1.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#10)]
 [!code-vb[System.Numeric.BigInteger.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEven">
      <MemberSignature Language="C#" Value="public bool IsEven { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEven" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsEven" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEven As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEven { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEven : bool" Usage="System.Numerics.BigInteger.IsEven" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ccb84-438">Указывает, равно ли значение текущего объекта <see cref="T:System.Numerics.BigInteger" /> четному числу.</span><span class="sxs-lookup"><span data-stu-id="ccb84-438">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is an even number.</span></span></summary>
        <value><span data-ttu-id="ccb84-439">Значение <see langword="true" />, если значение объекта <see cref="T:System.Numerics.BigInteger" /> равно четному числу; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-439"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is an even number; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-440">Это свойство — это удобное средство, которое указывает, является ли <xref:System.Numerics.BigInteger> значение делится на два.</span><span class="sxs-lookup"><span data-stu-id="ccb84-440">This property is a convenience feature that indicates whether a <xref:System.Numerics.BigInteger> value is evenly divisible by two.</span></span> <span data-ttu-id="ccb84-441">Это эквивалентно следующее выражение:</span><span class="sxs-lookup"><span data-stu-id="ccb84-441">It is equivalent to the following expression:</span></span>  
  
```csharp   
value % 2 == 0;  
```  
  
```vb  
value Mod 2 = 0  
```  
  
 <span data-ttu-id="ccb84-442">Если значение текущего <xref:System.Numerics.BigInteger> объект <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>, это свойство возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-442">If the value of the current <xref:System.Numerics.BigInteger> object is <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>, the property returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOne">
      <MemberSignature Language="C#" Value="public bool IsOne { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOne" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsOne" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOne As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOne { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOne : bool" Usage="System.Numerics.BigInteger.IsOne" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ccb84-443">Указывает, равно ли значение текущего объекта <see cref="T:System.Numerics.BigInteger" /> значению <see cref="P:System.Numerics.BigInteger.One" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-443">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.One" />.</span></span></summary>
        <value><span data-ttu-id="ccb84-444">Значение <see langword="true" />, если объект <see cref="T:System.Numerics.BigInteger" /> имеет значение <see cref="P:System.Numerics.BigInteger.One" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-444"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.One" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-445">Это свойство обеспечивает лучшую производительность, чем другие сравнения вместе с одной, такие как `thisBigInteger.Equals(BigInteger.One)`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-445">This property offers significantly better performance than other comparisons with one, such as `thisBigInteger.Equals(BigInteger.One)`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.One" />
      </Docs>
    </Member>
    <Member MemberName="IsPowerOfTwo">
      <MemberSignature Language="C#" Value="public bool IsPowerOfTwo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPowerOfTwo" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsPowerOfTwo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPowerOfTwo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPowerOfTwo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPowerOfTwo : bool" Usage="System.Numerics.BigInteger.IsPowerOfTwo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ccb84-446">Указывает, равно ли значение текущего объекта <see cref="T:System.Numerics.BigInteger" /> степени двух.</span><span class="sxs-lookup"><span data-stu-id="ccb84-446">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is a power of two.</span></span></summary>
        <value><span data-ttu-id="ccb84-447">Значение <see langword="true" />, если значение объекта <see cref="T:System.Numerics.BigInteger" /> равно степени двух; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-447"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is a power of two; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-448">Данное свойство определяет, является ли <xref:System.Numerics.BigInteger> значение имеет один бит ненулевое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-448">This property determines whether a <xref:System.Numerics.BigInteger> value has a single non-zero bit set.</span></span> <span data-ttu-id="ccb84-449">Это означает, что он возвращает `true` Если значение текущего <xref:System.Numerics.BigInteger> объект-1 (то есть 2<sup>0</sup>) или любой большей степени двух.</span><span class="sxs-lookup"><span data-stu-id="ccb84-449">This means that it returns `true` if the value of the current <xref:System.Numerics.BigInteger> object is 1 (that is, 2<sup>0</sup>) or any greater power of two.</span></span> <span data-ttu-id="ccb84-450">Он возвращает `false` Если значение текущего <xref:System.Numerics.BigInteger> объекта равно 0.</span><span class="sxs-lookup"><span data-stu-id="ccb84-450">It returns `false` if the value of the current <xref:System.Numerics.BigInteger> object is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsZero">
      <MemberSignature Language="C#" Value="public bool IsZero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsZero" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsZero" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsZero As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsZero { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsZero : bool" Usage="System.Numerics.BigInteger.IsZero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ccb84-451">Указывает, равно ли значение текущего объекта <see cref="T:System.Numerics.BigInteger" /> значению <see cref="P:System.Numerics.BigInteger.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-451">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.Zero" />.</span></span></summary>
        <value><span data-ttu-id="ccb84-452">Значение <see langword="true" />, если объект <see cref="T:System.Numerics.BigInteger" /> имеет значение <see cref="P:System.Numerics.BigInteger.Zero" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-452"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.Zero" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-453">Это свойство обеспечивает лучшую производительность, чем `BigInteger.Equals(BigInteger.Zero)`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-453">This property offers significantly better performance than `BigInteger.Equals(BigInteger.Zero)`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.Zero" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb84-454">Возвращает логарифм указанного числа.</span><span class="sxs-lookup"><span data-stu-id="ccb84-454">Returns the logarithm of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Log : System.Numerics.BigInteger -&gt; double" Usage="System.Numerics.BigInteger.Log value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-455">Число, логарифм которого требуется найти.</span><span class="sxs-lookup"><span data-stu-id="ccb84-455">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="ccb84-456">Возвращает натуральный логарифм (с основанием <see langword="e" />) указанного числа.</span><span class="sxs-lookup"><span data-stu-id="ccb84-456">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="ccb84-457">Натуральный (по основанию <see langword="e" />) логарифм числа <paramref name="value" />, как показано в таблице в разделе примечаний.</span><span class="sxs-lookup"><span data-stu-id="ccb84-457">The natural (base <see langword="e" />) logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-458">`value` Параметр указывается как десятичное число.</span><span class="sxs-lookup"><span data-stu-id="ccb84-458">The `value` parameter is specified as a base 10 number.</span></span>  
  
 <span data-ttu-id="ccb84-459">Точную возвращают значение этого метода зависит от знака `value`, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="ccb84-459">The precise return value of this method depends on the sign of `value`, as the following table shows.</span></span>  
  
|<span data-ttu-id="ccb84-460">Знак `value` параметр</span><span class="sxs-lookup"><span data-stu-id="ccb84-460">Sign of `value` parameter</span></span>|<span data-ttu-id="ccb84-461">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="ccb84-461">Return value</span></span>|  
|-------------------------------|------------------|  
|<span data-ttu-id="ccb84-462">Положительное число</span><span class="sxs-lookup"><span data-stu-id="ccb84-462">Positive</span></span>|<span data-ttu-id="ccb84-463">Натуральный логарифм `value`; то есть, ln `value`, или log`value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-463">The natural logarithm of `value`; that is, ln `value`, or log e`value`.</span></span>|  
|<span data-ttu-id="ccb84-464">Нуль</span><span class="sxs-lookup"><span data-stu-id="ccb84-464">Zero</span></span>|<span data-ttu-id="ccb84-465"><xref:System.Double.NegativeInfinity>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-465"><xref:System.Double.NegativeInfinity>.</span></span>|  
|<span data-ttu-id="ccb84-466">Отрицательное число</span><span class="sxs-lookup"><span data-stu-id="ccb84-466">Negative</span></span>|<span data-ttu-id="ccb84-467"><xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-467"><xref:System.Double.NaN>.</span></span>|  
  
 <span data-ttu-id="ccb84-468">Для вычисления логарифм по основанию 10 числа <xref:System.Numerics.BigInteger> значения, вызовите <xref:System.Numerics.BigInteger.Log10%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-468">To calculate the base 10 logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log10%2A> method.</span></span> <span data-ttu-id="ccb84-469">Чтобы вычислить логарифм числа в другой системе счисления, вызовите <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-469">To calculate the logarithm of a number in another base, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29> method.</span></span>  
  
 <span data-ttu-id="ccb84-470">Квадратный корень числа можно найти, вызвав <xref:System.Numerics.BigInteger.Log%2A> метод вместе с <xref:System.Math.Exp%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-470">You can find the square root of a number by calling the <xref:System.Numerics.BigInteger.Log%2A> method along with the <xref:System.Math.Exp%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ccb84-471">Обратите внимание, что в результате <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> Если результат больше, чем <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-471">Note that the result is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> if the result is greater than <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ccb84-472">В следующем примере вычисляется квадратный корень из каждого элемента в массиве <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-472">The following example calculates the square root of each element in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Log#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.biginteger.log/cs/log1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Log#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.biginteger.log/vb/log1.vb#1)]
  
 <span data-ttu-id="ccb84-473">Этот метод соответствует <xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType> метод для числовых типов-примитивов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-473">This method corresponds to the <xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ccb84-474">Натуральный логарифм <paramref name="value" /> находится вне диапазона типа данных <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-474">The natural log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (System.Numerics.BigInteger value, double baseValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(valuetype System.Numerics.BigInteger value, float64 baseValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (value As BigInteger, baseValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(System::Numerics::BigInteger value, double baseValue);" />
      <MemberSignature Language="F#" Value="static member Log : System.Numerics.BigInteger * double -&gt; double" Usage="System.Numerics.BigInteger.Log (value, baseValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="baseValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-475">Число, логарифм которого должен быть найден.</span><span class="sxs-lookup"><span data-stu-id="ccb84-475">A number whose logarithm is to be found.</span></span></param>
        <param name="baseValue"><span data-ttu-id="ccb84-476">Основание логарифма.</span><span class="sxs-lookup"><span data-stu-id="ccb84-476">The base of the logarithm.</span></span></param>
        <summary><span data-ttu-id="ccb84-477">Возвращает логарифм указанного числа в системе счисления с указанным основанием.</span><span class="sxs-lookup"><span data-stu-id="ccb84-477">Returns the logarithm of a specified number in a specified base.</span></span></summary>
        <returns><span data-ttu-id="ccb84-478">Логарифм по основанию <paramref name="baseValue" /> числа <paramref name="value" />, как показано в таблице в разделе примечаний.</span><span class="sxs-lookup"><span data-stu-id="ccb84-478">The base <paramref name="baseValue" /> logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-479">`value` И `baseValue` параметры задаются как десятичные основания.</span><span class="sxs-lookup"><span data-stu-id="ccb84-479">The `value` and `baseValue` parameters are specified as base 10 numbers.</span></span>  
  
 <span data-ttu-id="ccb84-480">Точную возвращают значение метода зависит от знака `value` и знака и значение `baseValue`, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="ccb84-480">The precise return value of the method depends on the sign of `value` and on the sign and value of `baseValue`, as the following table shows.</span></span>  
  
|<span data-ttu-id="ccb84-481">Параметр `value`</span><span class="sxs-lookup"><span data-stu-id="ccb84-481">`value` parameter</span></span>|<span data-ttu-id="ccb84-482">Параметр `baseValue`</span><span class="sxs-lookup"><span data-stu-id="ccb84-482">`baseValue` parameter</span></span>|<span data-ttu-id="ccb84-483">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="ccb84-483">Return value</span></span>|  
|-----------------------|---------------------------|------------------|  
|<span data-ttu-id="ccb84-484">`value` > 0</span><span class="sxs-lookup"><span data-stu-id="ccb84-484">`value` > 0</span></span>|<span data-ttu-id="ccb84-485">(0 < `baseValue` < 1) - или -(`baseValue` > 1)</span><span class="sxs-lookup"><span data-stu-id="ccb84-485">(0 < `baseValue` < 1) -or-(`baseValue` > 1)</span></span>|<span data-ttu-id="ccb84-486">logbaseValue (`value`)</span><span class="sxs-lookup"><span data-stu-id="ccb84-486">logbaseValue(`value`)</span></span>|  
|<span data-ttu-id="ccb84-487">`value` < 0</span><span class="sxs-lookup"><span data-stu-id="ccb84-487">`value` < 0</span></span>|<span data-ttu-id="ccb84-488">(любое значение)</span><span class="sxs-lookup"><span data-stu-id="ccb84-488">(any value)</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="ccb84-489">(любое значение)</span><span class="sxs-lookup"><span data-stu-id="ccb84-489">(any value)</span></span>|<span data-ttu-id="ccb84-490">`baseValue` < 0</span><span class="sxs-lookup"><span data-stu-id="ccb84-490">`baseValue` < 0</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="ccb84-491">`value` != 1</span><span class="sxs-lookup"><span data-stu-id="ccb84-491">`value` != 1</span></span>|<span data-ttu-id="ccb84-492">`baseValue` = 0</span><span class="sxs-lookup"><span data-stu-id="ccb84-492">`baseValue` = 0</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="ccb84-493">`value` != 1</span><span class="sxs-lookup"><span data-stu-id="ccb84-493">`value` != 1</span></span>|`baseValue` = <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="ccb84-494">(любое значение)</span><span class="sxs-lookup"><span data-stu-id="ccb84-494">(any value)</span></span>|`baseValue` = <xref:System.Double.NaN?displayProperty=nameWithType>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="ccb84-495">(любое значение)</span><span class="sxs-lookup"><span data-stu-id="ccb84-495">(any value)</span></span>|<span data-ttu-id="ccb84-496">`baseValue` = 1</span><span class="sxs-lookup"><span data-stu-id="ccb84-496">`baseValue` = 1</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="ccb84-497">`value` = 0</span><span class="sxs-lookup"><span data-stu-id="ccb84-497">`value` = 0</span></span>|<span data-ttu-id="ccb84-498">0 < `baseValue` < 1</span><span class="sxs-lookup"><span data-stu-id="ccb84-498">0 < `baseValue` < 1</span></span>|<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|  
|<span data-ttu-id="ccb84-499">`value` = 0</span><span class="sxs-lookup"><span data-stu-id="ccb84-499">`value` = 0</span></span>|<span data-ttu-id="ccb84-500">`baseValue` > 1</span><span class="sxs-lookup"><span data-stu-id="ccb84-500">`baseValue` > 1</span></span>|<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|  
|<span data-ttu-id="ccb84-501">`value` = 1</span><span class="sxs-lookup"><span data-stu-id="ccb84-501">`value` = 1</span></span>|<span data-ttu-id="ccb84-502">`baseValue` = 0</span><span class="sxs-lookup"><span data-stu-id="ccb84-502">`baseValue` = 0</span></span>|<span data-ttu-id="ccb84-503">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-503">0</span></span>|  
|<span data-ttu-id="ccb84-504">`value` = 1</span><span class="sxs-lookup"><span data-stu-id="ccb84-504">`value` = 1</span></span>|`baseValue` = <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|<span data-ttu-id="ccb84-505">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-505">0</span></span>|  
  
 <span data-ttu-id="ccb84-506">Для вычисления логарифм по основанию 10 числа <xref:System.Numerics.BigInteger> значения, вызовите <xref:System.Numerics.BigInteger.Log10%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-506">To calculate the base 10 logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log10%2A> method.</span></span> <span data-ttu-id="ccb84-507">Чтобы вычислить натуральный логарифм числа, вызовите <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-507">To calculate the natural logarithm of a number, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29> method.</span></span>  
  
 <span data-ttu-id="ccb84-508">Этот метод соответствует <xref:System.Math.Log%2A?displayProperty=nameWithType> метод для числовых типов-примитивов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-508">This method corresponds to the <xref:System.Math.Log%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ccb84-509">Логарифм <paramref name="value" /> находится вне диапазона типа данных <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-509">The log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static double Log10 (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log10(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log10(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Log10 : System.Numerics.BigInteger -&gt; double" Usage="System.Numerics.BigInteger.Log10 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-510">Число, логарифм которого должен быть найден.</span><span class="sxs-lookup"><span data-stu-id="ccb84-510">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="ccb84-511">Возвращает логарифм с основанием 10 указанного числа.</span><span class="sxs-lookup"><span data-stu-id="ccb84-511">Returns the base 10 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="ccb84-512">Логарифм по основанию 10 числа <paramref name="value" />, как показано в таблице в разделе примечаний.</span><span class="sxs-lookup"><span data-stu-id="ccb84-512">The base 10 logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-513">`value` Параметр указывается как десятичное число.</span><span class="sxs-lookup"><span data-stu-id="ccb84-513">The `value` parameter is specified as a base 10 number.</span></span>  
  
 <span data-ttu-id="ccb84-514">Точную возвращают значение метода зависит от знака `value`, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="ccb84-514">The precise return value of the method depends on the sign of `value`, as the following table shows.</span></span>  
  
|<span data-ttu-id="ccb84-515">Знак значения параметра</span><span class="sxs-lookup"><span data-stu-id="ccb84-515">Sign of value parameter</span></span>|<span data-ttu-id="ccb84-516">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="ccb84-516">Return value</span></span>|  
|-----------------------------|------------------|  
|<span data-ttu-id="ccb84-517">Положительное число</span><span class="sxs-lookup"><span data-stu-id="ccb84-517">Positive</span></span>|<span data-ttu-id="ccb84-518">Основание 10 логарифма `value`; то есть log10`value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-518">The base 10 log of `value`; that is, log10`value`.</span></span>|  
|<span data-ttu-id="ccb84-519">Нуль</span><span class="sxs-lookup"><span data-stu-id="ccb84-519">Zero</span></span>|<span data-ttu-id="ccb84-520"><xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-520"><xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="ccb84-521">Отрицательное число</span><span class="sxs-lookup"><span data-stu-id="ccb84-521">Negative</span></span>|<span data-ttu-id="ccb84-522"><xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-522"><xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>|  
  
 <span data-ttu-id="ccb84-523">Чтобы вычислить натуральный логарифм <xref:System.Numerics.BigInteger> значения, вызовите <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-523">To calculate the natural logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ccb84-524">Чтобы вычислить логарифм числа в другой системе счисления, вызовите <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-524">To calculate the logarithm of a number in another base, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ccb84-525">Этот метод соответствует <xref:System.Math.Log10%2A?displayProperty=nameWithType> метод для числовых типов-примитивов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-525">This method corresponds to the <xref:System.Math.Log10%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ccb84-526">Десятичный логарифм <paramref name="value" /> находится вне диапазона типа данных <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-526">The base 10 log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Max (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Max(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Max(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Max : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Max (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-527">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-527">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-528">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-528">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-529">Возвращает наибольшее из двух значений <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-529">Returns the larger of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="ccb84-530">Большее из значений параметров <paramref name="left" /> и <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-530">The <paramref name="left" /> or <paramref name="right" /> parameter, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-531">Этот метод соответствует <xref:System.Math.Max%2A?displayProperty=nameWithType> метод для числовых типов-примитивов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-531">This method corresponds to the <xref:System.Math.Max%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-532">В следующем примере используется <xref:System.Numerics.BigInteger.Max%2A> метод, чтобы выбрать наибольшее число в массиве <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-532">The following example uses the <xref:System.Numerics.BigInteger.Max%2A> method to select the largest number in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Max/cs/Max1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Max/vb/Max1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Min (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Min(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Min(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Min : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Min (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-533">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-533">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-534">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-534">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-535">Возвращает наименьшее из двух значений <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-535">Returns the smaller of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="ccb84-536">Меньшее из значений параметров <paramref name="left" /> и <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-536">The <paramref name="left" /> or <paramref name="right" /> parameter, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-537">Этот метод соответствует <xref:System.Math.Min%2A?displayProperty=nameWithType> метод для числовых типов-примитивов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-537">This method corresponds to the <xref:System.Math.Min%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-538">В следующем примере используется <xref:System.Numerics.BigInteger.Min%2A> метод, чтобы выбрать наименьшее число в массиве <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-538">The following example uses the <xref:System.Numerics.BigInteger.Min%2A> method to select the smallest number in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Min/cs/Min1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Min/vb/Min1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="MinusOne">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger MinusOne { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger MinusOne" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.MinusOne" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinusOne As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger MinusOne { System::Numerics::BigInteger get(); };" />
      <MemberSignature Language="F#" Value="member this.MinusOne : System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.MinusOne" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ccb84-539">Получает значение, представляющее минус единицу (-1).</span><span class="sxs-lookup"><span data-stu-id="ccb84-539">Gets a value that represents the number negative one (-1).</span></span></summary>
        <value><span data-ttu-id="ccb84-540">Целое число, равное минус единице (-1).</span><span class="sxs-lookup"><span data-stu-id="ccb84-540">An integer whose value is negative one (-1).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-541"><xref:System.Numerics.BigInteger.MinusOne%2A> Свойство используется для сравнения <xref:System.Numerics.BigInteger> значение-1 или -1, чтобы назначить <xref:System.Numerics.BigInteger> объекта.</span><span class="sxs-lookup"><span data-stu-id="ccb84-541">The <xref:System.Numerics.BigInteger.MinusOne%2A> property is used to compare a <xref:System.Numerics.BigInteger> value to -1 or to assign -1 to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.One" />
        <altmember cref="P:System.Numerics.BigInteger.IsOne" />
      </Docs>
    </Member>
    <Member MemberName="ModPow">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger ModPow (System.Numerics.BigInteger value, System.Numerics.BigInteger exponent, System.Numerics.BigInteger modulus);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger ModPow(valuetype System.Numerics.BigInteger value, valuetype System.Numerics.BigInteger exponent, valuetype System.Numerics.BigInteger modulus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModPow (value As BigInteger, exponent As BigInteger, modulus As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger ModPow(System::Numerics::BigInteger value, System::Numerics::BigInteger exponent, System::Numerics::BigInteger modulus);" />
      <MemberSignature Language="F#" Value="static member ModPow : System.Numerics.BigInteger * System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.ModPow (value, exponent, modulus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="exponent" Type="System.Numerics.BigInteger" />
        <Parameter Name="modulus" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-542">Число, возведенное в степень <paramref name="exponent" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-542">The number to raise to the <paramref name="exponent" /> power.</span></span></param>
        <param name="exponent"><span data-ttu-id="ccb84-543">Показатель степени, в которую будет возведено значение <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-543">The exponent to raise <paramref name="value" /> by.</span></span></param>
        <param name="modulus"><span data-ttu-id="ccb84-544">Число, на которое делится значение <paramref name="value" />, возведенное в степень <paramref name="exponent" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-544">The number by which to divide <paramref name="value" /> raised to the <paramref name="exponent" /> power.</span></span></param>
        <summary><span data-ttu-id="ccb84-545">Выполняет модульное деление числа, возведенного в степень другого числа.</span><span class="sxs-lookup"><span data-stu-id="ccb84-545">Performs modulus division on a number raised to the power of another number.</span></span></summary>
        <returns><span data-ttu-id="ccb84-546">Остаток от деления <paramref name="value" /><sup>exponent</sup> на <paramref name="modulus" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-546">The remainder after dividing <paramref name="value" /><sup>exponent</sup> by <paramref name="modulus" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-547"><xref:System.Numerics.BigInteger.ModPow%2A> Метод оценивает следующее выражение:</span><span class="sxs-lookup"><span data-stu-id="ccb84-547">The <xref:System.Numerics.BigInteger.ModPow%2A> method evaluates the following expression:</span></span>  
  
 <span data-ttu-id="ccb84-548">(базовое значение ^ экспоненты) Mod модуля</span><span class="sxs-lookup"><span data-stu-id="ccb84-548">(baseValue ^ exponent) Mod modulus</span></span>  
  
 <span data-ttu-id="ccb84-549">Для выполнения возведения в степень <xref:System.Numerics.BigInteger> использовать значения без Модульное деление <xref:System.Numerics.BigInteger.Pow%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-549">To perform exponentiation on <xref:System.Numerics.BigInteger> values without modulus division, use the <xref:System.Numerics.BigInteger.Pow%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-550">Следующий пример иллюстрирует это вызова <xref:System.Numerics.BigInteger.ModPow%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-550">The following example provides a simple illustration of calling the <xref:System.Numerics.BigInteger.ModPow%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ModPow#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ModPow/cs/ModPow1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ModPow#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ModPow/vb/ModPow1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="ccb84-551"><paramref name="modulus" /> равен нулю.</span><span class="sxs-lookup"><span data-stu-id="ccb84-551"><paramref name="modulus" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ccb84-552"><paramref name="exponent" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="ccb84-552"><paramref name="exponent" /> is negative.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Multiply (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Multiply(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Multiply(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Multiply (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-553">Первое число для умножения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-553">The first number to multiply.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-554">Второе число для умножения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-554">The second number to multiply.</span></span></param>
        <summary><span data-ttu-id="ccb84-555">Возвращает произведение двух значений <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-555">Returns the product of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="ccb84-556">Произведение параметров <paramref name="left" /> и <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-556">The product of the <paramref name="left" /> and <paramref name="right" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-557"><xref:System.Numerics.BigInteger.Multiply%2A> Метод реализуется для языков, не поддерживающих перегрузку операторов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-557">The <xref:System.Numerics.BigInteger.Multiply%2A> method is implemented for languages that do not support operator overloading.</span></span> <span data-ttu-id="ccb84-558">Его поведение идентично поведению умножения, используя оператор умножения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-558">Its behavior is identical to multiplication using the multiplication operator.</span></span> <span data-ttu-id="ccb84-559">Кроме того <xref:System.Numerics.BigInteger.Multiply%2A> метод является полезным заменой оператор умножения, при создании экземпляра <xref:System.Numerics.BigInteger> переменной, назначив ей продукта, полученный в результате умножения, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-559">In addition, the <xref:System.Numerics.BigInteger.Multiply%2A> method is a useful substitute for the multiplication operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it a product that results from multiplication, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#1)]  
  
 <span data-ttu-id="ccb84-560">При необходимости этот метод автоматически выполняет неявное преобразование для других целочисленных типов <xref:System.Numerics.BigInteger> объектов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-560">If necessary, this method automatically performs implicit conversion of other integral types to <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="ccb84-561">Это показано в примере в следующем разделе, где <xref:System.Numerics.BigInteger.Multiply%2A> методу передается два <xref:System.Int64> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-561">This is illustrated in the example in the next section, where the <xref:System.Numerics.BigInteger.Multiply%2A> method is passed two <xref:System.Int64> values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-562">В следующем примере предпринимается попытка выполнения умножения двух длинных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="ccb84-562">The following example tries to perform multiplication with two long integers.</span></span> <span data-ttu-id="ccb84-563">Так как результат превышает диапазон типа данных long integer, <xref:System.OverflowException> возникает исключение и <xref:System.Numerics.BigInteger.Multiply%2A> метод вызывается для обработки умножения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-563">Because the result exceeds the range of a long integer, an <xref:System.OverflowException> is thrown, and the <xref:System.Numerics.BigInteger.Multiply%2A> method is called to handle the multiplication.</span></span> <span data-ttu-id="ccb84-564">Обратите внимание, что C# необходимо использовать либо `checked` ключевое слово (как в этом примере) или `/checked+` параметр компилятора, чтобы убедиться в том, создается исключение на переполнение числового значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-564">Note that C# requires that you use either the `checked` keyword (as in this example) or the `/checked+` compiler option to make sure an exception is thrown on a numeric overflow.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#7)]
 [!code-vb[System.Numeric.BigInteger.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Negate (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Negate(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Negate(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Negate : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Negate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-565">Инвертируемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-565">The value to negate.</span></span></param>
        <summary><span data-ttu-id="ccb84-566">Меняет знак указанного значения <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-566">Negates a specified <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-567">Результат умножения параметра <paramref name="value" /> на минус единицу (-1).</span><span class="sxs-lookup"><span data-stu-id="ccb84-567">The result of the <paramref name="value" /> parameter multiplied by negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-568">Отрицание получает обратный добавочный номер.</span><span class="sxs-lookup"><span data-stu-id="ccb84-568">Negation obtains the additive inverse of a number.</span></span> <span data-ttu-id="ccb84-569">Аддитивная Инверсия числа — это число, которое выводит значение, равное нулю, если он добавляется в исходный номер.</span><span class="sxs-lookup"><span data-stu-id="ccb84-569">The additive inverse of a number is a number that produces a value of zero when it is added to the original number.</span></span>  
  
 <span data-ttu-id="ccb84-570"><xref:System.Numerics.BigInteger.Negate%2A> Метод реализуется для языков, которые не поддерживают пользовательские операторы.</span><span class="sxs-lookup"><span data-stu-id="ccb84-570">The <xref:System.Numerics.BigInteger.Negate%2A> method is implemented for languages that do not support custom operators.</span></span> <span data-ttu-id="ccb84-571">Его поведение идентично поведению отрицания, с помощью оператора унарного отрицания.</span><span class="sxs-lookup"><span data-stu-id="ccb84-571">Its behavior is identical to negation using the unary negation operator.</span></span> <span data-ttu-id="ccb84-572">Кроме того <xref:System.Numerics.BigInteger.Negate%2A> метод является полезным заменой оператор отрицания при создании экземпляра <xref:System.Numerics.BigInteger> переменной, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-572">In addition, the <xref:System.Numerics.BigInteger.Negate%2A> method is a useful substitute for the negation operator when instantiating a <xref:System.Numerics.BigInteger> variable, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-573">В следующем примере показано три способа Инвертируемое значение <xref:System.Numerics.BigInteger> объекта.</span><span class="sxs-lookup"><span data-stu-id="ccb84-573">The following example illustrates three ways to negate the value of a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#16)]
 [!code-vb[System.Numeric.BigInteger.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger One { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger One" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.One" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property One As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger One { System::Numerics::BigInteger get(); };" />
      <MemberSignature Language="F#" Value="member this.One : System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.One" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ccb84-574">Получает значение, представляющее единицу (1).</span><span class="sxs-lookup"><span data-stu-id="ccb84-574">Gets a value that represents the number one (1).</span></span></summary>
        <value><span data-ttu-id="ccb84-575">Целое число, равное единице (1).</span><span class="sxs-lookup"><span data-stu-id="ccb84-575">An object whose value is one (1).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-576"><xref:System.Numerics.BigInteger.One%2A> Свойство обычно используется для сравнения <xref:System.Numerics.BigInteger> значение 1 или 1, чтобы назначить <xref:System.Numerics.BigInteger> объекта.</span><span class="sxs-lookup"><span data-stu-id="ccb84-576">The <xref:System.Numerics.BigInteger.One%2A> property is usually used to compare a <xref:System.Numerics.BigInteger> value to 1 or to assign 1 to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.IsOne" />
        <altmember cref="P:System.Numerics.BigInteger.MinusOne" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator + (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Addition(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator +(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left + right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-577">Первое из складываемых значений.</span><span class="sxs-lookup"><span data-stu-id="ccb84-577">The first value to add.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-578">Второе из складываемых значений.</span><span class="sxs-lookup"><span data-stu-id="ccb84-578">The second value to add.</span></span></param>
        <summary><span data-ttu-id="ccb84-579">Складывает значения двух указанных объектов <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-579">Adds the values of two specified <see cref="T:System.Numerics.BigInteger" /> objects.</span></span></summary>
        <returns><span data-ttu-id="ccb84-580">Сумма <paramref name="left" /> и <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-580">The sum of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-581"><xref:System.Numerics.BigInteger.op_Addition%2A> Метод определяет операцию сложения для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-581">The <xref:System.Numerics.BigInteger.op_Addition%2A> method defines the addition operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-582">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-582">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#12)]
 [!code-vb[System.Numeric.BigInteger.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#12)]  
  
 <span data-ttu-id="ccb84-583">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.Add%2A> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-583">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Add%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &amp; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_BitwiseAnd(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator And (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &amp;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &amp;&amp;&amp; ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left &amp;&amp;&amp; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-584">Первое значение в вычитании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-584">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-585">Второе значение в вычитании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-585">The second value.</span></span></param>
        <summary><span data-ttu-id="ccb84-586">Выполняет битовую операцию <see langword="And" /> для двух значений <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-586">Performs a bitwise <see langword="And" /> operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="ccb84-587">Результат битовой операции <see langword="And" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-587">The result of the bitwise <see langword="And" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-588"><xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> Метод определяет побитовое `And` операции для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-588">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method defines the bitwise `And` operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-589">Побитовое `And` операция задает результирующий бит только тогда, когда соответствующие биты `left` и `right` также задаются, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="ccb84-589">The bitwise `And` operation sets a result bit only if the corresponding bits in `left` and `right` are also set, as shown in the following table.</span></span>  
  
|<span data-ttu-id="ccb84-590">Бит в `left`</span><span class="sxs-lookup"><span data-stu-id="ccb84-590">Bit in `left`</span></span>|<span data-ttu-id="ccb84-591">Бит в `right`</span><span class="sxs-lookup"><span data-stu-id="ccb84-591">Bit in `right`</span></span>|<span data-ttu-id="ccb84-592">Бит в результате</span><span class="sxs-lookup"><span data-stu-id="ccb84-592">Bit in result</span></span>|  
|-------------------|--------------------|-------------------|  
|<span data-ttu-id="ccb84-593">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-593">0</span></span>|<span data-ttu-id="ccb84-594">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-594">0</span></span>|<span data-ttu-id="ccb84-595">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-595">0</span></span>|  
|<span data-ttu-id="ccb84-596">1</span><span class="sxs-lookup"><span data-stu-id="ccb84-596">1</span></span>|<span data-ttu-id="ccb84-597">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-597">0</span></span>|<span data-ttu-id="ccb84-598">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-598">0</span></span>|  
|<span data-ttu-id="ccb84-599">1</span><span class="sxs-lookup"><span data-stu-id="ccb84-599">1</span></span>|<span data-ttu-id="ccb84-600">1</span><span class="sxs-lookup"><span data-stu-id="ccb84-600">1</span></span>|<span data-ttu-id="ccb84-601">1</span><span class="sxs-lookup"><span data-stu-id="ccb84-601">1</span></span>|  
|<span data-ttu-id="ccb84-602">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-602">0</span></span>|<span data-ttu-id="ccb84-603">1</span><span class="sxs-lookup"><span data-stu-id="ccb84-603">1</span></span>|<span data-ttu-id="ccb84-604">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-604">0</span></span>|  
  
 <span data-ttu-id="ccb84-605"><xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> Метод включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-605">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#1)]  
  
 <span data-ttu-id="ccb84-606"><xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> Метод выполняет побитовое `And` операции над двумя <xref:System.Numerics.BigInteger> значения, как если бы они были в двух дополнением представление с расширением виртуального входа.</span><span class="sxs-lookup"><span data-stu-id="ccb84-606">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method performs the bitwise `And` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator | (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_BitwiseOr(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Or (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator |(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( ||| ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left ||| right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-607">Первое значение в вычитании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-607">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-608">Второе значение в вычитании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-608">The second value.</span></span></param>
        <summary><span data-ttu-id="ccb84-609">Выполняет битовую операцию <see langword="Or" /> для двух значений <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-609">Performs a bitwise <see langword="Or" /> operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="ccb84-610">Результат битовой операции <see langword="Or" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-610">The result of the bitwise <see langword="Or" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-611"><xref:System.Numerics.BigInteger.op_BitwiseOr%2A> Метод определяет побитовое `Or` операции для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-611">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method defines the bitwise `Or` operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-612">Побитовое `Or` операция задает результирующий бит только тогда, когда один или оба соответствующих бита в `left` и `right` задаются, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="ccb84-612">The bitwise `Or` operation sets a result bit only if either or both of the corresponding bits in `left` and `right` are set, as shown in the following table.</span></span>  
  
|<span data-ttu-id="ccb84-613">Бит в `left`</span><span class="sxs-lookup"><span data-stu-id="ccb84-613">Bit in `left`</span></span>|<span data-ttu-id="ccb84-614">Бит в `right`</span><span class="sxs-lookup"><span data-stu-id="ccb84-614">Bit in `right`</span></span>|<span data-ttu-id="ccb84-615">Бит в результате</span><span class="sxs-lookup"><span data-stu-id="ccb84-615">Bit in result</span></span>|  
|-------------------|--------------------|-------------------|  
|<span data-ttu-id="ccb84-616">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-616">0</span></span>|<span data-ttu-id="ccb84-617">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-617">0</span></span>|<span data-ttu-id="ccb84-618">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-618">0</span></span>|  
|<span data-ttu-id="ccb84-619">1</span><span class="sxs-lookup"><span data-stu-id="ccb84-619">1</span></span>|<span data-ttu-id="ccb84-620">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-620">0</span></span>|<span data-ttu-id="ccb84-621">1</span><span class="sxs-lookup"><span data-stu-id="ccb84-621">1</span></span>|  
|<span data-ttu-id="ccb84-622">1</span><span class="sxs-lookup"><span data-stu-id="ccb84-622">1</span></span>|<span data-ttu-id="ccb84-623">1</span><span class="sxs-lookup"><span data-stu-id="ccb84-623">1</span></span>|<span data-ttu-id="ccb84-624">1</span><span class="sxs-lookup"><span data-stu-id="ccb84-624">1</span></span>|  
|<span data-ttu-id="ccb84-625">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-625">0</span></span>|<span data-ttu-id="ccb84-626">1</span><span class="sxs-lookup"><span data-stu-id="ccb84-626">1</span></span>|<span data-ttu-id="ccb84-627">1</span><span class="sxs-lookup"><span data-stu-id="ccb84-627">1</span></span>|  
  
 <span data-ttu-id="ccb84-628"><xref:System.Numerics.BigInteger.op_BitwiseOr%2A> Метод включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-628">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#2)]  
  
 <span data-ttu-id="ccb84-629"><xref:System.Numerics.BigInteger.op_BitwiseOr%2A> Метод выполняет побитовое `Or` операции над двумя <xref:System.Numerics.BigInteger> значения, как если бы они были в двух дополнением представление с расширением виртуального входа.</span><span class="sxs-lookup"><span data-stu-id="ccb84-629">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method performs the bitwise `Or` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator -- (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Decrement(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Decrement (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator --(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Decrement : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Decrement value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-630">Уменьшаемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-630">The value to decrement.</span></span></param>
        <summary><span data-ttu-id="ccb84-631">Уменьшает значение <see cref="T:System.Numerics.BigInteger" /> на 1.</span><span class="sxs-lookup"><span data-stu-id="ccb84-631">Decrements a <see cref="T:System.Numerics.BigInteger" /> value by 1.</span></span></summary>
        <returns><span data-ttu-id="ccb84-632">Значение параметра <paramref name="value" />, уменьшенное на 1.</span><span class="sxs-lookup"><span data-stu-id="ccb84-632">The value of the <paramref name="value" /> parameter decremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-633"><xref:System.Numerics.BigInteger.op_Decrement%2A> Метода определяется операция декремента для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-633">The <xref:System.Numerics.BigInteger.op_Decrement%2A> method defines the decrement operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-634">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-634">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#17)]  
  
 <span data-ttu-id="ccb84-635">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.Subtract%2A> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-635">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Subtract%2A> method instead.</span></span> <span data-ttu-id="ccb84-636">Например:</span><span class="sxs-lookup"><span data-stu-id="ccb84-636">For example:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#3)]  
  
 <span data-ttu-id="ccb84-637">Так как <xref:System.Numerics.BigInteger> объекты являются неизменяемыми, <xref:System.Numerics.BigInteger.op_Decrement%2A> оператор создает новую <xref:System.Numerics.BigInteger> объект, значение которого является одним меньше, чем <xref:System.Numerics.BigInteger> объекта, представленного `value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-637">Because <xref:System.Numerics.BigInteger> objects are immutable, the <xref:System.Numerics.BigInteger.op_Decrement%2A> operator creates a new <xref:System.Numerics.BigInteger> object whose value is one less than the <xref:System.Numerics.BigInteger> object represented by `value`.</span></span> <span data-ttu-id="ccb84-638">Это означает, что повторные вызовы <xref:System.Numerics.BigInteger.op_Decrement%2A> может быть затратным.</span><span class="sxs-lookup"><span data-stu-id="ccb84-638">This means that repeated calls to <xref:System.Numerics.BigInteger.op_Decrement%2A> may be expensive.</span></span>  
  
 <span data-ttu-id="ccb84-639">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-639">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator / (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Division(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator /(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member ( / ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="dividend / divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="ccb84-640">Значение, которое необходимо разделить.</span><span class="sxs-lookup"><span data-stu-id="ccb84-640">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="ccb84-641">Значение, на которое необходимо разделить.</span><span class="sxs-lookup"><span data-stu-id="ccb84-641">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="ccb84-642">Делит указанное значение <see cref="T:System.Numerics.BigInteger" /> на другое указанное значение <see cref="T:System.Numerics.BigInteger" />, используя целочисленное деление.</span><span class="sxs-lookup"><span data-stu-id="ccb84-642">Divides a specified <see cref="T:System.Numerics.BigInteger" /> value by another specified <see cref="T:System.Numerics.BigInteger" /> value by using integer division.</span></span></summary>
        <returns><span data-ttu-id="ccb84-643">Целочисленный результат деления.</span><span class="sxs-lookup"><span data-stu-id="ccb84-643">The integral result of the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-644"><xref:System.Numerics.BigInteger.op_Division%2A> Метод определяет операцию деления для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-644">The <xref:System.Numerics.BigInteger.op_Division%2A> method defines the division operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-645">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-645">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#13)]
 [!code-vb[System.Numeric.BigInteger.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#13)]  
  
 <span data-ttu-id="ccb84-646">Языки, которые не поддерживают пользовательские операторы и перегрузка операторов можно вызвать <xref:System.Numerics.BigInteger.Divide%2A> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-646">Languages that do not support custom operators and operator overloading can call the <xref:System.Numerics.BigInteger.Divide%2A> method instead.</span></span>  
  
 <span data-ttu-id="ccb84-647">Имеет эквивалентный метод для этого оператора <xref:System.Numerics.BigInteger.Divide%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ccb84-647">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Divide%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="ccb84-648">В следующем примере создается массив <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-648">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-649">Затем он использует каждый элемент как частное в операции деления, которая использует <xref:System.Numerics.BigInteger.Divide%2A> метод, оператор деления (/) и <xref:System.Numerics.BigInteger.DivRem%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-649">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="ccb84-650">Значение параметра <paramref name="divisor" /> равно нулю (0).</span><span class="sxs-lookup"><span data-stu-id="ccb84-650"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Equality">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb84-651">Возвращает значение, определяющее, равны ли два значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-651">Returns a value that indicates whether two values are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-652">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-652">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-653">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-653">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-654">Возвращает значение, указывающее, равны ли длинное знаковое целое число и значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-654">Returns a value that indicates whether a signed long integer value and a <see cref="T:System.Numerics.BigInteger" /> value are equal.</span></span></summary>
        <returns><span data-ttu-id="ccb84-655">Значение <see langword="true" />, если параметры <paramref name="left" /> и <paramref name="right" /> имеют одинаковые значения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-655"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-656"><xref:System.Numerics.BigInteger.op_Equality%28System.Int64%2CSystem.Numerics.BigInteger%29> Метод определяет операцию сравнения на равенство для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-656">The <xref:System.Numerics.BigInteger.op_Equality%28System.Int64%2CSystem.Numerics.BigInteger%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-657">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-657">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Operators#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#4)]  
  
 <span data-ttu-id="ccb84-658">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> метод экземпляра.</span><span class="sxs-lookup"><span data-stu-id="ccb84-658">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="ccb84-659">Если `left` — <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, или <xref:System.UInt32> , он неявно преобразуется в значение <xref:System.Int64> значение при выполнении операции.</span><span class="sxs-lookup"><span data-stu-id="ccb84-659">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="ccb84-660">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-660">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-661">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-661">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-662">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-662">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-663">Возвращает значение, указывающее, равны ли значение <see cref="T:System.Numerics.BigInteger" /> и длинное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="ccb84-663">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a signed long integer value are equal.</span></span></summary>
        <returns><span data-ttu-id="ccb84-664">Значение <see langword="true" />, если параметры <paramref name="left" /> и <paramref name="right" /> имеют одинаковые значения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-664"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-665"><xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Int64%29> Метод определяет операцию сравнения на равенство для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-665">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Int64%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-666">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-666">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#5)]
 [!code-vb[System.Numerics.BigInteger.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#5)]  
  
 <span data-ttu-id="ccb84-667">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> метод экземпляра.</span><span class="sxs-lookup"><span data-stu-id="ccb84-667">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="ccb84-668">Если `right` — <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, или <xref:System.UInt32> , он неявно преобразуется в значение <xref:System.Int64> значение при выполнении операции.</span><span class="sxs-lookup"><span data-stu-id="ccb84-668">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="ccb84-669">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-669">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-670">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-670">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-671">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-671">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-672">Возвращает значение, указывающее, равны ли значения двух объектов <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-672">Returns a value that indicates whether the values of two <see cref="T:System.Numerics.BigInteger" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="ccb84-673">Значение <see langword="true" />, если параметры <paramref name="left" /> и <paramref name="right" /> имеют одинаковые значения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-673"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-674"><xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> Метод определяет операцию от оператора равенства для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-674">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method defines the operation of the equality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-675">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-675">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#19)]
 [!code-vb[System.Numeric.BigInteger.Class#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#19)]  
  
 <span data-ttu-id="ccb84-676">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> метод экземпляра.</span><span class="sxs-lookup"><span data-stu-id="ccb84-676">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="ccb84-677">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-677">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.Equals" />
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-678">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-678">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-679">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-679">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-680">Возвращает значение, указывающее, равны ли значение <see cref="T:System.Numerics.BigInteger" /> и длинное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-680">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and an unsigned long integer value are equal.</span></span></summary>
        <returns><span data-ttu-id="ccb84-681">Значение <see langword="true" />, если параметры <paramref name="left" /> и <paramref name="right" /> имеют одинаковые значения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-681"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-682"><xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.UInt64%29> Метод определяет операцию сравнения на равенство для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-682">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.UInt64%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-683">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-683">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#6)]
 [!code-vb[System.Numerics.BigInteger.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#6)]  
  
 <span data-ttu-id="ccb84-684">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> метод экземпляра.</span><span class="sxs-lookup"><span data-stu-id="ccb84-684">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-685">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-685">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-686">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-686">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-687">Возвращает значение, указывающее, равны ли длинное целое число без знака и значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-687">Returns a value that indicates whether an unsigned long integer value and a <see cref="T:System.Numerics.BigInteger" /> value are equal.</span></span></summary>
        <returns><span data-ttu-id="ccb84-688">Значение <see langword="true" />, если параметры <paramref name="left" /> и <paramref name="right" /> имеют одинаковые значения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-688"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-689"><xref:System.Numerics.BigInteger.op_Equality%28System.UInt64%2CSystem.Numerics.BigInteger%29> Метод определяет операцию сравнения на равенство для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-689">The <xref:System.Numerics.BigInteger.op_Equality%28System.UInt64%2CSystem.Numerics.BigInteger%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-690">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-690">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#7)]
 [!code-vb[System.Numerics.BigInteger.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#7)]  
  
 <span data-ttu-id="ccb84-691">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> метод экземпляра.</span><span class="sxs-lookup"><span data-stu-id="ccb84-691">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_ExclusiveOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ^ (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_ExclusiveOr(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Xor (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ^(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( ^^^ ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left ^^^ right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-692">Первое значение в вычитании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-692">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-693">Второе значение в вычитании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-693">The second value.</span></span></param>
        <summary><span data-ttu-id="ccb84-694">Выполняет битовую операцию исключающего <see langword="Or" /> (<see langword="XOr" />) для двух значений <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-694">Performs a bitwise exclusive <see langword="Or" /> (<see langword="XOr" />) operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="ccb84-695">Результат битовой операции <see langword="Or" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-695">The result of the bitwise <see langword="Or" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-696">Результат побитового исключающего `Or` операции `true` различны; в противном случае значения два бита, это `false`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-696">The result of a bitwise exclusive `Or` operation is `true` if the values of the two bits are different; otherwise, it is `false`.</span></span> <span data-ttu-id="ccb84-697">В следующей таблице показано монопольной `Or` операции.</span><span class="sxs-lookup"><span data-stu-id="ccb84-697">The following table illustrates the exclusive `Or` operation.</span></span>  
  
|<span data-ttu-id="ccb84-698">Бит x `left`</span><span class="sxs-lookup"><span data-stu-id="ccb84-698">Bit x in `left`</span></span>|<span data-ttu-id="ccb84-699">Бит x `right`</span><span class="sxs-lookup"><span data-stu-id="ccb84-699">Bit x in `right`</span></span>|<span data-ttu-id="ccb84-700">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="ccb84-700">Return value</span></span>|  
|---------------------|----------------------|------------------|  
|<span data-ttu-id="ccb84-701">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-701">0</span></span>|<span data-ttu-id="ccb84-702">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-702">0</span></span>|<span data-ttu-id="ccb84-703">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-703">0</span></span>|  
|<span data-ttu-id="ccb84-704">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-704">0</span></span>|<span data-ttu-id="ccb84-705">1</span><span class="sxs-lookup"><span data-stu-id="ccb84-705">1</span></span>|<span data-ttu-id="ccb84-706">1</span><span class="sxs-lookup"><span data-stu-id="ccb84-706">1</span></span>|  
|<span data-ttu-id="ccb84-707">1</span><span class="sxs-lookup"><span data-stu-id="ccb84-707">1</span></span>|<span data-ttu-id="ccb84-708">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-708">0</span></span>|<span data-ttu-id="ccb84-709">1</span><span class="sxs-lookup"><span data-stu-id="ccb84-709">1</span></span>|  
|<span data-ttu-id="ccb84-710">1</span><span class="sxs-lookup"><span data-stu-id="ccb84-710">1</span></span>|<span data-ttu-id="ccb84-711">1</span><span class="sxs-lookup"><span data-stu-id="ccb84-711">1</span></span>|<span data-ttu-id="ccb84-712">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-712">0</span></span>|  
  
 <span data-ttu-id="ccb84-713"><xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> Метод включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-713">The <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#8)]
 [!code-vb[System.Numerics.BigInteger.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#8)]  
  
 <span data-ttu-id="ccb84-714"><xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> Метод выполняет побитовое исключающее `Or` операции над двумя <xref:System.Numerics.BigInteger> значения, как если бы они были в двух дополнением представление с расширением виртуального входа.</span><span class="sxs-lookup"><span data-stu-id="ccb84-714">The <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> method performs the bitwise exclusive `Or` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb84-715">Определяет явное преобразование между объектом типа <see cref="T:System.Numerics.BigInteger" /> и другим типом.</span><span class="sxs-lookup"><span data-stu-id="ccb84-715">Defines an explicit conversion between a <see cref="T:System.Numerics.BigInteger" /> object and another type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-716">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-716">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="ccb84-717">Определяет явное преобразование объекта <see cref="T:System.Decimal" /> в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-717">Defines an explicit conversion of a <see cref="T:System.Decimal" /> object to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-718">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-718">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-719">Дробная часть `value` параметр усекается до преобразования.</span><span class="sxs-lookup"><span data-stu-id="ccb84-719">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="ccb84-720">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метод определения типов, в который или из которого <xref:System.Numerics.BigInteger> объект может быть преобразован.</span><span class="sxs-lookup"><span data-stu-id="ccb84-720">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="ccb84-721">Так как преобразование из <xref:System.Decimal> для <xref:System.Numerics.BigInteger> может включать в себя усечение дробная часть `value`, языковые компиляторы не выполняют это преобразование автоматически.</span><span class="sxs-lookup"><span data-stu-id="ccb84-721">Because the conversion from <xref:System.Decimal> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="ccb84-722">Вместо этого они выполняют преобразование только в том случае, если оператор приведения (в C#) или функции преобразования (например, `CType` в Visual Basic) используется.</span><span class="sxs-lookup"><span data-stu-id="ccb84-722">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="ccb84-723">В противном случае они отображают ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="ccb84-723">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="ccb84-724">Для языков, которые не поддерживают пользовательские операторы, является альтернативным методом <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-724">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="ccb84-725">В следующем примере преобразуется отдельных элементов в массиве <xref:System.Decimal> значения <xref:System.Numerics.BigInteger> объектов, а затем отображает результат каждого преобразования.</span><span class="sxs-lookup"><span data-stu-id="ccb84-725">The following example converts the individual elements in an array of <xref:System.Decimal> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="ccb84-726">Обратите внимание, что дробная часть <xref:System.Decimal> значение будет усечено во время преобразования.</span><span class="sxs-lookup"><span data-stu-id="ccb84-726">Note that any fractional part of a <xref:System.Decimal> value is truncated during the conversion.</span></span>   

 [!code-csharp[System.Numerics.BigInteger.Explicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#1)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#1)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Double) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(double value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : double -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-727">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-727">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="ccb84-728">Определяет явное преобразование значения <see cref="T:System.Double" /> в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-728">Defines an explicit conversion of a <see cref="T:System.Double" /> value to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-729">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-729">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-730">Дробная часть `value` параметр усекается до преобразования.</span><span class="sxs-lookup"><span data-stu-id="ccb84-730">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="ccb84-731">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метод определения типов, в который или из которого <xref:System.Numerics.BigInteger> объект может быть преобразован.</span><span class="sxs-lookup"><span data-stu-id="ccb84-731">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="ccb84-732">Так как преобразование из <xref:System.Double> для <xref:System.Numerics.BigInteger> может включать в себя усечение дробная часть `value`, языковые компиляторы не выполняют это преобразование автоматически.</span><span class="sxs-lookup"><span data-stu-id="ccb84-732">Because the conversion from <xref:System.Double> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="ccb84-733">Вместо этого они выполняют преобразование только в том случае, если оператор приведения (в C#) или функции преобразования (например, `CType` в Visual Basic) используется.</span><span class="sxs-lookup"><span data-stu-id="ccb84-733">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="ccb84-734">В противном случае они отображают ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="ccb84-734">Otherwise, they display a compiler error.</span></span>

 <span data-ttu-id="ccb84-735">Для языков, которые не поддерживают пользовательские операторы, является альтернативным методом <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-735">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="ccb84-736">В следующем примере преобразуется отдельных элементов в массиве <xref:System.Double> значения <xref:System.Numerics.BigInteger> объектов, а затем отображает результат каждого преобразования.</span><span class="sxs-lookup"><span data-stu-id="ccb84-736">The following example converts the individual elements in an array of <xref:System.Double> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="ccb84-737">Обратите внимание, что дробная часть <xref:System.Double> значение будет усечено во время преобразования.</span><span class="sxs-lookup"><span data-stu-id="ccb84-737">Note that any fractional part of a <xref:System.Double> value is truncated during the conversion.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#2)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#2)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ccb84-738"><paramref name="value" /> имеет значение <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" /> или <see cref="F:System.Double.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-738"><paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Byte(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; byte" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-739">Значение, которое необходимо преобразовать в тип <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-739">The value to convert to a <see cref="T:System.Byte" />.</span></span></param>
        <summary><span data-ttu-id="ccb84-740">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в байтовое значение без знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-740">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned byte value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-741">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-741">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-742">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метод определения типов, в который или из которого <xref:System.Numerics.BigInteger> объект может быть преобразован.</span><span class="sxs-lookup"><span data-stu-id="ccb84-742">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="ccb84-743">Языковые компиляторы не выполняют это преобразование автоматически, так как он может привести к потере данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-743">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="ccb84-744">Вместо этого они выполняют преобразование только в том случае, если оператор приведения (в C#) или функции преобразования (такие как `CType` или `CByte` в Visual Basic) используется.</span><span class="sxs-lookup"><span data-stu-id="ccb84-744">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CByte` in Visual Basic) is used.</span></span> <span data-ttu-id="ccb84-745">В противном случае они отображают ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="ccb84-745">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="ccb84-746">Так как эта операция определяет сужающее преобразование, может возникнуть исключение <xref:System.OverflowException> во время выполнения, если <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.Byte> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-746">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Byte> data type.</span></span> <span data-ttu-id="ccb84-747">Отсутствие потери точности в итоговый <xref:System.Byte> значение, если преобразование прошло успешно.</span><span class="sxs-lookup"><span data-stu-id="ccb84-747">There is no loss of precision in the resulting <xref:System.Byte> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="ccb84-748">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> для <xref:System.Byte> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-748">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Byte> values.</span></span> <span data-ttu-id="ccb84-749">Он также обрабатывает <xref:System.OverflowException> , возникает исключение, так как <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.Byte> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-749">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Byte> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#1)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#1)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ccb84-750">Значение <paramref name="value" /> меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-750"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; decimal" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-751">Значение, которое необходимо преобразовать в тип <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-751">The value to convert to a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="ccb84-752">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в значение <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-752">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-753">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-753">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-754">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метод определения типов, в который или из которого <xref:System.Numerics.BigInteger> объект может быть преобразован.</span><span class="sxs-lookup"><span data-stu-id="ccb84-754">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="ccb84-755">Языковые компиляторы не выполняют это преобразование автоматически, так как он может привести к потере данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-755">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="ccb84-756">Вместо этого они выполняют преобразование только в том случае, если оператор приведения (в C#) или функции преобразования (такие как `CType` или `CDec` в Visual Basic) используется.</span><span class="sxs-lookup"><span data-stu-id="ccb84-756">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CDec` in Visual Basic) is used.</span></span>   

 <span data-ttu-id="ccb84-757">Так как эта операция определяет сужающее преобразование, может возникнуть исключение <xref:System.OverflowException> во время выполнения, если <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.Decimal> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-757">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Decimal> data type.</span></span> 

## Examples
 <span data-ttu-id="ccb84-758">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> для <xref:System.Decimal> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-758">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Decimal> values.</span></span> <span data-ttu-id="ccb84-759">Он также обрабатывает <xref:System.OverflowException> , возникает исключение, так как <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.Decimal> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-759">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Decimal> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#2)]
 [!code-vb[System.Numeric.BigInteger.Explicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ccb84-760">Значение <paramref name="value" /> меньше <see cref="F:System.Decimal.MinValue" /> или больше <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-760"><paramref name="value" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator double (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator double(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; double" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-761">Значение, которое необходимо преобразовать в тип <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-761">The value to convert to a <see cref="T:System.Double" />.</span></span></param>
        <summary><span data-ttu-id="ccb84-762">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в значение <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-762">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a <see cref="T:System.Double" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-763">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-763">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-764">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метод определения типов, в который или из которого <xref:System.Numerics.BigInteger> объект может быть преобразован.</span><span class="sxs-lookup"><span data-stu-id="ccb84-764">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="ccb84-765">Языковые компиляторы не выполняют это преобразование автоматически, так как он может привести к потере данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-765">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="ccb84-766">Вместо этого они выполняют преобразование только в том случае, если оператор приведения (в C#) или функции преобразования (такие как `CType` или `CDbl` в Visual Basic) используется.</span><span class="sxs-lookup"><span data-stu-id="ccb84-766">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CDbl` in Visual Basic) is used.</span></span>   

 <span data-ttu-id="ccb84-767">Так как <xref:System.Numerics.BigInteger> значение может быть вне диапазона <xref:System.Double> тип данных, эта операция является сужающим преобразованием.</span><span class="sxs-lookup"><span data-stu-id="ccb84-767">Because the <xref:System.Numerics.BigInteger> value can be outside the range of the <xref:System.Double> data type, this operation is a narrowing conversion.</span></span> <span data-ttu-id="ccb84-768">Если преобразование завершается неудачно, он не создает исключение <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-768">If the conversion is unsuccessful, it does not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="ccb84-769">Вместо этого Если <xref:System.Numerics.BigInteger> значение меньше, чем <xref:System.Double.MinValue?displayProperty=nameWithType>, полученный в результате <xref:System.Double> значение <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-769">Instead, if the <xref:System.Numerics.BigInteger> value is less than <xref:System.Double.MinValue?displayProperty=nameWithType>, the resulting <xref:System.Double> value is <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ccb84-770">Если <xref:System.Numerics.BigInteger> больше, чем <xref:System.Double.MaxValue?displayProperty=nameWithType>, полученный в результате <xref:System.Double> значение <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-770">If the <xref:System.Numerics.BigInteger> value is greater than <xref:System.Double.MaxValue?displayProperty=nameWithType>, the resulting <xref:System.Double> value is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>.</span></span>
 
 <span data-ttu-id="ccb84-771">Преобразование <xref:System.Numerics.BigInteger> для <xref:System.Double> может предполагать потерю точности.</span><span class="sxs-lookup"><span data-stu-id="ccb84-771">The conversion of a <xref:System.Numerics.BigInteger> to a <xref:System.Double> may involve a loss of precision.</span></span> <span data-ttu-id="ccb84-772">В некоторых случаях потеря точности может привести к для успешного выполнения операции приведения или преобразования даже в том случае, если <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.Double> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-772">In some cases, the loss of precision may cause the casting or conversion operation to succeed even if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Double> data type.</span></span> <span data-ttu-id="ccb84-773">Ниже приведен пример.</span><span class="sxs-lookup"><span data-stu-id="ccb84-773">The following example provides an illustration.</span></span> <span data-ttu-id="ccb84-774">Он назначает максимальное значение <xref:System.Double> до двух <xref:System.Numerics.BigInteger> переменные, с шагом один <xref:System.Numerics.BigInteger> переменной 9.999e291 и проверяет равенство двух переменных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-774">It assigns the maximum value of a <xref:System.Double> to two <xref:System.Numerics.BigInteger> variables, increments one <xref:System.Numerics.BigInteger> variable by 9.999e291, and tests the two variables for equality.</span></span> <span data-ttu-id="ccb84-775">Как и ожидалось, вызов <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> метод показывает, что они не равны.</span><span class="sxs-lookup"><span data-stu-id="ccb84-775">As expected, the call to the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method shows that they are unequal.</span></span> <span data-ttu-id="ccb84-776">Однако преобразование большее <xref:System.Numerics.BigInteger> значение обратно <xref:System.Double> завершается успешно, несмотря на то что <xref:System.Numerics.BigInteger> теперь превышает значение <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-776">However, the conversion of the larger <xref:System.Numerics.BigInteger> value back to a <xref:System.Double> succeeds, although the <xref:System.Numerics.BigInteger> value now exceeds <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#4)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#4)]   



## Examples
 <span data-ttu-id="ccb84-777">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> для <xref:System.Double> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-777">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Double> values.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#3)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#3)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator short (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int16 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator short(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; int16" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-778">Значение, которое необходимо преобразовать в 16-разрядное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="ccb84-778">The value to convert to a 16-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="ccb84-779">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в значение 16-битового знакового целого числа.</span><span class="sxs-lookup"><span data-stu-id="ccb84-779">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 16-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-780">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-780">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-781">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метод определения типов, в который или из которого <xref:System.Numerics.BigInteger> объект может быть преобразован.</span><span class="sxs-lookup"><span data-stu-id="ccb84-781">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="ccb84-782">Языковые компиляторы не выполняют это преобразование автоматически, так как он может привести к потере данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-782">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="ccb84-783">Вместо этого они выполняют преобразование только в том случае, если оператор приведения (в C#) или функции преобразования (такие как `CType` или `CShort` в Visual Basic) используется.</span><span class="sxs-lookup"><span data-stu-id="ccb84-783">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CShort` in Visual Basic) is used.</span></span> <span data-ttu-id="ccb84-784">В противном случае они отображают ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="ccb84-784">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="ccb84-785">Так как эта операция определяет сужающее преобразование, может возникнуть исключение <xref:System.OverflowException> во время выполнения, если <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.Int16> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-785">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int16> data type.</span></span> <span data-ttu-id="ccb84-786">Отсутствие потери точности в итоговый <xref:System.Int16> значение, если преобразование прошло успешно.</span><span class="sxs-lookup"><span data-stu-id="ccb84-786">There is no loss of precision in the resulting <xref:System.Int16> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="ccb84-787">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> для <xref:System.Int16> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-787">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int16> values.</span></span> <span data-ttu-id="ccb84-788">Он также обрабатывает <xref:System.OverflowException> , возникает исключение, так как <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.Int16> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-788">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int16> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#4)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#4)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ccb84-789"><paramref name="value" /> меньше <see cref="F:System.Int16.MinValue" /> или больше <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-789"><paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or is greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator int(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; int" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-790">Значение, которое необходимо преобразовать в 32-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="ccb84-790">The value to convert to a 32-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="ccb84-791">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в значение 32-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="ccb84-791">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 32-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-792">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-792">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-793">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метод определения типов, в который или из которого <xref:System.Numerics.BigInteger> объект может быть преобразован.</span><span class="sxs-lookup"><span data-stu-id="ccb84-793">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="ccb84-794">Языковые компиляторы не выполняют это преобразование автоматически, так как он может привести к потере данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-794">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="ccb84-795">Вместо этого они выполняют преобразование только в том случае, если оператор приведения (в C#) или функции преобразования (такие как `CType` или `CInt` в Visual Basic) используется.</span><span class="sxs-lookup"><span data-stu-id="ccb84-795">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CInt` in Visual Basic) is used.</span></span> <span data-ttu-id="ccb84-796">В противном случае они отображают ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="ccb84-796">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="ccb84-797">Так как эта операция определяет сужающее преобразование, может возникнуть исключение <xref:System.OverflowException> во время выполнения, если <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.Int32> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-797">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int32> data type.</span></span> <span data-ttu-id="ccb84-798">Отсутствие потери точности в итоговый <xref:System.Int16> значение, если преобразование прошло успешно.</span><span class="sxs-lookup"><span data-stu-id="ccb84-798">There is no loss of precision in the resulting <xref:System.Int16> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="ccb84-799">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> для <xref:System.Int32> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-799">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int32> values.</span></span> <span data-ttu-id="ccb84-800">Он также обрабатывает <xref:System.OverflowException> , возникает исключение, так как <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.Int32> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-800">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int32> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#5)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#5)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ccb84-801"><paramref name="value" /> меньше <see cref="F:System.Int32.MinValue" /> или больше <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-801"><paramref name="value" /> is less than <see cref="F:System.Int32.MinValue" /> or is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator long(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; int64" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-802">Значение, которое необходимо преобразовать в 64-разрядное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="ccb84-802">The value to convert to a 64-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="ccb84-803">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в значение 64-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="ccb84-803">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 64-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-804">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-804">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-805">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метод определения типов, в который или из которого <xref:System.Numerics.BigInteger> объект может быть преобразован.</span><span class="sxs-lookup"><span data-stu-id="ccb84-805">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="ccb84-806">Языковые компиляторы не выполняют это преобразование автоматически, так как он может привести к потере данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-806">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="ccb84-807">Вместо этого они выполняют преобразование только в том случае, если оператор приведения (в C#) или функции преобразования (такие как `CType` или `CLng` в Visual Basic) используется.</span><span class="sxs-lookup"><span data-stu-id="ccb84-807">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CLng` in Visual Basic) is used.</span></span> <span data-ttu-id="ccb84-808">В противном случае они отображают ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="ccb84-808">Otherwise, they display a compiler error.</span></span>  

 <span data-ttu-id="ccb84-809">Так как эта операция определяет сужающее преобразование, может возникнуть исключение <xref:System.OverflowException> во время выполнения, если <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.Int64> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-809">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int64> data type.</span></span> 

## Examples
 <span data-ttu-id="ccb84-810">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> для <xref:System.Int64> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-810">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int64> values.</span></span> <span data-ttu-id="ccb84-811">Он также обрабатывает <xref:System.OverflowException> , возникает исключение, так как <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.Int64> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-811">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int64> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#6)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#6)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ccb84-812"><paramref name="value" /> меньше <see cref="F:System.Int64.MinValue" /> или больше <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-812"><paramref name="value" /> is less than <see cref="F:System.Int64.MinValue" /> or is greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator sbyte (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int8 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::SByte(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; sbyte" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-813">Значение, которое необходимо преобразовать в значение 8-разрядного знакового числа.</span><span class="sxs-lookup"><span data-stu-id="ccb84-813">The value to convert to a signed 8-bit value.</span></span></param>
        <summary><span data-ttu-id="ccb84-814">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в значение 8-битового числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="ccb84-814">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a signed 8-bit value.</span></span>  
  
<span data-ttu-id="ccb84-815">Этот интерфейс API CLS-несовместим.</span><span class="sxs-lookup"><span data-stu-id="ccb84-815">This API is not CLS-compliant.</span></span> <span data-ttu-id="ccb84-816">Совместимая альтернатива — <see cref="T:System.Int16" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-816">The compliant alternative is <see cref="T:System.Int16" />.</span></span></summary>
        <returns><span data-ttu-id="ccb84-817">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-817">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-818">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метод определения типов, в который или из которого <xref:System.Numerics.BigInteger> объект может быть преобразован.</span><span class="sxs-lookup"><span data-stu-id="ccb84-818">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="ccb84-819">Языковые компиляторы не выполняют это преобразование автоматически, так как он может привести к потере данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-819">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="ccb84-820">Вместо этого они выполняют преобразование только в том случае, если оператор приведения (в C#) или функции преобразования (такие как `CType` или `CSByte` в Visual Basic) используется.</span><span class="sxs-lookup"><span data-stu-id="ccb84-820">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CSByte` in Visual Basic) is used.</span></span> <span data-ttu-id="ccb84-821">В противном случае они отображают ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="ccb84-821">Otherwise, they display a compiler error.</span></span>  

 <span data-ttu-id="ccb84-822">Так как эта операция определяет сужающее преобразование, может возникнуть исключение <xref:System.OverflowException> во время выполнения, если <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.SByte> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-822">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.SByte> data type.</span></span> <span data-ttu-id="ccb84-823">Отсутствие потери точности в итоговый <xref:System.SByte> значение, если преобразование прошло успешно.</span><span class="sxs-lookup"><span data-stu-id="ccb84-823">There is no loss of precision in the resulting <xref:System.SByte> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="ccb84-824">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> для <xref:System.SByte> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-824">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.SByte> values.</span></span> <span data-ttu-id="ccb84-825">Он также обрабатывает <xref:System.OverflowException> , возникает исключение, так как <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.SByte> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-825">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.SByte> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#7)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#7)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ccb84-826"><paramref name="value" /> меньше <see cref="F:System.SByte.MinValue" /> или больше <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-826"><paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or is greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator float(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; single" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-827">Значение, которое необходимо преобразовать в значение числа с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="ccb84-827">The value to convert to a single-precision floating-point value.</span></span></param>
        <summary><span data-ttu-id="ccb84-828">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в значение числа с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="ccb84-828">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a single-precision floating-point value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-829">Объект, содержащий ближайшее возможное представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-829">An object that contains the closest possible representation of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-830">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метод определения типов, в который или из которого <xref:System.Numerics.BigInteger> объект может быть преобразован.</span><span class="sxs-lookup"><span data-stu-id="ccb84-830">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="ccb84-831">Языковые компиляторы не выполняют это преобразование автоматически, так как оно может привести к потере данных или потере точности.</span><span class="sxs-lookup"><span data-stu-id="ccb84-831">Language compilers do not perform this conversion automatically because it can involve data loss or a loss of precision.</span></span> <span data-ttu-id="ccb84-832">Вместо этого они выполняют преобразование только в том случае, если оператор приведения (в C#) или функции преобразования (такие как `CType` или `CSng` в Visual Basic) используется.</span><span class="sxs-lookup"><span data-stu-id="ccb84-832">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CSng` in Visual Basic) is used.</span></span> <span data-ttu-id="ccb84-833">В противном случае они отображают ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="ccb84-833">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="ccb84-834">Так как <xref:System.Numerics.BigInteger> значение может быть вне диапазона <xref:System.Single> тип данных, эта операция является сужающим преобразованием.</span><span class="sxs-lookup"><span data-stu-id="ccb84-834">Because the <xref:System.Numerics.BigInteger> value can be outside the range of the <xref:System.Single> data type, this operation is a narrowing conversion.</span></span> <span data-ttu-id="ccb84-835">Если преобразование завершается неудачно, он не создает исключение <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-835">If the conversion is unsuccessful, it does not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="ccb84-836">Вместо этого Если <xref:System.Numerics.BigInteger> значение меньше, чем <xref:System.Single.MinValue?displayProperty=nameWithType>, полученный в результате <xref:System.Single> значение <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-836">Instead, if the <xref:System.Numerics.BigInteger> value is less than <xref:System.Single.MinValue?displayProperty=nameWithType>, the resulting <xref:System.Single> value is <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ccb84-837">Если <xref:System.Numerics.BigInteger> больше, чем <xref:System.Single.MaxValue?displayProperty=nameWithType>, полученный в результате <xref:System.Single> значение <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-837">If the <xref:System.Numerics.BigInteger> value is greater than <xref:System.Single.MaxValue?displayProperty=nameWithType>, the resulting <xref:System.Single> value is <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="ccb84-838">Преобразование <xref:System.Numerics.BigInteger> для <xref:System.Single> может предполагать потерю точности.</span><span class="sxs-lookup"><span data-stu-id="ccb84-838">The conversion of a <xref:System.Numerics.BigInteger> to a <xref:System.Single> may involve a loss of precision.</span></span> <span data-ttu-id="ccb84-839">В некоторых случаях потеря точности может привести к для успешного выполнения операции приведения или преобразования даже в том случае, если <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.Single> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-839">In some cases, the loss of precision may cause the casting or conversion operation to succeed even if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Single> data type.</span></span> <span data-ttu-id="ccb84-840">Ниже приведен пример.</span><span class="sxs-lookup"><span data-stu-id="ccb84-840">The following example provides an illustration.</span></span> <span data-ttu-id="ccb84-841">Он назначает максимальное значение <xref:System.Single> до двух <xref:System.Numerics.BigInteger> переменные, с шагом один <xref:System.Numerics.BigInteger> переменной 9.999e291 и проверяет равенство двух переменных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-841">It assigns the maximum value of a <xref:System.Single> to two <xref:System.Numerics.BigInteger> variables, increments one <xref:System.Numerics.BigInteger> variable by 9.999e291, and tests the two variables for equality.</span></span> <span data-ttu-id="ccb84-842">Как и ожидалось, вызов <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> метод показывает, что они не равны.</span><span class="sxs-lookup"><span data-stu-id="ccb84-842">As expected, the call to the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method shows that they are unequal.</span></span> <span data-ttu-id="ccb84-843">Однако преобразование большее <xref:System.Numerics.BigInteger> значение обратно <xref:System.Single> завершается успешно, несмотря на то что <xref:System.Numerics.BigInteger> теперь превышает значение <xref:System.Single.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-843">However, the conversion of the larger <xref:System.Numerics.BigInteger> value back to a <xref:System.Single> succeeds, although the <xref:System.Numerics.BigInteger> value now exceeds <xref:System.Single.MaxValue?displayProperty=nameWithType>.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#5)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#5)]   



## Examples
 <span data-ttu-id="ccb84-844">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> для <xref:System.Single> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-844">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Single> values.</span></span>   
     
 [!code-csharp[System.Numeric.BigInteger.Explicit#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#8)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#8)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ushort (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int16 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt16(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; uint16" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-845">Значение, которое необходимо преобразовать в 16-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-845">The value to convert to an unsigned 16-bit integer.</span></span></param>
        <summary><span data-ttu-id="ccb84-846">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в значение 16-битового целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-846">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 16-bit integer value.</span></span>  
  
<span data-ttu-id="ccb84-847">Этот интерфейс API CLS-несовместим.</span><span class="sxs-lookup"><span data-stu-id="ccb84-847">This API is not CLS-compliant.</span></span> <span data-ttu-id="ccb84-848">Совместимая альтернатива — <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-848">The compliant alternative is <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="ccb84-849">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-849">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-850">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метод определения типов, в который или из которого <xref:System.Numerics.BigInteger> объект может быть преобразован.</span><span class="sxs-lookup"><span data-stu-id="ccb84-850">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="ccb84-851">Языковые компиляторы не выполняют это преобразование автоматически, так как он может привести к потере данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-851">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="ccb84-852">Вместо этого они выполняют преобразование только в том случае, если оператор приведения (в C#) или функции преобразования (такие как `CType` или `CUShort` в Visual Basic) используется.</span><span class="sxs-lookup"><span data-stu-id="ccb84-852">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CUShort` in Visual Basic) is used.</span></span> <span data-ttu-id="ccb84-853">В противном случае они отображают ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="ccb84-853">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="ccb84-854">Так как эта операция определяет сужающее преобразование, может возникнуть исключение <xref:System.OverflowException> во время выполнения, если <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.UInt16> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-854">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt16> data type.</span></span> <span data-ttu-id="ccb84-855">Отсутствие потери точности в итоговый <xref:System.UInt16> значение, если преобразование прошло успешно.</span><span class="sxs-lookup"><span data-stu-id="ccb84-855">There is no loss of precision in the resulting <xref:System.UInt16> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="ccb84-856">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> для <xref:System.UInt16> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-856">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt16> values.</span></span> <span data-ttu-id="ccb84-857">Он также обрабатывает <xref:System.OverflowException> , возникает исключение, так как <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.UInt16> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-857">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt16> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#9)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#9)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ccb84-858"><paramref name="value" /> меньше <see cref="F:System.UInt16.MinValue" /> или больше <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-858"><paramref name="value" /> is less than <see cref="F:System.UInt16.MinValue" /> or is greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator uint (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt32(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; uint32" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-859">Значение, которое необходимо преобразовать в 32-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-859">The value to convert to an unsigned 32-bit integer.</span></span></param>
        <summary><span data-ttu-id="ccb84-860">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в значение 32-разрядного целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-860">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 32-bit integer value.</span></span>  
  
<span data-ttu-id="ccb84-861">Этот интерфейс API CLS-несовместим.</span><span class="sxs-lookup"><span data-stu-id="ccb84-861">This API is not CLS-compliant.</span></span> <span data-ttu-id="ccb84-862">Совместимая альтернатива — <see cref="T:System.Int64" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-862">The compliant alternative is <see cref="T:System.Int64" />.</span></span></summary>
        <returns><span data-ttu-id="ccb84-863">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-863">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-864">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метод определения типов, в который или из которого <xref:System.Numerics.BigInteger> объект может быть преобразован.</span><span class="sxs-lookup"><span data-stu-id="ccb84-864">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="ccb84-865">Языковые компиляторы не выполняют это преобразование автоматически, так как он может привести к потере данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-865">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="ccb84-866">Вместо этого они выполняют преобразование только в том случае, если оператор приведения (в C#) или функции преобразования (такие как `CType` или `CUInt` в Visual Basic) используется.</span><span class="sxs-lookup"><span data-stu-id="ccb84-866">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CUInt` in Visual Basic) is used.</span></span> <span data-ttu-id="ccb84-867">В противном случае они отображают ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="ccb84-867">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="ccb84-868">Так как эта операция определяет сужающее преобразование, может возникнуть исключение <xref:System.OverflowException> во время выполнения, если <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.UInt32> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-868">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt32> data type.</span></span> <span data-ttu-id="ccb84-869">Отсутствие потери точности в итоговый <xref:System.UInt32> значение, если преобразование прошло успешно.</span><span class="sxs-lookup"><span data-stu-id="ccb84-869">There is no loss of precision in the resulting <xref:System.UInt32> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="ccb84-870">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> для <xref:System.UInt32> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-870">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt32> values.</span></span> <span data-ttu-id="ccb84-871">Он также обрабатывает <xref:System.OverflowException> , возникает исключение, так как <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.UInt32> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-871">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt32> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#10)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#10)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ccb84-872"><paramref name="value" /> меньше <see cref="F:System.UInt32.MinValue" /> или больше <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-872"><paramref name="value" /> is less than <see cref="F:System.UInt32.MinValue" /> or is greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ulong (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt64(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; uint64" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-873">Значение, которое необходимо преобразовать в 64-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-873">The value to convert to an unsigned 64-bit integer.</span></span></param>
        <summary><span data-ttu-id="ccb84-874">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в значение 64-разрядного целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-874">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 64-bit integer value.</span></span>  
  
<span data-ttu-id="ccb84-875">Этот интерфейс API CLS-несовместим.</span><span class="sxs-lookup"><span data-stu-id="ccb84-875">This API is not CLS-compliant.</span></span> <span data-ttu-id="ccb84-876">Совместимая альтернатива — <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-876">The compliant alternative is <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="ccb84-877">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-877">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-878">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метод определения типов, в который или из которого <xref:System.Numerics.BigInteger> объект может быть преобразован.</span><span class="sxs-lookup"><span data-stu-id="ccb84-878">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="ccb84-879">Языковые компиляторы не выполняют это преобразование автоматически, так как он может привести к потере данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-879">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="ccb84-880">Вместо этого они выполняют преобразование только в том случае, если оператор приведения (в C#) или функции преобразования (такие как `CType` или `CULng` в Visual Basic) используется.</span><span class="sxs-lookup"><span data-stu-id="ccb84-880">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CULng` in Visual Basic) is used.</span></span> <span data-ttu-id="ccb84-881">В противном случае они отображают ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="ccb84-881">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="ccb84-882">Так как эта операция определяет сужающее преобразование, может возникнуть исключение <xref:System.OverflowException> во время выполнения, если <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.UInt64> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-882">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt64> data type.</span></span> <span data-ttu-id="ccb84-883">Отсутствие потери точности в итоговый <xref:System.UInt64> значение, если преобразование прошло успешно.</span><span class="sxs-lookup"><span data-stu-id="ccb84-883">There is no loss of precision in the resulting <xref:System.UInt64> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="ccb84-884">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> для <xref:System.UInt64> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-884">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt64> values.</span></span> <span data-ttu-id="ccb84-885">Он также обрабатывает <xref:System.OverflowException> , возникает исключение, так как <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.UInt64> тип данных.</span><span class="sxs-lookup"><span data-stu-id="ccb84-885">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt64> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#11)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#11)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ccb84-886"><paramref name="value" /> меньше <see cref="F:System.UInt64.MinValue" /> или больше <see cref="F:System.UInt64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-886"><paramref name="value" /> is less than <see cref="F:System.UInt64.MinValue" /> or is greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Single) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(float value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : single -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-887">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-887">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="ccb84-888">Определяет явное преобразование значения <see cref="T:System.Single" /> в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-888">Defines an explicit conversion of a <see cref="T:System.Single" /> value to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-889">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-889">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-890">Дробная часть `value` параметр усекается до преобразования.</span><span class="sxs-lookup"><span data-stu-id="ccb84-890">Any fractional part of the `value` parameter is truncated before conversion.</span></span>
 
 <span data-ttu-id="ccb84-891">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метод определения типов, в который или из которого <xref:System.Numerics.BigInteger> объект может быть преобразован.</span><span class="sxs-lookup"><span data-stu-id="ccb84-891">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="ccb84-892">Так как преобразование из <xref:System.Single> для <xref:System.Numerics.BigInteger> может включать в себя усечение дробная часть `value`, языковые компиляторы не выполняют это преобразование автоматически.</span><span class="sxs-lookup"><span data-stu-id="ccb84-892">Because the conversion from <xref:System.Single> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="ccb84-893">Вместо этого они выполняют преобразование только в том случае, если оператор приведения (в C#) или функции преобразования (например, `CType` в Visual Basic) используется.</span><span class="sxs-lookup"><span data-stu-id="ccb84-893">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="ccb84-894">В противном случае они отображают ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="ccb84-894">Otherwise, they display a compiler error.</span></span>

 <span data-ttu-id="ccb84-895">Для языков, которые не поддерживают пользовательские операторы, является альтернативным методом <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-895">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="ccb84-896">В следующем примере преобразуется отдельных элементов в массиве <xref:System.Single> значения <xref:System.Numerics.BigInteger> объектов, а затем отображает результат каждого преобразования.</span><span class="sxs-lookup"><span data-stu-id="ccb84-896">The following example converts the individual elements in an array of <xref:System.Single> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="ccb84-897">Обратите внимание, что дробная часть <xref:System.Single> значение будет усечено во время преобразования.</span><span class="sxs-lookup"><span data-stu-id="ccb84-897">Note that any fractional part of a <xref:System.Single> value is truncated during the conversion.</span></span>
 
 [!code-csharp[System.Numerics.BigInteger.Explicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#3)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#3)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ccb84-898"><paramref name="value" /> имеет значение <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" /> или <see cref="F:System.Single.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-898"><paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_GreaterThan">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb84-899">Возвращает значение, определяющее, действительно ли заданное значение больше другого заданного значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-899">Returns a value that indicates whether a specified value is greater than another specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-900">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-900">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-901">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-901">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-902">Возвращает значение, определяющее, действительно 64-разрядное знаковое целое число больше или равно значению <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-902">Returns a value that indicates whether a 64-bit signed integer is greater than a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-903"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-903"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-904"><xref:System.Numerics.BigInteger.op_GreaterThan%2A> Метод определяет операцию больше оператора для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-904">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-905">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-905">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#9)]
 [!code-vb[System.Numerics.BigInteger.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#9)]  
  
 <span data-ttu-id="ccb84-906">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> метод экземпляра.</span><span class="sxs-lookup"><span data-stu-id="ccb84-906">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span> <span data-ttu-id="ccb84-907">В некоторых языках можно также вызвать <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Int64%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-907">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#10)]  
  
 <span data-ttu-id="ccb84-908">Если `left` — <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, или <xref:System.UInt32> , он неявно преобразуется в значение <xref:System.Int64> значение при выполнении операции.</span><span class="sxs-lookup"><span data-stu-id="ccb84-908">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="ccb84-909">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-909">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-910">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-910">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-911">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-911">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-912">Возвращает значение, определяющее, действительно ли значение <see cref="T:System.Numerics.BigInteger" /> больше значения 64-битового знакового целого числа.</span><span class="sxs-lookup"><span data-stu-id="ccb84-912">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> is greater than a 64-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-913"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-913"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-914"><xref:System.Numerics.BigInteger.op_GreaterThan%2A> Метод определяет операцию больше оператора для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-914">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-915">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-915">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#11)]
 [!code-vb[System.Numerics.BigInteger.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#11)]  
  
 <span data-ttu-id="ccb84-916">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-916">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="ccb84-917">В некоторых языках можно также вызвать <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Int64%29> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-917">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#12)]  
  
 <span data-ttu-id="ccb84-918">Если `right` — <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, или <xref:System.UInt32> , он неявно преобразуется в значение <xref:System.Int64> значение при выполнении операции.</span><span class="sxs-lookup"><span data-stu-id="ccb84-918">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="ccb84-919">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-919">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-920">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-920">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-921">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-921">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-922">Возвращает значение, определяющее, действительно ли значение типа <see cref="T:System.Numerics.BigInteger" /> больше другого значения типа <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-922">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-923"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-923"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-924"><xref:System.Numerics.BigInteger.op_GreaterThan%2A> Метод определяет операцию больше оператора для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-924">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-925">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-925">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#20)]
 [!code-vb[System.Numeric.BigInteger.Class#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#20)]  
  
 <span data-ttu-id="ccb84-926">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-926">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="ccb84-927">Они также могут вызывать <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-927">They can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#21)]  
  
 <span data-ttu-id="ccb84-928">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-928">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-929">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-929">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-930">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-930">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-931">Возвращает значение, определяющее действительно ли значение <see cref="T:System.Numerics.BigInteger" /> больше 64-битового целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-931">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="ccb84-932"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-932"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-933"><xref:System.Numerics.BigInteger.op_GreaterThan%2A> Метод определяет операцию больше оператора для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-933">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-934">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-934">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#13)]
 [!code-vb[System.Numerics.BigInteger.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#13)]  
  
 <span data-ttu-id="ccb84-935">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-935">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="ccb84-936">В некоторых языках можно также вызвать <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-936">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-937">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-937">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-938">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-938">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-939">Возвращает значение, определяющее действительно ли значение <see cref="T:System.Numerics.BigInteger" /> больше 64-битового целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-939">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="ccb84-940"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-940"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-941"><xref:System.Numerics.BigInteger.op_GreaterThan%2A> Метод определяет операцию больше оператора для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-941">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-942">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-942">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#15)]
 [!code-vb[System.Numerics.BigInteger.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#15)]  
  
 <span data-ttu-id="ccb84-943">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-943">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="ccb84-944">В некоторых языках можно также вызвать <xref:System.Numerics.BigInteger.op_GreaterThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-944">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_GreaterThanOrEqual">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb84-945">Возвращает значение, определяющее, действительно ли заданное значение больше или равно другому заданному значению.</span><span class="sxs-lookup"><span data-stu-id="ccb84-945">Returns a value that indicates whether a specified value is greater than or equal to another specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-946">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-946">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-947">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-947">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-948">Возвращает значение, определяющее, действительно ли 64-разрядное знаковое целое число больше или равно значению <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-948">Returns a value that indicates whether a 64-bit signed integer is greater than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-949"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-949"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-950"><xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> Метод определяет операцию больше или равно-оператор для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-950">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-951">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-951">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#17)]
 [!code-vb[System.Numerics.BigInteger.Operators#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#17)]  
  
 <span data-ttu-id="ccb84-952">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-952">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="ccb84-953">В некоторых языках можно также вызвать <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-953">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#18)]  
  
 <span data-ttu-id="ccb84-954">Если `left` — <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, или <xref:System.UInt32> , он неявно преобразуется в значение <xref:System.Int64> значение при выполнении операции.</span><span class="sxs-lookup"><span data-stu-id="ccb84-954">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="ccb84-955">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-955">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-956">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-956">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-957">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-957">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-958">Возвращает значение, определяющее, действительно ли значение <see cref="T:System.Numerics.BigInteger" /> больше или равно значению 64-битового знакового целого числа.</span><span class="sxs-lookup"><span data-stu-id="ccb84-958">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to a 64-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-959"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-959"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-960"><xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> Метод определяет операцию больше или равно-оператор для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-960">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-961">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-961">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#19)]
 [!code-vb[System.Numerics.BigInteger.Operators#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#19)]  
  
 <span data-ttu-id="ccb84-962">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-962">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="ccb84-963">В некоторых языках можно также вызвать <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-963">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#20)]  
  
 <span data-ttu-id="ccb84-964">Если `right` — <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, или <xref:System.UInt32> , он неявно преобразуется в значение <xref:System.Int64> значение при выполнении операции.</span><span class="sxs-lookup"><span data-stu-id="ccb84-964">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="ccb84-965">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-965">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-966">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-966">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-967">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-967">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-968">Возвращает значение, определяющее, действительно ли значение типа <see cref="T:System.Numerics.BigInteger" /> больше или равно другому значению типа <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-968">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-969"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-969"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-970"><xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> Метод определяет операцию больше или равно-оператор для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-970">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-971">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-971">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#22)]
 [!code-vb[System.Numeric.BigInteger.Class#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#22)]  
  
 <span data-ttu-id="ccb84-972">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-972">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="ccb84-973">В некоторых языках можно также вызвать <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-973">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#23)]  
  
 <span data-ttu-id="ccb84-974">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-974">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-975">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-975">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-976">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-976">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-977">Возвращает значение, определяющее, действительно ли значение <see cref="T:System.Numerics.BigInteger" /> больше или равно значению 64-битового целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-977">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to a 64-bit unsigned integer value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-978"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-978"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-979"><xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> Метод определяет операцию больше или равно-оператор для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-979">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-980">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-980">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#21)]
 [!code-vb[System.Numerics.BigInteger.Operators#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#21)]  
  
 <span data-ttu-id="ccb84-981">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-981">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="ccb84-982">В некоторых языках можно также вызвать <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-982">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#22)]  
  
 <span data-ttu-id="ccb84-983">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-983">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-984">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-984">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-985">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-985">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-986">Возвращает значение, определяющее, действительно ли 64-разрядное целое число без знака больше или равно значению <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-986">Returns a value that indicates whether a 64-bit unsigned integer is greater than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-987"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-987"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-988"><xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> Метод определяет операцию больше или равно-оператор для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-988">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-989">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-989">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#23)]
 [!code-vb[System.Numerics.BigInteger.Operators#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#23)]  
  
 <span data-ttu-id="ccb84-990">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-990">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="ccb84-991">В некоторых языках можно также вызвать <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-991">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#24)]  
  
 <span data-ttu-id="ccb84-992">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-992">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb84-993">Определяет неявное преобразование объекта типа <see cref="T:System.Numerics.BigInteger" /> в другой тип.</span><span class="sxs-lookup"><span data-stu-id="ccb84-993">Defines an implicit conversion between a <see cref="T:System.Numerics.BigInteger" /> object and another type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Byte) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : byte -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-994">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-994">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="ccb84-995">Определяет неявное преобразование значения типа byte без знака в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-995">Defines an implicit conversion of an unsigned byte to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-996">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-996">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-997">Дробная часть `value` параметр усекается до преобразования.</span><span class="sxs-lookup"><span data-stu-id="ccb84-997">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="ccb84-998">Для языков, которые не поддерживают неявные операторы, является альтернативным методом <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-998">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="ccb84-999">Перегрузки <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> метод определения типов, в который или из которого компилятор поддерживает автоматическое преобразование <xref:System.Numerics.BigInteger> значение без оператора явного приведения (в C#) или вызов функции преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ccb84-999">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="ccb84-1000">Они являются расширяющими преобразованиями, которые не привести к потере данных и не вызывают <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1000">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="ccb84-1001">Эта перегрузка позволяет компилятору обрабатывать преобразования из <xref:System.Byte> значение <xref:System.Numerics.BigInteger> значения, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1001">This overload lets the compiler handle conversions from a <xref:System.Byte> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#1)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#1)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Short) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(short value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int16 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-1002">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1002">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="ccb84-1003">Определяет неявное преобразование 16-битового знакового целого числа в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1003">Defines an implicit conversion of a signed 16-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1004">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1004">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1005">Для языков, которые не поддерживают неявные операторы, является альтернативным методом <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1005">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="ccb84-1006">Перегрузки <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> метод определения типов, в который или из которого компилятор поддерживает автоматическое преобразование <xref:System.Numerics.BigInteger> значение без оператора явного приведения (в C#) или вызов функции преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1006">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="ccb84-1007">Они являются расширяющими преобразованиями, которые не привести к потере данных и не вызывают <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1007">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="ccb84-1008">Эта перегрузка позволяет компилятору обрабатывать преобразования из <xref:System.Int16> значение <xref:System.Numerics.BigInteger> значения, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1008">This overload lets the compiler handle conversions from a <xref:System.Int16> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#2)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#2)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(int value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-1009">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1009">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="ccb84-1010">Определяет неявное преобразование 32-разрядного целого числа со знаком в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1010">Defines an implicit conversion of a signed 32-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1011">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1011">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1012">Для языков, которые не поддерживают неявные операторы, является альтернативным методом <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1012">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>  

 <span data-ttu-id="ccb84-1013">Перегрузки <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> метод определения типов, в который или из которого компилятор поддерживает автоматическое преобразование <xref:System.Numerics.BigInteger> значение без оператора явного приведения (в C#) или вызов функции преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1013">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="ccb84-1014">Они являются расширяющими преобразованиями, которые не привести к потере данных и не вызывают <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1014">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="ccb84-1015">Эта перегрузка позволяет компилятору обрабатывать преобразования из <xref:System.Int32> значение <xref:System.Numerics.BigInteger> значения, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1015">This overload lets the compiler handle conversions from a <xref:System.Int32> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#3)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#3)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Long) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(long value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int64 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-1016">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1016">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="ccb84-1017">Определяет неявное преобразование 64-разрядного целого числа со знаком в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1017">Defines an implicit conversion of a signed 64-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1018">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1018">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1019">Для языков, которые не поддерживают неявные операторы, является альтернативным методом <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1019">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29?displayProperty=nameWithType>.</span></span>   
 
 <span data-ttu-id="ccb84-1020">Перегрузки <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> метод определения типов, в который или из которого компилятор поддерживает автоматическое преобразование <xref:System.Numerics.BigInteger> значение без оператора явного приведения (в C#) или вызов функции преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1020">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="ccb84-1021">Они являются расширяющими преобразованиями, которые не привести к потере данных и не вызывают <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1021">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="ccb84-1022">Эта перегрузка позволяет компилятору обрабатывать преобразования из <xref:System.Int64> значение <xref:System.Numerics.BigInteger> значения, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1022">This overload lets the compiler handle conversions from a <xref:System.Int64> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#4)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#4)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As SByte) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : sbyte -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-1023">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1023">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="ccb84-1024">Определяет неявное преобразование 8-битового знакового целого числа в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1024">Defines an implicit conversion of an 8-bit signed integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
<span data-ttu-id="ccb84-1025">Этот интерфейс API CLS-несовместим.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1025">This API is not CLS-compliant.</span></span> <span data-ttu-id="ccb84-1026">Совместимая альтернатива — <see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1026">The compliant alternative is <see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1027">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1027">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1028">Для языков, которые не поддерживают неявные операторы, является альтернативным методом <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1028">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="ccb84-1029">Перегрузки <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> метод определения типов, в который или из которого компилятор поддерживает автоматическое преобразование <xref:System.Numerics.BigInteger> значение без оператора явного приведения (в C#) или вызов функции преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1029">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="ccb84-1030">Они являются расширяющими преобразованиями, которые не привести к потере данных и не вызывают <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1030">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="ccb84-1031">Эта перегрузка позволяет компилятору обрабатывать преобразования из <xref:System.SByte> значение <xref:System.Numerics.BigInteger> значения, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1031">This overload lets the compiler handle conversions from a <xref:System.SByte> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#5)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#5)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UShort) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint16 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-1032">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1032">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="ccb84-1033">Определяет неявное преобразование 16-битового целого числа без знака в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1033">Defines an implicit conversion of a 16-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
<span data-ttu-id="ccb84-1034">Этот интерфейс API CLS-несовместим.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1034">This API is not CLS-compliant.</span></span> <span data-ttu-id="ccb84-1035">Совместимая альтернатива — <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1035">The compliant alternative is <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1036">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1036">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1037">Для языков, которые не поддерживают неявные операторы, является альтернативным методом <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1037">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="ccb84-1038">Перегрузки <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> метод определения типов, в который или из которого компилятор поддерживает автоматическое преобразование <xref:System.Numerics.BigInteger> значение без оператора явного приведения (в C#) или вызов функции преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1038">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="ccb84-1039">Они являются расширяющими преобразованиями, которые не привести к потере данных и не вызывают <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1039">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="ccb84-1040">Эта перегрузка позволяет компилятору обрабатывать преобразования из <xref:System.UInt16> значение <xref:System.Numerics.BigInteger> значения, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1040">This overload lets the compiler handle conversions from a <xref:System.UInt16> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#6)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#6)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint32 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-1041">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1041">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="ccb84-1042">Определяет неявное преобразование 32-разрядного целого числа без знака в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1042">Defines an implicit conversion of a 32-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
<span data-ttu-id="ccb84-1043">Этот интерфейс API CLS-несовместим.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1043">This API is not CLS-compliant.</span></span> <span data-ttu-id="ccb84-1044">Совместимая альтернатива — <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1044">The compliant alternative is <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1045">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1045">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1046">Для языков, которые не поддерживают неявные операторы, является альтернативным методом <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1046">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="ccb84-1047">Перегрузки <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> метод определения типов, в который или из которого компилятор поддерживает автоматическое преобразование <xref:System.Numerics.BigInteger> значение без оператора явного приведения (в C#) или вызов функции преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1047">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="ccb84-1048">Они являются расширяющими преобразованиями, которые не привести к потере данных и не вызывают <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1048">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="ccb84-1049">Эта перегрузка позволяет компилятору обрабатывать преобразования из <xref:System.UInt32> значение <xref:System.Numerics.BigInteger> значения, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1049">This overload lets the compiler handle conversions from a <xref:System.UInt32> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#7)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#7)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As ULong) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint64 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-1050">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1050">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="ccb84-1051">Определяет неявное преобразование 64-разрядного целого числа без знака в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1051">Defines an implicit conversion of a 64-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
<span data-ttu-id="ccb84-1052">Этот интерфейс API CLS-несовместим.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1052">This API is not CLS-compliant.</span></span> <span data-ttu-id="ccb84-1053">Совместимая альтернатива — <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1053">The compliant alternative is <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1054">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1054">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1055">Для языков, которые не поддерживают неявные операторы, является альтернативным методом <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1055">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="ccb84-1056">Перегрузки <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> метод определения типов, в который или из которого компилятор поддерживает автоматическое преобразование <xref:System.Numerics.BigInteger> значение без оператора явного приведения (в C#) или вызов функции преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1056">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="ccb84-1057">Они являются расширяющими преобразованиями, которые не привести к потере данных и не вызывают <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1057">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="ccb84-1058">Эта перегрузка позволяет компилятору обрабатывать преобразования из <xref:System.UInt64> значение <xref:System.Numerics.BigInteger> значения, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1058">This overload lets the compiler handle conversions from a <xref:System.UInt64> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#8)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#8)]   

 ]]></format>
        </remarks>
        <altCompliant cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ++ (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Increment(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Increment (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ++(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Increment : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Increment value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-1059">Увеличиваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1059">The value to increment.</span></span></param>
        <summary><span data-ttu-id="ccb84-1060">Увеличивает значение <see cref="T:System.Numerics.BigInteger" /> на 1.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1060">Increments a <see cref="T:System.Numerics.BigInteger" /> value by 1.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1061">Значение параметра <paramref name="value" />, увеличенное на 1.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1061">The value of the <paramref name="value" /> parameter incremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1062"><xref:System.Numerics.BigInteger.op_Increment%2A> Метод определяет операцию увеличения для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1062">The <xref:System.Numerics.BigInteger.op_Increment%2A> method defines the increment operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1063">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1063">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#24)]  
  
 <span data-ttu-id="ccb84-1064">Некоторые языки (например, Visual Basic), не хватает оператора инкремента или не поддерживающих перегрузку операторов можно вызвать <xref:System.Numerics.BigInteger.op_Increment%2A> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1064">Some languages (such as Visual Basic) that lack an increment operator or do not support operator overloading can call the <xref:System.Numerics.BigInteger.op_Increment%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#25)]  
  
 <span data-ttu-id="ccb84-1065">Так как <xref:System.Numerics.BigInteger> объекты являются неизменяемыми, <xref:System.Numerics.BigInteger.op_Increment%2A> оператор создает новую <xref:System.Numerics.BigInteger> объект, значение которого является одним больше, чем <xref:System.Numerics.BigInteger> объекта, представленного `value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1065">Because <xref:System.Numerics.BigInteger> objects are immutable, the <xref:System.Numerics.BigInteger.op_Increment%2A> operator creates a new <xref:System.Numerics.BigInteger> object whose value is one more than the <xref:System.Numerics.BigInteger> object represented by `value`.</span></span> <span data-ttu-id="ccb84-1066">Таким образом, повторные вызовы <xref:System.Numerics.BigInteger.op_Increment%2A> может быть затратным.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1066">Therefore, repeated calls to <xref:System.Numerics.BigInteger.op_Increment%2A> may be expensive.</span></span>  
  
 <span data-ttu-id="ccb84-1067">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.Add%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1067">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Add%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Inequality">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb84-1068">Возвращает значение, определяющее, действительно ли два числовых значения не равны.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1068">Returns a value that indicates whether two numeric values are not equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : int64 * System.Numerics.BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-1069">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1069">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-1070">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1070">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-1071">Возвращает значение, определяющее, действительно ли 64-разрядное знаковое целое число и значение <see cref="T:System.Numerics.BigInteger" /> не равны.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1071">Returns a value that indicates whether a 64-bit signed integer and a <see cref="T:System.Numerics.BigInteger" /> value are not equal.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1072">Значение <see langword="true" />, если <paramref name="left" /> и <paramref name="right" /> не равны друг другу; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1072"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1073"><xref:System.Numerics.BigInteger.op_Inequality%2A> Метод определяет операцию неравенства для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1073">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1074">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1074">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#25)]
 [!code-vb[System.Numerics.BigInteger.Operators#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#25)]  
  
 <span data-ttu-id="ccb84-1075">Языки, которые не поддерживают пользовательские операторы можно проверить на предмет их неравенства с помощью одного из следующих способов:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1075">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="ccb84-1076">Вызов <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> экземпляр метода, который указывает связь между <xref:System.Numerics.BigInteger> и длинное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1076">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> instance method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and a signed long integer value.</span></span>  
  
-   <span data-ttu-id="ccb84-1077">Вызов <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> экземпляр метода и изменение его значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1077">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method and reversing its value.</span></span>  
  
 <span data-ttu-id="ccb84-1078">Если `left` — <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, или <xref:System.UInt32> , он неявно преобразуется в значение <xref:System.Int64> значение при выполнении операции.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1078">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.BigInteger * int64 -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-1079">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1079">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-1080">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1080">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-1081">Возвращает значение, определяющее, действительно ли значение <see cref="T:System.Numerics.BigInteger" /> и 64-разрядное знаковое целое число не равны.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1081">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a 64-bit signed integer are not equal.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1082">Значение <see langword="true" />, если <paramref name="left" /> и <paramref name="right" /> не равны друг другу; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1082"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1083"><xref:System.Numerics.BigInteger.op_Inequality%2A> Метод определяет операцию неравенства для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1083">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1084">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1084">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#26)]
 [!code-vb[System.Numerics.BigInteger.Operators#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#26)]  
  
 <span data-ttu-id="ccb84-1085">Языки, которые не поддерживают пользовательские операторы можно проверить на предмет их неравенства с помощью одного из следующих способов:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1085">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="ccb84-1086">Вызов <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> метод, который указывает на отношения между <xref:System.Numerics.BigInteger> и длинное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1086">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and a signed long integer value.</span></span>  
  
-   <span data-ttu-id="ccb84-1087">Вызов <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> метод и изменение его значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1087">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 <span data-ttu-id="ccb84-1088">Если `right` — <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, или <xref:System.UInt32> , он неявно преобразуется в значение <xref:System.Int64> значение при выполнении операции.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1088">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="ccb84-1089">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1089">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-1090">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1090">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-1091">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1091">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-1092">Возвращает значение, указывающее, различаются ли значения двух объектов <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1092">Returns a value that indicates whether two <see cref="T:System.Numerics.BigInteger" /> objects have different values.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1093">Значение <see langword="true" />, если <paramref name="left" /> и <paramref name="right" /> не равны друг другу; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1093"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1094"><xref:System.Numerics.BigInteger.op_Inequality%2A> Метод определяет операцию неравенства для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1094">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1095">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1095">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#26)]
 [!code-vb[System.Numeric.BigInteger.Class#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#26)]  
  
 <span data-ttu-id="ccb84-1096">Языки, которые не поддерживают пользовательские операторы можно проверить на предмет их неравенства с помощью одного из следующих способов:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1096">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="ccb84-1097">Вызов <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> метод, который показывает связь между двумя <xref:System.Numerics.BigInteger> объектов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1097">Calling the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method, which indicates the relationship between two <xref:System.Numerics.BigInteger> objects.</span></span>  
  
-   <span data-ttu-id="ccb84-1098">Вызов <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> метод и изменение его значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1098">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 <span data-ttu-id="ccb84-1099">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1099">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-1100">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1100">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-1101">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1101">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-1102">Возвращает значение, определяющее, действительно ли значение <see cref="T:System.Numerics.BigInteger" /> и 64-разрядное целое число без знака не равны.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1102">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a 64-bit unsigned integer are not equal.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1103">Значение <see langword="true" />, если <paramref name="left" /> и <paramref name="right" /> не равны друг другу; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1103"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1104"><xref:System.Numerics.BigInteger.op_Inequality%2A> Метод определяет операцию неравенства для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1104">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1105">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1105">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#27)]
 [!code-vb[System.Numerics.BigInteger.Operators#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#27)]  
  
 <span data-ttu-id="ccb84-1106">Языки, которые не поддерживают пользовательские операторы можно проверить на предмет их неравенства с помощью одного из следующих способов:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1106">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="ccb84-1107">Вызов <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> метод, который указывает на отношения между <xref:System.Numerics.BigInteger> и значение длинное целое без знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1107">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and an unsigned long integer value.</span></span>  
  
-   <span data-ttu-id="ccb84-1108">Вызов <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> метод и изменение его значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1108">Calling the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-1109">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1109">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-1110">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1110">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-1111">Возвращает значение, определяющее, действительно ли 64-разрядное целое число без знака и значение <see cref="T:System.Numerics.BigInteger" /> не равны.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1111">Returns a value that indicates whether a 64-bit unsigned integer and a <see cref="T:System.Numerics.BigInteger" /> value are not equal.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1112">Значение <see langword="true" />, если <paramref name="left" /> и <paramref name="right" /> не равны друг другу; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1112"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1113"><xref:System.Numerics.BigInteger.op_Inequality%2A> Метод определяет операцию неравенства для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1113">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1114">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1114">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#28)]
 [!code-vb[System.Numerics.BigInteger.Operators#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#28)]  
  
 <span data-ttu-id="ccb84-1115">Языки, которые не поддерживают пользовательские операторы можно проверить на предмет их неравенства с помощью одного из следующих способов:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1115">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="ccb84-1116">Вызов <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> метод, который указывает на отношения между <xref:System.Numerics.BigInteger> и значение длинное целое без знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1116">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and an unsigned long integer value.</span></span>  
  
-   <span data-ttu-id="ccb84-1117">Вызов <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> метод и изменение его значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1117">Calling the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_LeftShift">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &lt;&lt; (System.Numerics.BigInteger value, int shift);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_LeftShift(valuetype System.Numerics.BigInteger value, int32 shift) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;&lt; (value As BigInteger, shift As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &lt;&lt;(System::Numerics::BigInteger value, int shift);" />
      <MemberSignature Language="F#" Value="static member ( &lt;&lt;&lt; ) : System.Numerics.BigInteger * int -&gt; System.Numerics.BigInteger" Usage="value &lt;&lt;&lt; shift" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="shift" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-1118">Значение, для которого необходимо выполнить побитовый сдвиг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1118">The value whose bits are to be shifted.</span></span></param>
        <param name="shift"><span data-ttu-id="ccb84-1119">Количество битов, на которое необходимо сдвинуть влево значение <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1119">The number of bits to shift <paramref name="value" /> to the left.</span></span></param>
        <summary><span data-ttu-id="ccb84-1120">Сдвигает значение <see cref="T:System.Numerics.BigInteger" /> на указанное число битов влево.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1120">Shifts a <see cref="T:System.Numerics.BigInteger" /> value a specified number of bits to the left.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1121">Значение, которое было сдвинуто влево на указанное число бит.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1121">A value that has been shifted to the left by the specified number of bits.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1122"><xref:System.Numerics.BigInteger.op_LeftShift%2A> Метод определяет операцию побитового оператора сдвига влево для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1122">The <xref:System.Numerics.BigInteger.op_LeftShift%2A> method defines the operation of the bitwise left-shift operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1123">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1123">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#29)]
 [!code-vb[System.Numerics.BigInteger.Operators#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#29)]  
  
> [!NOTE]
>  <span data-ttu-id="ccb84-1124">В отличие от Побитовая операция сдвига влево с примитивами целое число <xref:System.Numerics.BigInteger.op_LeftShift%2A> метод сохраняет входа исходного <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1124">Unlike the bitwise left-shift operation with integer primitives, the <xref:System.Numerics.BigInteger.op_LeftShift%2A> method preserves the sign of the original <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="ccb84-1125">Языки, не поддерживают пользовательские операторы могут выполнять операцию побитового сдвига влево путем умножения `value` по `BigInteger.Pow(2, shift)`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1125">Languages that do not support custom operators can perform a bitwise left-shift operation by multiplying `value` by `BigInteger.Pow(2, shift)`.</span></span> <span data-ttu-id="ccb84-1126">Следующий пример показывает, что результаты идентичны результатам с помощью этого оператора.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1126">The following example shows that the results are identical to the results of using this operator.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#30)]
 [!code-vb[System.Numerics.BigInteger.Operators#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_LessThan">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb84-1127">Возвращает значение, определяющее, действительно ли заданное значение меньше второго заданного значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1127">Returns a value that indicates whether a specified value is less than a second specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-1128">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1128">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-1129">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1129">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-1130">Возвращает значение, определяющее, действительно 64-разрядное знаковое целое число меньше значения <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1130">Returns a value that indicates whether a 64-bit signed integer is less than a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1131"><see langword="true" />, если значение <paramref name="left" /> меньше значения <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1131"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1132"><xref:System.Numerics.BigInteger.op_LessThan%2A> Метод определяет операцию "меньше" оператор для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1132">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1133">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1133">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#31](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#31)]
 [!code-vb[System.Numerics.BigInteger.Operators#31](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#31)]  
  
 <span data-ttu-id="ccb84-1134">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1134">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="ccb84-1135">В некоторых языках можно также вызвать <xref:System.Numerics.BigInteger.op_LessThan%28System.Int64%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1135">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#32)]  
  
 <span data-ttu-id="ccb84-1136">Если `left` — <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, или <xref:System.UInt32> , он неявно преобразуется в значение <xref:System.Int64> значение при выполнении операции.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1136">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="ccb84-1137">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1137">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-1138">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1138">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-1139">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1139">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-1140">Возвращает значение, определяющее, действительно ли значение <see cref="T:System.Numerics.BigInteger" /> меньше 64-битового знакового целого числа.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1140">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1141"><see langword="true" />, если значение <paramref name="left" /> меньше значения <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1141"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1142"><xref:System.Numerics.BigInteger.op_LessThan%2A> Метод определяет операцию "меньше" оператор для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1142">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1143">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1143">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#33)]
 [!code-vb[System.Numerics.BigInteger.Operators#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#33)]  
  
 <span data-ttu-id="ccb84-1144">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1144">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="ccb84-1145">В некоторых языках можно также вызвать <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Int64%29> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1145">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#34)]  
  
 <span data-ttu-id="ccb84-1146">Если `right` — <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, или <xref:System.UInt32> , он неявно преобразуется в значение <xref:System.Int64> значение при выполнении операции.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1146">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="ccb84-1147">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1147">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-1148">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1148">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-1149">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1149">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-1150">Возвращает значение, определяющее, действительно ли значение типа <see cref="T:System.Numerics.BigInteger" /> меньше другого значения типа <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1150">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1151"><see langword="true" />, если значение <paramref name="left" /> меньше значения <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1151"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1152"><xref:System.Numerics.BigInteger.op_LessThan%2A> Метод определяет операцию "меньше" оператор для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1152">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1153">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1153">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#27)]
 [!code-vb[System.Numeric.BigInteger.Class#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#27)]  
  
 <span data-ttu-id="ccb84-1154">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1154">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="ccb84-1155">В некоторых языках можно также вызвать <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1155">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#28)]  
  
 <span data-ttu-id="ccb84-1156">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1156">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-1157">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1157">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-1158">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1158">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-1159">Возвращает значение, определяющее, действительно ли значение <see cref="T:System.Numerics.BigInteger" /> меньше 64-битового целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1159">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1160"><see langword="true" />, если значение <paramref name="left" /> меньше значения <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1160"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1161"><xref:System.Numerics.BigInteger.op_LessThan%2A> Метод определяет операцию "меньше" оператор для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1161">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1162">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1162">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#35](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#35)]
 [!code-vb[System.Numerics.BigInteger.Operators#35](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#35)]  
  
 <span data-ttu-id="ccb84-1163">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1163">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="ccb84-1164">Они также могут вызывать <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1164">They can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#36](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#36)]  
  
 <span data-ttu-id="ccb84-1165">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1165">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-1166">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1166">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-1167">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1167">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-1168">Возвращает значение, определяющее, действительно ли 64-разрядное целое число без знака меньше значения <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1168">Returns a value that indicates whether a 64-bit unsigned integer is less than a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1169"><see langword="true" />, если значение <paramref name="left" /> меньше значения <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1169"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1170"><xref:System.Numerics.BigInteger.op_LessThan%2A> Метод определяет операцию "меньше" оператор для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1170">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1171">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1171">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#37](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#37)]
 [!code-vb[System.Numerics.BigInteger.Operators#37](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#37)]  
  
 <span data-ttu-id="ccb84-1172">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1172">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="ccb84-1173">Они также могут вызывать <xref:System.Numerics.BigInteger.op_LessThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1173">They can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#38](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#38)]  
  
 <span data-ttu-id="ccb84-1174">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1174">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_LessThanOrEqual">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb84-1175">Возвращает значение, определяющее, действительно ли заданное значение меньше или равно другому заданному значению.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1175">Returns a value that indicates whether a specified value is less than or equal to another specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-1176">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1176">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-1177">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1177">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-1178">Возвращает значение, определяющее, действительно ли 64-разрядное знаковое целое число меньше или равно значению <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1178">Returns a value that indicates whether a 64-bit signed integer is less than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1179"><see langword="true" />, если значение <paramref name="left" /> меньше или равно значению <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1179"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1180"><xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> Метод определяет операцию меньше или равно оператору для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1180">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1181">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1181">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#39](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#39)]
 [!code-vb[System.Numerics.BigInteger.Operators#39](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#39)]  
  
 <span data-ttu-id="ccb84-1182">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1182">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="ccb84-1183">Они также могут вызывать <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1183">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#40](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#40)]  
  
 <span data-ttu-id="ccb84-1184">Если `left` — <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, или <xref:System.UInt32> , он неявно преобразуется в значение <xref:System.Int64> значение при выполнении операции.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1184">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="ccb84-1185">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1185">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-1186">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1186">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-1187">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1187">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-1188">Возвращает значение, определяющее, действительно ли значение <see cref="T:System.Numerics.BigInteger" /> меньше или равно 64-разрядному знаковому целому числу.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1188">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1189"><see langword="true" />, если значение <paramref name="left" /> меньше или равно значению <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1189"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1190"><xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> Метод определяет операцию меньше или равно оператору для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1190">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1191">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1191">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#41](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#41)]
 [!code-vb[System.Numerics.BigInteger.Operators#41](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#41)]  
  
 <span data-ttu-id="ccb84-1192">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1192">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="ccb84-1193">Они также могут вызывать <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1193">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#42)]  
  
 <span data-ttu-id="ccb84-1194">Если `right` — <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, или <xref:System.UInt32> , он неявно преобразуется в значение <xref:System.Int64> значение при выполнении операции.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1194">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="ccb84-1195">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1195">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-1196">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1196">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-1197">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1197">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-1198">Возвращает значение, определяющее, действительно ли значение типа <see cref="T:System.Numerics.BigInteger" /> меньше или равно другому значению типа <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1198">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1199"><see langword="true" />, если значение <paramref name="left" /> меньше или равно значению <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1199"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1200"><xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> Метод определяет операцию меньше или равно оператору для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1200">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1201">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1201">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#29)]
 [!code-vb[System.Numeric.BigInteger.Class#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#29)]  
  
 <span data-ttu-id="ccb84-1202">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.Compare%2A> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1202">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A> method instead.</span></span> <span data-ttu-id="ccb84-1203">Они также могут вызывать <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1203">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#30)]  
  
 <span data-ttu-id="ccb84-1204">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1204">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-1205">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1205">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-1206">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1206">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-1207">Возвращает значение, определяющее, действительно ли значение <see cref="T:System.Numerics.BigInteger" /> меньше или равно 64-разрядному целому числу без знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1207">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1208"><see langword="true" />, если значение <paramref name="left" /> меньше или равно значению <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1208"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1209"><xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> Метод определяет операцию меньше или равно оператору для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1209">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1210">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1210">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#43](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#43)]
 [!code-vb[System.Numerics.BigInteger.Operators#43](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#43)]  
  
 <span data-ttu-id="ccb84-1211">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1211">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="ccb84-1212">Они также могут вызывать <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1212">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#44](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#44)]  
  
 <span data-ttu-id="ccb84-1213">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1213">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-1214">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1214">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-1215">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1215">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="ccb84-1216">Возвращает значение, определяющее, действительно ли 64-разрядное целое число без знака меньше или равно значению <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1216">Returns a value that indicates whether a 64-bit unsigned integer is less than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1217"><see langword="true" />, если значение <paramref name="left" /> меньше или равно значению <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1217"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1218"><xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> Метод определяет операцию меньше или равно оператору для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1218">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1219">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1219">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#45](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#45)]
 [!code-vb[System.Numerics.BigInteger.Operators#45](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#45)]  
  
 <span data-ttu-id="ccb84-1220">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1220">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="ccb84-1221">Они также могут вызывать <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1221">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#46](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#46)]  
  
 <span data-ttu-id="ccb84-1222">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1222">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_Modulus">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator % (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Modulus(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Mod (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator %(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member ( % ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="dividend % divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="ccb84-1223">Значение, которое необходимо разделить.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1223">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="ccb84-1224">Значение, на которое необходимо разделить.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1224">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="ccb84-1225">Возвращает остаток от деления двух заданных значений <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1225">Returns the remainder that results from division with two specified <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1226">Остаток от деления.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1226">The remainder that results from the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1227"><xref:System.Numerics.BigInteger.op_Modulus%2A> Метод определяет операцию оператор modulus для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1227">The <xref:System.Numerics.BigInteger.op_Modulus%2A> method defines the operation of the modulus operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1228">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1228">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#31](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#31)]
 [!code-vb[System.Numeric.BigInteger.Class#31](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#31)]  
  
 <span data-ttu-id="ccb84-1229">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.Remainder%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1229">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Remainder%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 <span data-ttu-id="ccb84-1230">Знак значения, возвращенного в операции получения модуля зависит от знака `dividend`: Если `dividend` задано положительное число, в операции получения модуля возвращает положительный результат; если оно отрицательное, в операции получения модуля отрицательного результата.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1230">The sign of the value returned by the modulus operation depends on the sign of `dividend`: If `dividend` is positive, the modulus operation returns a positive result; if it is negative, the modulus operation returns a negative result.</span></span> <span data-ttu-id="ccb84-1231">Поведение операции получения модуля с <xref:System.Numerics.BigInteger> значения идентична операции модуля с другими целочисленными типами.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1231">The behavior of the modulus operation with <xref:System.Numerics.BigInteger> values is identical to the modulus operation with other integral types.</span></span>  
  
 <span data-ttu-id="ccb84-1232">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.Remainder%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1232">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Remainder%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="ccb84-1233">Значение параметра <paramref name="divisor" /> равно нулю (0).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1233"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator * (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Multiply(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator *(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left * right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-1234">Первое значение для перемножения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1234">The first value to multiply.</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-1235">Второе значение для перемножения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1235">The second value to multiply.</span></span></param>
        <summary><span data-ttu-id="ccb84-1236">Умножает два заданных значения <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1236">Multiplies two specified <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1237">Произведение <paramref name="left" /> на <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1237">The product of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1238"><xref:System.Numerics.BigInteger.op_Multiply%2A> Метод определяет операцию оператора умножения для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1238">The <xref:System.Numerics.BigInteger.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1239">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1239">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#11)]
 [!code-vb[System.Numeric.BigInteger.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#11)]  
  
 <span data-ttu-id="ccb84-1240">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1240">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_OnesComplement">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ~ (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_OnesComplement(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Not (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ~(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_OnesComplement : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_OnesComplement value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-1241">Целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1241">An integer value.</span></span></param>
        <summary><span data-ttu-id="ccb84-1242">Возвращает результат битовой операции дополнения до единицы для значения <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1242">Returns the bitwise one's complement of a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1243">Битовое дополнение значения <paramref name="value" /> до единицы.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1243">The bitwise one's complement of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1244"><xref:System.Numerics.BigInteger.op_OnesComplement%2A> Метод определяет операцию побитового оператор дополнения для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1244">The <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method defines the operation of the bitwise one's complement operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1245">Побитовое обращает оператор дополнения каждый бит в числовое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1245">The bitwise one's complement operator reverses each bit in a numeric value.</span></span> <span data-ttu-id="ccb84-1246">То есть биты `value` , которые 0 присваивается значение 1, в результате, а биты, равные 1 задается значение 0, в результате.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1246">That is, bits in `value` that are 0 are set to 1 in the result, and bits that are 1 are set to 0 in the result.</span></span> <span data-ttu-id="ccb84-1247"><xref:System.Numerics.BigInteger.op_OnesComplement%2A> Метод включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1247">The <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OnesComplement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/cs/OnesComplement1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.OnesComplement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/vb/OnesComplement1.vb#1)]  
  
 <span data-ttu-id="ccb84-1248">Языки, которые не поддерживают пользовательские операторы могут иметь возможность вызывать <xref:System.Numerics.BigInteger.op_OnesComplement%2A> метод напрямую для выполнения битовую операцию дополнения до единицы.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1248">Languages that do not support custom operators may be able to call the <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method directly to perform a bitwise one's complement operation.</span></span> <span data-ttu-id="ccb84-1249">Например:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1249">For example:</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.OnesComplement#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/vb/onescomplement2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_RightShift">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &gt;&gt; (System.Numerics.BigInteger value, int shift);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_RightShift(valuetype System.Numerics.BigInteger value, int32 shift) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;&gt; (value As BigInteger, shift As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &gt;&gt;(System::Numerics::BigInteger value, int shift);" />
      <MemberSignature Language="F#" Value="static member ( &gt;&gt;&gt; ) : System.Numerics.BigInteger * int -&gt; System.Numerics.BigInteger" Usage="value &gt;&gt;&gt; shift" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="shift" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-1250">Значение, для которого необходимо выполнить побитовый сдвиг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1250">The value whose bits are to be shifted.</span></span></param>
        <param name="shift"><span data-ttu-id="ccb84-1251">Количество битов, на которое необходимо сдвинуть <paramref name="value" /> вправо.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1251">The number of bits to shift <paramref name="value" /> to the right.</span></span></param>
        <summary><span data-ttu-id="ccb84-1252">Сдвигает значение <see cref="T:System.Numerics.BigInteger" /> на указанное число битов вправо.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1252">Shifts a <see cref="T:System.Numerics.BigInteger" /> value a specified number of bits to the right.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1253">Значение, которое было сдвинуто вправо на указанное число бит.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1253">A value that has been shifted to the right by the specified number of bits.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1254"><xref:System.Numerics.BigInteger.op_RightShift%2A> Метод определяет операцию побитового оператора сдвига вправо для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1254">The <xref:System.Numerics.BigInteger.op_RightShift%2A> method defines the operation of the bitwise right-shift operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1255">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1255">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#47](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/RightShift1.cs#47)]
 [!code-vb[System.Numerics.BigInteger.Operators#47](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#47)]  
  
 <span data-ttu-id="ccb84-1256">Языки, не поддерживают пользовательские операторы могут выполнять операцию побитового сдвига вправо путем деления `value` по `BigInteger.Pow(2, shift)` и вычитается 1 раз `shift` для отрицательных значений.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1256">Languages that do not support custom operators can perform a bitwise right-shift operation by dividing `value` by `BigInteger.Pow(2, shift)` and subtracting 1 times `shift` for negative values.</span></span> <span data-ttu-id="ccb84-1257">Следующий пример показывает, что результаты идентичны результатам с помощью этого оператора.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1257">The following example shows that the results are identical to the results of using this operator.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#48](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/RightShift1.cs#48)]
 [!code-vb[System.Numerics.BigInteger.Operators#48](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#48)]  
  
 <span data-ttu-id="ccb84-1258">Если `shift` больше или равно числу битов в положительное <xref:System.Numerics.BigInteger> значение, результат операции сдвига вправо — <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1258">If `shift` is greater than or equal to the number of bits in a positive <xref:System.Numerics.BigInteger> value, the result of the right-shift operation is <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ccb84-1259">Если `shift` больше, чем число битов в отрицательное <xref:System.Numerics.BigInteger> значение, результат операции сдвига вправо — <xref:System.Numerics.BigInteger.MinusOne%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1259">If `shift` is greater than the number of bits in a negative <xref:System.Numerics.BigInteger> value, the result of the right-shift operation is <xref:System.Numerics.BigInteger.MinusOne%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator - (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Subtraction(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator -(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left - right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-1260">Значение, из которого следует вычитать (уменьшаемое).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1260">The value to subtract from (the minuend).</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-1261">Значение для вычитания (вычитаемое).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1261">The value to subtract (the subtrahend).</span></span></param>
        <summary><span data-ttu-id="ccb84-1262">Вычитает значение <see cref="T:System.Numerics.BigInteger" /> из другого значения <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1262">Subtracts a <see cref="T:System.Numerics.BigInteger" /> value from another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1263">Результат вычитания <paramref name="right" /> из <paramref name="left" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1263">The result of subtracting <paramref name="right" /> from <paramref name="left" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1264"><xref:System.Numerics.BigInteger.op_Subtraction%2A> Метод определяет операцию от оператора вычитания для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1264">The <xref:System.Numerics.BigInteger.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1265">В результате следующий код:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1265">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#14)]
 [!code-vb[System.Numeric.BigInteger.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#14)]  
  
 <span data-ttu-id="ccb84-1266">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.Subtract%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1266">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Subtract%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 <span data-ttu-id="ccb84-1267">Эквивалентный метод для этого оператора является <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1267">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator - (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_UnaryNegation(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator -(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="- value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-1268">Инвертируемое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1268">The value to negate.</span></span></param>
        <summary><span data-ttu-id="ccb84-1269">Меняет знак указанного значения BigInteger.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1269">Negates a specified BigInteger value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1270">Результат умножения параметра <paramref name="value" /> на минус единицу (-1).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1270">The result of the <paramref name="value" /> parameter multiplied by negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1271"><xref:System.Numerics.BigInteger.op_UnaryNegation%2A> Метод определяет операцию оператор унарного отрицания (или оператор аддитивную инверсию) для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1271">The <xref:System.Numerics.BigInteger.op_UnaryNegation%2A> method defines the operation of the unary negation operator (or the additive inverse operator) for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1272">Операция создаст значение, которое приводит 0 (ноль), если он добавляется в исходный номер.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1272">The operation produces a value that results in 0 (zero) when it is added to the original number.</span></span> <span data-ttu-id="ccb84-1273">Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.Numerics.BigInteger.Negate%2A> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1273">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Negate%2A> method instead.</span></span>  
  
 <span data-ttu-id="ccb84-1274">Имеет эквивалентный метод для этого оператора <xref:System.Numerics.BigInteger.Negate%28System.Numerics.BigInteger%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ccb84-1274">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Negate%28System.Numerics.BigInteger%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="ccb84-1275">В следующем примере показано три разных способа Инвертируемое значение <xref:System.Numerics.BigInteger> объекта.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1275">The following example illustrates three different ways to negate the value of a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#16)]
 [!code-vb[System.Numeric.BigInteger.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator + (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_UnaryPlus(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator +(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member ( ~+ ) : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="+ value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-1276">Целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1276">An integer value.</span></span></param>
        <summary><span data-ttu-id="ccb84-1277">Возвращает значение операнда <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1277">Returns the value of the <see cref="T:System.Numerics.BigInteger" /> operand.</span></span> <span data-ttu-id="ccb84-1278">(Знак операнда не изменяется.)</span><span class="sxs-lookup"><span data-stu-id="ccb84-1278">(The sign of the operand is unchanged.)</span></span></summary>
        <returns><span data-ttu-id="ccb84-1279">Значение операнда <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1279">The value of the <paramref name="value" /> operand.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1280"><xref:System.Numerics.BigInteger.op_UnaryPlus%2A> Метод определяет операцию положительное унарный оператор для <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1280">The <xref:System.Numerics.BigInteger.op_UnaryPlus%2A> method defines the operation of the unary positive operator for <xref:System.Numerics.BigInteger> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb84-1281">Преобразует строковое представление числа в его эквивалент типа <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1281">Converts the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-1282">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1282">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="ccb84-1283">Преобразует строковое представление числа в его эквивалент типа <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1283">Converts the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1284">Значение, эквивалентное числу, которое задается параметром <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1284">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1285">`value` Параметр должен иметь строковое представление числа в следующей форме.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1285">The `value` parameter should be the string representation of a number in the following form.</span></span>  
  
 <span data-ttu-id="ccb84-1286">[*ws*] [*входа*]*цифр*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="ccb84-1286">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="ccb84-1287">Элементы в квадратных скобках ([и]) являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1287">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ccb84-1288">Каждый из элементов описан в таблице ниже.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1288">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ccb84-1289">Элемент</span><span class="sxs-lookup"><span data-stu-id="ccb84-1289">Element</span></span>|<span data-ttu-id="ccb84-1290">Описание</span><span class="sxs-lookup"><span data-stu-id="ccb84-1290">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ccb84-1291">*ws*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1291">*ws*</span></span>|<span data-ttu-id="ccb84-1292">Необязательный пробел.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1292">Optional white space.</span></span>|  
|<span data-ttu-id="ccb84-1293">*sign*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1293">*sign*</span></span>|<span data-ttu-id="ccb84-1294">Необязательный знак.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1294">An optional sign.</span></span> <span data-ttu-id="ccb84-1295">Допустимые знаки определяются по <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> и <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> свойства текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1295">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="ccb84-1296">*digits*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1296">*digits*</span></span>|<span data-ttu-id="ccb84-1297">Последовательность цифр в диапазоне от 0 до 9.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1297">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="ccb84-1298">Все начальные нули пропускаются.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1298">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="ccb84-1299">Строка, заданная `value` параметр интерпретируется с использованием <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> стиля.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1299">The string specified by the `value` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="ccb84-1300">Он не может содержать разделители групп или десятичного разделителя, и он не может иметь дробную часть.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1300">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="ccb84-1301">`value` Анализируется с использованием сведений о форматировании в <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> , инициализируемый для текущего языка и региональных параметров системы.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1301">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> object that is initialized for the current system culture.</span></span> <span data-ttu-id="ccb84-1302">Дополнительные сведения см. в разделе <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1302">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ccb84-1303">Чтобы проанализировать строку с помощью сведений о форматировании для определенного языка и региональных параметров, используйте <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1303">To parse a string by using the formatting information of a specific culture, use the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ccb84-1304">При использовании <xref:System.Numerics.BigInteger.Parse%2A> метод для обратного преобразования строкового представления объекта <xref:System.Numerics.BigInteger> значение, которое было выходные <xref:System.Numerics.BigInteger.ToString%2A> метод, следует использовать <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> метод с помощью описателя формата «R» для создания строкового представления <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1304">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="ccb84-1305">В противном случае — строковое представление <xref:System.Numerics.BigInteger> сохраняет только 50 наиболее значимых цифр, исходное значение, и данные могут быть потеряны, если вы используете <xref:System.Numerics.BigInteger.Parse%2A> метод восстановления <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1305">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-1306">В следующем примере используется <xref:System.Numerics.BigInteger.Parse%28System.String%29> метод для создания экземпляра два <xref:System.Numerics.BigInteger> объектов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1306">The following example uses the <xref:System.Numerics.BigInteger.Parse%28System.String%29> method to instantiate two <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="ccb84-1307">Умножает каждый объект на другое, а затем вызывает <xref:System.Numerics.BigInteger.Compare%2A> метод, чтобы определить связь между двумя значениями.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1307">It multiplies each object by another number and then calls the <xref:System.Numerics.BigInteger.Compare%2A> method to determine the relationship between the two values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ccb84-1308"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1308"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ccb84-1309"><paramref name="value" /> имеет неправильный формат.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1309"><paramref name="value" /> is not in the correct format.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, style As NumberStyles) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-1310">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1310">A string that contains a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="ccb84-1311">Побитовое сочетание значений перечисления, которое показывает разрешенный формат параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1311">A bitwise combination of the enumeration values that specify the permitted format of <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="ccb84-1312">Преобразует строковое представление числа с указанным стилем в его эквивалент в формате <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1312">Converts the string representation of a number in a specified style to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1313">Значение, эквивалентное числу, которое задается параметром <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1313">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1314">`style` Параметр определяет элементы стиля (например, пробел, символ знак плюс или минус, символ-разделитель групп или символ десятичной запятой), которые разрешены в `value` параметр для успешного выполнения операции синтаксического анализа.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1314">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="ccb84-1315">`styles` должен представлять собой сочетание битовых флагов из <xref:System.Globalization.NumberStyles> перечисления.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1315">`styles` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="ccb84-1316">`style` Параметр делает этот метод перегрузки в полезно, когда `value` содержит строковое представление шестнадцатеричного значения, в том случае, если представленный в системе счисления (десятичное или шестнадцатеричное) `value` становится известным только во время выполнения, или если вы хотите запретить пробел или символ знака в `value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1316">The `style` parameter makes this method overload useful when `value` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `value` is known only at run time, or when you want to disallow white space or a sign symbol in `value`.</span></span>  
  
 <span data-ttu-id="ccb84-1317">В зависимости от значения `style`, `value` параметр может содержать следующие элементы:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1317">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="ccb84-1318">[*ws*] [*$*] [*входа*] [*цифр*,]*цифр*[. *цифры_дробной_части*] [E [*входа*]*экспоненциальные_цифры*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="ccb84-1318">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="ccb84-1319">Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, `value` параметр может содержать следующие элементы:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1319">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `value` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="ccb84-1320">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="ccb84-1320">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="ccb84-1321">Элементы в квадратных скобках ([и]) являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1321">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ccb84-1322">Каждый из элементов описан в таблице ниже.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1322">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ccb84-1323">Элемент</span><span class="sxs-lookup"><span data-stu-id="ccb84-1323">Element</span></span>|<span data-ttu-id="ccb84-1324">Описание</span><span class="sxs-lookup"><span data-stu-id="ccb84-1324">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ccb84-1325">*ws*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1325">*ws*</span></span>|<span data-ttu-id="ccb84-1326">Необязательный пробел.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1326">Optional white space.</span></span> <span data-ttu-id="ccb84-1327">Пробелы могут отображаться в начале `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> флаг и может отображаться в конце `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1327">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="ccb84-1328">Символ валюты.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1328">A culture-specific currency symbol.</span></span> <span data-ttu-id="ccb84-1329">Его положение в строке определяется <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> и <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> свойства текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1329">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="ccb84-1330">Символ валюты для текущего языка и региональных параметров может встречаться в `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1330">The current culture's currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb84-1331">*sign*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1331">*sign*</span></span>|<span data-ttu-id="ccb84-1332">Необязательный знак.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1332">An optional sign.</span></span> <span data-ttu-id="ccb84-1333">Знак может располагаться в начале `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> флаг и может отображаться в конце `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1333">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ccb84-1334">Можно использовать скобки в `value` указывает отрицательное значение, если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1334">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb84-1335">*digits*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1335">*digits*</span></span><br /><br /> <span data-ttu-id="ccb84-1336">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1336">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="ccb84-1337">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1337">*exponential_digits*</span></span>|<span data-ttu-id="ccb84-1338">Последовательность цифр от 0 до 9.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1338">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="ccb84-1339">Для *цифры_дробной_части*только из цифр 0 является допустимым.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1339">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="ccb84-1340">*,*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1340">*,*</span></span>|<span data-ttu-id="ccb84-1341">Символ разделителя групп, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1341">A culture-specific group separator symbol.</span></span> <span data-ttu-id="ccb84-1342">Разделитель групп текущего языка и региональных параметров может встречаться в `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1342">The current culture's group separator can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb84-1343">*.*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1343">*.*</span></span>|<span data-ttu-id="ccb84-1344">Символ десятичной запятой для конкретного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1344">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="ccb84-1345">Символ десятичной запятой текущего языка и региональных параметров может содержаться в `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1345">The current culture's decimal point symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ccb84-1346">Только цифры 0 может отображаться в виде дробного числа синтаксического анализа для успешного выполнения операции; Если *цифры_дробной_части* включает любые другие цифры, <xref:System.FormatException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1346">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="ccb84-1347">E</span><span class="sxs-lookup"><span data-stu-id="ccb84-1347">E</span></span>|<span data-ttu-id="ccb84-1348">«E» или «E» знаком, который указывает, что значение будет представлено в экспоненциальной нотации (научный).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1348">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="ccb84-1349">`value` Параметр может представлять число в экспоненциальном представлении, если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1349">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb84-1350">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1350">*hexdigits*</span></span>|<span data-ttu-id="ccb84-1351">Последовательность шестнадцатеричных цифр от 0 до f или от 0 до F.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1351">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="ccb84-1352">Символы (от U + 0000) завершающий NUL в `s` пропускаются операцией анализа, независимо от значения `style` аргумент.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1352">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="ccb84-1353">Строка с только цифры (который соответствует <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> стиля) всегда успешно выполняет синтаксический анализ.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1353">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="ccb84-1354">Большинство оставшихся <xref:System.Globalization.NumberStyles> члены управляют элементами, которые могут присутствовать, но необязательно должны присутствовать во входной строке.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1354">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="ccb84-1355">В следующей таблице показаны как отдельные <xref:System.Globalization.NumberStyles> члены влияют на элементы, которые могут присутствовать в `value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1355">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="ccb84-1356">Значение`NumberStyles` </span><span class="sxs-lookup"><span data-stu-id="ccb84-1356">`NumberStyles` value</span></span>|<span data-ttu-id="ccb84-1357">Элементы, допустимые в `value` помимо цифр</span><span class="sxs-lookup"><span data-stu-id="ccb84-1357">Elements permitted in `value` in addition to digits</span></span>|  
|--------------------------|---------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="ccb84-1358">*Цифр* только элемент.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1358">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="ccb84-1359">Десятичная точка (.) и *дробной части* элементов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1359">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="ccb84-1360">«E» или «E» знаком, который указывает экспоненциальное представление, вместе с *экспоненциальные_цифры*.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1360">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="ccb84-1361">*Ws* элемент в начале `value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1361">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="ccb84-1362">*Ws* элемент в конце `value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1362">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="ccb84-1363">*Входа* элемент в начале `value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1363">The *sign* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="ccb84-1364">*Входа* элемент в конце `value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1364">The *sign* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="ccb84-1365">*Входа* элемент в скобки, заключив числовое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1365">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="ccb84-1366">Элемент группы разрядов ().</span><span class="sxs-lookup"><span data-stu-id="ccb84-1366">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="ccb84-1367">Элемент валюты ($).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1367">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="ccb84-1368">Все элементы.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1368">All elements.</span></span> <span data-ttu-id="ccb84-1369">Тем не менее `value` не может представлять шестнадцатеричное число или число в экспоненциальном представлении.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1369">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="ccb84-1370">*Ws* элемент в начале или конце `value`, *входа* в начале `value`и десятичной запятой (*.*) символов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1370">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="ccb84-1371">`value` Параметр можно также использовать экспоненциальное представление.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1371">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="ccb84-1372">`ws`, `sign`, Разделитель групп (*,*) и десятичной запятой (*.*) элементов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1372">The `ws`, `sign`, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="ccb84-1373">Все элементы.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1373">All elements.</span></span> <span data-ttu-id="ccb84-1374">Тем не менее `value` не может представлять шестнадцатеричное число.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1374">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="ccb84-1375">При использовании <xref:System.Numerics.BigInteger.Parse%2A> метод для обратного преобразования строкового представления объекта <xref:System.Numerics.BigInteger> значение, которое было выходные <xref:System.Numerics.BigInteger.ToString%2A> метод, следует использовать <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> метод с помощью описателя формата «R» для создания строкового представления <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1375">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="ccb84-1376">В противном случае — строковое представление <xref:System.Numerics.BigInteger> сохраняет только 50 наиболее значимых цифр, исходное значение, и данные могут быть потеряны, если вы используете <xref:System.Numerics.BigInteger.Parse%2A> метод восстановления <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1376">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="ccb84-1377">В отличие от других <xref:System.Globalization.NumberStyles> значения, которые позволяют, но не требуют наличия определенного стиля элементов в `value`, <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> значение стиля означает, что отдельные цифры в `value` всегда интерпретируется как шестнадцатеричные символы.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1377">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for, but do not require, the presence of particular style elements in `value`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `value` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="ccb84-1378">Допустимые шестнадцатеричные цифры символы являются 0-9, A-F и a-f.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1378">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="ccb84-1379">Только другие флаги, которые могут быть объединены с `style` являются <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> и <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1379">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ccb84-1380">( <xref:System.Globalization.NumberStyles> Перечисления включает стили составного числа, <xref:System.Globalization.NumberStyles.HexNumber>, включающий в себя оба флага пустого пространства.)</span><span class="sxs-lookup"><span data-stu-id="ccb84-1380">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ccb84-1381">Если `value` является строковым представлением шестнадцатеричного числа, он не может начинаться с описателей (таких как `0x` или `&h`), отличающее его как шестнадцатеричное число.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1381">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="ccb84-1382">Это приводит к сбою преобразования.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1382">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="ccb84-1383">Если `value` является шестнадцатеричной строки, <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> метод интерпретирует `value` как отрицательное число, хранятся с помощью двух дополнением представление, в случае его первых двух шестнадцатеричных цифр больше или равно `0x80`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1383">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="ccb84-1384">Другими словами, этот метод интерпретирует самого старшего бита первого байта в `value` называется знаковым битом.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1384">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="ccb84-1385">Чтобы убедиться в том, что шестнадцатеричной строки интерпретируется правильно как положительное число, первая цифра в `value` должен иметь нулевое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1385">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="ccb84-1386">Например, этот метод интерпретирует `0x80` как отрицательное значение, но он интерпретирует либо `0x080` или `0x0080` как положительное значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1386">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="ccb84-1387">В следующем примере показано различие между шестнадцатеричных строк, представляющих положительные и отрицательные значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1387">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/ParseHex1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/ParseHex1.vb#3)]  
  
 <span data-ttu-id="ccb84-1388">`value` Анализируется с использованием сведений о форматировании в <xref:System.Globalization.NumberFormatInfo> , инициализируемый для текущего языка и региональных параметров системы.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1388">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="ccb84-1389">Чтобы указать язык и региональные параметры, чье форматирования используется для синтаксического анализа, вызовите <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1389">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-1390">В следующем примере показано вызовы <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> метод с несколько возможных значений для `style` параметра.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1390">The following example illustrates calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method with several possible values for the `style` parameter.</span></span> <span data-ttu-id="ccb84-1391">Он показывает, как интерпретировать строку как шестнадцатеричное значение и запретить пробелы и подписать символы.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1391">It illustrates how to interpret a string as a hexadecimal value, and how to disallow spaces and sign symbols.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#5)]
 [!code-vb[System.Numeric.BigInteger.Parse#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ccb84-1392"><paramref name="style" /> не является значением <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1392"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="ccb84-1393">-или-</span><span class="sxs-lookup"><span data-stu-id="ccb84-1393">-or-</span></span> 
 <span data-ttu-id="ccb84-1394"><paramref name="style" /> включает флаги <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" /> вместе с другим значениями.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1394"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ccb84-1395"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1395"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ccb84-1396"><paramref name="value" /> не соответствует образцу ввода, заданному <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1396"><paramref name="value" /> does not comply with the input pattern specified by <see cref="T:System.Globalization.NumberStyles" />.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, provider As IFormatProvider) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-1397">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1397">A string that contains a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="ccb84-1398">Объект, предоставляющий сведения о форматировании параметра <paramref name="value" /> в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1398">An object that provides culture-specific formatting information about <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="ccb84-1399">Преобразует строковое представление числа в указанном формате, связанном с определенным языком и региональными параметрами, в его эквивалент типа <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1399">Converts the string representation of a number in a specified culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1400">Значение, эквивалентное числу, которое задается параметром <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1400">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1401">`value` Параметр должен иметь строковое представление числа в следующей форме:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1401">The `value` parameter should be the string representation of a number in the following form:</span></span>  
  
 <span data-ttu-id="ccb84-1402">[*ws*] [*входа*]*цифр*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="ccb84-1402">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="ccb84-1403">Элементы в квадратных скобках ([и]) являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1403">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ccb84-1404">Каждый из элементов описан в таблице ниже.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1404">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ccb84-1405">Элемент</span><span class="sxs-lookup"><span data-stu-id="ccb84-1405">Element</span></span>|<span data-ttu-id="ccb84-1406">Описание</span><span class="sxs-lookup"><span data-stu-id="ccb84-1406">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ccb84-1407">*ws*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1407">*ws*</span></span>|<span data-ttu-id="ccb84-1408">Необязательный пробел.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1408">Optional white space.</span></span>|  
|<span data-ttu-id="ccb84-1409">*sign*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1409">*sign*</span></span>|<span data-ttu-id="ccb84-1410">Необязательный знак.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1410">An optional sign.</span></span> <span data-ttu-id="ccb84-1411">Допустимые знаки определяются по <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> и <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> свойства <xref:System.Globalization.NumberFormatInfo> объект, возвращаемый `provider` объекта <xref:System.IFormatProvider.GetFormat%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1411">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the <xref:System.Globalization.NumberFormatInfo> object that is returned by the `provider` object's <xref:System.IFormatProvider.GetFormat%2A> method.</span></span>|  
|<span data-ttu-id="ccb84-1412">*digits*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1412">*digits*</span></span>|<span data-ttu-id="ccb84-1413">Последовательность цифр в диапазоне от 0 до 9.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1413">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="ccb84-1414">Все начальные нули пропускаются.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1414">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="ccb84-1415">Строка, заданная `value` параметр интерпретируется с использованием <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> стиля.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1415">The string specified by the `value` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="ccb84-1416">Он не может содержать разделители групп или десятичного разделителя, и он не может иметь дробную часть.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1416">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ccb84-1417">При использовании <xref:System.Numerics.BigInteger.Parse%2A> метод для обратного преобразования строкового представления объекта <xref:System.Numerics.BigInteger> значение, которое было выходные <xref:System.Numerics.BigInteger.ToString%2A> метод, следует использовать <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> метод с помощью описателя формата «R» для создания строкового представления <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1417">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="ccb84-1418">В противном случае — строковое представление <xref:System.Numerics.BigInteger> сохраняет только 50 наиболее значимых цифр, исходное значение, и данные могут быть потеряны, если вы используете <xref:System.Numerics.BigInteger.Parse%2A> метод восстановления <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1418">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="ccb84-1419">`provider` Параметр <xref:System.IFormatProvider> реализации которого <xref:System.IFormatProvider.GetFormat%2A> возвращает метод <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1419">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="ccb84-1420">Когда <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> вызывается метод, он вызывает метод `provider` параметра <xref:System.IFormatProvider.GetFormat%2A> метод и передает его <xref:System.Type> , представляющий <xref:System.Globalization.NumberFormatInfo> типа.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1420">When the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="ccb84-1421"><xref:System.IFormatProvider.GetFormat%2A> Метод затем возвращает <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о формате параметра `value` параметр.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1421">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information about the format of the `value` parameter.</span></span> <span data-ttu-id="ccb84-1422">Существует три способа использования `provider` указать пользовательские сведения о форматировании для операции синтаксического анализа:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1422">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="ccb84-1423">Вы можете передать <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры, который предоставляет сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1423">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="ccb84-1424">Его <xref:System.Globalization.CultureInfo.GetFormat%2A> возвращает метод <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о форматировании числовых для этого языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1424">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="ccb84-1425">Вы можете передать фактический <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о форматировании числовых.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1425">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="ccb84-1426">(Его реализации <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> просто возвращает сам себя.)</span><span class="sxs-lookup"><span data-stu-id="ccb84-1426">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="ccb84-1427">Можно передать пользовательский объект, реализующий <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1427">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="ccb84-1428">Его <xref:System.IFormatProvider.GetFormat%2A> метод создает экземпляр и возвращает <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1428">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="ccb84-1429">Если `provider` — `null`, форматирование `value` обрабатывается на основе <xref:System.Globalization.NumberFormatInfo> объект текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1429">If `provider` is `null`, the formatting of `value` is interpreted based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-1430">В следующих примерах показано два способа определения тильды (~) в качестве символа отрицательного для форматирования <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1430">The following examples show two ways to define the tilde (~) as a negative sign for formatting <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="ccb84-1431">Обратите внимание, что для отображения <xref:System.Numerics.BigInteger> значения в тот же формат, что исходных строк, ваш код должен вызывать <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> метод и передать его <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1431">Note that to display the <xref:System.Numerics.BigInteger> values in the same format as the original strings, your code must call the <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method and pass it the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="ccb84-1432">В первом примере определяется класс, реализующий <xref:System.IFormatProvider> и использует <xref:System.IFormatProvider.GetFormat%2A> метод для возврата <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1432">The first example defines a class that implements <xref:System.IFormatProvider> and uses the <xref:System.IFormatProvider.GetFormat%2A> method to return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#2)]
 [!code-vb[System.Numeric.BigInteger.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#2)]  
  
 <span data-ttu-id="ccb84-1433">Объект <xref:System.Numerics.BigInteger> объект может быть использован со следующим кодом:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1433">A <xref:System.Numerics.BigInteger> object can then be instantiated with the following code:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#3)]
 [!code-vb[System.Numeric.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#3)]  
  
 <span data-ttu-id="ccb84-1434">Второй пример является более простым.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1434">The second example is more straightforward.</span></span> <span data-ttu-id="ccb84-1435">Он передает <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о форматировании для `provider` параметра.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1435">It passes the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information to the `provider` parameter.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#4)]
 [!code-vb[System.Numeric.BigInteger.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ccb84-1436"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1436"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ccb84-1437"><paramref name="value" /> имеет неправильный формат.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1437"><paramref name="value" /> is not in the correct format.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (ReadOnlySpan&lt;char&gt; value, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As BigInteger" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, style As NumberStyles, provider As IFormatProvider) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-1438">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1438">A string that contains a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="ccb84-1439">Побитовое сочетание значений перечисления, которое показывает разрешенный формат параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1439">A bitwise combination of the enumeration values that specify the permitted format of <paramref name="value" />.</span></span></param>
        <param name="provider"><span data-ttu-id="ccb84-1440">Объект, предоставляющий сведения о форматировании параметра <paramref name="value" /> в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1440">An object that provides culture-specific formatting information about <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="ccb84-1441">Преобразует строковое представление числа в указанном стиле и формате, связанном с определенным языком и региональными параметрами, в его эквивалент типа <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1441">Converts the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1442">Значение, эквивалентное числу, которое задается параметром <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1442">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1443">`style` Параметр определяет элементы стиля (например, пробел, символ знак плюс или минус, символ-разделитель групп или символ десятичной запятой), которые разрешены в `value` параметр для успешного выполнения операции синтаксического анализа.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1443">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="ccb84-1444">`styles` должен представлять собой сочетание битовых флагов из <xref:System.Globalization.NumberStyles> перечисления.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1444">`styles` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="ccb84-1445">`style` Параметр делает этот метод перегрузки в полезно, когда `value` содержит строковое представление шестнадцатеричного значения, в том случае, если представленный в системе счисления (десятичное или шестнадцатеричное) `value` становится известным только во время выполнения, или если вы хотите запретить пробел или символ знака в `value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1445">The `style` parameter makes this method overload useful when `value` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `value` is known only at run time, or when you want to disallow white space or a sign symbol in `value`.</span></span>  
  
 <span data-ttu-id="ccb84-1446">В зависимости от значения `style`, `value` параметр может содержать следующие элементы:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1446">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="ccb84-1447">[*ws*] [*$*] [*входа*] [*цифр*,]*цифр*[*. цифры_дробной_части*] [E [*входа*]*экспоненциальные_цифры*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="ccb84-1447">[*ws*][*$*][*sign*][*digits*,]*digits*[*.fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="ccb84-1448">Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, `value` параметр может содержать следующие элементы:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1448">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="ccb84-1449">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="ccb84-1449">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="ccb84-1450">Элементы в квадратных скобках ([и]) являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1450">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ccb84-1451">Каждый из элементов описан в таблице ниже.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1451">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ccb84-1452">Элемент</span><span class="sxs-lookup"><span data-stu-id="ccb84-1452">Element</span></span>|<span data-ttu-id="ccb84-1453">Описание</span><span class="sxs-lookup"><span data-stu-id="ccb84-1453">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ccb84-1454">*ws*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1454">*ws*</span></span>|<span data-ttu-id="ccb84-1455">Необязательный пробел.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1455">Optional white space.</span></span> <span data-ttu-id="ccb84-1456">Пробелы могут отображаться в начале `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> флаг и может отображаться в конце `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1456">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="ccb84-1457">Символ валюты.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1457">A culture-specific currency symbol.</span></span> <span data-ttu-id="ccb84-1458">Его положение в строке определяется <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> и <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> обозначается свойства языка и региональных параметров `provider` параметра.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1458">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the culture indicated by the `provider` parameter.</span></span> <span data-ttu-id="ccb84-1459">Символ валюты для текущего языка и региональных параметров может встречаться в `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1459">The current culture's currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb84-1460">*sign*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1460">*sign*</span></span>|<span data-ttu-id="ccb84-1461">Необязательный знак.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1461">An optional sign.</span></span> <span data-ttu-id="ccb84-1462">Знак может располагаться в начале `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> флаг и может отображаться в конце `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1462">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ccb84-1463">Можно использовать скобки в `value` указывает отрицательное значение, если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1463">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb84-1464">*digits*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1464">*digits*</span></span><br /><br /> <span data-ttu-id="ccb84-1465">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1465">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="ccb84-1466">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1466">*exponential_digits*</span></span>|<span data-ttu-id="ccb84-1467">Последовательность цифр от 0 до 9.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1467">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="ccb84-1468">Для *цифры_дробной_части*только из цифр 0 является допустимым.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1468">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="ccb84-1469">*,*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1469">*,*</span></span>|<span data-ttu-id="ccb84-1470">Символ разделителя групп, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1470">A culture-specific group separator symbol.</span></span> <span data-ttu-id="ccb84-1471">Символ-разделитель групп языка и региональных параметров, заданные `provider` могут присутствовать в `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1471">The group separator symbol of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb84-1472">*.*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1472">*.*</span></span>|<span data-ttu-id="ccb84-1473">Символ десятичной запятой для конкретного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1473">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="ccb84-1474">Символ десятичной запятой, языка и региональных параметров, назначенному с помощью `provider` могут присутствовать в `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1474">The decimal point symbol of the culture designated by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ccb84-1475">Только цифры 0 может отображаться в виде дробного числа синтаксического анализа для успешного выполнения операции; Если *цифры_дробной_части* включает любые другие цифры, <xref:System.FormatException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1475">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="ccb84-1476">E</span><span class="sxs-lookup"><span data-stu-id="ccb84-1476">E</span></span>|<span data-ttu-id="ccb84-1477">«E» или «E» знаком, который указывает, что значение будет представлено в экспоненциальной нотации (научный).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1477">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="ccb84-1478">`value` Параметр может представлять число в экспоненциальном представлении, если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1478">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb84-1479">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1479">*hexdigits*</span></span>|<span data-ttu-id="ccb84-1480">Последовательность шестнадцатеричных цифр от 0 до f или от 0 до F.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1480">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="ccb84-1481">Символы (от U + 0000) завершающий NUL в `s` пропускаются операцией анализа, независимо от значения `style` аргумент.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1481">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="ccb84-1482">Строка с только цифры (который соответствует <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> стиля) всегда успешно выполняет синтаксический анализ.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1482">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="ccb84-1483">Большинство оставшихся <xref:System.Globalization.NumberStyles> члены управляют элементами, которые могут присутствовать, но необязательно должны присутствовать во входной строке.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1483">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="ccb84-1484">В следующей таблице показаны как отдельные <xref:System.Globalization.NumberStyles> члены влияют на элементы, которые могут присутствовать в `value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1484">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="ccb84-1485">Значение NumberStyles</span><span class="sxs-lookup"><span data-stu-id="ccb84-1485">NumberStyles value</span></span>|<span data-ttu-id="ccb84-1486">Элементы, допустимые в значении помимо цифр</span><span class="sxs-lookup"><span data-stu-id="ccb84-1486">Elements permitted in value in addition to digits</span></span>|  
|------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="ccb84-1487">*Цифр* только элемент.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1487">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="ccb84-1488">Десятичная точка (.) и *дробной части* элементов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1488">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="ccb84-1489">«E» или символ «E», который указывает на экспоненциальное представление.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1489">The "e" or "E" character, which indicates exponential notation.</span></span> <span data-ttu-id="ccb84-1490">вместе с *экспоненциальные_цифры*.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1490">along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="ccb84-1491">*Ws* элемент в начале `value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1491">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="ccb84-1492">*Ws* элемент в конце `value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1492">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="ccb84-1493">*Входа* элемент в начале `value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1493">The *sign* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="ccb84-1494">*Входа* элемент в конце `value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1494">The *sign* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="ccb84-1495">*Входа* элемент в скобки, заключив числовое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1495">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="ccb84-1496">Элемент группы разрядов ().</span><span class="sxs-lookup"><span data-stu-id="ccb84-1496">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="ccb84-1497">Элемент валюты ($).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1497">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="ccb84-1498">Все элементы.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1498">All elements.</span></span> <span data-ttu-id="ccb84-1499">Тем не менее `value` не может представлять шестнадцатеричное число или число в экспоненциальном представлении.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1499">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="ccb84-1500">*Ws* элемент в начале или конце `value`, *входа* в начале `value`и символ десятичной точки (.).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1500">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (.) symbol.</span></span> <span data-ttu-id="ccb84-1501">`value` Параметр можно также использовать экспоненциальное представление.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1501">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="ccb84-1502">`ws`, `sign`, Разделитель групп (,) и элементы десятичной точки (.).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1502">The `ws`, `sign`, group separator (,), and decimal point (.) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="ccb84-1503">Все элементы.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1503">All elements.</span></span> <span data-ttu-id="ccb84-1504">Тем не менее `value` не может представлять шестнадцатеричное число.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1504">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="ccb84-1505">При использовании <xref:System.Numerics.BigInteger.Parse%2A> метод для обратного преобразования строкового представления объекта <xref:System.Numerics.BigInteger> значение, которое было выходные <xref:System.Numerics.BigInteger.ToString%2A> метод, следует использовать <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> метод с помощью описателя формата «R» для создания строкового представления <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1505">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="ccb84-1506">В противном случае — строковое представление <xref:System.Numerics.BigInteger> сохраняет только 50 наиболее значимых цифр, исходное значение, и данные могут быть потеряны, если вы используете <xref:System.Numerics.BigInteger.Parse%2A> метод восстановления <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1506">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="ccb84-1507">В отличие от других <xref:System.Globalization.NumberStyles> значения, которые позволяют, а не требуют наличия определенного стиля элементов в `value`, <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> значение стиля означает, что отдельные цифры в `value` всегда интерпретируется как шестнадцатеричные символы.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1507">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for but do not require the presence of particular style elements in `value`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `value` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="ccb84-1508">Допустимые шестнадцатеричные цифры символы являются 0-9, A-F и a-f.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1508">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="ccb84-1509">Только другие флаги, которые могут быть объединены с `style` являются <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> и <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1509">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ccb84-1510">( <xref:System.Globalization.NumberStyles> Перечисления включает стили составного числа, <xref:System.Globalization.NumberStyles.HexNumber>, включающий в себя оба флага пустого пространства.)</span><span class="sxs-lookup"><span data-stu-id="ccb84-1510">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ccb84-1511">Если `value` является строковым представлением шестнадцатеричного числа, он не может начинаться с описателей (таких как `0x` или `&h`), отличающее его как шестнадцатеричное число.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1511">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="ccb84-1512">Это приводит к сбою преобразования.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1512">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="ccb84-1513">Если `value` является шестнадцатеричной строки, <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> метод интерпретирует `value` как отрицательное число, хранятся с помощью двух дополнением представление, в случае его первых двух шестнадцатеричных цифр больше или равно `0x80`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1513">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="ccb84-1514">Другими словами, этот метод интерпретирует самого старшего бита первого байта в `value` называется знаковым битом.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1514">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="ccb84-1515">Чтобы убедиться в том, что шестнадцатеричной строки интерпретируется правильно как положительное число, первая цифра в `value` должен иметь нулевое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1515">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="ccb84-1516">Например, этот метод интерпретирует `0x80` как отрицательное значение, но он интерпретирует либо `0x080` или `0x0080` как положительное значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1516">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="ccb84-1517">В следующем примере показано различие между шестнадцатеричных строк, представляющих положительные и отрицательные значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1517">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/ParseHex1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/ParseHex1.vb#3)]  
  
 <span data-ttu-id="ccb84-1518">`provider` Параметр <xref:System.IFormatProvider> реализации.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1518">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="ccb84-1519">Его <xref:System.IFormatProvider.GetFormat%2A> возвращает <xref:System.Globalization.NumberFormatInfo> объект, который предоставляет зависящие от культуры сведения о формате параметра `value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1519">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="ccb84-1520">Как правило `provider` может принимать одно из следующих:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1520">Typically, `provider` can be any one of the following:</span></span>  
  
-   <span data-ttu-id="ccb84-1521">Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры, который предоставляет сведения о форматировании числовых.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1521">A <xref:System.Globalization.CultureInfo> object that represents the culture that provides numeric formatting information.</span></span> <span data-ttu-id="ccb84-1522">Его <xref:System.Globalization.CultureInfo.GetFormat%2A> возвращает метод <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о форматировании числовых.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1522">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span>  
  
-   <span data-ttu-id="ccb84-1523">Объект <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1523">A <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="ccb84-1524">(Его реализации <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> просто возвращает сам себя.)</span><span class="sxs-lookup"><span data-stu-id="ccb84-1524">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="ccb84-1525">Пользовательский объект, реализующий <xref:System.IFormatProvider> и использует <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> метод для создания экземпляра и вернуть <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1525">A custom object that implements <xref:System.IFormatProvider> and uses the <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> method to instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="ccb84-1526">Если `provider` — `null`, <xref:System.Globalization.NumberFormatInfo> объект для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1526">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-1527">Следующий пример выполняет несколько обращений к <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> метода с использованием различных сочетаний значений для `style` и `provider` параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1527">The following example makes several calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method using various combinations of values for the `style` and `provider` parameters.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#2)]  
  
 <span data-ttu-id="ccb84-1528">Ряд отдельные вызовы, чтобы <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> метод передать экземпляр из следующих `BigIntegerFormatProvider` класс, который определяет как отрицательный знак тильды (~).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1528">A number of the individual calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method pass an instance of the following `BigIntegerFormatProvider` class, which defines a tilde (~) as the negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ccb84-1529"><paramref name="style" /> не является значением <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1529"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="ccb84-1530">-или-</span><span class="sxs-lookup"><span data-stu-id="ccb84-1530">-or-</span></span> 
 <span data-ttu-id="ccb84-1531"><paramref name="style" /> включает флаги <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" /> вместе с другим значениями.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1531"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ccb84-1532"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1532"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ccb84-1533"><paramref name="value" /> не соответствует образцу ввода, заданному <paramref name="style" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1533"><paramref name="value" /> does not comply with the input pattern specified by <paramref name="style" />.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Pow (System.Numerics.BigInteger value, int exponent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Pow(valuetype System.Numerics.BigInteger value, int32 exponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (value As BigInteger, exponent As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Pow(System::Numerics::BigInteger value, int exponent);" />
      <MemberSignature Language="F#" Value="static member Pow : System.Numerics.BigInteger * int -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Pow (value, exponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="exponent" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-1534">Число, возведенное в степень <paramref name="exponent" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1534">The number to raise to the <paramref name="exponent" /> power.</span></span></param>
        <param name="exponent"><span data-ttu-id="ccb84-1535">Показатель степени, в которую будет возведено значение <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1535">The exponent to raise <paramref name="value" /> by.</span></span></param>
        <summary><span data-ttu-id="ccb84-1536">Возводит значение <see cref="T:System.Numerics.BigInteger" /> в заданную степень.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1536">Raises a <see cref="T:System.Numerics.BigInteger" /> value to the power of a specified value.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1537">Результат возведения <paramref name="value" /> в степень <paramref name="exponent" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1537">The result of raising <paramref name="value" /> to the <paramref name="exponent" /> power.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1538"><xref:System.Numerics.BigInteger.Pow%2A> Метод возвращает значение 1, если значение экспоненты параметра является 0, или в том случае, если значения `value` и `exponent` параметров равны 0.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1538">The <xref:System.Numerics.BigInteger.Pow%2A> method returns 1 if the value of the exponent parameter is 0, or if the values of both the `value` and `exponent` parameters are 0.</span></span> <span data-ttu-id="ccb84-1539">Если `exponent` -1, <xref:System.Numerics.BigInteger.Pow%2A> возвращает метод `value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1539">If `exponent` is 1, the <xref:System.Numerics.BigInteger.Pow%2A> method returns `value`.</span></span> <span data-ttu-id="ccb84-1540">Если `value` является отрицательным, метод возвращает отрицательный результат.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1540">If `value` is negative, the method returns a negative result.</span></span>  
  
 <span data-ttu-id="ccb84-1541">Этот метод соответствует <xref:System.Math.Pow%2A?displayProperty=nameWithType> метод для числовых типов-примитивов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1541">This method corresponds to the <xref:System.Math.Pow%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-1542">В следующем примере показано возведение в степень, с помощью <xref:System.Numerics.BigInteger> значение и показателя степени, в которых значение в диапазоне от 0 до 10.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1542">The following example illustrates exponentiation using a <xref:System.Numerics.BigInteger> value and an exponent whose value ranges from 0 to 10.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#32](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#32)]
 [!code-vb[System.Numeric.BigInteger.Class#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ccb84-1543"><paramref name="exponent" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1543"><paramref name="exponent" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remainder">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Remainder (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Remainder(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Remainder (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Remainder(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member Remainder : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Remainder (dividend, divisor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="ccb84-1544">Значение, которое необходимо разделить.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1544">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="ccb84-1545">Значение, на которое необходимо разделить.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1545">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="ccb84-1546">Выполняет целочисленное деление двух значений <see cref="T:System.Numerics.BigInteger" /> и возвращает остаток.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1546">Performs integer division on two <see cref="T:System.Numerics.BigInteger" /> values and returns the remainder.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1547">Остаток от деления <paramref name="dividend" /> на <paramref name="divisor" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1547">The remainder after dividing <paramref name="dividend" /> by <paramref name="divisor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1548">Знак остатка является знак `dividend` параметра.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1548">The sign of the remainder is the sign of the `dividend` parameter.</span></span>  
  
 <span data-ttu-id="ccb84-1549"><xref:System.Numerics.BigInteger.Remainder%2A> Метод реализуется для языков, которые не поддерживают пользовательские операторы.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1549">The <xref:System.Numerics.BigInteger.Remainder%2A> method is implemented for languages that do not support custom operators.</span></span> <span data-ttu-id="ccb84-1550">Его поведение идентично поведению деления, используя оператор модуля.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1550">Its behavior is identical to division using the modulus operator.</span></span>  
  
 <span data-ttu-id="ccb84-1551">При необходимости метод автоматически выполняет неявное преобразование для других целочисленных типов <xref:System.Numerics.BigInteger> объекты перед выполнением операции получения модуля.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1551">If necessary, the method automatically performs implicit conversion of other integral types to <xref:System.Numerics.BigInteger> objects before it performs the modulus operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-1552">В следующем примере сравниваются остаток от <xref:System.Numerics.BigInteger.DivRem%2A> метод дальнейшим, возвращенный <xref:System.Numerics.BigInteger.Remainder%2A> метод, чтобы установить, что два метода расчета идентичные остатков.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1552">The following example compares the remainder from the <xref:System.Numerics.BigInteger.DivRem%2A> method with the remainder returned by the <xref:System.Numerics.BigInteger.Remainder%2A> method to establish that the two methods calculate identical remainders.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Remainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Remainder/cs/Remainder1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Remainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Remainder/vb/Remainder1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="ccb84-1553">Значение параметра <paramref name="divisor" /> равно нулю (0).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1553"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
        <altmember cref="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public int Sign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Sign" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.Sign" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sign As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Sign { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Sign : int" Usage="System.Numerics.BigInteger.Sign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ccb84-1554">Получает число, указывающее знак (минус, плюс или нуль) текущего объекта <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1554">Gets a number that indicates the sign (negative, positive, or zero) of the current <see cref="T:System.Numerics.BigInteger" /> object.</span></span></summary>
        <value><span data-ttu-id="ccb84-1555">Число, которое указывает знак объекта <see cref="T:System.Numerics.BigInteger" />, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1555">A number that indicates the sign of the <see cref="T:System.Numerics.BigInteger" /> object, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="ccb84-1556">Число</span><span class="sxs-lookup"><span data-stu-id="ccb84-1556">Number</span></span> 
 </term><description> <span data-ttu-id="ccb84-1557">Описание</span><span class="sxs-lookup"><span data-stu-id="ccb84-1557">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="ccb84-1558">-1</span><span class="sxs-lookup"><span data-stu-id="ccb84-1558">-1</span></span> 
 </term><description> <span data-ttu-id="ccb84-1559">Этот объект имеет отрицательное значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1559">The value of this object is negative.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ccb84-1560">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-1560">0</span></span> 
 </term><description> <span data-ttu-id="ccb84-1561">Этот объект имеет значение 0 (нуль).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1561">The value of this object is 0 (zero).</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ccb84-1562">1</span><span class="sxs-lookup"><span data-stu-id="ccb84-1562">1</span></span> 
 </term><description> <span data-ttu-id="ccb84-1563">Этот объект имеет положительное значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1563">The value of this object is positive.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1564"><xref:System.Numerics.BigInteger.Sign%2A> Свойство является аналогом <xref:System.Math.Sign%2A?displayProperty=nameWithType> метод для числовых типов-примитивов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1564">The <xref:System.Numerics.BigInteger.Sign%2A> property is equivalent to the <xref:System.Math.Sign%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Subtract (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Subtract(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Subtract(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Subtract (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ccb84-1565">Значение, из которого следует вычитать (уменьшаемое).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1565">The value to subtract from (the minuend).</span></span></param>
        <param name="right"><span data-ttu-id="ccb84-1566">Значение для вычитания (вычитаемое).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1566">The value to subtract (the subtrahend).</span></span></param>
        <summary><span data-ttu-id="ccb84-1567">Вычитает одно значение <see cref="T:System.Numerics.BigInteger" /> из другого и возвращает результат.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1567">Subtracts one <see cref="T:System.Numerics.BigInteger" /> value from another and returns the result.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1568">Результат вычитания <paramref name="right" /> из <paramref name="left" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1568">The result of subtracting <paramref name="right" /> from <paramref name="left" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1569">Можно использовать языки, которые не поддерживают пользовательские операторы <xref:System.Numerics.BigInteger.Subtract%2A> метод для выполнения вычитания с помощью <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1569">Languages that do not support custom operators can use the <xref:System.Numerics.BigInteger.Subtract%2A> method to perform subtraction using <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="ccb84-1570"><xref:System.Numerics.BigInteger.Subtract%2A> Метод является полезным заменой оператор вычитания, при создании экземпляра <xref:System.Numerics.BigInteger> переменной, назначив ей разницу, полученный в результате вычитания, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1570">The <xref:System.Numerics.BigInteger.Subtract%2A> method is a useful substitute for the subtraction operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it the difference that results from subtraction, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByteArray">
      <MemberSignature Language="C#" Value="public byte[] ToByteArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ToByteArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToByteArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToByteArray () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ToByteArray();" />
      <MemberSignature Language="F#" Value="member this.ToByteArray : unit -&gt; byte[]" Usage="bigInteger.ToByteArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ccb84-1571">Преобразует значение <see cref="T:System.Numerics.BigInteger" /> в массив байтов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1571">Converts a <see cref="T:System.Numerics.BigInteger" /> value to a byte array.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1572">Значение текущего объекта <see cref="T:System.Numerics.BigInteger" />, преобразованное в массив байтов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1572">The value of the current <see cref="T:System.Numerics.BigInteger" /> object converted to an array of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1573">Отдельные байты в массив, возвращаемый этим методом отображаются в прямом порядке.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1573">The individual bytes in the array returned by this method appear in little-endian order.</span></span> <span data-ttu-id="ccb84-1574">То есть младшие байты значения предшествуют байты высокого порядка.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1574">That is, the lower-order bytes of the value precede the higher-order bytes.</span></span> <span data-ttu-id="ccb84-1575">Первый байт в массиве отражает первые восемь бита <xref:System.Numerics.BigInteger> значение, второй байт отражает следующие восемь бит и т. д.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1575">The first byte of the array reflects the first eight bits of the <xref:System.Numerics.BigInteger> value, the second byte reflects the next eight bits, and so on.</span></span> <span data-ttu-id="ccb84-1576">Например значение 1024 или 0x0400, хранится в виде следующий массив из двух байтов:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1576">For example, the value 1024, or 0x0400, is stored as the following array of two bytes:</span></span>  
  
|<span data-ttu-id="ccb84-1577">Элемент</span><span class="sxs-lookup"><span data-stu-id="ccb84-1577">Element</span></span>|<span data-ttu-id="ccb84-1578">Байтовое значение</span><span class="sxs-lookup"><span data-stu-id="ccb84-1578">Byte value</span></span>|  
|-------------|----------------|  
|<span data-ttu-id="ccb84-1579">0</span><span class="sxs-lookup"><span data-stu-id="ccb84-1579">0</span></span>|<span data-ttu-id="ccb84-1580">0x00</span><span class="sxs-lookup"><span data-stu-id="ccb84-1580">0x00</span></span>|  
|<span data-ttu-id="ccb84-1581">1</span><span class="sxs-lookup"><span data-stu-id="ccb84-1581">1</span></span>|<span data-ttu-id="ccb84-1582">0x04</span><span class="sxs-lookup"><span data-stu-id="ccb84-1582">0x04</span></span>|  
  
 <span data-ttu-id="ccb84-1583">Отрицательные значения записываются в массиве, с использованием двух дополнением представления в компактной форме.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1583">Negative values are written to the array using two's complement representation in the most compact form possible.</span></span> <span data-ttu-id="ccb84-1584">Например, -1 представляется как один байт, значение которого равно `0xFF` вместо как массив, содержащий несколько элементов, таких как `0xFF`, `0xFF` или `0xFF`, `0xFF`, `0xFF`, `0xFF`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1584">For example, -1 is represented as a single byte whose value is `0xFF` instead of as an array with multiple elements, such as `0xFF`, `0xFF` or `0xFF`, `0xFF`, `0xFF`, `0xFF`.</span></span>  
  
 <span data-ttu-id="ccb84-1585">Так как дополнение до двух представление всегда интерпретирует старший бит последнего байта в массиве (байт в позиции <xref:System.Array.Length%2A?displayProperty=nameWithType> `- 1`) как бит знака, метод возвращает массив байтов, в дополнительный элемент, значение которого равно нулю для устранить неоднозначность положительные значения, которые в противном случае может быть интерпретирован как с установленным битом знака.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1585">Because two's complement representation always interprets the highest-order bit of the last byte in the array (the byte at position <xref:System.Array.Length%2A?displayProperty=nameWithType>`- 1`) as the sign bit, the method returns a byte array with an extra element whose value is zero to disambiguate positive values that could otherwise be interpreted as having their sign bits set.</span></span> <span data-ttu-id="ccb84-1586">Например, значение 120 или `0x78` представляется как массив однобайтовых: `0x78`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1586">For example, the value 120 or `0x78` is represented as a single-byte array: `0x78`.</span></span> <span data-ttu-id="ccb84-1587">Тем не менее, 128, или `0x80`, представляется как массив размером 2 байта: `0x80`, `0x00`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1587">However, 128, or `0x80`, is represented as a two-byte array: `0x80`, `0x00`.</span></span>  
  
 <span data-ttu-id="ccb84-1588">Вы можете приема-передачи <xref:System.Numerics.BigInteger> значение, сохранив его в массив байтов и восстановления с помощью <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1588">You can round-trip a <xref:System.Numerics.BigInteger> value by storing it to a byte array and then restoring it using the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ccb84-1589">Если код изменяет значение отдельных байтов в массиве, возвращенное этим методом, прежде чем он восстанавливает значение, необходимо убедиться в том, что вы не изменен знаковым битом.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1589">If your code modifies the value of individual bytes in the array returned by this method before it restores the value, you must make sure that you do not unintentionally change the sign bit.</span></span> <span data-ttu-id="ccb84-1590">Например если ваши изменения увеличивают положительное значение, чтобы старший бит в последнем элементе массива байтов становится установленным, можно добавить новый байт, значение которого равно нулю, в конец массива.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1590">For example, if your modifications increase a positive value so that the highest-order bit in the last element of the byte array becomes set, you can add a new byte whose value is zero to the end of the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-1591">В следующем примере показано, как некоторые <xref:System.Numerics.BigInteger> значения представлены в массивы байтов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1591">The following example illustrates how some <xref:System.Numerics.BigInteger> values are represented in byte arrays.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToByteArray#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToByteArray/cs/ToByteArray1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ToByteArray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToByteArray/vb/ToByteArray1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByteArray">
      <MemberSignature Language="C#" Value="public byte[] ToByteArray (bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ToByteArray(bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToByteArray (Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false) As Byte()" />
      <MemberSignature Language="F#" Value="member this.ToByteArray : bool * bool -&gt; byte[]" Usage="bigInteger.ToByteArray (isUnsigned, isBigEndian)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isUnsigned" Type="System.Boolean" />
        <Parameter Name="isBigEndian" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isUnsigned">To be added.</param>
        <param name="isBigEndian">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb84-1592">Преобразует числовое значение текущего объекта <see cref="T:System.Numerics.BigInteger" /> в эквивалентное ему строковое представление.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1592">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="bigInteger.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ccb84-1593">Преобразует числовое значение текущего объекта <see cref="T:System.Numerics.BigInteger" /> в эквивалентное ему строковое представление.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1593">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1594">Строковое представление значения текущего объекта <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1594">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1595"><xref:System.Numerics.BigInteger.ToString> Форматы метода <xref:System.Numerics.BigInteger> значение «R» или приема-передачи, формата текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1595">The <xref:System.Numerics.BigInteger.ToString> method formats a <xref:System.Numerics.BigInteger> value in the "R", or round-trip, format of the current culture.</span></span> <span data-ttu-id="ccb84-1596">Если вы хотите указать другой формат или язык и региональные параметры, используйте другие перегрузки <xref:System.Numerics.BigInteger.ToString%2A> метода, как показано ниже:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1596">If you want to specify a different format or culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="ccb84-1597">Для использования формата</span><span class="sxs-lookup"><span data-stu-id="ccb84-1597">To use format</span></span>|<span data-ttu-id="ccb84-1598">Для языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="ccb84-1598">For culture</span></span>|<span data-ttu-id="ccb84-1599">Используйте перегрузку</span><span class="sxs-lookup"><span data-stu-id="ccb84-1599">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="ccb84-1600">Формат Round-Trip ("R")</span><span class="sxs-lookup"><span data-stu-id="ccb84-1600">Round-trip ("R") format</span></span>|<span data-ttu-id="ccb84-1601">Определенного языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="ccb84-1601">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%2A>|  
|<span data-ttu-id="ccb84-1602">Определенный формат</span><span class="sxs-lookup"><span data-stu-id="ccb84-1602">A specific format</span></span>|<span data-ttu-id="ccb84-1603">(Текущего) язык и региональные параметры по умолчанию</span><span class="sxs-lookup"><span data-stu-id="ccb84-1603">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
|<span data-ttu-id="ccb84-1604">Определенный формат</span><span class="sxs-lookup"><span data-stu-id="ccb84-1604">A specific format</span></span>|<span data-ttu-id="ccb84-1605">Определенного языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="ccb84-1605">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="ccb84-1606">Строковое представление <xref:System.Numerics.BigInteger> значение включает знак минус, если его значение является отрицательным числом и последовательность цифр в диапазоне от 0 до 9 без предшествующих нулей.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1606">The string representation of the <xref:System.Numerics.BigInteger> value includes a negative sign if its value is negative, and a sequence of digits ranging from 0 to 9 without leading zeros.</span></span> <span data-ttu-id="ccb84-1607">Знак минус определяется <xref:System.Globalization.NumberFormatInfo> объект для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1607">The negative sign is defined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-1608">В следующем примере отображается <xref:System.Numerics.BigInteger> значение по умолчанию <xref:System.Numerics.BigInteger.ToString> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1608">The following example displays a <xref:System.Numerics.BigInteger> value by using the default <xref:System.Numerics.BigInteger.ToString> method.</span></span> <span data-ttu-id="ccb84-1609">Она также отображает строковые представления <xref:System.Numerics.BigInteger> значение, в результате использования некоторых описателей стандартного формата.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1609">It also displays the string representations of the <xref:System.Numerics.BigInteger> value that results from using some standard format specifiers.</span></span> <span data-ttu-id="ccb84-1610">Примеры отображаются с использованием соглашений о форматировании языка и региональных параметров en US.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1610">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="ccb84-1611">Строки стандартных числовых форматов</span><span class="sxs-lookup"><span data-stu-id="ccb84-1611">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="ccb84-1612">Строки настраиваемых числовых форматов</span><span class="sxs-lookup"><span data-stu-id="ccb84-1612">Custom Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="bigInteger.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ccb84-1613">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1613">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="ccb84-1614">Преобразует числовое значение текущего объекта <see cref="T:System.Numerics.BigInteger" /> в эквивалентное ему строковое представление, используя указанные сведения об особенностях форматирования для данного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1614">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1615">Строковое представление значения текущего объекта <see cref="T:System.Numerics.BigInteger" /> в формате, заданном параметром <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1615">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value in the format specified by the <paramref name="provider" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1616"><xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> Форматы метода <xref:System.Numerics.BigInteger> значение «R» или приема-передачи, отформатировать с помощью <xref:System.Globalization.NumberFormatInfo> объект указанного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1616">The <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> method formats a <xref:System.Numerics.BigInteger> value in the "R", or round-trip, format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="ccb84-1617">Если вы хотите указать другой формат или текущего языка и региональных параметров, используйте другие перегрузки <xref:System.Numerics.BigInteger.ToString%2A> метода, как показано ниже:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1617">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="ccb84-1618">Для использования формата</span><span class="sxs-lookup"><span data-stu-id="ccb84-1618">To use format</span></span>|<span data-ttu-id="ccb84-1619">Для языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="ccb84-1619">For culture</span></span>|<span data-ttu-id="ccb84-1620">Используйте перегрузку</span><span class="sxs-lookup"><span data-stu-id="ccb84-1620">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="ccb84-1621">Формат Round-Trip ("R")</span><span class="sxs-lookup"><span data-stu-id="ccb84-1621">Round-trip ("R") format</span></span>|<span data-ttu-id="ccb84-1622">(Текущего) язык и региональные параметры по умолчанию</span><span class="sxs-lookup"><span data-stu-id="ccb84-1622">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="ccb84-1623">Определенный формат</span><span class="sxs-lookup"><span data-stu-id="ccb84-1623">A specific format</span></span>|<span data-ttu-id="ccb84-1624">(Текущего) язык и региональные параметры по умолчанию</span><span class="sxs-lookup"><span data-stu-id="ccb84-1624">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
|<span data-ttu-id="ccb84-1625">Определенный формат</span><span class="sxs-lookup"><span data-stu-id="ccb84-1625">A specific format</span></span>|<span data-ttu-id="ccb84-1626">Определенного языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="ccb84-1626">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="ccb84-1627">`provider` Параметр <xref:System.IFormatProvider> реализации.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1627">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="ccb84-1628">Его <xref:System.IFormatProvider.GetFormat%2A> возвращает метод <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о формате строки, возвращаемой этим методом для конкретного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1628">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="ccb84-1629">Если `provider` — `null`, <xref:System.Numerics.BigInteger> значение форматируется с использованием <xref:System.Globalization.NumberFormatInfo> объект текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1629">If `provider` is `null`, the <xref:System.Numerics.BigInteger> value is formatted using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="ccb84-1630">Свойство только <xref:System.Globalization.NumberFormatInfo> объект, управляющий строковым представлением <xref:System.Numerics.BigInteger> значение с помощью спецификатора общего формата <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>, который определяет символ, который представляет отрицательный знак.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1630">The only property of the <xref:System.Globalization.NumberFormatInfo> object that controls the string representation of the <xref:System.Numerics.BigInteger> value using the general format specifier is <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>, which defines the character that represents the negative sign.</span></span>  
  
 <span data-ttu-id="ccb84-1631">`provider` Параметр может принимать одно из следующих:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1631">The `provider` parameter can be one of the following:</span></span>  
  
-   <span data-ttu-id="ccb84-1632">Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры, который предоставляет сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1632">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span>  
  
-   <span data-ttu-id="ccb84-1633"><xref:System.Globalization.NumberFormatInfo> Объект, предоставляющий сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1633">The <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.</span></span>  
  
-   <span data-ttu-id="ccb84-1634">Пользовательский объект, реализующий <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1634">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="ccb84-1635">Его <xref:System.IFormatProvider.GetFormat%2A> возвращает метод <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1635">Its <xref:System.IFormatProvider.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-1636">В следующем примере создается пользовательский <xref:System.Globalization.NumberFormatInfo> объект, который определяет как отрицательный знак тильды (~).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1636">The following example instantiates a custom <xref:System.Globalization.NumberFormatInfo> object that defines the tilde (~) as a negative sign.</span></span> <span data-ttu-id="ccb84-1637"><xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> Метод использует пользовательский <xref:System.Globalization.NumberFormatInfo> объект для отображения отрицательное <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1637">The <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> method then uses the custom <xref:System.Globalization.NumberFormatInfo> object to display a negative <xref:System.Numerics.BigInteger> value.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.ToString/cs/System.Numeric.BigInteger.ToString.cs#1)]
 [!code-vb[System.Numeric.BigInteger.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.ToString/vb/System.Numeric.BigInteger.ToString.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="bigInteger.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="ccb84-1638">Стандартная или пользовательская строка числового формата.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1638">A standard or custom numeric format string.</span></span></param>
        <summary><span data-ttu-id="ccb84-1639">Преобразует числовое значение текущего объекта <see cref="T:System.Numerics.BigInteger" /> в эквивалентное строковое представление с использованием указанного формата.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1639">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified format.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1640">Строковое представление значения текущего объекта <see cref="T:System.Numerics.BigInteger" /> в формате, заданном параметром <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1640">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value in the format specified by the <paramref name="format" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1641"><xref:System.Numerics.BigInteger.ToString%28System.String%29> Форматы метода <xref:System.Numerics.BigInteger> значение в указанном формате, с помощью <xref:System.Globalization.NumberFormatInfo> , представляющий соглашения текущих региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1641">The <xref:System.Numerics.BigInteger.ToString%28System.String%29> method formats a <xref:System.Numerics.BigInteger> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="ccb84-1642">Если вы хотите использовать «R», то есть цикл обработки, форматирования или укажите другой язык и региональные параметры, использовать другие перегрузки <xref:System.Numerics.BigInteger.ToString%2A> метода, как показано ниже:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1642">If you want to use the "R", or round-trip, format or specify a different culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="ccb84-1643">Для использования формата</span><span class="sxs-lookup"><span data-stu-id="ccb84-1643">To use format</span></span>|<span data-ttu-id="ccb84-1644">Для языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="ccb84-1644">For culture</span></span>|<span data-ttu-id="ccb84-1645">Используйте перегрузку</span><span class="sxs-lookup"><span data-stu-id="ccb84-1645">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="ccb84-1646">Формат Round-Trip ("R")</span><span class="sxs-lookup"><span data-stu-id="ccb84-1646">Round-trip ("R") format</span></span>|<span data-ttu-id="ccb84-1647">(Текущего) язык и региональные параметры по умолчанию</span><span class="sxs-lookup"><span data-stu-id="ccb84-1647">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="ccb84-1648">Формат Round-Trip ("R")</span><span class="sxs-lookup"><span data-stu-id="ccb84-1648">Round-trip ("R") format</span></span>|<span data-ttu-id="ccb84-1649">Определенного языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="ccb84-1649">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="ccb84-1650">Определенный формат</span><span class="sxs-lookup"><span data-stu-id="ccb84-1650">A specific format</span></span>|<span data-ttu-id="ccb84-1651">Определенного языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="ccb84-1651">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="ccb84-1652">`format` Параметр может быть любым допустимым [строка стандартного числового](~/docs/standard/base-types/standard-numeric-format-strings.md), или любое сочетание [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1652">The `format` parameter can be any valid [standard numeric string](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [custom numeric format strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="ccb84-1653">Если `format` равен <xref:System.String.Empty?displayProperty=nameWithType> или `null`, возвращаемое значение текущего <xref:System.Numerics.BigInteger> объект форматируется с помощью описателя формата приема-передачи («R»).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1653">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.Numerics.BigInteger> object is formatted with the round-trip format specifier ("R").</span></span> <span data-ttu-id="ccb84-1654">Если `format` задано любое другое значение, вызывает метод <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1654">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="ccb84-1655">.NET Framework предоставляет широкую поддержку форматирования, который описан более подробно в следующих разделах форматирования:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1655">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="ccb84-1656">Дополнительные сведения о описатели стандартного числового формата, см. в разделе [строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1656">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="ccb84-1657">Дополнительные сведения о поддержке для форматирования в .NET Framework, см. в разделе [типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1657">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="ccb84-1658">Формат возвращаемой строки определяется <xref:System.Globalization.NumberFormatInfo> объект для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1658">The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="ccb84-1659">В зависимости от `format` параметр, этот объект определяет символы, такие как знак минус, разделитель групп и символ десятичной запятой в выходной строке.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1659">Depending on the `format` parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string.</span></span> <span data-ttu-id="ccb84-1660">Чтобы предоставить сведения о форматировании для языков и региональных параметров, отличных от текущего языка и региональных параметров, вызовите <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1660">To provide formatting information for cultures other than the current culture, call the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-1661">В следующем примере инициализируется <xref:System.Numerics.BigInteger> значение и отображает его с помощью каждой строки стандартного формата и некоторых строк настраиваемого формата.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1661">The following example initializes a <xref:System.Numerics.BigInteger> value and displays it by using each standard format string and some custom format strings.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="ccb84-1662"><paramref name="format" /> не является допустимым форматом строки.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1662"><paramref name="format" /> is not a valid format string.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="ccb84-1663">Строки стандартных числовых форматов</span><span class="sxs-lookup"><span data-stu-id="ccb84-1663">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="ccb84-1664">Строки настраиваемых числовых форматов</span><span class="sxs-lookup"><span data-stu-id="ccb84-1664">Custom Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="bigInteger.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="ccb84-1665">Стандартная или пользовательская строка числового формата.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1665">A standard or custom numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="ccb84-1666">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1666">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="ccb84-1667">Преобразует значение текущего объекта <see cref="T:System.Numerics.BigInteger" /> в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях формата для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1667">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1668">Строковое представление текущего значения <see cref="T:System.Numerics.BigInteger" /> в виде, заданном параметрами <paramref name="format" /> и <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1668">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value as specified by the <paramref name="format" /> and <paramref name="provider" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1669"><xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> Форматы метода <xref:System.Numerics.BigInteger> значение в указанном формате, с помощью <xref:System.Globalization.NumberFormatInfo> объект указанного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1669">The <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Numerics.BigInteger> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="ccb84-1670">Если вы хотите использовать формата приема-передачи или параметры языка и региональных параметров по умолчанию, использовать другие перегрузки <xref:System.Numerics.BigInteger.ToString%2A> метода, как показано ниже:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1670">If you want to use the round-trip format or default culture settings, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="ccb84-1671">Для использования формата</span><span class="sxs-lookup"><span data-stu-id="ccb84-1671">To use format</span></span>|<span data-ttu-id="ccb84-1672">Для языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="ccb84-1672">For culture</span></span>|<span data-ttu-id="ccb84-1673">Используйте перегрузку</span><span class="sxs-lookup"><span data-stu-id="ccb84-1673">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="ccb84-1674">Формат Round-Trip ("R")</span><span class="sxs-lookup"><span data-stu-id="ccb84-1674">Round-trip ("R") format</span></span>|<span data-ttu-id="ccb84-1675">(Текущего) язык и региональные параметры по умолчанию</span><span class="sxs-lookup"><span data-stu-id="ccb84-1675">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="ccb84-1676">Формат Round-Trip ("R")</span><span class="sxs-lookup"><span data-stu-id="ccb84-1676">Round-trip ("R") format</span></span>|<span data-ttu-id="ccb84-1677">Определенного языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="ccb84-1677">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="ccb84-1678">Определенный формат</span><span class="sxs-lookup"><span data-stu-id="ccb84-1678">A specific format</span></span>|<span data-ttu-id="ccb84-1679">(Текущего) язык и региональные параметры по умолчанию</span><span class="sxs-lookup"><span data-stu-id="ccb84-1679">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
  
 <span data-ttu-id="ccb84-1680">`format` Параметр может быть любым допустимым [строка стандартного числового](~/docs/standard/base-types/standard-numeric-format-strings.md), или любое сочетание [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1680">The `format` parameter can be any valid  [standard numeric string](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [custom numeric format strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="ccb84-1681">Если `format` равен <xref:System.String.Empty?displayProperty=nameWithType> или `null`, возвращаемое значение текущего <xref:System.Numerics.BigInteger> объект форматируется с помощью описателя формата приема-передачи («R»).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1681">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.Numerics.BigInteger> object is formatted with the round-trip format specifier ("R").</span></span> <span data-ttu-id="ccb84-1682">Если `format` задано любое другое значение, вызывает метод <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1682">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="ccb84-1683">.NET Framework предоставляет широкую поддержку форматирования, который описан более подробно в следующих разделах форматирования:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1683">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="ccb84-1684">Дополнительные сведения о описатели стандартного числового формата, см. в разделе [строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1684">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="ccb84-1685">Дополнительные сведения о поддержке для форматирования в .NET Framework, см. в разделе [типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1685">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="ccb84-1686">`provider` Параметр <xref:System.IFormatProvider> реализации.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1686">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="ccb84-1687">Его <xref:System.IFormatProvider.GetFormat%2A> возвращает метод <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о формате строки, возвращаемой этим методом для конкретного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1687">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="ccb84-1688">Когда <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> вызывается метод, он вызывает метод `provider` параметра <xref:System.IFormatProvider.GetFormat%2A> метод и передает его <xref:System.Type> , представляющий <xref:System.Globalization.NumberFormatInfo> типа.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1688">When the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="ccb84-1689"><xref:System.IFormatProvider.GetFormat%2A> Метод затем возвращает <xref:System.Globalization.NumberFormatInfo> объект, который предоставляет информацию о форматировании `value` параметра, например символ знака минус, символ-разделитель групп или символ десятичной запятой.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1689">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information for formatting the `value` parameter, such as the negative sign symbol, the group separator symbol, or the decimal point symbol.</span></span> <span data-ttu-id="ccb84-1690">Существует три способа использования `provider` указать сведения о форматировании для <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> метод:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1690">There are three ways to use the `provider` parameter to supply formatting information to the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method:</span></span>  
  
-   <span data-ttu-id="ccb84-1691">Вы можете передать <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры, который предоставляет сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1691">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="ccb84-1692">Его <xref:System.Globalization.CultureInfo.GetFormat%2A> возвращает метод <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о форматировании числовых для этого языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1692">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="ccb84-1693">Вы можете передать фактический <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о форматировании числовых.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1693">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="ccb84-1694">(Его реализации <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> просто возвращает сам себя.)</span><span class="sxs-lookup"><span data-stu-id="ccb84-1694">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="ccb84-1695">Можно передать пользовательский объект, реализующий <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1695">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="ccb84-1696">Его <xref:System.IFormatProvider.GetFormat%2A> метод создает экземпляр и возвращает <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1696">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="ccb84-1697">Если `provider` — `null`, форматированием возвращаемой строки зависит от <xref:System.Globalization.NumberFormatInfo> объект текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1697">If `provider` is `null`, the formatting of the returned string is based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-1698">В следующем примере инициализируется <xref:System.Numerics.BigInteger> значение и отображает его на консоль с помощью строки стандартного формата и <xref:System.Globalization.NumberFormatInfo> объект, который определяет как отрицательный знак тильды (~).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1698">The following example initializes a <xref:System.Numerics.BigInteger> value, and displays it to the console using a standard format string and a <xref:System.Globalization.NumberFormatInfo> object that defines the tilde (~) as a negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="ccb84-1699"><paramref name="format" /> не является допустимым форматом строки.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1699"><paramref name="format" /> is not a valid format string.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="ccb84-1700">Строки стандартных числовых форматов</span><span class="sxs-lookup"><span data-stu-id="ccb84-1700">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="ccb84-1701">Строки настраиваемых числовых форматов</span><span class="sxs-lookup"><span data-stu-id="ccb84-1701">Custom Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="bigInteger.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb84-1702">Предпринимает попытку преобразования строкового представления числа в его эквивалент типа <see cref="T:System.Numerics.BigInteger" /> и возвращает значение, позволяющее определить, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1702">Tries to convert the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Numerics.BigInteger" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="System.Numerics.BigInteger" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-1703">Строковое представление числа.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1703">The string representation of a number.</span></span></param>
        <param name="result"><span data-ttu-id="ccb84-1704">После выполнения этого метода содержит эквивалент типа <see cref="T:System.Numerics.BigInteger" /> числа, содержащегося в параметре <paramref name="value" />, или нуль (0), если выполнить преобразование не удалось.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1704">When this method returns, contains the <see cref="T:System.Numerics.BigInteger" /> equivalent to the number that is contained in <paramref name="value" />, or zero (0) if the conversion fails.</span></span> <span data-ttu-id="ccb84-1705">Преобразование не удается выполнить, если значение параметра <paramref name="value" /> равно <see langword="null" /> или задано в неверном формате,</span><span class="sxs-lookup"><span data-stu-id="ccb84-1705">The conversion fails if the <paramref name="value" /> parameter is <see langword="null" /> or is not of the correct format.</span></span> <span data-ttu-id="ccb84-1706">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1706">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="ccb84-1707">Предпринимает попытку преобразования строкового представления числа в его эквивалент типа <see cref="T:System.Numerics.BigInteger" /> и возвращает значение, позволяющее определить, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1707">Tries to convert the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1708">Значение <see langword="true" />, если параметр <paramref name="value" /> успешно преобразован; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1708"><see langword="true" /> if <paramref name="value" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1709"><xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> Метод аналогичен <xref:System.Numerics.BigInteger.Parse%28System.String%29> за тем исключением, что он не создания исключения, если преобразование завершается неудачей.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1709">The <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> method is like the <xref:System.Numerics.BigInteger.Parse%28System.String%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="ccb84-1710">Этот метод исключает необходимость использовать обработку исключений для проверки <xref:System.FormatException> Если `value` является недопустимым и не может быть успешно обработан.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1710">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `value` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="ccb84-1711">`value` Параметр должен иметь строковое представление десятичного числа в следующей форме:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1711">The `value` parameter should be the string representation of a decimal number in the following form:</span></span>  
  
 <span data-ttu-id="ccb84-1712">[*ws*] [*входа*]*цифр*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="ccb84-1712">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="ccb84-1713">Элементы в квадратных скобках ([и]) являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1713">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ccb84-1714">Каждый из элементов описан в таблице ниже.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1714">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ccb84-1715">Элемент</span><span class="sxs-lookup"><span data-stu-id="ccb84-1715">Element</span></span>|<span data-ttu-id="ccb84-1716">Описание</span><span class="sxs-lookup"><span data-stu-id="ccb84-1716">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ccb84-1717">*ws*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1717">*ws*</span></span>|<span data-ttu-id="ccb84-1718">Необязательный пробел.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1718">Optional white space.</span></span>|  
|<span data-ttu-id="ccb84-1719">*sign*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1719">*sign*</span></span>|<span data-ttu-id="ccb84-1720">Необязательный знак.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1720">An optional sign.</span></span> <span data-ttu-id="ccb84-1721">Допустимые знаки определяются по <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> и <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> свойства текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1721">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="ccb84-1722">*digits*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1722">*digits*</span></span>|<span data-ttu-id="ccb84-1723">Последовательность десятичных цифр от 0 до 9.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1723">A sequence of decimal digits ranging from 0 to 9.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="ccb84-1724">Строкой, указанной параметром `value` параметр не может содержать разделители групп или десятичного разделителя, и он не может иметь дробную часть.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1724">The string specified by the `value` parameter cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="ccb84-1725">`value` Параметр интерпретируется с использованием <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> стиля.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1725">The `value` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="ccb84-1726">Помимо десятичных разрядов допускаются только начальные и конечные пробелы, со знаком в начале.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1726">In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</span></span> <span data-ttu-id="ccb84-1727">Чтобы явно определить элементы стиля с языком и региональными параметрами сведения об особенностях форматирования, могут быть представлены в `value`, вызовите <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> метод.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1727">To explicitly define the style elements with the culture-specific formatting information that can be present in `value`, call the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method.</span></span>  
  
 <span data-ttu-id="ccb84-1728">`value` Анализируется с использованием сведений о форматировании в <xref:System.Globalization.NumberFormatInfo> объект для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1728">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="ccb84-1729">Дополнительные сведения см. в разделе <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1729">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ccb84-1730">Эта перегрузка интерпретирует все цифры `value` параметра в виде десятичных цифр.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1730">This overload interprets all digits in the `value` parameter as decimal digits.</span></span> <span data-ttu-id="ccb84-1731">Чтобы проанализировать строковое представление шестнадцатеричного числа, вызовите <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> перегрузку.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1731">To parse the string representation of a hexadecimal number, call the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> overload instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-1732">В следующем примере используется <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> метод для создания экземпляра два <xref:System.Numerics.BigInteger> объектов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1732">The following example uses the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> method to instantiate two <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="ccb84-1733">В случае успешного выполнения преобразования умножает каждый объект на другое, а затем вызывает <xref:System.Numerics.BigInteger.Compare%2A> метод, чтобы определить связь между двумя объектами.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1733">If the conversions succeed, it multiplies each object by another number and then calls the <xref:System.Numerics.BigInteger.Compare%2A> method to determine the relationship between the two objects.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.TryParse/cs/System.Numeric.BigInteger.TryParse.cs#1)]
 [!code-vb[System.Numeric.BigInteger.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.TryParse/vb/System.Numeric.BigInteger.TryParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ccb84-1734"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1734"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.ToString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, System.Globalization.NumberStyles style, IFormatProvider provider, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Numerics.BigInteger" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, System.Globalization.NumberStyles style, IFormatProvider provider, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, style As NumberStyles, provider As IFormatProvider, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Numerics.BigInteger" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb84-1735">Строковое представление числа.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1735">The string representation of a number.</span></span> <span data-ttu-id="ccb84-1736">Строка интерпретируется с использованием стиля, указанного в <paramref name="style" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1736">The string is interpreted using the style specified by <paramref name="style" />.</span></span></param>
        <param name="style"><span data-ttu-id="ccb84-1737">Побитовое сочетание значений перечисления, обозначающих элементы стиля, которые могут быть представлены в параметре <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1737">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="value" />.</span></span> <span data-ttu-id="ccb84-1738">Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1738">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="ccb84-1739">Объект, который предоставляет сведения о форматировании параметра <paramref name="value" /> в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1739">An object that supplies culture-specific formatting information about <paramref name="value" />.</span></span></param>
        <param name="result"><span data-ttu-id="ccb84-1740">После выполнения этого метода содержит эквивалент типа <see cref="T:System.Numerics.BigInteger" /> числа, содержащегося в параметре <paramref name="value" />, или <see cref="P:System.Numerics.BigInteger.Zero" />, если выполнить преобразование не удалось.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1740">When this method returns, contains the <see cref="T:System.Numerics.BigInteger" /> equivalent to the number that is contained in <paramref name="value" />, or <see cref="P:System.Numerics.BigInteger.Zero" /> if the conversion failed.</span></span> <span data-ttu-id="ccb84-1741">Преобразование не удается выполнить, если параметр <paramref name="value" /> имеет значение <see langword="null" /> или имеет формат, несовместимый со значением <paramref name="style" />,</span><span class="sxs-lookup"><span data-stu-id="ccb84-1741">The conversion fails if the <paramref name="value" /> parameter is <see langword="null" /> or is not in a format that is compliant with <paramref name="style" />.</span></span> <span data-ttu-id="ccb84-1742">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1742">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="ccb84-1743">Предпринимает попытку преобразования числа в формате, который определяется заданным стилем и языком и региональными параметрами, в эквивалент типа <see cref="T:System.Numerics.BigInteger" /> и возвращает значение, определяющее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1743">Tries to convert the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="ccb84-1744">Значение <see langword="true" />, если параметр <paramref name="value" /> успешно преобразован; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1744"><see langword="true" /> if the <paramref name="value" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1745"><xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> Метод аналогичен <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> за тем исключением, что он не создания исключения, если преобразование завершается неудачей.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1745">The <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method is like the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="ccb84-1746">Этот метод исключает необходимость использовать обработку исключений для проверки <xref:System.FormatException> Если `value` является недопустимым и не может быть успешно обработан.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1746">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `value` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="ccb84-1747">`style` Параметр определяет элементы стиля (например, пробелы и знак плюс или минус), которые разрешены в `value` параметр для успешного выполнения операции синтаксического анализа.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1747">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="ccb84-1748">Он должен представлять собой сочетание битовых флагов из <xref:System.Globalization.NumberStyles> перечисления.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1748">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="ccb84-1749">В зависимости от значения `style`, `value` параметр может содержать следующие элементы:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1749">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="ccb84-1750">[*ws*] [*$*] [*входа*] [*цифр*,]*цифр*[. *цифры_дробной_части*] [E [*входа*]*экспоненциальные_цифры*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="ccb84-1750">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="ccb84-1751">Если `style` включает параметр <xref:System.Globalization.NumberStyles.AllowHexSpecifier>, `value` параметр может содержать следующие элементы:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1751">If the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="ccb84-1752">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="ccb84-1752">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="ccb84-1753">Элементы в квадратных скобках ([и]) являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1753">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ccb84-1754">Каждый из элементов описан в таблице ниже.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1754">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ccb84-1755">Элемент</span><span class="sxs-lookup"><span data-stu-id="ccb84-1755">Element</span></span>|<span data-ttu-id="ccb84-1756">Описание</span><span class="sxs-lookup"><span data-stu-id="ccb84-1756">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ccb84-1757">*ws*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1757">*ws*</span></span>|<span data-ttu-id="ccb84-1758">Необязательный пробел.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1758">Optional white space.</span></span> <span data-ttu-id="ccb84-1759">Пробелы могут отображаться в начале `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> флаг, или в конце `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1759">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="ccb84-1760">Символ валюты.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1760">A culture-specific currency symbol.</span></span> <span data-ttu-id="ccb84-1761">Его положение в строке определяется <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> свойство <xref:System.Globalization.NumberFormatInfo> объект, возвращаемый <xref:System.IFormatProvider.GetFormat%2A> метод `provider` параметра.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1761">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="ccb84-1762">Символ валюты может встречаться в `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1762">The currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb84-1763">*sign*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1763">*sign*</span></span>|<span data-ttu-id="ccb84-1764">Необязательный знак.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1764">An optional sign.</span></span> <span data-ttu-id="ccb84-1765">Знак может располагаться в начале `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> флаг и может отображаться в конце `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1765">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ccb84-1766">Можно использовать скобки в `value` указывает отрицательное значение, если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1766">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb84-1767">*digits*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1767">*digits*</span></span>|<span data-ttu-id="ccb84-1768">Последовательность цифр от 0 до 9.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1768">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="ccb84-1769">*,*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1769">*,*</span></span>|<span data-ttu-id="ccb84-1770">Разделитель групп, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1770">A culture-specific group separator.</span></span> <span data-ttu-id="ccb84-1771">Разделитель групп, языка и региональных параметров, заданные `provider` могут присутствовать в `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1771">The group separator of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb84-1772">*.*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1772">*.*</span></span>|<span data-ttu-id="ccb84-1773">Символ десятичной запятой для конкретного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1773">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="ccb84-1774">Символ десятичной запятой, языка и региональных параметров, заданные `provider` могут присутствовать в `value` Если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1774">The decimal point symbol of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb84-1775">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1775">*fractional_digits*</span></span>|<span data-ttu-id="ccb84-1776">Один или несколько вхождений цифры 0.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1776">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="ccb84-1777">Дробных разрядов может встречаться в `value` только если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1777">Fractional digits can appear in `value` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb84-1778">E</span><span class="sxs-lookup"><span data-stu-id="ccb84-1778">E</span></span>|<span data-ttu-id="ccb84-1779">«E» или «E» знаком, который указывает, что значение будет представлено в экспоненциальной нотации (научный).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1779">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="ccb84-1780">`value` Параметр может представлять число в экспоненциальном представлении, если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1780">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb84-1781">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1781">*exponential_digits*</span></span>|<span data-ttu-id="ccb84-1782">Последовательность цифр от 0 до 9.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1782">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="ccb84-1783">`value` Параметр может представлять число в экспоненциальном представлении, если `style` включает в себя <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1783">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb84-1784">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="ccb84-1784">*hexdigits*</span></span>|<span data-ttu-id="ccb84-1785">Последовательность шестнадцатеричных цифр от 0 до f или от 0 до F.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1785">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="ccb84-1786">Символы (от U + 0000) завершающий NUL в `s` пропускаются операцией анализа, независимо от значения `style` аргумент.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1786">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="ccb84-1787">Строка только десятичных знаков (который соответствует <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> флаг) всегда успешно выполняет синтаксический анализ.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1787">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="ccb84-1788">Большинство оставшихся <xref:System.Globalization.NumberStyles> члены управляют элементами, которые могут присутствовать, но необязательно должны присутствовать в этом входной строки.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1788">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="ccb84-1789">В следующей таблице показаны как отдельные <xref:System.Globalization.NumberStyles> члены влияют на элементы, которые могут присутствовать в `value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1789">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="ccb84-1790">Простые `NumberStyles` значения</span><span class="sxs-lookup"><span data-stu-id="ccb84-1790">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="ccb84-1791">Элементы, допустимые в значении помимо цифр</span><span class="sxs-lookup"><span data-stu-id="ccb84-1791">Elements permitted in value in addition to digits</span></span>|  
|------------------------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="ccb84-1792">Только десятичные цифры.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1792">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="ccb84-1793">Десятичной запятой (*.*) и *цифры_дробной_части* элементов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1793">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="ccb84-1794">Тем не менее *цифры_дробной_части* должен включать только один или несколько цифр 0, или этот метод возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1794">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="ccb84-1795">«E» или «E» знаком, который указывает экспоненциальное представление, вместе с *экспоненциальные_цифры*.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1795">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="ccb84-1796">Если `value` представляет число в экспоненциальном представлении, он не может иметь ненулевое значение дробного компонента.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1796">If `value` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="ccb84-1797">*Ws* элемент в начале `value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1797">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="ccb84-1798">*Ws* элемент в конце `value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1798">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="ccb84-1799">*Входа* элемент перед *цифр*.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1799">The *sign* element before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="ccb84-1800">*Входа* после элемента *цифр*.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1800">The *sign* element after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="ccb84-1801">*Входа* элемент в скобки, заключив числовое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1801">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="ccb84-1802">Разделитель групп (*,*) элемент.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1802">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="ccb84-1803">Валюта (*$*) элемент.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1803">The currency (*$*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="ccb84-1804">Все элементы.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1804">All elements.</span></span> <span data-ttu-id="ccb84-1805">Тем не менее `value` не может представлять шестнадцатеричное число или число в экспоненциальном представлении.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1805">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="ccb84-1806">*Ws* элемент в начале или конце `value`, *входа* в начале `value`и десятичной запятой (*.*) символов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1806">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="ccb84-1807">`value` Параметр можно также использовать экспоненциальное представление.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1807">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="ccb84-1808">*Ws*, *входа*, разделитель групп (*,*) и десятичной запятой (*.*) элементов.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1808">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="ccb84-1809">Все элементы.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1809">All elements.</span></span> <span data-ttu-id="ccb84-1810">Тем не менее `value` не может представлять шестнадцатеричное число.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1810">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="ccb84-1811">При использовании <xref:System.Numerics.BigInteger.TryParse%2A> метод для обратного преобразования строкового представления объекта <xref:System.Numerics.BigInteger> значение, которое было выходные <xref:System.Numerics.BigInteger.ToString%2A> метод, следует использовать <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> метод с помощью описателя формата «R» для создания строкового представления <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1811">If you use the <xref:System.Numerics.BigInteger.TryParse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="ccb84-1812">В противном случае — строковое представление <xref:System.Numerics.BigInteger> сохраняет только 50 наиболее значимых цифр, исходное значение, и данные могут быть потеряны, если вы используете <xref:System.Numerics.BigInteger.TryParse%2A> метод восстановления <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1812">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.TryParse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="ccb84-1813">Если <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> флага `value` должен представлять собой шестнадцатеричное значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1813">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `value` must be a hexadecimal value.</span></span> <span data-ttu-id="ccb84-1814">Только другие флаги, которые могут быть представлены в `style` являются <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> и <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1814">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ccb84-1815">( <xref:System.Globalization.NumberStyles> Перечисление имеет составной стиль <xref:System.Globalization.NumberStyles.HexNumber>, включающий в себя оба флага пустого пространства.)</span><span class="sxs-lookup"><span data-stu-id="ccb84-1815">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ccb84-1816">Если `value` является строковым представлением шестнадцатеричного числа, он не может начинаться с описателей (таких как `0x` или `&h`), отличающее его как шестнадцатеричное число.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1816">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="ccb84-1817">Это приводит к сбою преобразования.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1817">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="ccb84-1818">Если `value` является шестнадцатеричной строки, <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> метод интерпретирует `value` как отрицательное число, хранятся с помощью двух дополнением представление, в случае его первых двух шестнадцатеричных цифр больше или равно `0x80`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1818">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="ccb84-1819">Другими словами, этот метод интерпретирует самого старшего бита первого байта в `value` называется знаковым битом.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1819">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="ccb84-1820">Чтобы убедиться в том, что шестнадцатеричной строки интерпретируется правильно как положительное число, первая цифра в `value` должен иметь нулевое значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1820">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="ccb84-1821">Например, этот метод интерпретирует `0x80` как отрицательное значение, но он интерпретирует либо `0x080` или `0x0080` как положительное значение.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1821">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="ccb84-1822">В следующем примере показано различие между шестнадцатеричных строк, представляющих положительные и отрицательные значения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1822">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParseHex1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParseHex1.vb#1)]  
  
 <span data-ttu-id="ccb84-1823">`provider` Параметр <xref:System.IFormatProvider> реализации.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1823">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="ccb84-1824">Его <xref:System.IFormatProvider.GetFormat%2A> возвращает <xref:System.Globalization.NumberFormatInfo> объект, который предоставляет зависящие от культуры сведения о формате параметра `value`.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1824">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="ccb84-1825">`provider` Параметр может принимать одно из следующих:</span><span class="sxs-lookup"><span data-stu-id="ccb84-1825">The `provider` parameter can be any one of the following:</span></span>  
  
-   <span data-ttu-id="ccb84-1826">Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры, который предоставляет сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1826">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="ccb84-1827">Его <xref:System.Globalization.CultureInfo.GetFormat%2A> возвращает метод <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о форматировании числовых для этого языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1827">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="ccb84-1828">Объект <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о форматировании числовых.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1828">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="ccb84-1829">(Его реализации <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> просто возвращает сам себя.)</span><span class="sxs-lookup"><span data-stu-id="ccb84-1829">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="ccb84-1830">Пользовательский объект, реализующий <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1830">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="ccb84-1831">Его <xref:System.IFormatProvider.GetFormat%2A> метод создает экземпляр и возвращает <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1831">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="ccb84-1832">Если `provider` — `null`, <xref:System.Globalization.NumberFormatInfo> объект для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1832">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb84-1833">В следующем примере происходит несколько вызовов <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> метода с использованием различных сочетаний значений для `style` и `provider` параметров.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1833">The following example makes some calls to the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method using various combinations of values for the `style` and `provider` parameters.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParse1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParse1.vb#2)]  
  
 <span data-ttu-id="ccb84-1834">Ряд отдельные вызовы, чтобы <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> метод передать экземпляр из следующих `BigIntegerFormatProvider` класс, который определяет как отрицательный знак тильды (~).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1834">A number of the individual calls to the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method pass an instance of the following `BigIntegerFormatProvider` class, which defines a tilde (~) as the negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParse1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParse1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ccb84-1835"><paramref name="style" /> не является значением <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1835"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="ccb84-1836">-или-</span><span class="sxs-lookup"><span data-stu-id="ccb84-1836">-or-</span></span> 
 <span data-ttu-id="ccb84-1837"><paramref name="style" /> включает флаги <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" /> вместе с другим значениями.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1837"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public bool TryWriteBytes (Span&lt;byte&gt; destination, out int bytesWritten, bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryWriteBytes (destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryWriteBytes : Span&lt;byte&gt; *  * bool * bool -&gt; bool" Usage="bigInteger.TryWriteBytes (destination, bytesWritten, isUnsigned, isBigEndian)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="isUnsigned" Type="System.Boolean" />
        <Parameter Name="isBigEndian" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <param name="isUnsigned">To be added.</param>
        <param name="isBigEndian">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Zero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger Zero" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Zero As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger Zero { System::Numerics::BigInteger get(); };" />
      <MemberSignature Language="F#" Value="member this.Zero : System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Zero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ccb84-1838">Получает значение, представляющее 0 (нуль).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1838">Gets a value that represents the number 0 (zero).</span></span></summary>
        <value><span data-ttu-id="ccb84-1839">Целое число, равное нулю (0).</span><span class="sxs-lookup"><span data-stu-id="ccb84-1839">An integer whose value is 0 (zero).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb84-1840"><xref:System.Numerics.BigInteger> Объект, возвращаемый этим свойством предоставляет удобный источник нулевое значение для использования в назначениях и сравнения.</span><span class="sxs-lookup"><span data-stu-id="ccb84-1840">The <xref:System.Numerics.BigInteger> object returned by this property provides a convenient source of a zero value for use in assignments and comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.IsZero" />
      </Docs>
    </Member>
  </Members>
</Type>