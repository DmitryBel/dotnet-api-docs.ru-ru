<Type Name="Timer" FullName="System.Timers.Timer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f2483b13115f709c891ae64fffbeed30c28faf0e" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56405401" /></Metadata><TypeSignature Language="C#" Value="public class Timer : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Timer extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Timers.Timer" />
  <TypeSignature Language="VB.NET" Value="Public Class Timer&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type Timer = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.DefaultEvent("Elapsed")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.DefaultProperty("Interval")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="96bd4-101">Создает событие после заданного интервала с возможностью создания повторяющихся событий.</span><span class="sxs-lookup"><span data-stu-id="96bd4-101">Generates an event after a set interval, with an option to generate recurring events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd4-102"><xref:System.Timers.Timer> Компонент является серверным таймер, который вызывает <xref:System.Timers.Timer.Elapsed> событие в приложении после количество миллисекунд в <xref:System.Timers.Timer.Interval%2A> свойстве.</span><span class="sxs-lookup"><span data-stu-id="96bd4-102">The <xref:System.Timers.Timer> component is a server-based timer that raises an <xref:System.Timers.Timer.Elapsed> event in your application after the number of milliseconds in the <xref:System.Timers.Timer.Interval%2A> property has elapsed.</span></span> <span data-ttu-id="96bd4-103">Можно настроить <xref:System.Timers.Timer> объекта, чтобы создать событие, используя только один раз или неоднократно <xref:System.Timers.Timer.AutoReset%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="96bd4-103">You can configure the <xref:System.Timers.Timer> object to raise the event just once or repeatedly using the <xref:System.Timers.Timer.AutoReset%2A> property.</span></span> <span data-ttu-id="96bd4-104">Как правило <xref:System.Timers.Timer> объект объявлен на уровне класса, чтобы оно оставалось в области до тех пор, пока он необходим.</span><span class="sxs-lookup"><span data-stu-id="96bd4-104">Typically, a <xref:System.Timers.Timer> object is declared at the class level so that it stays in scope as long as it is needed.</span></span> <span data-ttu-id="96bd4-105">Затем можно обработать его <xref:System.Timers.Timer.Elapsed> событие, чтобы обеспечить обработку.</span><span class="sxs-lookup"><span data-stu-id="96bd4-105">You can then handle its <xref:System.Timers.Timer.Elapsed> event to provide regular processing.</span></span> <span data-ttu-id="96bd4-106">Например, предположим, у вас есть важный сервер, который должен храниться 24 часа в сутки, 7 дней в неделю.</span><span class="sxs-lookup"><span data-stu-id="96bd4-106">For example, suppose you have a critical server that must be kept running 24 hours a day, 7 days a week.</span></span> <span data-ttu-id="96bd4-107">Можно создать службу, использующую <xref:System.Timers.Timer> объект, который периодически Проверьте сервер и убедитесь, что система приступить к работе.</span><span class="sxs-lookup"><span data-stu-id="96bd4-107">You could create a service that uses a <xref:System.Timers.Timer> object to periodically check the server and ensure that the system is up and running.</span></span> <span data-ttu-id="96bd4-108">Если система не отвечает, служба может попытаться перезапустить сервер или уведомить администратора.</span><span class="sxs-lookup"><span data-stu-id="96bd4-108">If the system is not responding, the service could attempt to restart the server or notify an administrator.</span></span>  
  
> [!IMPORTANT]
> <span data-ttu-id="96bd4-109"><xref:System.Timers.Timer> Класс доступен не для всех реализаций .NET и версий, включая .NET Standard 1.6 и более ранние версии.</span><span class="sxs-lookup"><span data-stu-id="96bd4-109">The <xref:System.Timers.Timer> class is not available for all .NET implementations and versions, such as .NET Standard 1.6 and lower versions.</span></span>
> <span data-ttu-id="96bd4-110">В таких случаях можно использовать <xref:System.Threading.Timer?displayProperty=nameWithType> вместо этого класса.</span><span class="sxs-lookup"><span data-stu-id="96bd4-110">In these cases, you can use the <xref:System.Threading.Timer?displayProperty=nameWithType> class instead.</span></span>
  
 <span data-ttu-id="96bd4-111">Этот тип реализует <xref:System.IDisposable> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="96bd4-111">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="96bd4-112">Когда вы закончите, используя тип, следует освободить его прямо или косвенно.</span><span class="sxs-lookup"><span data-stu-id="96bd4-112">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="96bd4-113">Чтобы удалить тип напрямую, вызовите его <xref:System.IDisposable.Dispose%2A> метод в `try` / `catch` блока.</span><span class="sxs-lookup"><span data-stu-id="96bd4-113">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="96bd4-114">Чтобы избавиться от его косвенно, используйте языковой конструкции, такие как `using` (в C#) или `Using` (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="96bd4-114">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="96bd4-115">Дополнительные сведения см. в разделе «С помощью объекта, реализует IDisposable» <xref:System.IDisposable> разделу интерфейса.</span><span class="sxs-lookup"><span data-stu-id="96bd4-115">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="96bd4-116">Сервер под управлением <xref:System.Timers.Timer?displayProperty=nameWithType> класс предназначен для использования с рабочими потоками в многопоточной среде.</span><span class="sxs-lookup"><span data-stu-id="96bd4-116">The server-based <xref:System.Timers.Timer?displayProperty=nameWithType> class is designed for use with worker threads in a multithreaded environment.</span></span> <span data-ttu-id="96bd4-117">Серверные таймеры могут перемещаться между потоками для обработки возникающих <xref:System.Timers.Timer.Elapsed> событие, приводит к более высокой точностью, чем Windows таймеров в вызове событий по времени.</span><span class="sxs-lookup"><span data-stu-id="96bd4-117">Server timers can move among threads to handle the raised <xref:System.Timers.Timer.Elapsed> event, resulting in more accuracy than Windows timers in raising the event on time.</span></span>  
  
 <span data-ttu-id="96bd4-118"><xref:System.Timers.Timer?displayProperty=nameWithType> Компонент создает <xref:System.Timers.Timer.Elapsed> события, в зависимости от значение (в миллисекундах) <xref:System.Timers.Timer.Interval%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="96bd4-118">The <xref:System.Timers.Timer?displayProperty=nameWithType> component raises the <xref:System.Timers.Timer.Elapsed> event, based on the value (in milliseconds) of the <xref:System.Timers.Timer.Interval%2A> property.</span></span> <span data-ttu-id="96bd4-119">Можно обработать это событие для выполнения обработки, что нужно.</span><span class="sxs-lookup"><span data-stu-id="96bd4-119">You can handle this event to perform the processing you need.</span></span> <span data-ttu-id="96bd4-120">Например предположим, что у вас есть приложение электронной коммерции, постоянно отправляет заказы на продажу в базу данных.</span><span class="sxs-lookup"><span data-stu-id="96bd4-120">For example, suppose that you have an online sales application that continuously posts sales orders to a database.</span></span> <span data-ttu-id="96bd4-121">Служба, составляющая инструкции по доставке обрабатывает пакет заказов, а не по отдельности.</span><span class="sxs-lookup"><span data-stu-id="96bd4-121">The service that compiles the instructions for shipping operates on a batch of orders rather than processing each order individually.</span></span> <span data-ttu-id="96bd4-122">Можно использовать <xref:System.Timers.Timer> для запуска пакетной обработки каждые 30 минут.</span><span class="sxs-lookup"><span data-stu-id="96bd4-122">You could use a <xref:System.Timers.Timer> to start the batch processing every 30 minutes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="96bd4-123">Класс System.Timers.Timer имеет тем же разрешением, что системные часы.</span><span class="sxs-lookup"><span data-stu-id="96bd4-123">The System.Timers.Timer class has the same resolution as the system clock.</span></span> <span data-ttu-id="96bd4-124">Это означает, что <xref:System.Timers.Timer.Elapsed> событие будет срабатывать с интервалом, заданным путем разрешения системных часов, если <xref:System.Timers.Timer.Interval%2A> меньшим, чем разрешение системных часов.</span><span class="sxs-lookup"><span data-stu-id="96bd4-124">This means that the <xref:System.Timers.Timer.Elapsed> event will fire at an interval defined by the resolution of the system clock if the <xref:System.Timers.Timer.Interval%2A> property is less than the resolution of the system clock.</span></span> <span data-ttu-id="96bd4-125">Дополнительные сведения см. в описании свойства <xref:System.Timers.Timer.Interval%2A>.</span><span class="sxs-lookup"><span data-stu-id="96bd4-125">For more information, see the <xref:System.Timers.Timer.Interval%2A> property.</span></span>  
  
 <span data-ttu-id="96bd4-126">При <xref:System.Timers.Timer.AutoReset%2A> присваивается `false`, <xref:System.Timers.Timer?displayProperty=nameWithType> объекта вызывает <xref:System.Timers.Timer.Elapsed> событий однократно, после первого <xref:System.Timers.Timer.Interval%2A> истечет.</span><span class="sxs-lookup"><span data-stu-id="96bd4-126">When <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, a <xref:System.Timers.Timer?displayProperty=nameWithType> object raises the <xref:System.Timers.Timer.Elapsed> event only once, after the first <xref:System.Timers.Timer.Interval%2A> has elapsed.</span></span> <span data-ttu-id="96bd4-127">Чтобы поддерживать вызов <xref:System.Timers.Timer.Elapsed> событий регулярно через интервал, указанный по <xref:System.Timers.Timer.Interval%2A>, задайте <xref:System.Timers.Timer.AutoReset%2A> для `true`, который является значением по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="96bd4-127">To keep raising the <xref:System.Timers.Timer.Elapsed> event regularly at the interval defined by the <xref:System.Timers.Timer.Interval%2A>, set <xref:System.Timers.Timer.AutoReset%2A> to `true`, which is the default value.</span></span>  
  
 <span data-ttu-id="96bd4-128"><xref:System.Timers.Timer> Компонент перехватывает и подавляет все исключения, создаваемые обработчики событий для <xref:System.Timers.Timer.Elapsed> событий.</span><span class="sxs-lookup"><span data-stu-id="96bd4-128">The <xref:System.Timers.Timer> component catches and suppresses all exceptions thrown by event handlers for the <xref:System.Timers.Timer.Elapsed> event.</span></span> <span data-ttu-id="96bd4-129">Это поведение будет изменено в будущих выпусков платформы .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="96bd4-129">This behavior is subject to change in future releases of the .NET Framework.</span></span> <span data-ttu-id="96bd4-130">Обратите внимание, что это не относится обработчиков событий, которые выполняются асинхронно и включают `await` оператора (в C#) или `Await` оператора (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="96bd4-130">Note, however, that this is not true of event handlers that execute asynchronously and include the `await` operator (in C#)  or the `Await` operator (in Visual Basic).</span></span> <span data-ttu-id="96bd4-131">Исключения, возникшие в эти обработчики событий, распространяются обратно в вызывающий поток, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="96bd4-131">Exceptions thrown in these event handlers are propagated back to the calling thread, as the following example illustrates.</span></span> <span data-ttu-id="96bd4-132">Дополнительные сведения об исключениях, порожденных в асинхронных методах см. в разделе [обработка исключений](~/docs/standard/parallel-programming/exception-handling-task-parallel-library.md).</span><span class="sxs-lookup"><span data-stu-id="96bd4-132">For more information on exceptions thrown in asynchronous methods, see   [Exception Handling](~/docs/standard/parallel-programming/exception-handling-task-parallel-library.md).</span></span>  
  
 [!code-csharp[System.Timers.Timer#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/AsyncHandlerEx1.cs#3)]
 [!code-vb[System.Timers.Timer#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/AsyncHandlerEx1.vb#3)]  
  
 <span data-ttu-id="96bd4-133">Если <xref:System.Timers.Timer.SynchronizingObject%2A> свойство `null`, <xref:System.Timers.Timer.Elapsed> событие <xref:System.Threading.ThreadPool> потока.</span><span class="sxs-lookup"><span data-stu-id="96bd4-133">If the <xref:System.Timers.Timer.SynchronizingObject%2A> property is `null`, the <xref:System.Timers.Timer.Elapsed> event is raised on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="96bd4-134">Если обработка <xref:System.Timers.Timer.Elapsed> событие продолжается дольше <xref:System.Timers.Timer.Interval%2A>, событие может вызываться снова на другом <xref:System.Threading.ThreadPool> потока.</span><span class="sxs-lookup"><span data-stu-id="96bd4-134">If processing of the <xref:System.Timers.Timer.Elapsed> event lasts longer than <xref:System.Timers.Timer.Interval%2A>, the event might be raised again on another <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="96bd4-135">В этом случае обработчик событий должен быть реентерабельным.</span><span class="sxs-lookup"><span data-stu-id="96bd4-135">In this situation, the event handler should be reentrant.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96bd4-136">Метод обработки событий может выполняться в одном потоке, в то же время, другой поток вызывает <xref:System.Timers.Timer.Stop%2A> метода или наборы <xref:System.Timers.Timer.Enabled%2A> свойства `false`.</span><span class="sxs-lookup"><span data-stu-id="96bd4-136">The event-handling method might run on one thread at the same time that another thread calls the <xref:System.Timers.Timer.Stop%2A> method or sets the <xref:System.Timers.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="96bd4-137">Это может привести к <xref:System.Timers.Timer.Elapsed> события после остановки таймера.</span><span class="sxs-lookup"><span data-stu-id="96bd4-137">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the timer is stopped.</span></span> <span data-ttu-id="96bd4-138">Пример кода для <xref:System.Timers.Timer.Stop%2A> метод показан один из способов избежать состояния гонок.</span><span class="sxs-lookup"><span data-stu-id="96bd4-138">The example code for the <xref:System.Timers.Timer.Stop%2A> method shows one way to avoid this race condition.</span></span>  
  
 <span data-ttu-id="96bd4-139">Даже если <xref:System.Timers.Timer.SynchronizingObject%2A> не `null`, <xref:System.Timers.Timer.Elapsed> события могут происходить после <xref:System.Timers.Timer.Dispose%2A> или <xref:System.Timers.Timer.Stop%2A> был вызван метод или после <xref:System.Timers.Timer.Enabled%2A> было присвоено свойство `false`, так как сигнал для вызова <xref:System.Timers.Timer.Elapsed> событий всегда помещается в очередь для выполнения в потоке пула потоков.</span><span class="sxs-lookup"><span data-stu-id="96bd4-139">Even if <xref:System.Timers.Timer.SynchronizingObject%2A> is not `null`, <xref:System.Timers.Timer.Elapsed> events can occur after the <xref:System.Timers.Timer.Dispose%2A> or <xref:System.Timers.Timer.Stop%2A> method has been called or after the <xref:System.Timers.Timer.Enabled%2A> property has been set to `false`, because the signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a thread pool thread.</span></span> <span data-ttu-id="96bd4-140">Один из способов устранения такого состояния гонки является установить флаг, который указывает обработчику событий для <xref:System.Timers.Timer.Elapsed> событие, чтобы игнорировать последующие события.</span><span class="sxs-lookup"><span data-stu-id="96bd4-140">One way to resolve this race condition is to set a flag that tells the event handler for the <xref:System.Timers.Timer.Elapsed> event to ignore subsequent events.</span></span>  
  
 <span data-ttu-id="96bd4-141">Если вы используете <xref:System.Timers.Timer?displayProperty=nameWithType> класс с элементом пользовательского интерфейса, таких как формы или элемента управления, не помещая таймер этого элемента пользовательского интерфейса, назначить форму или элемент управления, содержащий <xref:System.Timers.Timer> для <xref:System.Timers.Timer.SynchronizingObject%2A> свойство, таким образом, событие маршалинг в поток интерфейса пользователя.</span><span class="sxs-lookup"><span data-stu-id="96bd4-141">If you use the <xref:System.Timers.Timer?displayProperty=nameWithType> class with a user interface element, such as a form or control, without placing the timer on that user interface element, assign the form or control that contains the <xref:System.Timers.Timer> to the <xref:System.Timers.Timer.SynchronizingObject%2A> property, so that the event is marshaled to the user interface thread.</span></span>  
  
 <span data-ttu-id="96bd4-142">Список значений свойства по умолчанию для экземпляра <xref:System.Timers.Timer>, см. в разделе <xref:System.Timers.Timer.%23ctor%2A> конструктор.</span><span class="sxs-lookup"><span data-stu-id="96bd4-142">For a list of default property values for an instance of <xref:System.Timers.Timer>, see the <xref:System.Timers.Timer.%23ctor%2A> constructor.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="96bd4-143">Имейте в виду, что .NET включает четыре класса с именем `Timer`, каждый из который предлагает различные функциональные возможности:</span><span class="sxs-lookup"><span data-stu-id="96bd4-143">Be aware that .NET includes four classes named `Timer`, each of which offers different functionality:</span></span>  
>   
> - <span data-ttu-id="96bd4-144"><xref:System.Timers.Timer?displayProperty=nameWithType> (этот раздел): вызывает событие через определенные интервалы.</span><span class="sxs-lookup"><span data-stu-id="96bd4-144"><xref:System.Timers.Timer?displayProperty=nameWithType> (this topic): fires an event at regular intervals.</span></span> <span data-ttu-id="96bd4-145">Класс предназначен для использования в качестве сервера под управлением или компонента службы в многопоточной среде; он нет пользовательского интерфейса и не отображается во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="96bd4-145">The class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>  
> - <span data-ttu-id="96bd4-146"><xref:System.Threading.Timer?displayProperty=nameWithType>: выполняет метод одного ответного вызова пула потоков с регулярными интервалами.</span><span class="sxs-lookup"><span data-stu-id="96bd4-146"><xref:System.Threading.Timer?displayProperty=nameWithType>: executes a single callback method on a thread pool thread at regular intervals.</span></span> <span data-ttu-id="96bd4-147">Метод обратного вызова определяется в том случае, когда таймер создается и не может быть изменено.</span><span class="sxs-lookup"><span data-stu-id="96bd4-147">The callback method is defined when the timer is instantiated and cannot be changed.</span></span> <span data-ttu-id="96bd4-148">Как и <xref:System.Timers.Timer?displayProperty=nameWithType> класса, этот класс предназначен для использования в качестве компонента server или службы в многопоточной среде; у него отсутствует интерфейс пользователя, который не отображается во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="96bd4-148">Like the <xref:System.Timers.Timer?displayProperty=nameWithType> class, this class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>  
> - <span data-ttu-id="96bd4-149"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> (Только для .NET framework): это компонент Windows Forms, который вызывает событие через определенные интервалы.</span><span class="sxs-lookup"><span data-stu-id="96bd4-149"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> (.NET Framework only): a Windows Forms component that fires an event at regular intervals.</span></span> <span data-ttu-id="96bd4-150">У этого компонента нет интерфейса пользователя. Он предназначен для однопоточной среды.</span><span class="sxs-lookup"><span data-stu-id="96bd4-150">The component has no user interface and is designed for use in a single-threaded environment.</span></span>  
> - <span data-ttu-id="96bd4-151"><xref:System.Web.UI.Timer?displayProperty=nameWithType> (Только для .NET framework): компонент ASP.NET, выполняющий обратную передачу асинхронный или синхронный веб-страницы с регулярным интервалом.</span><span class="sxs-lookup"><span data-stu-id="96bd4-151"><xref:System.Web.UI.Timer?displayProperty=nameWithType> (.NET Framework only): an ASP.NET component that performs asynchronous or synchronous web page postbacks at a regular interval.</span></span>  

## Examples  
 <span data-ttu-id="96bd4-152">В следующем примере создается `System.Timers.Timer` объект, который запускает его <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> событий каждые две секунды (2000 миллисекунд), настраивает обработчик событий для события и запускает таймер.</span><span class="sxs-lookup"><span data-stu-id="96bd4-152">The following example instantiates a `System.Timers.Timer` object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2,000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="96bd4-153">Обработчик событий отображает значение <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> свойство каждый раз, он вызывается.</span><span class="sxs-lookup"><span data-stu-id="96bd4-153">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-csharp[System.Timers.Timer#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer2a.cs#2)]
 [!code-vb[System.Timers.Timer#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer2a.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="96bd4-154">Любые открытые <see langword="static" /> члены этого типа являются потокобезопасными.</span><span class="sxs-lookup"><span data-stu-id="96bd4-154">Any public <see langword="static" /> members of this type are thread safe.</span></span> <span data-ttu-id="96bd4-155">Потокобезопасность членов экземпляров не гарантируется.</span><span class="sxs-lookup"><span data-stu-id="96bd4-155">Any instance members are not guaranteed to be thread safe.</span></span></threadsafe>
    <altmember cref="P:System.Timers.Timer.AutoReset" />
    <altmember cref="P:System.Timers.Timer.Interval" />
    <altmember cref="E:System.Timers.Timer.Elapsed" />
    <altmember cref="M:System.Timers.Timer.#ctor" />
    <altmember cref="T:System.Threading.Timer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96bd4-156">Инициализирует новый экземпляр класса <see cref="T:System.Timers.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="96bd4-156">Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96bd4-157">Инициализирует новый экземпляр класса <see cref="T:System.Timers.Timer" /> и задает всем свойствам начальные значения.</span><span class="sxs-lookup"><span data-stu-id="96bd4-157">Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class, and sets all the properties to their initial values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd4-158">В следующей таблице представлены исходные значения свойств для экземпляра <xref:System.Timers.Timer>.</span><span class="sxs-lookup"><span data-stu-id="96bd4-158">The following table shows initial property values for an instance of <xref:System.Timers.Timer>.</span></span>  
  
|<span data-ttu-id="96bd4-159">Свойство.</span><span class="sxs-lookup"><span data-stu-id="96bd4-159">Property</span></span>|<span data-ttu-id="96bd4-160">Исходное значение</span><span class="sxs-lookup"><span data-stu-id="96bd4-160">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Timers.Timer.AutoReset%2A>|`true`|  
|<xref:System.Timers.Timer.Enabled%2A>|`false`|  
|<xref:System.Timers.Timer.Interval%2A>|<span data-ttu-id="96bd4-161">100 миллисекунд</span><span class="sxs-lookup"><span data-stu-id="96bd4-161">100 milliseconds</span></span>|  
|<xref:System.Timers.Timer.SynchronizingObject%2A>|<span data-ttu-id="96bd4-162">Пустая ссылка (`Nothing` в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="96bd4-162">A null reference (`Nothing` in Visual Basic).</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="96bd4-163">В следующем примере создается <xref:System.Timers.Timer> объект, который запускает его <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> событий каждые две секунды (2000 миллисекунд), настраивает обработчик событий для события и запускает таймер.</span><span class="sxs-lookup"><span data-stu-id="96bd4-163">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="96bd4-164">Обработчик событий отображает значение <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> свойство каждый раз, он вызывается.</span><span class="sxs-lookup"><span data-stu-id="96bd4-164">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.SynchronizingObject" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (double interval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 interval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (interval As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(double interval);" />
      <MemberSignature Language="F#" Value="new System.Timers.Timer : double -&gt; System.Timers.Timer" Usage="new System.Timers.Timer interval" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="interval"><span data-ttu-id="96bd4-165">Время между событиями в миллисекундах.</span><span class="sxs-lookup"><span data-stu-id="96bd4-165">The time, in milliseconds, between events.</span></span> <span data-ttu-id="96bd4-166">Значение должно быть больше нуля и меньше или равно <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="96bd4-166">The value must be greater than zero and less than or equal to <see cref="F:System.Int32.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="96bd4-167">Инициализирует новый экземпляр класса <see cref="T:System.Timers.Timer" /> и задает свойству <see cref="P:System.Timers.Timer.Interval" /> указанное значение в миллисекундах.</span><span class="sxs-lookup"><span data-stu-id="96bd4-167">Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class, and sets the <see cref="P:System.Timers.Timer.Interval" /> property to the specified number of milliseconds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd4-168">Этот конструктор задает <xref:System.Timers.Timer.Interval%2A> свойства нового экземпляра таймера, но не включает таймер.</span><span class="sxs-lookup"><span data-stu-id="96bd4-168">This constructor sets the <xref:System.Timers.Timer.Interval%2A> property of the new timer instance, but does not enable the timer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96bd4-169">В следующем примере создается <xref:System.Timers.Timer> объект, который запускает его <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> событий каждые две секунды (2000 миллисекунд), настраивает обработчик событий для события и запускает таймер.</span><span class="sxs-lookup"><span data-stu-id="96bd4-169">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="96bd4-170">Обработчик событий отображает значение <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> свойство каждый раз, он вызывается.</span><span class="sxs-lookup"><span data-stu-id="96bd4-170">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-csharp[System.Timers.Timer#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/AsyncHandlerEx1.cs#3)]
 [!code-vb[System.Timers.Timer#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/AsyncHandlerEx1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="96bd4-171">Значение параметра <paramref name="interval" /> меньше или равно нулю, или больше <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="96bd4-171">The value of the <paramref name="interval" /> parameter is less than or equal to zero, or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="P:System.Timers.Timer.Interval" />
      </Docs>
    </Member>
    <Member MemberName="AutoReset">
      <MemberSignature Language="C#" Value="public bool AutoReset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoReset" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.AutoReset" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoReset { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoReset : bool with get, set" Usage="System.Timers.Timer.AutoReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Timers.TimersDescription("Indicates whether the timer will be restarted when it is enabled.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Timers.TimersDescription("TimerAutoReset")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd4-172">Возвращает или задает логическое значение, определяющее, должен ли объект <see cref="T:System.Timers.Timer" /> вызывать событие <see cref="E:System.Timers.Timer.Elapsed" /> один раз (<see langword="false" />) или неоднократно (<see langword="true" />).</span><span class="sxs-lookup"><span data-stu-id="96bd4-172">Gets or sets a Boolean indicating whether the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event only once (<see langword="false" />) or repeatedly (<see langword="true" />).</span></span></summary>
        <value><span data-ttu-id="96bd4-173">Значение <see langword="true" />, если объект <see cref="T:System.Timers.Timer" /> должен вызывать событие <see cref="E:System.Timers.Timer.Elapsed" /> каждый раз по истечении интервала времени; <see langword="false" />, если событие <see cref="E:System.Timers.Timer.Elapsed" /> следует вызвать только один раз, когда пройдет указанное время.</span><span class="sxs-lookup"><span data-stu-id="96bd4-173"><see langword="true" /> if the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event each time the interval elapses; <see langword="false" /> if it should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event only once, after the first time the interval elapses.</span></span> <span data-ttu-id="96bd4-174">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="96bd4-174">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd4-175">Если <xref:System.Timers.Timer> уже включено при <xref:System.Timers.Timer.Start%2A> вызывается метод, интервал сбрасывается.</span><span class="sxs-lookup"><span data-stu-id="96bd4-175">If the <xref:System.Timers.Timer> is already enabled when the <xref:System.Timers.Timer.Start%2A> method is called, the interval is reset.</span></span> <span data-ttu-id="96bd4-176">Если <xref:System.Timers.Timer.AutoReset%2A> — `false`, <xref:System.Timers.Timer.Start%2A> необходимо вызвать метод, чтобы снова запустить счетчик.</span><span class="sxs-lookup"><span data-stu-id="96bd4-176">If <xref:System.Timers.Timer.AutoReset%2A> is `false`, the <xref:System.Timers.Timer.Start%2A> method must be called in order to start the count again.</span></span>  
  
 <span data-ttu-id="96bd4-177">Сброс интервал влияет на время <xref:System.Timers.Timer.Elapsed> события.</span><span class="sxs-lookup"><span data-stu-id="96bd4-177">Resetting the interval affects when the <xref:System.Timers.Timer.Elapsed> event is raised.</span></span> <span data-ttu-id="96bd4-178">Например, если задать интервал, равный 5 секунд, а затем задать <xref:System.Timers.Timer.Enabled%2A> свойства `true`, счетчик начинается в момент <xref:System.Timers.Timer.Enabled%2A> имеет значение.</span><span class="sxs-lookup"><span data-stu-id="96bd4-178">For example, if you set the interval to 5 seconds and then set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="96bd4-179">Если сбросить интервал в 10 секунд, если счетчик равен 3 секунды, <xref:System.Timers.Timer.Elapsed> события в первый раз 13 секунд после <xref:System.Timers.Timer.Enabled%2A> было установлено на `true`.</span><span class="sxs-lookup"><span data-stu-id="96bd4-179">If you reset the interval to 10 seconds when the count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after the <xref:System.Timers.Timer.Enabled%2A> property was set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96bd4-180">В следующем примере создается <xref:System.Timers.Timer> которого <xref:System.Timers.Timer.Elapsed> вызывает событие через 1,5 секунд.</span><span class="sxs-lookup"><span data-stu-id="96bd4-180">The following example creates a <xref:System.Timers.Timer> whose <xref:System.Timers.Timer.Elapsed> event fires after 1.5 seconds.</span></span> <span data-ttu-id="96bd4-181">Его обработчика событий затем отображает строку «Hello, World!»</span><span class="sxs-lookup"><span data-stu-id="96bd4-181">Its event handler then displays "Hello World!"</span></span> <span data-ttu-id="96bd4-182">на консоли.</span><span class="sxs-lookup"><span data-stu-id="96bd4-182">on the console.</span></span>  
  
 [!code-cpp[Classic Timer.Timer1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Timer.Timer1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer.Timer1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Timer.Timer1 Example/CS/source.cs#1)]
 [!code-vb[Classic Timer.Timer1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Timer.Timer1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.Start" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="timer.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96bd4-183">Начинает во время выполнения инициализацию класса <see cref="T:System.Timers.Timer" />, используемого в форме или другим компонентом.</span><span class="sxs-lookup"><span data-stu-id="96bd4-183">Begins the run-time initialization of a <see cref="T:System.Timers.Timer" /> that is used on a form or by another component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd4-184">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] Разработки, среда использует этот метод для запуска инициализации компонента, используемого в форме или другим компонентом.</span><span class="sxs-lookup"><span data-stu-id="96bd4-184">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to start the initialization of a component that is used on a form or by another component.</span></span> <span data-ttu-id="96bd4-185"><xref:System.Timers.Timer.EndInit%2A> Метод завершает инициализацию.</span><span class="sxs-lookup"><span data-stu-id="96bd4-185">The <xref:System.Timers.Timer.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="96bd4-186">С помощью <xref:System.Timers.Timer.BeginInit%2A> и <xref:System.Timers.Timer.EndInit%2A> методы предотвращает использование до полной инициализации элемента управления.</span><span class="sxs-lookup"><span data-stu-id="96bd4-186">Using the <xref:System.Timers.Timer.BeginInit%2A> and <xref:System.Timers.Timer.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.EndInit" />
        <altmember cref="P:System.Timers.Timer.Interval" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="timer.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96bd4-187">Освобождает ресурсы, используемые объектом <see cref="T:System.Timers.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="96bd4-187">Releases the resources used by the <see cref="T:System.Timers.Timer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd4-188"><xref:System.Timers.Timer.Close%2A> В свою очередь вызывает метод `Dispose` метод.</span><span class="sxs-lookup"><span data-stu-id="96bd4-188">The <xref:System.Timers.Timer.Close%2A> method in turn calls the `Dispose` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="timer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="96bd4-189">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="96bd4-189"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="96bd4-190">Освобождает все ресурсы, используемые текущим объектом <see cref="T:System.Timers.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="96bd4-190">Releases all resources used by the current <see cref="T:System.Timers.Timer" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elapsed">
      <MemberSignature Language="C#" Value="public event System.Timers.ElapsedEventHandler Elapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Timers.ElapsedEventHandler Elapsed" />
      <MemberSignature Language="DocId" Value="E:System.Timers.Timer.Elapsed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Elapsed As ElapsedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Timers::ElapsedEventHandler ^ Elapsed;" />
      <MemberSignature Language="F#" Value="member this.Elapsed : System.Timers.ElapsedEventHandler " Usage="member this.Elapsed : System.Timers.ElapsedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Timers.TimersDescription("Occurs when the Interval has elapsed.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Timers.TimersDescription("TimerIntervalElapsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Timers.ElapsedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd4-191">Происходит по истечении интервала времени.</span><span class="sxs-lookup"><span data-stu-id="96bd4-191">Occurs when the interval elapses.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd4-192"><xref:System.Timers.Timer.Elapsed> Событие происходит, если <xref:System.Timers.Timer.Enabled%2A> свойство `true` и интервала времени (в миллисекундах), определяемый <xref:System.Timers.Timer.Interval%2A> свойство истекает.</span><span class="sxs-lookup"><span data-stu-id="96bd4-192">The <xref:System.Timers.Timer.Elapsed> event is raised if the <xref:System.Timers.Timer.Enabled%2A> property is `true` and the time interval (in milliseconds) defined by the <xref:System.Timers.Timer.Interval%2A> property elapses.</span></span> <span data-ttu-id="96bd4-193">Если <xref:System.Timers.Timer.AutoReset%2A> свойство `true`, события несколько раз с интервалом, заданным по <xref:System.Timers.Timer.Interval%2A> свойство; в противном случае возникает событие только один раз, в первый раз <xref:System.Timers.Timer.Interval%2A> значение истекает.</span><span class="sxs-lookup"><span data-stu-id="96bd4-193">If the <xref:System.Timers.Timer.AutoReset%2A> property is `true`, the event is raised repeatedly at an interval defined by the <xref:System.Timers.Timer.Interval%2A> property; otherwise, the event is raised only once, the first time the <xref:System.Timers.Timer.Interval%2A> value elapses.</span></span>  
  
 <span data-ttu-id="96bd4-194">Если <xref:System.Timers.Timer.Interval%2A> устанавливается после <xref:System.Timers.Timer> имеет к работе, счетчик сбрасывается.</span><span class="sxs-lookup"><span data-stu-id="96bd4-194">If <xref:System.Timers.Timer.Interval%2A> is set after the <xref:System.Timers.Timer> has started, the count is reset.</span></span> <span data-ttu-id="96bd4-195">Например, если задать интервал, равный 5 секунд, а затем задать <xref:System.Timers.Timer.Enabled%2A> для `true`, счетчик начинается в момент <xref:System.Timers.Timer.Enabled%2A> имеет значение.</span><span class="sxs-lookup"><span data-stu-id="96bd4-195">For example, if you set the interval to 5 seconds and then set <xref:System.Timers.Timer.Enabled%2A> to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="96bd4-196">Если сбросить интервал в 10 секунд, когда прошло 3 секунды, <xref:System.Timers.Timer.Elapsed> события в первый раз 13 секунд после <xref:System.Timers.Timer.Enabled%2A> было присвоено `true`.</span><span class="sxs-lookup"><span data-stu-id="96bd4-196">If you reset the interval to 10 seconds when count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after <xref:System.Timers.Timer.Enabled%2A> was set to `true`.</span></span>  
  
 <span data-ttu-id="96bd4-197">Если <xref:System.Timers.Timer.SynchronizingObject%2A> свойство `null`, <xref:System.Timers.Timer.Elapsed> событие <xref:System.Threading.ThreadPool> потока.</span><span class="sxs-lookup"><span data-stu-id="96bd4-197">If the <xref:System.Timers.Timer.SynchronizingObject%2A> property is `null`,the <xref:System.Timers.Timer.Elapsed> event is raised on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="96bd4-198">Если обработка <xref:System.Timers.Timer.Elapsed> событие продолжается дольше <xref:System.Timers.Timer.Interval%2A>, событие может вызываться снова на другом <xref:System.Threading.ThreadPool> потока.</span><span class="sxs-lookup"><span data-stu-id="96bd4-198">If the processing of the <xref:System.Timers.Timer.Elapsed> event lasts longer than <xref:System.Timers.Timer.Interval%2A>, the event might be raised again on another <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="96bd4-199">В этом случае обработчик событий должен быть реентерабельным.</span><span class="sxs-lookup"><span data-stu-id="96bd4-199">In this situation, the event handler should be reentrant.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96bd4-200">Метод обработки событий может выполняться в одном потоке, в то же время, другой поток вызывает <xref:System.Timers.Timer.Stop%2A> метода или наборы <xref:System.Timers.Timer.Enabled%2A> свойства `false`.</span><span class="sxs-lookup"><span data-stu-id="96bd4-200">The event-handling method might run on one thread at the same time that another thread calls the <xref:System.Timers.Timer.Stop%2A> method or sets the <xref:System.Timers.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="96bd4-201">Это может привести к <xref:System.Timers.Timer.Elapsed> события после остановки таймера.</span><span class="sxs-lookup"><span data-stu-id="96bd4-201">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the timer is stopped.</span></span> <span data-ttu-id="96bd4-202">Пример кода для <xref:System.Timers.Timer.Stop%2A> метод показан один из способов избежать состояния гонок.</span><span class="sxs-lookup"><span data-stu-id="96bd4-202">The example code for the <xref:System.Timers.Timer.Stop%2A> method shows one way to avoid this race condition.</span></span>  
  
 <span data-ttu-id="96bd4-203">Даже если <xref:System.Timers.Timer.SynchronizingObject%2A> не `null`, <xref:System.Timers.Timer.Elapsed> события могут происходить после <xref:System.Timers.Timer.Dispose%2A> или <xref:System.Timers.Timer.Stop%2A> был вызван метод или после <xref:System.Timers.Timer.Enabled%2A> было присвоено свойство `false`, так как сигнал для вызова <xref:System.Timers.Timer.Elapsed> событий всегда помещается в очередь для выполнения в потоке пула потоков.</span><span class="sxs-lookup"><span data-stu-id="96bd4-203">Even if <xref:System.Timers.Timer.SynchronizingObject%2A> is not `null`, <xref:System.Timers.Timer.Elapsed> events can occur after the <xref:System.Timers.Timer.Dispose%2A> or <xref:System.Timers.Timer.Stop%2A> method has been called or after the <xref:System.Timers.Timer.Enabled%2A> property has been set to `false`, because the signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a thread pool thread.</span></span> <span data-ttu-id="96bd4-204">Один из способов устранения такого состояния гонки является установить флаг, который указывает обработчику событий для <xref:System.Timers.Timer.Elapsed> событие, чтобы игнорировать последующие события.</span><span class="sxs-lookup"><span data-stu-id="96bd4-204">One way to resolve this race condition is to set a flag that tells the event handler for the <xref:System.Timers.Timer.Elapsed> event to ignore subsequent events.</span></span>  
  
 <span data-ttu-id="96bd4-205"><xref:System.Timers.Timer> Компонент перехватывает и подавляет все исключения, создаваемые обработчики событий для <xref:System.Timers.Timer.Elapsed> событий.</span><span class="sxs-lookup"><span data-stu-id="96bd4-205">The <xref:System.Timers.Timer> component catches and suppresses all exceptions thrown by event handlers for the <xref:System.Timers.Timer.Elapsed> event.</span></span> <span data-ttu-id="96bd4-206">Это поведение будет изменено в будущих выпусков платформы .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="96bd4-206">This behavior is subject to change in future releases of the .NET Framework.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96bd4-207">В следующем примере создается <xref:System.Timers.Timer> объект, который запускает его <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> событий каждые две секунды (2000 миллисекунд), настраивает обработчик событий для события и запускает таймер.</span><span class="sxs-lookup"><span data-stu-id="96bd4-207">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="96bd4-208">Обработчик событий отображает значение <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> свойство каждый раз, он вызывается.</span><span class="sxs-lookup"><span data-stu-id="96bd4-208">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
        <altmember cref="T:System.Timers.ElapsedEventArgs" />
        <altmember cref="T:System.Timers.ElapsedEventHandler" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Timers.Timer.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Timers.TimersDescription("Indicates whether the timer is enabled to fire events at a defined interval.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Timers.TimersDescription("TimerEnabled")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd4-209">Возвращает или задает значение, определяющее, должен ли объект <see cref="T:System.Timers.Timer" /> вызывать событие <see cref="E:System.Timers.Timer.Elapsed" />.</span><span class="sxs-lookup"><span data-stu-id="96bd4-209">Gets or sets a value indicating whether the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event.</span></span></summary>
        <value><span data-ttu-id="96bd4-210">Значение <see langword="true" />, если объект <see cref="T:System.Timers.Timer" /> должен вызывать событие <see cref="E:System.Timers.Timer.Elapsed" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96bd4-210"><see langword="true" /> if the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="96bd4-211">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96bd4-211">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd4-212">Параметр <xref:System.Timers.Timer.Enabled%2A> для `true` является равносилен вызову метода <xref:System.Timers.Timer.Start%2A>, тогда как параметр <xref:System.Timers.Timer.Enabled%2A> для `false` является равносилен вызову метода <xref:System.Timers.Timer.Stop%2A>.</span><span class="sxs-lookup"><span data-stu-id="96bd4-212">Setting <xref:System.Timers.Timer.Enabled%2A> to `true` is the same as calling <xref:System.Timers.Timer.Start%2A>, while setting <xref:System.Timers.Timer.Enabled%2A> to `false` is the same as calling <xref:System.Timers.Timer.Stop%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96bd4-213">Сигнал для вызова <xref:System.Timers.Timer.Elapsed> событий всегда поставлен в очередь для выполнения на <xref:System.Threading.ThreadPool> потока.</span><span class="sxs-lookup"><span data-stu-id="96bd4-213">The signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="96bd4-214">Это может привести к <xref:System.Timers.Timer.Elapsed> события после <xref:System.Timers.Timer.Enabled%2A> свойству `false`.</span><span class="sxs-lookup"><span data-stu-id="96bd4-214">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the <xref:System.Timers.Timer.Enabled%2A> property is set to `false`.</span></span> <span data-ttu-id="96bd4-215">В примере кода для <xref:System.Timers.Timer.Stop%2A> метод показан один из способов обойти такое состояние гонки.</span><span class="sxs-lookup"><span data-stu-id="96bd4-215">The code example for the <xref:System.Timers.Timer.Stop%2A> method shows one way to work around this race condition.</span></span>  
  
 <span data-ttu-id="96bd4-216">Если <xref:System.Timers.Timer.Enabled%2A> присваивается `true` и <xref:System.Timers.Timer.AutoReset%2A> присваивается `false`, <xref:System.Timers.Timer> вызывает <xref:System.Timers.Timer.Elapsed> событий только один раз, первый интервал времени истекает.</span><span class="sxs-lookup"><span data-stu-id="96bd4-216">If <xref:System.Timers.Timer.Enabled%2A> is set to `true` and <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event only once, the first time the interval elapses.</span></span>  
  
 <span data-ttu-id="96bd4-217">Если интервал после <xref:System.Timers.Timer> имеет к работе, счетчик сбрасывается.</span><span class="sxs-lookup"><span data-stu-id="96bd4-217">If the interval is set after the <xref:System.Timers.Timer> has started, the count is reset.</span></span> <span data-ttu-id="96bd4-218">Например, если задать интервал, равный 5 секунд, а затем задать <xref:System.Timers.Timer.Enabled%2A> свойства `true`, счетчик начинается в момент <xref:System.Timers.Timer.Enabled%2A> имеет значение.</span><span class="sxs-lookup"><span data-stu-id="96bd4-218">For example, if you set the interval to 5 seconds and then set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="96bd4-219">Если сбросить интервал в 10 секунд, когда прошло 3 секунды, <xref:System.Timers.Timer.Elapsed> события в первый раз 13 секунд после <xref:System.Timers.Timer.Enabled%2A> было присвоено `true`.</span><span class="sxs-lookup"><span data-stu-id="96bd4-219">If you reset the interval to 10 seconds when count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after <xref:System.Timers.Timer.Enabled%2A> was set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96bd4-220">Некоторые визуальные конструкторы, например, в Microsoft Visual Studio, задайте <xref:System.Timers.Timer.Enabled%2A> свойства `true` при вставке нового <xref:System.Timers.Timer>.</span><span class="sxs-lookup"><span data-stu-id="96bd4-220">Some visual designers, such as those in Microsoft Visual Studio, set the <xref:System.Timers.Timer.Enabled%2A> property to `true` when inserting a new <xref:System.Timers.Timer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96bd4-221">В следующем примере создается <xref:System.Timers.Timer> объект, который запускает его <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> событий каждые две секунды (2000 миллисекунд), настраивает обработчик событий для события и запускает таймер.</span><span class="sxs-lookup"><span data-stu-id="96bd4-221">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="96bd4-222">Обработчик событий отображает значение <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> свойство каждый раз, он вызывается.</span><span class="sxs-lookup"><span data-stu-id="96bd4-222">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="96bd4-223">Данное свойство задать нельзя, так как таймер удален.</span><span class="sxs-lookup"><span data-stu-id="96bd4-223">This property cannot be set because the timer has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="96bd4-224">Перед включением таймера свойству <see cref="P:System.Timers.Timer.Interval" /> задано значение больше <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="96bd4-224">The <see cref="P:System.Timers.Timer.Interval" /> property was set to a value greater than <see cref="F:System.Int32.MaxValue" /> before the timer was enabled.</span></span></exception>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="M:System.Timers.Timer.Start" />
        <altmember cref="M:System.Timers.Timer.Stop" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="timer.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96bd4-225">Заканчивает во время выполнения инициализацию класса <see cref="T:System.Timers.Timer" />, используемого в форме или другим компонентом.</span><span class="sxs-lookup"><span data-stu-id="96bd4-225">Ends the run-time initialization of a <see cref="T:System.Timers.Timer" /> that is used on a form or by another component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd4-226">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] Разработки, среда использует этот метод для завершения инициализации компонента, используемого в форме или другим компонентом.</span><span class="sxs-lookup"><span data-stu-id="96bd4-226">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to end the initialization of a component that is used on a form or by another component.</span></span> <span data-ttu-id="96bd4-227"><xref:System.Timers.Timer.BeginInit%2A> Метод начинает инициализацию.</span><span class="sxs-lookup"><span data-stu-id="96bd4-227">The <xref:System.Timers.Timer.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="96bd4-228">С помощью <xref:System.Timers.Timer.BeginInit%2A> и <xref:System.Timers.Timer.EndInit%2A> методы предотвращает использование до полной инициализации элемента управления.</span><span class="sxs-lookup"><span data-stu-id="96bd4-228">Using the <xref:System.Timers.Timer.BeginInit%2A> and <xref:System.Timers.Timer.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Timers.Timer.BeginInit" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="P:System.Timers.Timer.Interval" />
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Interval { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : double with get, set" Usage="System.Timers.Timer.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Timers.TimersDescription("The number of milliseconds between timer events.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Timers.TimersDescription("TimerInterval")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd4-229">Возвращает или задает интервал в миллисекундах, по истечении которого возникает событие <see cref="E:System.Timers.Timer.Elapsed" />.</span><span class="sxs-lookup"><span data-stu-id="96bd4-229">Gets or sets the interval, expressed in milliseconds, at which to raise the <see cref="E:System.Timers.Timer.Elapsed" /> event.</span></span></summary>
        <value><span data-ttu-id="96bd4-230">Время между событиями <see cref="E:System.Timers.Timer.Elapsed" /> в миллисекундах.</span><span class="sxs-lookup"><span data-stu-id="96bd4-230">The time, in milliseconds, between <see cref="E:System.Timers.Timer.Elapsed" /> events.</span></span> <span data-ttu-id="96bd4-231">Значение должно быть больше нуля и меньше или равно <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="96bd4-231">The value must be greater than zero, and less than or equal to <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="96bd4-232">Значение по умолчанию — 100 миллисекунд.</span><span class="sxs-lookup"><span data-stu-id="96bd4-232">The default is 100 milliseconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd4-233">Использовании <xref:System.Timers.Timer.Interval%2A> свойство для определения частоты, с которой <xref:System.Timers.Timer.Elapsed> события.</span><span class="sxs-lookup"><span data-stu-id="96bd4-233">You use the <xref:System.Timers.Timer.Interval%2A> property to determine the frequency at which the <xref:System.Timers.Timer.Elapsed> event is fired.</span></span> <span data-ttu-id="96bd4-234">Так как <xref:System.Timers.Timer> класса зависит от системных часов, он имеет тем же разрешением, что системные часы.</span><span class="sxs-lookup"><span data-stu-id="96bd4-234">Because the <xref:System.Timers.Timer> class depends on the system clock, it has the same resolution as the system clock.</span></span> <span data-ttu-id="96bd4-235">Это означает, что <xref:System.Timers.Timer.Elapsed> событие будет срабатывать с интервалом, заданным путем разрешения системных часов, если <xref:System.Timers.Timer.Interval%2A> меньшим, чем разрешение системных часов.</span><span class="sxs-lookup"><span data-stu-id="96bd4-235">This means that the <xref:System.Timers.Timer.Elapsed> event will fire at an interval defined by the resolution of the system clock if the <xref:System.Timers.Timer.Interval%2A> property is less than the resolution of the system clock.</span></span> <span data-ttu-id="96bd4-236">В следующем примере задается <xref:System.Timers.Timer.Interval%2A> свойство до 5 миллисекунд.</span><span class="sxs-lookup"><span data-stu-id="96bd4-236">The following example sets the <xref:System.Timers.Timer.Interval%2A> property to 5 milliseconds.</span></span> <span data-ttu-id="96bd4-237">При запуске на [!INCLUDE[win7](~/includes/win7-md.md)] системы, часы которых система имеет разрешение примерно 15 миллисекунд, это событие происходит примерно каждые 15 миллисекунд, а не каждые 5 миллисекунд.</span><span class="sxs-lookup"><span data-stu-id="96bd4-237">When run on a [!INCLUDE[win7](~/includes/win7-md.md)] system whose system clock has a resolution of approximately 15 milliseconds, the event fires approximately every 15 milliseconds rather than every 5 milliseconds.</span></span>  
  
 [!code-csharp[System.Timers.Timer.Interval#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer.interval/cs/interval2.cs#1)]
 [!code-vb[System.Timers.Timer.Interval#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer.interval/vb/interval2.vb#1)]  
  
 <span data-ttu-id="96bd4-238">Для определения разрешения системных часов в текущей системе, можно использовать следующий код:</span><span class="sxs-lookup"><span data-stu-id="96bd4-238">You can use the following code to determine the resolution of the system clock on the current system:</span></span>  
  
 [!code-csharp[System.Timers.Timer.Interval#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer.interval/cs/resolution1.cs#2)]
 [!code-vb[System.Timers.Timer.Interval#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer.interval/vb/resolution1.vb#2)]  
  
 <span data-ttu-id="96bd4-239">Если вашему приложению требуется разрешение больше, чем <xref:System.Timers.Timer> класса или системных часов, используйте таймеры с высоким разрешением мультимедиа; см. в разделе [как: Использование таймера с высоким разрешением](https://msdn.microsoft.com/library/aa964692.aspx).</span><span class="sxs-lookup"><span data-stu-id="96bd4-239">If your app requires greater resolution than that offered by the <xref:System.Timers.Timer> class or the system clock, use the high-resolution multimedia timers; see [How to: Use the High-Resolution Timer](https://msdn.microsoft.com/library/aa964692.aspx).</span></span>  
  
 <span data-ttu-id="96bd4-240">Если интервал после <xref:System.Timers.Timer> имеет к работе, счетчик сбрасывается.</span><span class="sxs-lookup"><span data-stu-id="96bd4-240">If the interval is set after the <xref:System.Timers.Timer> has started, the count is reset.</span></span> <span data-ttu-id="96bd4-241">Например, если задать интервал, равный 5 секунд, а затем задать <xref:System.Timers.Timer.Enabled%2A> свойства `true`, счетчик начинается в момент <xref:System.Timers.Timer.Enabled%2A> имеет значение.</span><span class="sxs-lookup"><span data-stu-id="96bd4-241">For example, if you set the interval to 5 seconds and then set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="96bd4-242">Если сбросить интервал в 10 секунд, когда прошло 3 секунды, <xref:System.Timers.Timer.Elapsed> события в первый раз 13 секунд после <xref:System.Timers.Timer.Enabled%2A> было присвоено `true`.</span><span class="sxs-lookup"><span data-stu-id="96bd4-242">If you reset the interval to 10 seconds when count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after <xref:System.Timers.Timer.Enabled%2A> was set to `true`.</span></span>  
  
 <span data-ttu-id="96bd4-243">Если <xref:System.Timers.Timer.Enabled%2A> присваивается `true` и <xref:System.Timers.Timer.AutoReset%2A> присваивается `false`, <xref:System.Timers.Timer> вызывает <xref:System.Timers.Timer.Elapsed> событий только один раз, первый интервал времени истекает.</span><span class="sxs-lookup"><span data-stu-id="96bd4-243">If <xref:System.Timers.Timer.Enabled%2A> is set to `true` and <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event only once, the first time the interval elapses.</span></span> <span data-ttu-id="96bd4-244"><xref:System.Timers.Timer.Enabled%2A> Затем устанавливается `false`.</span><span class="sxs-lookup"><span data-stu-id="96bd4-244"><xref:System.Timers.Timer.Enabled%2A> is then set to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96bd4-245">Если <xref:System.Timers.Timer.Enabled%2A> и <xref:System.Timers.Timer.AutoReset%2A> устанавливается `false`, и таймер ранее была включена, параметр <xref:System.Timers.Timer.Interval%2A> свойству <xref:System.Timers.Timer.Elapsed> событие один раз, как если <xref:System.Timers.Timer.Enabled%2A> свойство было присвоено значение `true`.</span><span class="sxs-lookup"><span data-stu-id="96bd4-245">If <xref:System.Timers.Timer.Enabled%2A> and <xref:System.Timers.Timer.AutoReset%2A> are both set to `false`, and the timer has previously been enabled, setting the <xref:System.Timers.Timer.Interval%2A> property causes the <xref:System.Timers.Timer.Elapsed> event to be raised once, as if the <xref:System.Timers.Timer.Enabled%2A> property had been set to `true`.</span></span> <span data-ttu-id="96bd4-246">Чтобы установить интервал без вызова события, можно временно задать <xref:System.Timers.Timer.Enabled%2A> свойства `true`, задайте <xref:System.Timers.Timer.Interval%2A> свойства период времени и затем сразу же установите <xref:System.Timers.Timer.Enabled%2A> обратно на `false`.</span><span class="sxs-lookup"><span data-stu-id="96bd4-246">To set the interval without raising the event, you can temporarily set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, set the <xref:System.Timers.Timer.Interval%2A> property to the desired time interval, and then immediately set the <xref:System.Timers.Timer.Enabled%2A> property back to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96bd4-247">В следующем примере создается <xref:System.Timers.Timer> объект, который запускает его <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> событий каждые две секунды (2000 миллисекунд), настраивает обработчик событий для события и запускает таймер.</span><span class="sxs-lookup"><span data-stu-id="96bd4-247">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="96bd4-248">Обработчик событий отображает значение <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> свойство каждый раз, он вызывается.</span><span class="sxs-lookup"><span data-stu-id="96bd4-248">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="96bd4-249">Интервал меньше или равен нулю.</span><span class="sxs-lookup"><span data-stu-id="96bd4-249">The interval is less than or equal to zero.</span></span>  
  
<span data-ttu-id="96bd4-250">-или-</span><span class="sxs-lookup"><span data-stu-id="96bd4-250">-or-</span></span> 
<span data-ttu-id="96bd4-251">Интервал больше, чем <see cref="F:System.Int32.MaxValue" />, а таймер в настоящий момент включен.</span><span class="sxs-lookup"><span data-stu-id="96bd4-251">The interval is greater than <see cref="F:System.Int32.MaxValue" />, and the timer is currently enabled.</span></span> <span data-ttu-id="96bd4-252">(Если таймер в данный момент выключен, исключение не генерируется до его включения.)</span><span class="sxs-lookup"><span data-stu-id="96bd4-252">(If the timer is not currently enabled, no exception is thrown until it becomes enabled.)</span></span></exception>
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Timers.Timer.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd4-253">Возвращает или задает сайт, который привязывает <see cref="T:System.Timers.Timer" /> к его контейнеру в режиме конструктора.</span><span class="sxs-lookup"><span data-stu-id="96bd4-253">Gets or sets the site that binds the <see cref="T:System.Timers.Timer" /> to its container in design mode.</span></span></summary>
        <value><span data-ttu-id="96bd4-254">Интерфейс <see cref="T:System.ComponentModel.ISite" />, представляющий сайт, который привязывает объект <see cref="T:System.Timers.Timer" /> к его контейнеру.</span><span class="sxs-lookup"><span data-stu-id="96bd4-254">An <see cref="T:System.ComponentModel.ISite" /> interface representing the site that binds the <see cref="T:System.Timers.Timer" /> object to its container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd4-255">Узлы связывают <xref:System.ComponentModel.Component> для <xref:System.ComponentModel.Container> и обеспечения взаимодействия между ними, а также для управления компонентами контейнера. Это позволяет.</span><span class="sxs-lookup"><span data-stu-id="96bd4-255">Sites bind a <xref:System.ComponentModel.Component> to a <xref:System.ComponentModel.Container> and enable communication between them, as well as providing a way for the container to manage its components.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="timer.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96bd4-256">Начинает вызывать событие <see cref="E:System.Timers.Timer.Elapsed" />, задавая для свойства <see cref="P:System.Timers.Timer.Enabled" /> значение <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="96bd4-256">Starts raising the <see cref="E:System.Timers.Timer.Elapsed" /> event by setting <see cref="P:System.Timers.Timer.Enabled" /> to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd4-257">Если <xref:System.Timers.Timer.Start%2A> вызывается и <xref:System.Timers.Timer.AutoReset%2A> присваивается `false`, <xref:System.Timers.Timer> вызывает <xref:System.Timers.Timer.Elapsed> событий только один раз, первый интервал времени истекает.</span><span class="sxs-lookup"><span data-stu-id="96bd4-257">If <xref:System.Timers.Timer.Start%2A> is called and <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event only once, the first time the interval elapses.</span></span> <span data-ttu-id="96bd4-258">Если <xref:System.Timers.Timer.Start%2A> вызывается и <xref:System.Timers.Timer.AutoReset%2A> — `true`, <xref:System.Timers.Timer> вызывает <xref:System.Timers.Timer.Elapsed> первого события время окончания интервала и продолжает событие на определенный промежуток времени.</span><span class="sxs-lookup"><span data-stu-id="96bd4-258">If <xref:System.Timers.Timer.Start%2A> is called and <xref:System.Timers.Timer.AutoReset%2A> is `true`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event the first time the interval elapses and continues to raise the event on the specified interval.</span></span>  
  
 <span data-ttu-id="96bd4-259">Можно также запустить времени, задав <xref:System.Timers.Timer.Enabled%2A> для `true`.</span><span class="sxs-lookup"><span data-stu-id="96bd4-259">You can also start timing by setting <xref:System.Timers.Timer.Enabled%2A> to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96bd4-260">Если <xref:System.Timers.Timer.AutoReset%2A> — `false`, <xref:System.Timers.Timer.Start%2A> необходимо вызвать метод, чтобы снова запустить счетчик.</span><span class="sxs-lookup"><span data-stu-id="96bd4-260">If <xref:System.Timers.Timer.AutoReset%2A> is `false`, the <xref:System.Timers.Timer.Start%2A> method must be called in order to start the count again.</span></span>  
  
 <span data-ttu-id="96bd4-261">Вызов <xref:System.Timers.Timer.Start%2A> метод при включенной таймера не оказывает влияния.</span><span class="sxs-lookup"><span data-stu-id="96bd4-261">A call to the <xref:System.Timers.Timer.Start%2A> method when the timer is enabled has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="96bd4-262"><see cref="T:System.Timers.Timer" /> создается с интервалом не меньше <see cref="F:System.Int32.MaxValue" />+1, либо задается интервал меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="96bd4-262">The <see cref="T:System.Timers.Timer" /> is created with an interval equal to or greater than <see cref="F:System.Int32.MaxValue" /> + 1, or set to an interval less than zero.</span></span></exception>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.Stop" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="timer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96bd4-263">Прекращает вызывать событие <see cref="E:System.Timers.Timer.Elapsed" />, задавая для свойства <see cref="P:System.Timers.Timer.Enabled" /> значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96bd4-263">Stops raising the <see cref="E:System.Timers.Timer.Elapsed" /> event by setting <see cref="P:System.Timers.Timer.Enabled" /> to <see langword="false" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd4-264">Вы также можете остановить времени, задав <xref:System.Timers.Timer.Enabled%2A> для `false`.</span><span class="sxs-lookup"><span data-stu-id="96bd4-264">You can also stop timing by setting <xref:System.Timers.Timer.Enabled%2A> to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96bd4-265">Сигнал для вызова <xref:System.Timers.Timer.Elapsed> событий всегда поставлен в очередь для выполнения на <xref:System.Threading.ThreadPool> потоков, и метод обработки событий может обрабатываться в одном потоке, в то же время, когда вызов <xref:System.Timers.Timer.Stop%2A> метод выполняется в другом потоке.</span><span class="sxs-lookup"><span data-stu-id="96bd4-265">The signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a <xref:System.Threading.ThreadPool> thread, so the event-handling method might run on one thread at the same time that a call to the <xref:System.Timers.Timer.Stop%2A> method runs on another thread.</span></span> <span data-ttu-id="96bd4-266">Это может привести к <xref:System.Timers.Timer.Elapsed> события после <xref:System.Timers.Timer.Stop%2A> вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="96bd4-266">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the <xref:System.Timers.Timer.Stop%2A> method is called.</span></span> <span data-ttu-id="96bd4-267">В примере кода ниже показан один способ обойти такое состояние гонки.</span><span class="sxs-lookup"><span data-stu-id="96bd4-267">The code example in the next section shows one way to work around this race condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96bd4-268">В следующем примере создается `System.Timers.Timer` объект, который запускает его <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> событий каждые две секунды (2000 миллисекунд), настраивает обработчик событий для события и запускает таймер.</span><span class="sxs-lookup"><span data-stu-id="96bd4-268">The following example instantiates a `System.Timers.Timer` object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2,000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="96bd4-269">Обработчик событий отображает значение <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> свойство каждый раз, он вызывается.</span><span class="sxs-lookup"><span data-stu-id="96bd4-269">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span> <span data-ttu-id="96bd4-270">Когда пользователь нажимает клавишу ВВОД, приложение вызывает <xref:System.Timers.Timer.Stop%2A> метод перед завершением работы приложения.</span><span class="sxs-lookup"><span data-stu-id="96bd4-270">When the user presses the Enter key, the application calls the  <xref:System.Timers.Timer.Stop%2A> method before terminating the application.</span></span>  
  
 [!code-csharp[System.Timers.Timer#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer2a.cs#2)]
 [!code-vb[System.Timers.Timer#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer2a.vb#2)]  
  
 <span data-ttu-id="96bd4-271">В следующем примере кода показан один из способов предотвращения поток, вызывающий <xref:System.Timers.Timer.Stop%2A> метод продолжению до в данный момент <xref:System.Timers.Timer.Elapsed> окончания мероприятия, а также во избежание два <xref:System.Timers.Timer.Elapsed> события из выполнение обработчика событий, в то же самое время (часто обозначается как повторный вход).</span><span class="sxs-lookup"><span data-stu-id="96bd4-271">The following code example shows one way to prevent the thread that calls the <xref:System.Timers.Timer.Stop%2A> method from continuing until a currently executing <xref:System.Timers.Timer.Elapsed> event ends, and also to prevent two <xref:System.Timers.Timer.Elapsed> events from executing the event handler at the same time (often referred to as reentrancy).</span></span>  
  
 <span data-ttu-id="96bd4-272">В примере выполняется 100 тестовых запусков.</span><span class="sxs-lookup"><span data-stu-id="96bd4-272">The example executes 100 test runs.</span></span> <span data-ttu-id="96bd4-273">При каждом выполнении теста таймер запускается с интервалом 150 миллисекунд.</span><span class="sxs-lookup"><span data-stu-id="96bd4-273">Each time the test is run, the timer is started with an interval of 150 milliseconds.</span></span> <span data-ttu-id="96bd4-274">Этот обработчик событий использует <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> метод для моделирования задачу, которая случайным образом меняется длина от 50 до 200 миллисекунд.</span><span class="sxs-lookup"><span data-stu-id="96bd4-274">The event handler uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to simulate a task that randomly varies in length from 50 to 200 milliseconds.</span></span> <span data-ttu-id="96bd4-275">Метод теста также запускает поток управления, который ожидает в течение секунды, а затем останавливает таймер.</span><span class="sxs-lookup"><span data-stu-id="96bd4-275">The test method also starts a control thread that waits for a second and then stops the timer.</span></span> <span data-ttu-id="96bd4-276">Если событие обрабатывается, во время остановки таймера, управляющий поток необходимо дождаться завершения события прежде чем продолжить.</span><span class="sxs-lookup"><span data-stu-id="96bd4-276">If an event is being handled when the control thread stops the timer, the control thread must wait until the event is finished before proceeding.</span></span>  
  
 <span data-ttu-id="96bd4-277"><xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> Перегруженный метод используется в том случае, чтобы избежать повторного входа и невозможным управляющий поток до завершения выполнения события.</span><span class="sxs-lookup"><span data-stu-id="96bd4-277">The <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method overload is used to avoid reentrancy and to prevent the control thread from continuing until an executing event ends.</span></span> <span data-ttu-id="96bd4-278">Этот обработчик событий использует <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> метод, чтобы задать элемент управления, переменной в 1, но только в том случае, если значение в настоящее время равно нулю.</span><span class="sxs-lookup"><span data-stu-id="96bd4-278">The event handler uses the <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> method to set a control variable to 1, but only if the value is currently zero.</span></span> <span data-ttu-id="96bd4-279">Это является атомарной операцией.</span><span class="sxs-lookup"><span data-stu-id="96bd4-279">This is an atomic operation.</span></span> <span data-ttu-id="96bd4-280">Если возвращаемое значение равно нулю, 1 было присвоено переменной элемента управления, после чего обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="96bd4-280">If the return value is zero, the control variable has been set to 1 and the event handler proceeds.</span></span> <span data-ttu-id="96bd4-281">Если возвращаемое значение ненулевое, события просто удаляется избежать повторного входа.</span><span class="sxs-lookup"><span data-stu-id="96bd4-281">If the return value is non-zero, the event is simply discarded to avoid reentrancy.</span></span> <span data-ttu-id="96bd4-282">(Если необходимо выполнять каждое из событий <xref:System.Threading.Monitor> класс будет более эффективный способ синхронизации событий.) При завершении обработчика событий, он задает переменной управления обратно до нуля.</span><span class="sxs-lookup"><span data-stu-id="96bd4-282">(If it were necessary to execute every event, the <xref:System.Threading.Monitor> class would be a better way to synchronize the events.) When the event handler ends, it sets the control variable back to zero.</span></span> <span data-ttu-id="96bd4-283">Пример фиксирует общее число событий, выполнялись, которые были отброшены из-за повторного входа, и который произошел после <xref:System.Timers.Timer.Stop%2A> был вызван метод.</span><span class="sxs-lookup"><span data-stu-id="96bd4-283">The example records the total number of events that executed, that were discarded because of reentrancy, and that occurred after the <xref:System.Timers.Timer.Stop%2A> method was called.</span></span>  
  
 <span data-ttu-id="96bd4-284">Поток управления использует <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> метод, чтобы задать элемент управления, переменной, значение -1 (минус), но только в том случае, если значение в настоящее время равно нулю.</span><span class="sxs-lookup"><span data-stu-id="96bd4-284">The control thread uses the <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> method to set the control variable to -1 (minus one), but only if the value is currently zero.</span></span> <span data-ttu-id="96bd4-285">Если атомарная операция возвращает ненулевое значение, событие в данный момент.</span><span class="sxs-lookup"><span data-stu-id="96bd4-285">If the atomic operation returns non-zero, an event is currently executing.</span></span> <span data-ttu-id="96bd4-286">Управляющий поток ожидает и повторяет попытку.</span><span class="sxs-lookup"><span data-stu-id="96bd4-286">The control thread waits and tries again.</span></span> <span data-ttu-id="96bd4-287">Пример фиксирует количество раз, когда элемент управления ресурсу пришлось ожидать завершения события.</span><span class="sxs-lookup"><span data-stu-id="96bd4-287">The example records the number of times the control thread had to wait for an event to finish.</span></span>  
  
 [!code-csharp[Timer.Stop#1](~/samples/snippets/csharp/VS_Snippets_CLR/Timer.Stop/CS/source.cs#1)]
 [!code-vb[Timer.Stop#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Timer.Stop/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.Start" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Timers.Timer.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Timers.TimersDescription("The object used to marshal the event handler calls issued when an interval has elapsed.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Timers.TimersDescription("TimerSynchronizingObject")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96bd4-288">Получает или задает объект, используемый для маршалирования вызовов обработчика событий, осуществленных после истечения интервала времени.</span><span class="sxs-lookup"><span data-stu-id="96bd4-288">Gets or sets the object used to marshal event-handler calls that are issued when an interval has elapsed.</span></span></summary>
        <value><span data-ttu-id="96bd4-289"><see cref="T:System.ComponentModel.ISynchronizeInvoke" />, представляющий объект, используемый для маршалинга вызовов обработчика событий, осуществленных после истечения интервала времени.</span><span class="sxs-lookup"><span data-stu-id="96bd4-289">The <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> representing the object used to marshal the event-handler calls that are issued when an interval has elapsed.</span></span> <span data-ttu-id="96bd4-290">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="96bd4-290">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96bd4-291">Когда <xref:System.Timers.Timer.SynchronizingObject%2A> — `null`, метод, обрабатывающий <xref:System.Timers.Timer.Elapsed> событие вызывается в потоке из пула потоков системы.</span><span class="sxs-lookup"><span data-stu-id="96bd4-291">When <xref:System.Timers.Timer.SynchronizingObject%2A> is `null`, the method that handles the <xref:System.Timers.Timer.Elapsed> event is called on a thread from the system-thread pool.</span></span> <span data-ttu-id="96bd4-292">Дополнительные сведения о пулах системных потоков, см. в разделе <xref:System.Threading.ThreadPool>.</span><span class="sxs-lookup"><span data-stu-id="96bd4-292">For more information on system-thread pools, see <xref:System.Threading.ThreadPool>.</span></span>  
  
 <span data-ttu-id="96bd4-293">Когда <xref:System.Timers.Timer.Elapsed> событие обрабатывается с помощью визуального компонента Windows Forms, например кнопку, обращение к компоненту через пул потоков системы, могут результат исключение или просто может не работать.</span><span class="sxs-lookup"><span data-stu-id="96bd4-293">When the <xref:System.Timers.Timer.Elapsed> event is handled by a visual Windows Forms component, such as a button, accessing the component through the system-thread pool might result in an exception or just might not work.</span></span> <span data-ttu-id="96bd4-294">Избежать такого эффекта, задав <xref:System.Timers.Timer.SynchronizingObject%2A> в компонент Windows Forms, который вызывает метод, обрабатывающий <xref:System.Timers.Timer.Elapsed> событий, вызываемый в том же потоке, в котором был создан компонент.</span><span class="sxs-lookup"><span data-stu-id="96bd4-294">Avoid this effect by setting <xref:System.Timers.Timer.SynchronizingObject%2A> to a Windows Forms component, which causes the method that handles the <xref:System.Timers.Timer.Elapsed> event to be called on the same thread that the component was created on.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96bd4-295">Даже если <xref:System.Timers.Timer.SynchronizingObject%2A> свойство не `null`, <xref:System.Timers.Timer.Elapsed> события могут происходить после <xref:System.Timers.Timer.Dispose%2A> или <xref:System.Timers.Timer.Stop%2A> был вызван метод или после <xref:System.Timers.Timer.Enabled%2A> было присвоено свойство `false`, так как сигнал для вызова <xref:System.Timers.Timer.Elapsed> событий всегда помещается в очередь для выполнения в потоке пула потоков.</span><span class="sxs-lookup"><span data-stu-id="96bd4-295">Even if the <xref:System.Timers.Timer.SynchronizingObject%2A> property is not `null`, <xref:System.Timers.Timer.Elapsed> events can occur after the <xref:System.Timers.Timer.Dispose%2A> or <xref:System.Timers.Timer.Stop%2A> method has been called or after the <xref:System.Timers.Timer.Enabled%2A> property has been set to `false`, because the signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a thread pool thread.</span></span> <span data-ttu-id="96bd4-296">Один из способов устранения такого состояния гонки является установить флаг, который указывает обработчику событий для <xref:System.Timers.Timer.Elapsed> событие, чтобы игнорировать последующие события.</span><span class="sxs-lookup"><span data-stu-id="96bd4-296">One way to resolve this race condition is to set a flag that tells the event handler for the <xref:System.Timers.Timer.Elapsed> event to ignore subsequent events.</span></span>  
  
 <span data-ttu-id="96bd4-297">Если <xref:System.Timers.Timer> используется в Visual Studio в конструкторе Windows Forms, <xref:System.Timers.Timer.SynchronizingObject%2A> автоматически устанавливается в элемент управления, содержащий <xref:System.Timers.Timer>.</span><span class="sxs-lookup"><span data-stu-id="96bd4-297">If the <xref:System.Timers.Timer> is used inside Visual Studio in a Windows Forms designer, <xref:System.Timers.Timer.SynchronizingObject%2A> is automatically set to the control that contains the <xref:System.Timers.Timer>.</span></span> <span data-ttu-id="96bd4-298">Например, если вы поместите <xref:System.Timers.Timer> конструктору `Form1` (который наследуется от <xref:System.Windows.Forms.Form>), <xref:System.Timers.Timer.SynchronizingObject%2A> свойство <xref:System.Timers.Timer> присваивается экземпляр `Form1`.</span><span class="sxs-lookup"><span data-stu-id="96bd4-298">For example, if you place a <xref:System.Timers.Timer> on a designer for `Form1` (which inherits from <xref:System.Windows.Forms.Form>), the <xref:System.Timers.Timer.SynchronizingObject%2A> property of <xref:System.Timers.Timer> is set to the instance of `Form1`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96bd4-299">Следующий пример является приложение Windows Forms, которое служит в качестве очень простого текстового редактора файла.</span><span class="sxs-lookup"><span data-stu-id="96bd4-299">The following example is a Windows Forms app that serves as a very simple text file editor.</span></span> <span data-ttu-id="96bd4-300">Если текст в текстовом поле не был сохранен, приложение запрашивает у пользователя с интервалом в одну минуту ли он хочет сохранить содержимое текстового поля.</span><span class="sxs-lookup"><span data-stu-id="96bd4-300">When the text in the text box has not been saved, the app asks the user at one-minute intervals whether he or she wants to save the contents of the text box.</span></span>  <span data-ttu-id="96bd4-301">Чтобы сделать это, <xref:System.Timers.Timer.Interval%2A> свойству одну минуту (60 000 миллисекунд) и <xref:System.Timers.Timer.SynchronizingObject%2A> свойству <xref:System.Windows.Forms.Form> объекта.</span><span class="sxs-lookup"><span data-stu-id="96bd4-301">To do this, the <xref:System.Timers.Timer.Interval%2A> property is set to one minute (60,000 milliseconds), and the <xref:System.Timers.Timer.SynchronizingObject%2A> property is set to the <xref:System.Windows.Forms.Form> object.</span></span>  
  
 [!code-csharp[System.Timers.Timer.SynchronizingObject#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Timers.Timer.SynchronizingObject/cs/Form1.cs#1)]
 [!code-vb[System.Timers.Timer.SynchronizingObject#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Timers.Timer.SynchronizingObject/vb/Form1.vb#1)]  
  
 <span data-ttu-id="96bd4-302">В этом примере предполагается, что добавить следующие элементы управления в форму:</span><span class="sxs-lookup"><span data-stu-id="96bd4-302">The example requires that you add the following controls to the form:</span></span>  
  
-   <span data-ttu-id="96bd4-303">Объект <xref:System.Windows.Forms.TextBox> управления с именем `TextBox1` (его имя по умолчанию).</span><span class="sxs-lookup"><span data-stu-id="96bd4-303">A <xref:System.Windows.Forms.TextBox> control named `TextBox1` (its default name).</span></span>  
  
-   <span data-ttu-id="96bd4-304">Объект <xref:System.Windows.Forms.Button> управления с именем `Button1` (его имя по умолчанию).</span><span class="sxs-lookup"><span data-stu-id="96bd4-304">A <xref:System.Windows.Forms.Button> control named `Button1` (its default name).</span></span>  
  
-   <span data-ttu-id="96bd4-305">Объект <xref:System.Windows.Forms.SaveFileDialog> управления с именем `SaveSaveFileDialog1` (его имя по умолчанию).</span><span class="sxs-lookup"><span data-stu-id="96bd4-305">A <xref:System.Windows.Forms.SaveFileDialog> control named `SaveSaveFileDialog1` (its default name) .</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.ComponentModel.ISynchronizeInvoke" />
        <altmember cref="T:System.Threading.ThreadPool" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
  </Members>
</Type>