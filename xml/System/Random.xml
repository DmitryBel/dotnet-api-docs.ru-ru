<Type Name="Random" FullName="System.Random">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d51d70444dab9462315feb569307240656b2446" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57961072" /></Metadata><TypeSignature Language="C#" Value="public class Random" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Random extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Random" />
  <TypeSignature Language="VB.NET" Value="Public Class Random" />
  <TypeSignature Language="C++ CLI" Value="public ref class Random" />
  <TypeSignature Language="F#" Value="type Random = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6e5c7-101">Представляет генератор псевдослучайных чисел, то есть устройство, которое выдает последовательность чисел, отвечающую определенным статистическим критериям случайности.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-101">Represents a pseudo-random number generator, which is a device that produces a sequence of numbers that meet certain statistical requirements for randomness.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e5c7-102">Псевдослучайные числа выбираются с равной вероятностью из конечного набора чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-102">Pseudo-random numbers are chosen with equal probability from a finite set of numbers.</span></span> <span data-ttu-id="6e5c7-103">Выбранные числа не являются полностью произвольным, так как математический алгоритм используется для выбора их, но они достаточно случайны с практической точки зрения.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-103">The chosen numbers are not completely random because a mathematical algorithm is used to select them, but they are sufficiently random for practical purposes.</span></span> <span data-ttu-id="6e5c7-104">Текущая реализация <xref:System.Random> класс основан на измененной версии Дональд E. Кнута субтрактивным алгоритм генерации случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-104">The current implementation of the <xref:System.Random> class is based on a modified version of Donald E. Knuth's subtractive random number generator algorithm.</span></span> <span data-ttu-id="6e5c7-105">Дополнительные сведения см. в разделе E. г.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-105">For more information, see D. E.</span></span> <span data-ttu-id="6e5c7-106">Кнута.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-106">Knuth.</span></span> <span data-ttu-id="6e5c7-107">*Искусство компьютерном программировании, том 2: Искусство*.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-107">*The Art of Computer Programming, Volume 2: Seminumerical Algorithms*.</span></span> <span data-ttu-id="6e5c7-108">Addison-Wesley, Reading, MA, third edition, 1997.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-108">Addison-Wesley, Reading, MA, third edition, 1997.</span></span>  
  
 <span data-ttu-id="6e5c7-109">Для создания криптографически надежное случайное число, например, подходит для создания случайного пароля, используйте <xref:System.Security.Cryptography.RNGCryptoServiceProvider> класса или являются производными от класса <xref:System.Security.Cryptography.RandomNumberGenerator?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-109">To generate a cryptographically secure random number, such as one that's suitable for creating a random password, use the <xref:System.Security.Cryptography.RNGCryptoServiceProvider> class or derive a class from <xref:System.Security.Cryptography.RandomNumberGenerator?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6e5c7-110">В этом разделе.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-110">In this topic:</span></span>  
  
 <span data-ttu-id="6e5c7-111">[Создание экземпляра генератора случайных чисел](#Instantiate) </span><span class="sxs-lookup"><span data-stu-id="6e5c7-111">[Instantiating the random number generator](#Instantiate) </span></span>  
 <span data-ttu-id="6e5c7-112">[Как избежать создания нескольких экземпляров](#Multiple) </span><span class="sxs-lookup"><span data-stu-id="6e5c7-112">[Avoiding multiple instantiations](#Multiple) </span></span>  
 <span data-ttu-id="6e5c7-113">[Безопасность System.Random класс и потока](#ThreadSafety) </span><span class="sxs-lookup"><span data-stu-id="6e5c7-113">[The System.Random class and thread safety](#ThreadSafety) </span></span>  
 <span data-ttu-id="6e5c7-114">[Создание различных типов случайных чисел](#Functionality) </span><span class="sxs-lookup"><span data-stu-id="6e5c7-114">[Generating different types of random numbers](#Functionality) </span></span>  
 <span data-ttu-id="6e5c7-115">[Подстановка собственный алгоритм](#Overriding) </span><span class="sxs-lookup"><span data-stu-id="6e5c7-115">[Substituting your own algorithm](#Overriding) </span></span>  
 <span data-ttu-id="6e5c7-116">[Как использовать System.Random, чтобы...](#Operations) </span><span class="sxs-lookup"><span data-stu-id="6e5c7-116">[How do you use System.Random to…](#Operations) </span></span>  
 [<span data-ttu-id="6e5c7-117">Получить ту же последовательность случайных значений</span><span class="sxs-lookup"><span data-stu-id="6e5c7-117">Retrieve the same sequence of random values</span></span>](#Same)  
 [<span data-ttu-id="6e5c7-118">Получения уникальных последовательностей случайных значений</span><span class="sxs-lookup"><span data-stu-id="6e5c7-118">Retrieve unique sequences of random values</span></span>](#Unique)  
 [<span data-ttu-id="6e5c7-119">Получить целых чисел в указанном диапазоне</span><span class="sxs-lookup"><span data-stu-id="6e5c7-119">Retrieve integers in a specified range</span></span>](#Range)  
 [<span data-ttu-id="6e5c7-120">Получить целых чисел с помощью указанного количества десятичных разрядов</span><span class="sxs-lookup"><span data-stu-id="6e5c7-120">Retrieve integers with a specified number of digits</span></span>](#Digits)  
 [<span data-ttu-id="6e5c7-121">Извлечь значения с плавающей запятой в указанном диапазоне</span><span class="sxs-lookup"><span data-stu-id="6e5c7-121">Retrieve floating-point values in a specified range</span></span>](#Floats)  
 [<span data-ttu-id="6e5c7-122">Сформировать произвольного логических значений</span><span class="sxs-lookup"><span data-stu-id="6e5c7-122">Generate random Boolean values</span></span>](#Boolean)  
 [<span data-ttu-id="6e5c7-123">Сформировать произвольного 64-разрядных целых чисел</span><span class="sxs-lookup"><span data-stu-id="6e5c7-123">Generate random 64-bit integers</span></span>](#Long)  
 [<span data-ttu-id="6e5c7-124">Получение байт в указанном диапазоне</span><span class="sxs-lookup"><span data-stu-id="6e5c7-124">Retrieve bytes in a specified range</span></span>](#Bytes)  
 [<span data-ttu-id="6e5c7-125">Получить элемент из массива или коллекции в случайном порядке</span><span class="sxs-lookup"><span data-stu-id="6e5c7-125">Retrieve an element from an array or collection at random</span></span>](#Array)  
 [<span data-ttu-id="6e5c7-126">Получить уникальный элемент из массива или коллекции</span><span class="sxs-lookup"><span data-stu-id="6e5c7-126">Retrieve a unique element from an array or collection</span></span>](#UniqueArray)  
  
<a name="Instantiate"></a>   
## <a name="instantiating-the-random-number-generator"></a><span data-ttu-id="6e5c7-127">Создание экземпляра генератора случайных чисел</span><span class="sxs-lookup"><span data-stu-id="6e5c7-127">Instantiating the random number generator</span></span>  
 <span data-ttu-id="6e5c7-128">Создать экземпляр генератора случайных чисел, предоставляя начальное значение (начальное значение для алгоритма формирования псевдослучайных чисел) для <xref:System.Random.%23ctor%2A> конструктора класса.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-128">You instantiate the random number generator by providing a seed value (a starting value for the pseudo-random number generation algorithm) to a <xref:System.Random.%23ctor%2A> class constructor.</span></span>  <span data-ttu-id="6e5c7-129">Можно указать начальное значение, явно или неявно:</span><span class="sxs-lookup"><span data-stu-id="6e5c7-129">You can supply the seed value either explicitly or implicitly:</span></span>  
  
-   <span data-ttu-id="6e5c7-130"><xref:System.Random.%23ctor%28System.Int32%29> Конструктор использует явного начального значения, которое вы указали.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-130">The <xref:System.Random.%23ctor%28System.Int32%29> constructor uses an explicit seed value that you supply.</span></span>  
  
-   <span data-ttu-id="6e5c7-131"><xref:System.Random.%23ctor> Конструктор использует системные часы для обеспечения начального значения.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-131">The <xref:System.Random.%23ctor> constructor uses the system clock to provide a seed value.</span></span> <span data-ttu-id="6e5c7-132">Это наиболее распространенным способом создания генератора случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-132">This is the most common way of instantiating the random number generator.</span></span>  
  
 <span data-ttu-id="6e5c7-133">Если же начальное значение используется для отдельного <xref:System.Random> объекты, они получат те же серии случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-133">If the same seed is used for separate <xref:System.Random> objects, they will generate the same series of random numbers.</span></span> <span data-ttu-id="6e5c7-134">Это может быть полезно для создания набора тестов, который обрабатывает случайных значений, или воспроизведения игры, которые являются производными свои данные от случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-134">This can be useful for creating a test suite that processes random values, or for replaying games that derive their data from random numbers.</span></span> <span data-ttu-id="6e5c7-135">Тем не менее, обратите внимание, что <xref:System.Random> объектов в процессах, под управлением различных версий платформы .NET Framework, могут возвращать другая последовательность случайных чисел, даже если их все экземпляры с использованием идентичных начальных значений.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-135">However, note that <xref:System.Random> objects in processes running under different versions of the .NET Framework may return different series of random numbers even if they're instantiated with identical seed values.</span></span>  
  
 <span data-ttu-id="6e5c7-136">Для получения различных последовательностей случайных чисел, можно сделать начальное значение зависит от времени, что позволяет создавать различные последовательности для каждого нового экземпляра <xref:System.Random>.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-136">To produce different sequences of random numbers, you can make the seed value time-dependent, thereby producing a different series with each new instance of <xref:System.Random>.</span></span> <span data-ttu-id="6e5c7-137">Параметризованного <xref:System.Random.%23ctor%28System.Int32%29> конструктор может занять <xref:System.Int32> значение на основе количества тактов в текущее время, тогда как без параметров <xref:System.Random.%23ctor> конструктор использует системные часы для создания начального значения.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-137">The parameterized <xref:System.Random.%23ctor%28System.Int32%29> constructor can take an <xref:System.Int32> value based on the number of ticks in the current time, whereas the parameterless <xref:System.Random.%23ctor> constructor uses the system clock to generate its seed value.</span></span> <span data-ttu-id="6e5c7-138">Тем не менее, так как часы конечное решение, с помощью конструктора без параметров для создания различных <xref:System.Random> объекты в быстрой последовательности создает генераторы случайных чисел, которые создают идентичные последовательности случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-138">However, because the clock has finite resolution, using the parameterless constructor to create different <xref:System.Random> objects in close succession creates random number generators that produce identical sequences of random numbers.</span></span> <span data-ttu-id="6e5c7-139">В следующем примере показано как две <xref:System.Random> объекты, экземпляры которых создаются в быстрой последовательности, создают идентичные наборы случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-139">The following example illustrates how two <xref:System.Random> objects that are instantiated in close succession generate an identical series of random numbers.</span></span> <span data-ttu-id="6e5c7-140">В большинстве систем Windows <xref:System.Random> объекты, создаваемые в 15 миллисекунд друг от друга, скорее всего, имеют одинаковые начальные значения.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-140">On most Windows systems, <xref:System.Random> objects created within 15 milliseconds of one another are likely to have identical seed values.</span></span>  
  
 [!code-cpp[System.Random#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/random1.cpp#1)]
 [!code-csharp[System.Random#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/Random1.cs#1)]
 [!code-vb[System.Random#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/Random1.vb#1)]  
  
 <span data-ttu-id="6e5c7-141">Чтобы избежать этой проблемы, создайте один <xref:System.Random> объекта вместо нескольких объектов.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-141">To avoid this problem, create a single <xref:System.Random> object instead of multiple objects.</span></span>  
  
<a name="Multiple"></a>   
## <a name="avoiding-multiple-instantiations"></a><span data-ttu-id="6e5c7-142">Как избежать создания нескольких экземпляров</span><span class="sxs-lookup"><span data-stu-id="6e5c7-142">Avoiding multiple instantiations</span></span>  
 <span data-ttu-id="6e5c7-143">Инициализация двух генераторов случайных чисел в непрерывном цикле или быстро создает два генераторы случайных чисел, которые могут производить идентичные последовательности случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-143">Initializing two random number generators in a tight loop or in rapid succession creates two random number generators that can produce identical sequences of random numbers.</span></span> <span data-ttu-id="6e5c7-144">В большинстве случаев это не намерениями разработчика и может привести к проблемам с производительностью, так как создание и инициализация генератора случайных чисел является довольно дорогостоящим процессом.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-144">In most cases, this is not the developer's intent and can lead to performance issues, because instantiating and initializing a random number generator is a relatively expensive process.</span></span>  
  
 <span data-ttu-id="6e5c7-145">Для повышения производительности и во избежание случайному созданию отдельных генераторы случайных чисел, которые создают идентичные числовой последовательности, рекомендуется создать одну <xref:System.Random> объект для создания многих случайных чисел со временем, вместо создания новый <xref:System.Random> объекты для каждого случайного числа.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-145">Both to improve performance and to avoid inadvertently creating separate random number generators that generate identical numeric sequences, we recommend that you create one <xref:System.Random> object to generate many random numbers over time, instead of creating new <xref:System.Random> objects to generate one random number.</span></span>  
  
 <span data-ttu-id="6e5c7-146">Тем не менее <xref:System.Random> класс не является потокобезопасным.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-146">However, the <xref:System.Random> class isn't thread safe.</span></span> <span data-ttu-id="6e5c7-147">При вызове метода <xref:System.Random> методы из нескольких потоков, следуйте рекомендациям, изложенным в следующем разделе.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-147">If you call <xref:System.Random> methods from multiple threads, follow the guidelines discussed in the next section.</span></span>  
  
<a name="ThreadSafety"></a>   
## <a name="the-systemrandom-class-and-thread-safety"></a><span data-ttu-id="6e5c7-148">Безопасность System.Random класс и потока</span><span class="sxs-lookup"><span data-stu-id="6e5c7-148">The System.Random class and thread safety</span></span>  
 <span data-ttu-id="6e5c7-149">Вместо создания экземпляров отдельных <xref:System.Random> объектов, мы рекомендуем создать один <xref:System.Random> экземпляр для формирования случайных чисел, необходимых приложению.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-149">Instead of instantiating individual <xref:System.Random> objects, we recommend that you create a single <xref:System.Random> instance to generate all the random numbers needed by your app.</span></span> <span data-ttu-id="6e5c7-150">Тем не менее <xref:System.Random> объекты не являются потокобезопасными.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-150">However, <xref:System.Random> objects are not thread safe.</span></span> <span data-ttu-id="6e5c7-151">Если приложение вызывает <xref:System.Random> методов из нескольких потоков, необходимо использовать объект синхронизации только один поток может получить доступ к генератора случайных чисел за раз.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-151">If your app calls <xref:System.Random> methods from multiple threads, you must use a synchronization object to ensure that only one thread can access the random number generator at a time.</span></span> <span data-ttu-id="6e5c7-152">Если вы не убедитесь, что <xref:System.Random> объекту осуществляется в потокобезопасным способом, возвращает 0, вызовы методов, которые возвращают случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-152">If you don't ensure that the <xref:System.Random> object is accessed in a thread-safe way, calls to methods that return random numbers return 0.</span></span>  
  
 <span data-ttu-id="6e5c7-153">В следующем примере используется C# [оператор lock](~/docs/csharp/language-reference/keywords/lock-statement.md) и Visual Basic [оператор SyncLock](~/docs/visual-basic/language-reference/statements/synclock-statement.md) , чтобы один генератор случайных чисел является доступ к 11 потоков в потокобезопасным способом.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-153">The following example uses the C# [lock Statement](~/docs/csharp/language-reference/keywords/lock-statement.md) and the Visual Basic [SyncLock statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md) to ensure that a single random number generator is accessed by 11 threads in a thread-safe manner.</span></span> <span data-ttu-id="6e5c7-154">Каждый поток создает 2 миллиона случайных чисел, подсчитывает количество случайных чисел и вычисляет их сумму и затем обновляет итоговые значения для всех потоков, завершения выполнения.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-154">Each thread generates 2 million random numbers, counts the number of random numbers generated and calculates their sum, and then updates the totals for all threads when it finishes executing.</span></span>  
  
 [!code-cpp[System.Random#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/threadsafeex1.cpp#3)]
 [!code-csharp[System.Random#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/threadsafeex1.cs#3)]
 [!code-vb[System.Random#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/threadsafeex1.vb#3)]  
  
 <span data-ttu-id="6e5c7-155">В примере проверяется потокобезопасность одним из следующих способов:</span><span class="sxs-lookup"><span data-stu-id="6e5c7-155">The example ensures thread-safety in the following ways:</span></span>  
  
-   <span data-ttu-id="6e5c7-156"><xref:System.ThreadStaticAttribute> Атрибут используется для определения локальные переменные потока, которые отслеживают общее число случайных чисел и их сумму для каждого потока.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-156">The <xref:System.ThreadStaticAttribute> attribute is used to define thread-local variables that track the total number of random numbers generated and their sum for each thread.</span></span>  
  
-   <span data-ttu-id="6e5c7-157">Блокировка ( `lock` инструкции на языке C# и `SyncLock` в Visual Basic) защищает доступ к переменным, общее количество и сумма всех случайных чисел, созданные во всех потоках.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-157">A lock (the `lock` statement in C# and the `SyncLock` statement in Visual Basic) protects access to the variables for the total count and sum of all random numbers generated on all threads.</span></span>  
  
-   <span data-ttu-id="6e5c7-158">Семафор ( <xref:System.Threading.CountdownEvent> объекта) используется для того, что основной поток блокируется до всех остальных потоков завершения выполнения.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-158">A semaphore (the <xref:System.Threading.CountdownEvent> object) is used to ensure that the main thread blocks until all other threads complete execution.</span></span>  
  
-   <span data-ttu-id="6e5c7-159">В примере проверяется ли генератора случайных чисел оказались поврежденными, определяя ли два последовательных вызовах для случайных чисел методы создания возвращают 0.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-159">The example checks whether the random number generator has become corrupted by determining whether two consecutive calls to random number generation methods return 0.</span></span> <span data-ttu-id="6e5c7-160">При обнаружении повреждений, в примере используется <xref:System.Threading.CancellationTokenSource> чтобы сообщить, что все потоки следует отменить.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-160">If corruption is detected, the example uses the <xref:System.Threading.CancellationTokenSource> object to signal that all threads should be canceled.</span></span>  
  
-   <span data-ttu-id="6e5c7-161">Перед созданием каждой случайное число, каждый поток проверяет состояние <xref:System.Threading.CancellationToken> объекта.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-161">Before generating each random number, each thread checks the state of the <xref:System.Threading.CancellationToken> object.</span></span> <span data-ttu-id="6e5c7-162">Если запрос на отмену в примере вызывается <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> метод для отмены потока.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-162">If cancellation is requested, the example calls the <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> method to cancel the thread.</span></span>  
  
 <span data-ttu-id="6e5c7-163">Следующий пример идентичен первому, за исключением того, что она использует <xref:System.Threading.Tasks.Task> объекта и лямбда-выражения вместо <xref:System.Threading.Thread> объектов.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-163">The following example is identical to the first, except that it uses a <xref:System.Threading.Tasks.Task> object and a lambda expression instead of <xref:System.Threading.Thread> objects.</span></span>  
  
 [!code-csharp[System.Random#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/threadsafeex2.cs#4)]
 [!code-vb[System.Random#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/threadsafeex2.vb#4)]  
  
 <span data-ttu-id="6e5c7-164">Он отличается от первого примера, одним из следующих способов:</span><span class="sxs-lookup"><span data-stu-id="6e5c7-164">It differs from the first example in the following ways:</span></span>  
  
-   <span data-ttu-id="6e5c7-165">Переменные, чтобы отслеживать количество случайных чисел и их сумму в каждой задаче локальны для задачи, поэтому нет необходимости использовать <xref:System.ThreadStaticAttribute> атрибута.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-165">The variables to keep track of the number of random numbers generated and their sum in each task are local to the task, so there is no need to use the <xref:System.ThreadStaticAttribute> attribute.</span></span>  
  
-   <span data-ttu-id="6e5c7-166">Статический <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> метод используется, чтобы убедиться, что основной поток не завершается до завершения всех задач.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-166">The static <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method is used to ensure that the main thread doesn't complete before all tasks have finished.</span></span> <span data-ttu-id="6e5c7-167">Нет необходимости для <xref:System.Threading.CountdownEvent> объекта.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-167">There is no need for the <xref:System.Threading.CountdownEvent> object.</span></span>  
  
-   <span data-ttu-id="6e5c7-168">Исключение, полученный в результате отмены задачи будет отображена в <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-168">The exception that results from task cancellation is surfaced in the <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="6e5c7-169">В предыдущем примере он обрабатывается каждым потоком.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-169">In the previous example, it is handled by each thread.</span></span>  
  
<a name="Functionality"></a>   
## <a name="generating-different-types-of-random-numbers"></a><span data-ttu-id="6e5c7-170">Создание различных типов случайных чисел</span><span class="sxs-lookup"><span data-stu-id="6e5c7-170">Generating different types of random numbers</span></span>  
 <span data-ttu-id="6e5c7-171">Генератор случайных чисел предоставляет методы, которые позволяют создавать следующие виды случайных чисел:</span><span class="sxs-lookup"><span data-stu-id="6e5c7-171">The random number generator provides methods that let you generate the following kinds of random numbers:</span></span>  
  
-   <span data-ttu-id="6e5c7-172">Ряд <xref:System.Byte> значения.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-172">A series of <xref:System.Byte> values.</span></span> <span data-ttu-id="6e5c7-173">Определить количество байтовых значений, передавая массив присваивается количество элементов, метод, чтобы вернуться к <xref:System.Random.NextBytes%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-173">You determine the number of byte values by passing an array initialized to the number of elements you want the method to return to the <xref:System.Random.NextBytes%2A> method.</span></span> <span data-ttu-id="6e5c7-174">Следующий пример приводит к возникновению ошибки 20 байт.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-174">The following example generates 20 bytes.</span></span>  
  
     [!code-cpp[System.Random#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextbytes1.cpp#5)]
     [!code-csharp[System.Random#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextbytes1.cs#5)]
     [!code-vb[System.Random#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextbytes1.vb#5)]  
  
-   <span data-ttu-id="6e5c7-175">Целое число.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-175">A single integer.</span></span> <span data-ttu-id="6e5c7-176">Можно выбрать, следует ли целое число от 0 до максимального значения (<xref:System.Int32.MaxValue?displayProperty=nameWithType> - 1) путем вызова <xref:System.Random.Next> метод, целое число между 0 и значением, вызвав <xref:System.Random.Next%28System.Int32%29> метода или целое число в пределах диапазона значений путем вызова <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-176">You can choose whether you want an integer from 0 to a maximum value (<xref:System.Int32.MaxValue?displayProperty=nameWithType> - 1) by calling the <xref:System.Random.Next> method, an integer between 0 and a specific value by calling the <xref:System.Random.Next%28System.Int32%29> method, or an integer within a range of values by calling the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="6e5c7-177">В параметризованных перегрузок указанное максимальное значение является исчерпывающим; Максимальное число созданных является один меньше, чем указанное значение.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-177">In the parameterized overloads, the specified maximum value is exclusive; that is, the actual maximum number generated is one less than the specified value.</span></span>  
  
     <span data-ttu-id="6e5c7-178">В следующем примере вызывается <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> метод для генерации 10 случайных чисел от -10 до 10.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-178">The following example calls the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method to generate 10 random numbers between -10 and 10.</span></span> <span data-ttu-id="6e5c7-179">Обратите внимание, что второй аргумент метода задает Исключенный верхний предел диапазона случайных значений, возвращаемых методом.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-179">Note that the second argument to the method specifies the exclusive upper bound of the range of random values returned by the method.</span></span> <span data-ttu-id="6e5c7-180">Другими словами наибольшее целое, этот метод может возвращать одно — меньше, чем это значение.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-180">In other words, the largest integer that the method can return is one less than this value.</span></span>  
  
     [!code-cpp[System.Random#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextex1.cpp#6)]
     [!code-csharp[System.Random#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextex1.cs#6)]
     [!code-vb[System.Random#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextex1.vb#6)]  
  
-   <span data-ttu-id="6e5c7-181">Единый значение с плавающей запятой от 0,0 меньше, чем 1.0, вызвав <xref:System.Random.NextDouble%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-181">A single floating-point value from 0.0 to less than 1.0 by calling the <xref:System.Random.NextDouble%2A> method.</span></span> <span data-ttu-id="6e5c7-182">Исключенный верхний предел создаваемого случайного числа, возвращаемого методом-1, поэтому его фактическое верхняя граница — 0.99999999999999978.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-182">The exclusive upper bound of the random number returned by the method is 1, so its actual upper bound is 0.99999999999999978.</span></span> <span data-ttu-id="6e5c7-183">Следующий пример приводит к возникновению ошибки 10 случайных чисел с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-183">The following example generates 10 random floating-point numbers.</span></span>  
  
     [!code-cpp[System.Random#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextdoubleex1.cpp#7)]
     [!code-csharp[System.Random#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextdoubleex1.cs#7)]
     [!code-vb[System.Random#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextdoubleex1.vb#7)]  
  
> [!IMPORTANT]
>  <span data-ttu-id="6e5c7-184"><xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Метод позволяет указать диапазон возвращаемого случайного числа.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-184">The <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method allows you to specify the range of the returned random number.</span></span> <span data-ttu-id="6e5c7-185">Тем не менее `maxValue` параметр, который указывает верхний предел возвращаются номера, является эксклюзивных, не включительно, значение.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-185">However, the `maxValue` parameter, which specifies the upper range returned number, is an exclusive, not an inclusive, value.</span></span> <span data-ttu-id="6e5c7-186">Это означает, что вызов метода `Next(0, 100)` возвращает значение от 0 до 99, а не в диапазоне от 0 до 100.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-186">This means that the method call `Next(0, 100)` returns a value between 0 and 99, and not between 0 and 100.</span></span>  
  
 <span data-ttu-id="6e5c7-187">Можно также использовать <xref:System.Random> класса для таких задач, как создание [случайных значений T:System.Boolean](#Boolean), создание [случайное число с плавающей запятой значения с диапазоном, отличный от 0 до 1](#Floats), создание [случайных 64-разрядных целых чисел](#Long), и [случайным образом получение уникального элемента из массива или коллекции](#UniqueArray).</span><span class="sxs-lookup"><span data-stu-id="6e5c7-187">You can also use the <xref:System.Random> class for such tasks as generating [random T:System.Boolean values](#Boolean), generating [random floating point values with a range other than 0 to 1](#Floats), generating [random 64-bit integers](#Long), and [randomly retrieving a unique element from an array or collection](#UniqueArray).</span></span> <span data-ttu-id="6e5c7-188">Эти и другие стандартные задачи, см. в разделе [использование System.Random, чтобы...](#Operations)</span><span class="sxs-lookup"><span data-stu-id="6e5c7-188">For these and other common tasks, see the [How do you use System.Random to…](#Operations)</span></span> <span data-ttu-id="6e5c7-189">раздел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-189">section.</span></span>  
  
<a name="Overriding"></a>   
## <a name="substituting-your-own-algorithm"></a><span data-ttu-id="6e5c7-190">Подстановка собственный алгоритм</span><span class="sxs-lookup"><span data-stu-id="6e5c7-190">Substituting your own algorithm</span></span>  
 <span data-ttu-id="6e5c7-191">Вы можете реализовать собственный генератор случайных чисел, путем наследования от <xref:System.Random> класса и предоставление вашей алгоритма генерации случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-191">You can implement your own random number generator by inheriting from the <xref:System.Random> class and supplying your random number generation algorithm.</span></span> <span data-ttu-id="6e5c7-192">Чтобы указать собственный алгоритм, необходимо переопределить <xref:System.Random.Sample%2A> метод, который реализует алгоритм генерации случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-192">To supply your own algorithm, you must override the <xref:System.Random.Sample%2A> method, which implements the random number generation algorithm.</span></span> <span data-ttu-id="6e5c7-193">Следует также переопределить <xref:System.Random.Next>, <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>, и <xref:System.Random.NextBytes%2A> методов, чтобы гарантировать, что они вызывают переопределенный <xref:System.Random.Sample%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-193">You should also override the <xref:System.Random.Next>, <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>, and <xref:System.Random.NextBytes%2A> methods to ensure that they call your overridden <xref:System.Random.Sample%2A> method.</span></span> <span data-ttu-id="6e5c7-194">Вам не нужно переопределить <xref:System.Random.Next%28System.Int32%29> и <xref:System.Random.NextDouble%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-194">You don't have to override the <xref:System.Random.Next%28System.Int32%29> and <xref:System.Random.NextDouble%2A> methods.</span></span>  
  
 <span data-ttu-id="6e5c7-195">Например, который является производным от <xref:System.Random> класса и изменяет его значение по умолчанию генератор псевдослучайных чисел, см. в разделе <xref:System.Random.Sample%2A> справочной странице.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-195">For an example that derives from the <xref:System.Random> class and modifies its default pseudo-random number generator, see the <xref:System.Random.Sample%2A> reference page.</span></span>  
  
<a name="Operations"></a>   
## <a name="how-do-you-use-systemrandom-to"></a><span data-ttu-id="6e5c7-196">Как использовать System.Random, чтобы...</span><span class="sxs-lookup"><span data-stu-id="6e5c7-196">How do you use System.Random to…</span></span>  
 <span data-ttu-id="6e5c7-197">В следующих разделах рассматриваются и обсуждаются образцы кода для некоторые из способов, может потребоваться использовать случайные числа в приложении.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-197">The following sections discuss and provide sample code for some of the ways you might want to use random numbers in your app.</span></span>  
  
<a name="Same"></a>   
### <a name="retrieve-the-same-sequence-of-random-values"></a><span data-ttu-id="6e5c7-198">Получить ту же последовательность случайных значений</span><span class="sxs-lookup"><span data-stu-id="6e5c7-198">Retrieve the same sequence of random values</span></span>  
 <span data-ttu-id="6e5c7-199">Иногда требуется создать ту же последовательность случайных чисел, в сценарии тестирования продуктов и игры.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-199">Sometimes you want to generate the same sequence of random numbers in software test scenarios and in game playing.</span></span> <span data-ttu-id="6e5c7-200">Тестирование и той же последовательностью случайных чисел, позволяет обнаруживать регрессии и подтвердить исправления ошибок.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-200">Testing with the same sequence of random numbers allows you to detect regressions and confirm bug fixes.</span></span> <span data-ttu-id="6e5c7-201">С помощью той же последовательности случайное число в играх позволяет воспроизвести предыдущие игры.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-201">Using the same sequence of random number in games allows you to replay previous games.</span></span>  
  
 <span data-ttu-id="6e5c7-202">Можно создать одну и ту же последовательность случайных чисел, предоставляя то же начальное значение для <xref:System.Random.%23ctor%28System.Int32%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-202">You can generate the same sequence of random numbers by providing the same seed value to the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="6e5c7-203">Начальное значение предоставляет начальное значение для алгоритма формирования псевдослучайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-203">The seed value provides a starting value for the pseudo-random number generation algorithm.</span></span> <span data-ttu-id="6e5c7-204">В следующем примере используется 100100 как значение произвольного начального значения для создания экземпляра <xref:System.Random> , отображает 20 случайных значений с плавающей запятой и сохраняет начальное значение.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-204">The following example uses 100100 as an arbitrary seed value to instantiate the <xref:System.Random> object, displays 20 random floating-point values, and persists the seed value.</span></span> <span data-ttu-id="6e5c7-205">Затем он восстанавливает начальное значение, создает новый генератор случайных чисел и отображает одинаковые значения 20 случайных чисел с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-205">It then restores the seed value, instantiates a new random number generator, and displays the same 20 random floating-point values.</span></span>  <span data-ttu-id="6e5c7-206">Обратите внимание, что пример могут давать различные последовательности случайных чисел, при запуске в различных версиях платформы .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-206">Note that the example may produce different sequences of random numbers if run on different versions of the .NET Framework.</span></span>  
  
 [!code-cpp[System.Random#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/same1.cpp#12)]
 [!code-csharp[System.Random#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/same1.cs#12)]
 [!code-vb[System.Random#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/same1.vb#12)]  
  
<a name="Unique"></a>   
### <a name="retrieve-unique-sequences-of-random-numbers"></a><span data-ttu-id="6e5c7-207">Получить уникальный последовательность случайных чисел</span><span class="sxs-lookup"><span data-stu-id="6e5c7-207">Retrieve unique sequences of random numbers</span></span>  
 <span data-ttu-id="6e5c7-208">Предоставление различных начальных значений для экземпляров <xref:System.Random> класс вызывает каждый генератора случайных чисел для создания другой последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-208">Providing different seed values to instances of the <xref:System.Random> class causes each random number generator to produce a different sequence of values.</span></span> <span data-ttu-id="6e5c7-209">Укажите начальное значение явным образом с помощью вызова методов <xref:System.Random.%23ctor%28System.Int32%29> конструктор, или неявно, вызвав <xref:System.Random.%23ctor> конструктор.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-209">You can provide a seed value either explicitly by calling the <xref:System.Random.%23ctor%28System.Int32%29> constructor, or implicitly by calling the <xref:System.Random.%23ctor> constructor.</span></span> <span data-ttu-id="6e5c7-210">Большинство разработчиков вызовите конструктор без параметров, который использует системные часы.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-210">Most developers call the parameterless constructor, which uses the system clock.</span></span> <span data-ttu-id="6e5c7-211">В следующем примере используется этот подход для создания двух <xref:System.Random> экземпляров.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-211">The following example uses this approach to instantiate two <xref:System.Random> instances.</span></span> <span data-ttu-id="6e5c7-212">Каждый экземпляр выводит ряд 10 случайных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-212">Each instance displays a series of 10 random integers.</span></span>  
  
 [!code-cpp[System.Random#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/unique.cpp#13)]
 [!code-csharp[System.Random#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/unique.cs#13)]
 [!code-vb[System.Random#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/unique.vb#13)]  
  
 <span data-ttu-id="6e5c7-213">Тем не менее из-за его конечное разрешение системных часов не обнаруживает время различия, которые являются приблизительно не превышает 15 миллисекунд.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-213">However, because of its finite resolution, the system clock doesn't detect time differences that are less than approximately 15 milliseconds.</span></span> <span data-ttu-id="6e5c7-214">Таким образом Если код вызывает <xref:System.Random.%23ctor> перегрузки для создания двух <xref:System.Random> объектов подряд, вы может случайно предоставлять объекты с использованием идентичных начальных значений.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-214">Therefore, if your code calls the <xref:System.Random.%23ctor> overload to instantiate two <xref:System.Random> objects in succession, you might inadvertently be providing the objects with identical seed values.</span></span> <span data-ttu-id="6e5c7-215">Чтобы увидеть это в предыдущем примере, закомментируйте <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> вызова метода и компиляции и снова запустите пример.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-215">To see this in the previous example, comment out the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method call, and compile and run the example again.</span></span>  
  
 <span data-ttu-id="6e5c7-216">Чтобы предотвратить такую ситуацию, рекомендуется создать экземпляр одного <xref:System.Random> объекта вместо того чтобы несколько сеансов.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-216">To prevent this from happening, we recommend that you instantiate a single <xref:System.Random> object rather than multiple ones.</span></span> <span data-ttu-id="6e5c7-217">Однако, поскольку <xref:System.Random> не является потокобезопасным, некоторые устройства синхронизации необходимо использовать при доступе к <xref:System.Random> экземпляра из нескольких потоков; Дополнительные сведения см [произвольного класса и поток безопасность](#ThreadSafety) ранее в этом раздел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-217">However, since <xref:System.Random> isn't thread safe, you must use some synchronization device if you access a <xref:System.Random> instance from multiple threads; for more information, see [The Random class and thread safety](#ThreadSafety) earlier in this topic.</span></span> <span data-ttu-id="6e5c7-218">Кроме того, можно использовать механизм задержки, такие как <xref:System.Threading.Thread.Sleep%2A> метод, используемый в предыдущем примере, чтобы избежать возникновения экземпляров друг от друга более чем 15 миллисекунд.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-218">Alternately, you can use a delay mechanism, such as the <xref:System.Threading.Thread.Sleep%2A> method used in the previous example, to ensure that the instantiations occur more than 15 millisecond apart.</span></span>  
  
<a name="Range"></a>   
### <a name="retrieve-integers-in-a-specified-range"></a><span data-ttu-id="6e5c7-219">Получить целых чисел в указанном диапазоне</span><span class="sxs-lookup"><span data-stu-id="6e5c7-219">Retrieve integers in a specified range</span></span>  
 <span data-ttu-id="6e5c7-220">Целые числа в указанном диапазоне можно получить, вызвав <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> метод, который позволяет указать нижней и верхней границы номеров, хотелось бы генератора случайных чисел для возврата.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-220">You can retrieve integers in a specified range by calling the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method, which lets you specify both the lower and the upper bound of the numbers you'd like the random number generator to return.</span></span> <span data-ttu-id="6e5c7-221">Верхняя граница — эксклюзивных, не включительно, значение.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-221">The upper bound is an exclusive, not an inclusive, value.</span></span> <span data-ttu-id="6e5c7-222">То есть он не включен в диапазон значений, возвращаемых методом.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-222">That is, it isn't included in the range of values returned by the method.</span></span> <span data-ttu-id="6e5c7-223">В следующем примере этот метод используется для создания произвольных целых чисел от -10 до 10.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-223">The following example uses this method to generate random integers between -10 and 10.</span></span> <span data-ttu-id="6e5c7-224">Обратите внимание, что в нем задано 11, равное одному больше, чем нужное значение в качестве значения из `maxValue` аргумента в вызове метода.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-224">Note that it specifies 11, which is one greater than the desired value, as the value of the `maxValue` argument in the method call.</span></span>  
  
 [!code-cpp[System.Random#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/range1.cpp#15)]
 [!code-csharp[System.Random#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/range1.cs#15)]
 [!code-vb[System.Random#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/range1.vb#15)]  
  
<a name="Digits"></a>   
### <a name="retrieve-integers-with-a-specified-number-of-digits"></a><span data-ttu-id="6e5c7-225">Получить целых чисел с помощью указанного количества десятичных разрядов</span><span class="sxs-lookup"><span data-stu-id="6e5c7-225">Retrieve integers with a specified number of digits</span></span>  
 <span data-ttu-id="6e5c7-226">Вы можете вызвать <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> метод для извлечения чисел с указанного количества десятичных разрядов.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-226">You can call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method to retrieve numbers with a specified number of digits.</span></span> <span data-ttu-id="6e5c7-227">Например, чтобы получить цифры с четырьмя знаками (то есть числа, в диапазоне от 1000 до 9999), следует вызвать <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> метод с `minValue` значение 1000 и `maxValue` значение 10000, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-227">For example, to retrieve numbers with four digits (that is, numbers that range from 1000 to 9999), you call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method with a `minValue` value of 1000 and a `maxValue` value of 10000, as the following example shows.</span></span>  
  
 [!code-cpp[System.Random#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/range2.cpp#16)]
 [!code-csharp[System.Random#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/range2.cs#16)]
 [!code-vb[System.Random#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/range2.vb#16)]  
  
<a name="Floats"></a>   
### <a name="retrieve-floating-point-values-in-a-specified-range"></a><span data-ttu-id="6e5c7-228">Извлечь значения с плавающей запятой в указанном диапазоне</span><span class="sxs-lookup"><span data-stu-id="6e5c7-228">Retrieve floating-point values in a specified range</span></span>  
 <span data-ttu-id="6e5c7-229"><xref:System.Random.NextDouble%2A> Метод возвращает случайные значения с плавающей запятой, диапазон от 0 до меньше 1.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-229">The <xref:System.Random.NextDouble%2A> method returns random floating-point values that range from 0 to less than 1.</span></span> <span data-ttu-id="6e5c7-230">Тем не менее часто нужно будет создать случайные значения в некоторых других диапазоне.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-230">However, you'll often want to generate random values in some other range.</span></span>  
  
 <span data-ttu-id="6e5c7-231">Если интервал между минимальным и максимальным нужные значения-1, можно добавить разницу между начальной интервал, а значение 0, возвращенному методом <xref:System.Random.NextDouble%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-231">If the interval between the minimum and maximum desired values is 1, you can add the difference between the desired starting interval and 0 to the number returned by the <xref:System.Random.NextDouble%2A> method.</span></span> <span data-ttu-id="6e5c7-232">Следующий пример делает это для генерации 10 случайных чисел от -1 до 0.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-232">The following example does this to generate 10 random numbers between -1 and 0.</span></span>  
  
 [!code-cpp[System.Random#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange2.cpp#17)]
 [!code-csharp[System.Random#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange2.cs#17)]
 [!code-vb[System.Random#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange2.vb#17)]  
  
 <span data-ttu-id="6e5c7-233">Для формирования случайных чисел с плавающей запятой, нижняя граница — 0, но верхняя граница — больше 1 (или, в случае отрицательных чисел, нижняя граница диапазона — меньше -1 и верхняя граница — 0), умножьте ненулевой границей случайного числа.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-233">To generate random floating-point numbers whose lower bound is 0 but upper bound is greater than 1 (or, in the case of negative numbers, whose lower bound is less than -1 and upper bound is 0), multiply the random number by the non-zero bound.</span></span> <span data-ttu-id="6e5c7-234">В следующем примере выполняется для формирования случайных чисел с плавающей запятой с 20 миллионов этого диапазона от 0 до <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-234">The following example does this to generate 20 million random floating-point numbers that range from 0 to <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6e5c7-235">В также отображаются распределения случайных значений, созданных с помощью метода.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-235">In also displays the distribution of the random values generated by the method.</span></span>  
  
 [!code-cpp[System.Random#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange1.cpp#18)]
 [!code-csharp[System.Random#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange1.cs#18)]
 [!code-vb[System.Random#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange1.vb#18)]  
  
 <span data-ttu-id="6e5c7-236">Для формирования случайных чисел с плавающей запятой двух произвольных значений, таких как <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> метод не для целых чисел, используйте следующую формулу:</span><span class="sxs-lookup"><span data-stu-id="6e5c7-236">To generate random floating-point numbers between two arbitrary values, like the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method does for integers, use the following formula:</span></span>  
  
```csharp  
Random.NextDouble() * (maxValue - minValue) + minValue  
```  
  
 <span data-ttu-id="6e5c7-237">В следующем примере генерирует 1 миллион случайные числа в диапазоне от 10.0 до версии 11.0 и отображает их распределение.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-237">The following example generates 1 million random numbers that range from 10.0 to 11.0, and displays their distribution.</span></span>  
  
 [!code-cpp[System.Random#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange3.cpp#19)]
 [!code-csharp[System.Random#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange3.cs#19)]
 [!code-vb[System.Random#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange3.vb#19)]  
  
<a name="Boolean"></a>   
### <a name="generate-random-boolean-values"></a><span data-ttu-id="6e5c7-238">Сформировать произвольного логических значений</span><span class="sxs-lookup"><span data-stu-id="6e5c7-238">Generate random Boolean values</span></span>  
 <span data-ttu-id="6e5c7-239"><xref:System.Random> Класс не предоставляет методов, позволяющих создать <xref:System.Boolean> значения.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-239">The <xref:System.Random> class doesn't provide methods that generate <xref:System.Boolean> values.</span></span> <span data-ttu-id="6e5c7-240">Тем не менее можно определить собственный класс или метод для этого.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-240">However, you can define your own class or method to do that.</span></span> <span data-ttu-id="6e5c7-241">В следующем примере определяется класс, `BooleanGenerator`, с единственным методом, `NextBoolean`.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-241">The following example defines a class, `BooleanGenerator`, with a single method, `NextBoolean`.</span></span> <span data-ttu-id="6e5c7-242">`BooleanGenerator` Класса хранилищ <xref:System.Random> объект в качестве частной переменной.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-242">The `BooleanGenerator` class stores a <xref:System.Random> object as a private variable.</span></span> <span data-ttu-id="6e5c7-243">`NextBoolean` Вызовы методов <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> метод и передает результат в <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-243">The `NextBoolean` method calls the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method and passes the result to the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="6e5c7-244">Обратите внимание на то, что 2 используется в качестве аргумента для указания верхней границы случайного числа.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-244">Note that 2 is used as the argument to specify the upper bound of the random number.</span></span> <span data-ttu-id="6e5c7-245">Так как это значение монопольного, этот метод возвращает значение 0 или 1.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-245">Since this is an exclusive value, the method call returns either 0 or 1.</span></span>  
  
 [!code-cpp[System.Random#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/booleans1.cpp#8)]
 [!code-csharp[System.Random#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/booleans1.cs#8)]
 [!code-vb[System.Random#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/booleans1.vb#8)]  
  
 <span data-ttu-id="6e5c7-246">Вместо того чтобы создавать отдельный класс для создания случайных <xref:System.Boolean> значения в примере просто могли бы определить один метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-246">Instead of creating a separate class to generate random <xref:System.Boolean> values, the example could simply have defined a single method.</span></span> <span data-ttu-id="6e5c7-247">В этом случае, однако <xref:System.Random> следует, объект был определен как переменную уровня класса, чтобы избежать создания нового <xref:System.Random> экземпляр в каждом вызове метода.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-247">In that case, however, the <xref:System.Random> object should have been defined as a class-level variable to avoid instantiating a new <xref:System.Random> instance in each method call.</span></span> <span data-ttu-id="6e5c7-248">В Visual Basic из экземпляра Random могут быть определены как [статический](~/docs/visual-basic/language-reference/modifiers/static.md) переменных в `NextBoolean` метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-248">In Visual Basic, the Random instance can be defined as a [Static](~/docs/visual-basic/language-reference/modifiers/static.md) variable in the `NextBoolean` method.</span></span>  <span data-ttu-id="6e5c7-249">Следующий пример предоставляет реализацию.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-249">The following example provides an implementation.</span></span>  
  
 [!code-cpp[System.Random#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/booleans2.cpp#20)]
 [!code-csharp[System.Random#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/booleans2.cs#20)]
 [!code-vb[System.Random#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/booleans2.vb#20)]  
  
<a name="Long"></a>   
### <a name="generate-random-64-bit-integers"></a><span data-ttu-id="6e5c7-250">Сформировать произвольного 64-разрядных целых чисел</span><span class="sxs-lookup"><span data-stu-id="6e5c7-250">Generate random 64-bit integers</span></span>  
 <span data-ttu-id="6e5c7-251">Перегрузки <xref:System.Random.Next%2A> метод возвращает 32-разрядных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-251">The overloads of the <xref:System.Random.Next%2A> method return 32-bit integers.</span></span> <span data-ttu-id="6e5c7-252">Однако в некоторых случаях может потребоваться работать с 64-разрядных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-252">However, in some cases, you might want to work with 64-bit integers.</span></span> <span data-ttu-id="6e5c7-253">Это можно сделать следующим образом:</span><span class="sxs-lookup"><span data-stu-id="6e5c7-253">You can do this as follows:</span></span>  
  
1.  <span data-ttu-id="6e5c7-254">Вызовите <xref:System.Random.NextDouble%2A> метод для извлечения двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-254">Call the <xref:System.Random.NextDouble%2A> method to retrieve a double-precision floating point value.</span></span>  
  
2.  <span data-ttu-id="6e5c7-255">Умножьте это значение с <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-255">Multiply that value by <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6e5c7-256">В следующем примере использует эту методику для формирования случайных длинных целых чисел — 20 миллионов и распределяет их в 10 равно групп.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-256">The following example uses this technique to generate 20 million random long integers and categorizes them in 10 equal groups.</span></span> <span data-ttu-id="6e5c7-257">Затем он вычисляет распределения случайных чисел с подсчета в каждой группе, от 0 до <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-257">It then evaluates the distribution of the random numbers by counting the number in each group from 0 to <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6e5c7-258">Как видно из примера, номера более или менее равномерно распределяются диапазон типа данных long integer.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-258">As the output from the example shows, the numbers are distributed more or less equally through the range of a long integer.</span></span>  
  
 [!code-cpp[System.Random#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/long1.cpp#14)]
 [!code-csharp[System.Random#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/long1.cs#14)]
 [!code-vb[System.Random#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/long1.vb#14)]  
  
 <span data-ttu-id="6e5c7-259">Альтернативный способ, что манипуляция с битами использует не создает по-настоящему случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-259">An alternative technique that uses bit manipulation does not generate truly random numbers.</span></span> <span data-ttu-id="6e5c7-260">Этот метод вызывает <xref:System.Random.Next> для создания двух целых чисел, один на 32 сдвигает влево биты и схему или их вместе.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-260">This technique calls <xref:System.Random.Next> to generate two integers, left-shifts one by 32 bits, and ORs them together.</span></span> <span data-ttu-id="6e5c7-261">Этот метод имеет два ограничения:</span><span class="sxs-lookup"><span data-stu-id="6e5c7-261">This technique has two limitations:</span></span>  
  
1.  <span data-ttu-id="6e5c7-262">Так как бит 31 бита знака, значение в бит 31 полученное значение типа long integer всегда равно 0.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-262">Because bit 31 is the sign bit, the value in bit 31 of the resulting long integer is always 0.</span></span>  <span data-ttu-id="6e5c7-263">Эту проблему можно устранить путем формирования случайных 0 или 1, left сдвигая 31 бита, а также использование оператора OR его с исходной случайных длинное целое число.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-263">This can be addressed by generating a random 0 or 1, left-shifting it 31 bits, and ORing it with the original random long integer.</span></span>  
  
2.  <span data-ttu-id="6e5c7-264">Более серьезно поскольку вероятность того, что значение, возвращаемое функцией <xref:System.Random.Next> будет равно 0, будет небольшим количеством случайных чисел в диапазоне от 0x0 0x00000000FFFFFFFF.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-264">More seriously, because the probability that the value returned by <xref:System.Random.Next> will be 0, there will be few if any random numbers in the range 0x0-0x00000000FFFFFFFF.</span></span>  
  
<a name="Bytes"></a>   
### <a name="retrieve-bytes-in-a-specified-range"></a><span data-ttu-id="6e5c7-265">Получение байт в указанном диапазоне</span><span class="sxs-lookup"><span data-stu-id="6e5c7-265">Retrieve bytes in a specified range</span></span>  
 <span data-ttu-id="6e5c7-266">Перегрузки <xref:System.Random.Next%2A> метода позволяют указать диапазон случайных чисел, но <xref:System.Random.NextBytes%2A> метод — нет.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-266">The overloads of the <xref:System.Random.Next%2A> method allow you to specify the range of random numbers, but the <xref:System.Random.NextBytes%2A> method does not.</span></span> <span data-ttu-id="6e5c7-267">В следующем примере реализуется `NextBytes` метод, который позволяет указать диапазон байтов, возвращаемых.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-267">The following example implements a `NextBytes` method that lets you specify the range of the returned bytes.</span></span> <span data-ttu-id="6e5c7-268">Он определяет `Random2` класс, производный от <xref:System.Random> и перегружает его `NextBytes` метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-268">It defines a `Random2` class that derives from <xref:System.Random> and overloads its `NextBytes` method.</span></span>  
  
 [!code-cpp[System.Random#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/bytes1.cpp#9)]
 [!code-csharp[System.Random#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/bytes1.cs#9)]
 [!code-vb[System.Random#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/bytes1.vb#9)]  
  
 <span data-ttu-id="6e5c7-269">`NextBytes(Byte[], Byte, Byte)` Метод создает оболочку для вызова <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> метода и указывает минимальное значение и один больше, чем максимальное значение (в этом случае 0 и 101), мы должны возвращаться в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-269">The `NextBytes(Byte[], Byte, Byte)` method wraps a call to the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method and specifies the minimum value and one greater than the maximum value (in this case, 0 and 101) that we want returned in the byte array.</span></span> <span data-ttu-id="6e5c7-270">Так как мы уверены, что целочисленные значения, возвращаемые <xref:System.Random.Next%2A> метод находятся в диапазоне <xref:System.Byte> тип данных, можно безопасно нужно преобразовать их (в C#) или преобразовать их (в Visual Basic) из целых чисел в байты.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-270">Because we are sure that the integer values returned by the <xref:System.Random.Next%2A> method are within the range of the <xref:System.Byte> data type, we can safely cast them (in C#) or convert them (in Visual Basic) from integers to bytes.</span></span>  
  
<a name="Array"></a>   
### <a name="retrieve-an-element-from-an-array-or-collection-at-random"></a><span data-ttu-id="6e5c7-271">Получить элемент из массива или коллекции в случайном порядке</span><span class="sxs-lookup"><span data-stu-id="6e5c7-271">Retrieve an element from an array or collection at random</span></span>  
 <span data-ttu-id="6e5c7-272">Случайные числа часто служат в качестве индексов для извлечения значений из массива или коллекции.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-272">Random numbers often serve as indexes to retrieve values from arrays or collections.</span></span> <span data-ttu-id="6e5c7-273">Чтобы извлечь значение случайный индекс, можно вызвать <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> метод и использование, нижняя граница массива в качестве значения его `minValue` аргумент и один больше, чем значение верхней границы массива в качестве значения его `maxValue` аргумент.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-273">To retrieve a random index value, you can call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method, and use the lower bound of the array as the value of its `minValue` argument and one greater than the upper bound of the array as the value of its `maxValue` argument.</span></span> <span data-ttu-id="6e5c7-274">Отсчитываемый от нуля массив, это эквивалентно его <xref:System.Array.Length%2A> свойства или единицу большее, чем значение, возвращенное <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-274">For a zero-based array, this is equivalent to its <xref:System.Array.Length%2A> property, or one greater than the value returned by the <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="6e5c7-275">Случайным образом в следующем примере извлекается имя города на территории США из массив городов.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-275">The following example randomly retrieves the name of a city in the United States from an array of cities.</span></span>  
  
 [!code-cpp[System.Random#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/array1.cpp#10)]
 [!code-csharp[System.Random#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/array1.cs#10)]
 [!code-vb[System.Random#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/array1.vb#10)]  
  
<a name="UniqueArray"></a>   
### <a name="retrieve-a-unique-element-from-an-array-or-collection"></a><span data-ttu-id="6e5c7-276">Получить уникальный элемент из массива или коллекции</span><span class="sxs-lookup"><span data-stu-id="6e5c7-276">Retrieve a unique element from an array or collection</span></span>  
 <span data-ttu-id="6e5c7-277">Генератор случайных чисел всегда можете вернуться повторяющиеся значения.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-277">A random number generator can always return duplicate values.</span></span> <span data-ttu-id="6e5c7-278">Уменьшается диапазон чисел или число значений, созданных разрастается, увеличивается вероятность дубликаты.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-278">As the range of numbers becomes smaller or the number of values generated becomes larger, the probability of duplicates grows.</span></span> <span data-ttu-id="6e5c7-279">Если случайные значения должны быть уникальными, дополнительные номера создаются для компенсации дубликаты, все чаще вызовет снижение производительности.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-279">If random values must be unique, more numbers are generated to compensate for duplicates, resulting in increasingly poor performance.</span></span>  
  
 <span data-ttu-id="6e5c7-280">Существует ряд методов для обработки этого сценария.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-280">There are a number of techniques to handle this scenario.</span></span> <span data-ttu-id="6e5c7-281">Распространенным решением является создание массива или коллекция, содержащая значения должны быть получены, а параллельный массив, содержащий случайные числа с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-281">One common solution is to create an array or collection that contains the values to be retrieved, and a parallel array that contains random floating-point numbers.</span></span> <span data-ttu-id="6e5c7-282">Второй массив заполняется случайными числами во время создания первого массива и <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> метод используется для сортировки первого массива, используя значения в массиве parallel.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-282">The second array is populated with random numbers at the time the first array is created, and the <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method is used to sort the first array by using the values in the parallel array.</span></span>  
  
 <span data-ttu-id="6e5c7-283">Например если вы разрабатываете игры, вы хотите убедиться, что каждая карта используется только один раз.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-283">For example, if you're developing a Solitaire game, you want to ensure that each card is used only once.</span></span> <span data-ttu-id="6e5c7-284">Вместо создания случайных чисел, чтобы получить карту и отслеживания ли эта карта уже были обработаны, можно создать массив, параллельный случайных чисел, который может использоваться для сортировки колоды.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-284">Instead of generating random numbers to retrieve a card and tracking whether that card has already been dealt, you can create a parallel array of random numbers that can be used to sort the deck.</span></span> <span data-ttu-id="6e5c7-285">После сортировки колоды, приложение может поддерживать указатель, чтобы указать индекс следующей карты в колоде.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-285">Once the deck is sorted, your app can maintain a pointer to indicate the index of the next card on the deck.</span></span>  
  
 <span data-ttu-id="6e5c7-286">Этот подход показан в приведенном ниже примере.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-286">The following example illustrates this approach.</span></span> <span data-ttu-id="6e5c7-287">Он определяет `Card` класс, представляющий игральную карту и их `Dealer` класс, который обрабатывает перемешать карт.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-287">It defines a `Card` class that represents a playing card and a `Dealer` class that deals a deck of shuffled cards.</span></span> <span data-ttu-id="6e5c7-288">`Dealer` Конструктор класса заполняет два массива: `deck` массива, который имеет область видимости класса, которое представляет все карты в колоде; и локальный `order` массив, который имеет одинаковое количество элементов, как `deck` массива и заполняется с помощью случайным образом <xref:System.Double> значения.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-288">The `Dealer` class constructor populates two arrays: a `deck` array that has class scope and that represents all the cards in the deck; and a local `order` array that has the same number of elements as the `deck` array and is populated with randomly generated <xref:System.Double> values.</span></span>  <span data-ttu-id="6e5c7-289"><xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> Затем вызывается метод для сортировки `deck` массива на основе значений в `order` массива.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-289">The <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method is then called to sort the `deck` array based on the values in the `order` array.</span></span>  
  
 [!code-cpp[System.Random#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/uniquearray1.cpp#11)]
 [!code-csharp[System.Random#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/uniquearray1.cs#11)]
 [!code-vb[System.Random#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/uniquearray1.vb#11)]  
  
   
  
## Examples  
 <span data-ttu-id="6e5c7-290">В следующем примере создается один генератор случайных чисел и вызывает его <xref:System.Random.NextBytes%2A>, <xref:System.Random.Next%2A>, и <xref:System.Random.NextDouble%2A> методов для автоматического создания последовательности случайных чисел в разных диапазонах.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-290">The following example creates a single random number generator and calls its <xref:System.Random.NextBytes%2A>, <xref:System.Random.Next%2A>, and <xref:System.Random.NextDouble%2A> methods to generate sequences of random numbers within different ranges.</span></span>  
  
 [!code-cpp[System.Random#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/random2.cpp#2)]
 [!code-csharp[System.Random#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/Random2.cs#2)]
 [!code-vb[System.Random#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/Random2.vb#2)]  
  
 <span data-ttu-id="6e5c7-291">Следующий пример создает случайное целое число, которое используется в качестве индекса для получения строковое значение из массива.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-291">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span>  
  
 [!code-cpp[System.Random.Next#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next1.cpp#3)]
 [!code-csharp[System.Random.Next#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next1.cs#3)]
 [!code-vb[System.Random.Next#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next1.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="6e5c7-292">В .NET Framework 1.0 и 1.1, минимальная реализация класса, производным от <see cref="T:System.Random" /> требуется переопределение <see cref="M:System.Random.Sample" /> метод для определения новых или измененных алгоритм генерации случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-292">In the .NET Framework 1.0 and 1.1, a minimum implementation of a class derived from <see cref="T:System.Random" /> required overriding the <see cref="M:System.Random.Sample" /> method to define a new or modified algorithm for generating random numbers.</span></span> <span data-ttu-id="6e5c7-293">Производный класс может использовать реализацию базового класса <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32)" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, <see cref="M:System.Random.NextBytes(System.Byte[])" />, и <see cref="M:System.Random.NextDouble" /> методы для вызова реализации в производном классе <see cref="M:System.Random.Sample" /> метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-293">The derived class could then rely on the base class implementation of the <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32)" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, <see cref="M:System.Random.NextBytes(System.Byte[])" />, and <see cref="M:System.Random.NextDouble" /> methods to call the derived class implementation of the <see cref="M:System.Random.Sample" /> method.</span></span>  
  
<span data-ttu-id="6e5c7-294">В .NET Framework 2.0 и более поздних, поведение <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, и <see cref="M:System.Random.NextBytes(System.Byte[])" /> методы были изменены таким образом, чтобы эти методы не обязательно вызывайте реализации в производном классе <see cref="M:System.Random.Sample" /> метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-294">In the .NET Framework 2.0 and later, the behavior of the <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, and <see cref="M:System.Random.NextBytes(System.Byte[])" /> methods have changed so that these methods do not necessarily call the derived class implementation of the <see cref="M:System.Random.Sample" /> method.</span></span> <span data-ttu-id="6e5c7-295">Таким образом, классы, производные от <see cref="T:System.Random" /> , предназначенных для .NET Framework 2.0 и более поздней версии, следует также переопределить эти три метода.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-295">As a result, classes derived from <see cref="T:System.Random" /> that target the .NET Framework 2.0 and later should also override these three methods.</span></span></para></block>
    <block subset="none" type="usage"><para><span data-ttu-id="6e5c7-296">Реализации генератора случайных чисел в <see cref="T:System.Random" /> класс не обязательно будет остаются неизменными в разных основных номерах версий платформы .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-296">The implementation of the random number generator in the <see cref="T:System.Random" /> class isn't guaranteed to remain the same across major versions of the .NET Framework.</span></span> <span data-ttu-id="6e5c7-297">Таким образом Нет оснований предполагать, что то же начальное значение приведет к той же последовательности псевдослучайных чисел в различных версиях платформы .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-297">As a result, you shouldn't assume that the same seed will result in the same pseudo-random sequence in different versions of the .NET Framework.</span></span></para></block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6e5c7-298">Инициализирует новый экземпляр класса <see cref="T:System.Random" />.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-298">Initializes a new instance of the <see cref="T:System.Random" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Random ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Random();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e5c7-299">Инициализирует новый экземпляр класса <see cref="T:System.Random" /> с помощью зависимого от времени начального значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-299">Initializes a new instance of the <see cref="T:System.Random" /> class, using a time-dependent default seed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e5c7-300">Начальное значение по умолчанию является производным от системных часов и имеет ограниченный разрешения.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-300">The default seed value is derived from the system clock and has finite resolution.</span></span> <span data-ttu-id="6e5c7-301">В результате разных <xref:System.Random> объектов, созданных в быстрой последовательности путем вызова конструктора по умолчанию будет иметь значения по умолчанию идентичны начальное значение и, будут производить идентичными наборами случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-301">As a result, different <xref:System.Random> objects that are created in close succession by a call to the default constructor will have identical default seed values and, therefore, will produce identical sets of random numbers.</span></span> <span data-ttu-id="6e5c7-302">Этой проблемы можно избежать, используя единую <xref:System.Random> объект для создания всех случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-302">This problem can be avoided by using a single <xref:System.Random> object to generate all random numbers.</span></span> <span data-ttu-id="6e5c7-303">Можно также обойти его, изменив начальное значение, возвращенное системных часов и затем явно предоставив это новое начальное значение для <xref:System.Random.%23ctor%28System.Int32%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-303">You can also work around it by modifying the seed value returned by the system clock and then explicitly providing this new seed value to the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="6e5c7-304">Дополнительные сведения см. в разделе <xref:System.Random.%23ctor%28System.Int32%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-304">For more information, see the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="6e5c7-305">Если вы хотите, чтобы генератора случайных чисел для создания случайную последовательность чисел, вызов этого конструктора.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-305">Call this constructor if you want your random number generator to generate a random sequence of numbers.</span></span> <span data-ttu-id="6e5c7-306">Чтобы создать фиксированной последовательности случайных чисел, который будет одинаковым для разных генераторов случайных чисел, вызвать <xref:System.Random.%23ctor%28System.Int32%29> конструктор с предопределенной начальным значением.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-306">To generate a fixed  sequence of random numbers that will be the same for different random number generators, call the <xref:System.Random.%23ctor%28System.Int32%29> constructor with a fixed seed value .</span></span> <span data-ttu-id="6e5c7-307">Это <xref:System.Random> перегрузку конструктора часто используется при тестировании приложения, использующие случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-307">This <xref:System.Random> constructor overload is frequently used when testing apps that use random numbers.</span></span>  
  
 <span data-ttu-id="6e5c7-308">После создания экземпляра генератора случайных чисел вызове отдельных <xref:System.Random> методы, такие как <xref:System.Random.Next> или <xref:System.Random.NextDouble>, для формирования случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-308">Once you've instantiated the random number generator, you call individual <xref:System.Random> methods, such as <xref:System.Random.Next> or <xref:System.Random.NextDouble>, to generate random numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e5c7-309">В следующем примере используется конструктор по умолчанию для создания экземпляра три <xref:System.Random> объектов и отображает последовательность случайных целых чисел для каждого.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-309">The following example uses the default constructor to instantiate three <xref:System.Random> objects and displays a sequence of five random integers for each.</span></span> <span data-ttu-id="6e5c7-310">Так как первые два <xref:System.Random> объекты создаются в быстрой последовательности, они создаются, используя одинаковые начальные значения, в зависимости от системных часов и, таким образом, они создают идентичную последовательность случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-310">Because the first two <xref:System.Random> objects are created in close succession, they are instantiated using identical seed values based on the system clock and, therefore, they produce an identical sequence of random numbers.</span></span> <span data-ttu-id="6e5c7-311">С другой стороны, конструктор по умолчанию третьего <xref:System.Random> объекта вызывается после двух секундная задержка, из-за вызова <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-311">On the other hand, the default constructor of the third <xref:System.Random> object is called after a two-second delay caused by calling the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="6e5c7-312">Так как это создает различные начальное значение для третьей <xref:System.Random> объекта, он создает различные последовательность случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-312">Because this produces a different seed value for the third <xref:System.Random> object, it produces a different sequence of random numbers.</span></span>  
  
 [!code-csharp[System.Random.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor1.cs#2)]
 [!code-vb[System.Random.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Random (int Seed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 Seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Seed As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Random(int Seed);" />
      <MemberSignature Language="F#" Value="new Random : int -&gt; Random" Usage="new System.Random Seed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Seed" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Seed"><span data-ttu-id="6e5c7-313">Число, используемое для вычисления начального значения последовательности псевдослучайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-313">A number used to calculate a starting value for the pseudo-random number sequence.</span></span> <span data-ttu-id="6e5c7-314">Если задано отрицательное число, используется его абсолютное значение.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-314">If a negative number is specified, the absolute value of the number is used.</span></span></param>
        <summary><span data-ttu-id="6e5c7-315">Инициализирует новый экземпляр класса <see cref="T:System.Random" /> с помощью указанного начального значения.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-315">Initializes a new instance of the <see cref="T:System.Random" /> class, using the specified seed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e5c7-316">Предоставляя задать одинаковые начальные значения для разных <xref:System.Random> объектов вызывает каждый экземпляр для создания идентичных последовательность случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-316">Providing an identical seed value to different <xref:System.Random> objects causes each instance to produce identical sequences of random numbers.</span></span> <span data-ttu-id="6e5c7-317">Это часто делается при тестировании приложений, основанных на генераторы случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-317">This is often done when testing apps that rely on random number generators.</span></span>  
  
 <span data-ttu-id="6e5c7-318">Приложению требуются различные последовательности случайных чисел, необходимо вызовите этот конструктор несколько раз с различными начальными значениями.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-318">If your application requires different random number sequences, invoke this constructor repeatedly with different seed values.</span></span> <span data-ttu-id="6e5c7-319">Один из способов создания уникального начального значения — упростить зависящие от времени.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-319">One way to produce a unique seed value is to make it time-dependent.</span></span> <span data-ttu-id="6e5c7-320">Например, извлекать его из системных часов, как <xref:System.Random.%23ctor> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-320">For example, derive the seed value from the system clock, as the <xref:System.Random.%23ctor> overload does.</span></span> <span data-ttu-id="6e5c7-321">Тем не менее системных часов может не иметь достаточно разрешения для предоставления различных вызовов этого конструктора с разных начальным значением.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-321">However, the system clock might not have sufficient resolution to provide different invocations of this constructor with a different seed value.</span></span> <span data-ttu-id="6e5c7-322">В результате генераторы случайных чисел, которые создают идентичные последовательности псевдослучайных чисел, как показано в первых двух <xref:System.Random> объектов в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-322">This results in random number generators that generate identical sequences of pseudo-random numbers, as illustrated by the first two <xref:System.Random> objects in the following example.</span></span> <span data-ttu-id="6e5c7-323">Чтобы избежать этого, применить алгоритм начального значения в каждом вызова или вызова <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> метод, чтобы гарантировать, что каждый конструктор предоставляется другое начальное значение.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-323">To prevent this, apply an algorithm to differentiate the seed value in each invocation, or call the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to ensure that you provide each constructor with a different seed value.</span></span>  
  
 [!code-csharp[System.Random.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor4.cs#4)]
 [!code-vb[System.Random.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor4.vb#4)]  
  
 <span data-ttu-id="6e5c7-324">Другой вариант — создать экземпляр одного <xref:System.Random> который используется для формирования случайных чисел в приложении.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-324">Another option is to instantiate a single <xref:System.Random> object that you use to generate all the random numbers in your application.</span></span> <span data-ttu-id="6e5c7-325">Это дает несколько большую производительность, так как создание экземпляров генератора случайных чисел является довольно дорогой.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-325">This yields slightly better performance, since instantiating a random number generator is fairly expensive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e5c7-326">В следующем примере создается <xref:System.Random> объектов с помощью конструктора класса, который принимает параметр начального значения и создает последовательность случайных целых чисел и чисел типа Double.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-326">The following example creates <xref:System.Random> objects with the class constructor that takes a seed parameter and generates a sequence of random integers and doubles.</span></span> <span data-ttu-id="6e5c7-327">В примере показано, что и та же последовательность создается при <xref:System.Random> снова создается объект с параметром конструктора и начальное значение.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-327">The example illustrates that the same sequence is generated when the <xref:System.Random> object is created again with the constructor and seed parameter.</span></span>  
  
 [!code-cpp[System.Random.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Ctor/CPP/ctor.cpp#1)]
 [!code-csharp[System.Random.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor.cs#1)]
 [!code-vb[System.Random.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Next">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6e5c7-328">Возвращает случайное целое число.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-328">Returns a random integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next();" />
      <MemberSignature Language="F#" Value="abstract member Next : unit -&gt; int&#xA;override this.Next : unit -&gt; int" Usage="random.Next " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e5c7-329">Возвращает неотрицательное случайное целое число.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-329">Returns a non-negative random integer.</span></span></summary>
        <returns><span data-ttu-id="6e5c7-330">32-разрядное целое число со знаком, которое больше или равно нулю и меньше чем <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-330">A 32-bit signed integer that is greater than or equal to 0 and less than <see cref="F:System.Int32.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e5c7-331"><xref:System.Random.Next%2A?displayProperty=nameWithType> Создает случайное число в диапазоне от 0 до менее <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-331"><xref:System.Random.Next%2A?displayProperty=nameWithType> generates a random number whose value ranges from 0 to less than <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6e5c7-332">Чтобы создать случайное число в диапазоне от 0 до других положительного числа, используйте <xref:System.Random.Next%28System.Int32%29?displayProperty=nameWithType> перегрузки метода.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-332">To generate a random number whose value ranges from 0 to some other positive number, use the <xref:System.Random.Next%28System.Int32%29?displayProperty=nameWithType> method overload.</span></span> <span data-ttu-id="6e5c7-333">Чтобы создать случайное число в пределах другой диапазон, используйте <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> перегрузки метода.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-333">To generate a random number within a different range, use the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e5c7-334">В следующем примере создается повторные вызовы <xref:System.Random.Next%2A> метод для генерации определенное количество случайных чисел, по запросу пользователя.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-334">The following example makes repeated calls to the <xref:System.Random.Next%2A> method to generate a specific number of random numbers requested by the user.</span></span> <span data-ttu-id="6e5c7-335"><xref:System.Console.ReadLine%2A?displayProperty=nameWithType> Метод используется для получения отзывов клиентов.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-335">The <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> method is used to get customer input.</span></span>  
  
 [!code-cpp[System.Random.Next#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next3.cpp#5)]
 [!code-csharp[System.Random.Next#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next3.cs#5)]
 [!code-vb[System.Random.Next#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next3.vb#5)]  
  
 <span data-ttu-id="6e5c7-336">Следующий пример является производным от класса <xref:System.Random> создать последовательность случайных чисел, распределение которых отличается от равномерного распределения, созданные <xref:System.Random.Sample%2A> метод базового класса.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-336">The following example derives a class from <xref:System.Random> to generate a sequence of random numbers whose distribution differs from the uniform distribution generated by the <xref:System.Random.Sample%2A> method of the base class.</span></span> <span data-ttu-id="6e5c7-337">Этот параметр переопределяет <xref:System.Random.Sample%2A> способ предоставления распределения случайных чисел и переопределений <xref:System.Random.Next%2A?displayProperty=nameWithType> метод использование набора случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-337">It overrides the <xref:System.Random.Sample%2A> method to provide the distribution of random numbers, and overrides the <xref:System.Random.Next%2A?displayProperty=nameWithType> method to use series of random numbers.</span></span>  
  
 [!code-cpp[System.Random.Sample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Sample/cpp/sampleex.cpp#1)]
 [!code-csharp[System.Random.Sample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Sample/CS/sample.cs#1)]
 [!code-vb[System.Random.Sample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Sample/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="6e5c7-338">Начиная с .NET Framework версии 2.0, если вы наследуете от класса <see cref="T:System.Random" /> и переопределить <see cref="M:System.Random.Sample" /> метод, дистрибутив, предоставленный реализации в производном классе <see cref="M:System.Random.Sample" /> метод не используется в вызовах базового класса Реализация <see cref="M:System.Random.Next" /> метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-338">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.Next" /> method.</span></span> <span data-ttu-id="6e5c7-339">Вместо этого возвращается равномерное распределение базовым <see cref="T:System.Random" /> используется класс.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-339">Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used.</span></span> <span data-ttu-id="6e5c7-340">Это повышает общую производительность <see cref="T:System.Random" /> класса.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-340">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span></span> <span data-ttu-id="6e5c7-341">Чтобы изменить это поведение, чтобы вызвать <see cref="M:System.Random.Sample" /> метод в производном классе, необходимо также переопределить <see cref="M:System.Random.Next" /> метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-341">To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.Next" /> method.</span></span></para></block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next (int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next (maxValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next(int maxValue);" />
      <MemberSignature Language="F#" Value="abstract member Next : int -&gt; int&#xA;override this.Next : int -&gt; int" Usage="random.Next maxValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxValue"><span data-ttu-id="6e5c7-342">Эксклюзивная верхняя граница создаваемого случайного числа.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-342">The exclusive upper bound of the random number to be generated.</span></span> <span data-ttu-id="6e5c7-343"><paramref name="maxValue" /> должно быть больше либо равно 0.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-343"><paramref name="maxValue" /> must be greater than or equal to 0.</span></span></param>
        <summary><span data-ttu-id="6e5c7-344">Возвращает неотрицательное случайное целое число, которое меньше указанного максимального значения.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-344">Returns a non-negative random integer that is less than the specified maximum.</span></span></summary>
        <returns><span data-ttu-id="6e5c7-345">32-разрядное целое число со знаком, большее или равное 0 и меньшее, чем <paramref name="maxValue" />. То есть диапазон возвращаемых значений включает в себя 0, но не включает <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-345">A 32-bit signed integer that is greater than or equal to 0, and less than <paramref name="maxValue" />; that is, the range of return values ordinarily includes 0 but not <paramref name="maxValue" />.</span></span> <span data-ttu-id="6e5c7-346">Однако если значение параметра <paramref name="maxValue" /> равно нулю, возвращается значение <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-346">However, if <paramref name="maxValue" /> equals 0, <paramref name="maxValue" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e5c7-347"><xref:System.Random.Next%28System.Int32%29> Перегрузка возвращает этот диапазон случайных целых чисел от 0 до `maxValue` - 1.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-347">The <xref:System.Random.Next%28System.Int32%29> overload returns random integers that range from 0 to `maxValue` - 1.</span></span> <span data-ttu-id="6e5c7-348">Тем не менее если `maxValue` равно 0, метод возвращает значение 0.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-348">However, if `maxValue` is 0, the method returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e5c7-349">Следующий пример приводит к возникновению ошибки случайных целых чисел с помощью перегрузок <xref:System.Random.Next%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-349">The following example generates random integers with various overloads of the <xref:System.Random.Next%2A> method.</span></span>  
  
 [!code-cpp[System.Random.Next#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next.cpp#1)]
 [!code-csharp[System.Random.Next#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next.cs#1)]
 [!code-vb[System.Random.Next#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next.vb#1)]  
  
 <span data-ttu-id="6e5c7-350">Следующий пример создает случайное целое число, которое используется в качестве индекса для получения строковое значение из массива.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-350">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span> <span data-ttu-id="6e5c7-351">Так как один меньше, чем его длину, значение наибольшего индекса массива <xref:System.Array.Length%2A?displayProperty=nameWithType> свойство передается в качестве `maxValue` параметра.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-351">Because the highest index of the array is one less than its length, the value of the <xref:System.Array.Length%2A?displayProperty=nameWithType> property is supplied as a the `maxValue` parameter.</span></span>  
  
 [!code-cpp[System.Random.Next#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next1.cpp#3)]
 [!code-csharp[System.Random.Next#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next1.cs#3)]
 [!code-vb[System.Random.Next#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6e5c7-352">Значение параметра <paramref name="maxValue" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-352"><paramref name="maxValue" /> is less than 0.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next (int minValue, int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 minValue, int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next (minValue As Integer, maxValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next(int minValue, int maxValue);" />
      <MemberSignature Language="F#" Value="abstract member Next : int * int -&gt; int&#xA;override this.Next : int * int -&gt; int" Usage="random.Next (minValue, maxValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minValue"><span data-ttu-id="6e5c7-353">Включенный нижний предел возвращаемого случайного числа.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-353">The inclusive lower bound of the random number returned.</span></span></param>
        <param name="maxValue"><span data-ttu-id="6e5c7-354">Исключенный верхний предел возвращаемого случайного числа.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-354">The exclusive upper bound of the random number returned.</span></span> <span data-ttu-id="6e5c7-355">Значение свойства <paramref name="maxValue" /> должно быть больше или равно значению свойства <paramref name="minValue" />.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-355"><paramref name="maxValue" /> must be greater than or equal to <paramref name="minValue" />.</span></span></param>
        <summary><span data-ttu-id="6e5c7-356">Возвращает случайное целое число в указанном диапазоне.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-356">Returns a random integer that is within a specified range.</span></span></summary>
        <returns><span data-ttu-id="6e5c7-357">32-разрядное целое число со знаком большее или равное <paramref name="minValue" /> и меньше, чем <paramref name="maxValue" />; то есть, диапазон возвращаемого значения включает <paramref name="minValue" />, не включает <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-357">A 32-bit signed integer greater than or equal to <paramref name="minValue" /> and less than <paramref name="maxValue" />; that is, the range of return values includes <paramref name="minValue" /> but not <paramref name="maxValue" />.</span></span> <span data-ttu-id="6e5c7-358">Если значение параметра <paramref name="minValue" /> равно значению параметра <paramref name="maxValue" />, то возвращается значение <paramref name="minValue" />.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-358">If <paramref name="minValue" /> equals <paramref name="maxValue" />, <paramref name="minValue" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e5c7-359"><xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Перегрузка возвращает случайные целые числа указанного диапазона из `minValue` для `maxValue` - 1.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-359">The <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> overload returns random integers that range from `minValue` to `maxValue` - 1.</span></span> <span data-ttu-id="6e5c7-360">Тем не менее если `maxValue` равно `minValue`, метод возвращает `minValue`.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-360">However, if `maxValue` equals `minValue`, the method returns `minValue`.</span></span>  
  
 <span data-ttu-id="6e5c7-361">В отличие от других перегрузок <xref:System.Random.Next%2A> метод, который возвращает только неотрицательные значения, этот метод может возвращать отрицательное случайное целое число.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-361">Unlike the other overloads of the <xref:System.Random.Next%2A> method, which return only non-negative values, this method can return a negative random integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e5c7-362">В следующем примере используется <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> метод для генерации случайных целых чисел с тремя различными диапазонами.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-362">The following example uses the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to generate random integers with three distinct ranges.</span></span> <span data-ttu-id="6e5c7-363">Обратите внимание, что точное выходные данные примера зависит от начального значения системное значение, передаваемое в <xref:System.Random> конструктора класса.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-363">Note that the exact output from the example depends on the system-supplied seed value passed to the <xref:System.Random> class constructor.</span></span>  
  
 [!code-cpp[System.Random.Next#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next2.cpp#2)]
 [!code-csharp[System.Random.Next#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/Next2.cs#2)]
 [!code-vb[System.Random.Next#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next2.vb#2)]  
  
 <span data-ttu-id="6e5c7-364">Следующий пример создает случайное целое число, которое используется в качестве индекса для получения строковое значение из массива.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-364">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span> <span data-ttu-id="6e5c7-365">Так как один меньше, чем его длину, значение наибольшего индекса массива <xref:System.Array.Length%2A?displayProperty=nameWithType> свойство передается в качестве `maxValue` параметра.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-365">Because the highest index of the array is one less than its length, the value of the <xref:System.Array.Length%2A?displayProperty=nameWithType> property is supplied as a the `maxValue` parameter.</span></span>  
  
 [!code-cpp[System.Random.Next#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next4.cpp#4)]
 [!code-csharp[System.Random.Next#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next4.cs#4)]
 [!code-vb[System.Random.Next#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6e5c7-366">Значение <paramref name="minValue" /> больше значения <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-366"><paramref name="minValue" /> is greater than <paramref name="maxValue" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="6e5c7-367">Начиная с .NET Framework версии 2.0, если вы наследуете от класса <see cref="T:System.Random" /> и переопределить <see cref="M:System.Random.Sample" /> метод, дистрибутив, предоставленный реализации в производном классе <see cref="M:System.Random.Sample" /> метод не используется в вызовах базового класса Реализация <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> перегрузку метода, если разница между <paramref name="minValue" /> и <paramref name="maxValue" /> параметров больше, чем <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-367">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method overload if the difference between the <paramref name="minValue" /> and <paramref name="maxValue" /> parameters is greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="6e5c7-368">Вместо этого возвращается равномерное распределение базовым <see cref="T:System.Random" /> используется класс.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-368">Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used.</span></span> <span data-ttu-id="6e5c7-369">Это повышает общую производительность <see cref="T:System.Random" /> класса.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-369">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span></span> <span data-ttu-id="6e5c7-370">Чтобы изменить это поведение, чтобы вызвать <see cref="M:System.Random.Sample" /> метод в производном классе, необходимо также переопределить <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> перегрузки метода.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-370">To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method overload.</span></span></para></block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="NextBytes">
      <MemberSignature Language="C#" Value="public virtual void NextBytes (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NextBytes(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NextBytes (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NextBytes(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member NextBytes : byte[] -&gt; unit&#xA;override this.NextBytes : byte[] -&gt; unit" Usage="random.NextBytes buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="6e5c7-371">Массив байтов, содержащий случайные числа.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-371">An array of bytes to contain random numbers.</span></span></param>
        <summary><span data-ttu-id="6e5c7-372">Заполняет элементы указанного массива байтов случайными числами.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-372">Fills the elements of a specified array of bytes with random numbers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e5c7-373">Каждый элемент массива байтов присваивается случайное число, больше или равно 0 и меньше или равно <xref:System.Byte.MaxValue>.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-373">Each element of the array of bytes is set to a random number greater than or equal to 0, and less than or equal to <xref:System.Byte.MaxValue>.</span></span>  
  
 <span data-ttu-id="6e5c7-374">Например, для создания криптографически защищенным случайное число, подходящий для создания случайного пароля, используйте метод как <xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-374">For example, to generate a cryptographically secured random number suitable for creating a random password, use a method such as <xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e5c7-375">Следующий пример демонстрирует, как использовать <xref:System.Random.NextBytes%2A> метод для заполнения массива байтов случайных байтовых значений.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-375">The following example demonstrates how to use the <xref:System.Random.NextBytes%2A> method to fill an array of bytes with random byte values.</span></span>  
  
 [!code-cpp[Classic Random.NextBytes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Random.NextBytes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/CS/source.cs#1)]
 [!code-vb[Classic Random.NextBytes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6e5c7-376"><paramref name="buffer" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-376"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="6e5c7-377">Начиная с .NET Framework версии 2.0, если вы наследуете от класса <see cref="T:System.Random" /> и переопределить <see cref="M:System.Random.Sample" /> метод, дистрибутив, предоставленный реализации в производном классе <see cref="M:System.Random.Sample" /> метод не используется в вызовах базового класса Реализация <see cref="M:System.Random.NextBytes(System.Byte[])" /> метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-377">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.</span></span> <span data-ttu-id="6e5c7-378">Вместо этого возвращается равномерное распределение базовым <see cref="T:System.Random" /> используется класс.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-378">Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used.</span></span> <span data-ttu-id="6e5c7-379">Это повышает общую производительность <see cref="T:System.Random" /> класса.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-379">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span></span> <span data-ttu-id="6e5c7-380">Чтобы изменить это поведение, чтобы вызвать <see cref="M:System.Random.Sample" /> метод в производном классе, необходимо также переопределить <see cref="M:System.Random.NextBytes(System.Byte[])" /> метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-380">To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.</span></span></para></block>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="NextBytes">
      <MemberSignature Language="C#" Value="public virtual void NextBytes (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NextBytes(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextBytes(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NextBytes (buffer As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NextBytes(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member NextBytes : Span&lt;byte&gt; -&gt; unit&#xA;override this.NextBytes : Span&lt;byte&gt; -&gt; unit" Usage="random.NextBytes buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextDouble">
      <MemberSignature Language="C#" Value="public virtual double NextDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NextDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NextDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double NextDouble();" />
      <MemberSignature Language="F#" Value="abstract member NextDouble : unit -&gt; double&#xA;override this.NextDouble : unit -&gt; double" Usage="random.NextDouble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e5c7-381">Возвращает случайное число с плавающей запятой, которое больше или равно 0,0 и меньше 1,0.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-381">Returns a random floating-point number that is greater than or equal to 0.0, and less than 1.0.</span></span></summary>
        <returns><span data-ttu-id="6e5c7-382">Число двойной точности с плавающей запятой, которое больше или равно 0,0, и меньше 1,0.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-382">A double-precision floating point number that is greater than or equal to 0.0, and less than 1.0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e5c7-383">Фактический верхняя граница создаваемого случайного числа, возвращаемого этим методом — 0.99999999999999978.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-383">The actual upper bound of the random number returned by this method is 0.99999999999999978.</span></span>  
  
 <span data-ttu-id="6e5c7-384">Для получения случайных значений с плавающей запятой в диапазоне, отличный от 0,0 до 1,0, см. в разделе «Получать значения с плавающей запятой в указанном диапазоне» <xref:System.Random> разделе, посвященном классу.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-384">To retrieve random floating-point values within a range other than 0.0 and 1.0, see the "Retrieve floating-point values in a specified range" section of the <xref:System.Random> class topic.</span></span>  
  
 <span data-ttu-id="6e5c7-385">Этот метод является общедоступной версией защищенный метод <xref:System.Random.Sample%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-385">This method is the public version of the protected method, <xref:System.Random.Sample%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e5c7-386">В следующем примере используется <xref:System.Random.NextDouble%2A> метод для создания последовательности случайных чисел двойной точности.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-386">The following example uses the <xref:System.Random.NextDouble%2A> method to generate sequences of random doubles.</span></span>  
  
 [!code-cpp[System.Random.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Ctor/CPP/ctor.cpp#1)]
 [!code-csharp[System.Random.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor.cs#1)]
 [!code-vb[System.Random.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor.vb#1)]  
  
 <span data-ttu-id="6e5c7-387">В следующем примере вызывается <xref:System.Random.NextDouble%2A> метод для генерации 100 случайных чисел и отображает их распределение частоты.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-387">The following example calls the <xref:System.Random.NextDouble%2A> method to generate 100 random numbers and displays their frequency distribution.</span></span>  
  
 [!code-csharp[System.Random.NextDouble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.random.nextdouble/cs/nextdouble1.cs#2)]
 [!code-vb[System.Random.NextDouble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.random.nextdouble/vb/nextdouble1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sample">
      <MemberSignature Language="C#" Value="protected virtual double Sample ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance float64 Sample() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Sample" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Sample () As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual double Sample();" />
      <MemberSignature Language="F#" Value="abstract member Sample : unit -&gt; double&#xA;override this.Sample : unit -&gt; double" Usage="random.Sample " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e5c7-388">Возвращает случайное число с плавающей запятой в диапазоне от 0,0 до 1,0.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-388">Returns a random floating-point number between 0.0 and 1.0.</span></span></summary>
        <returns><span data-ttu-id="6e5c7-389">Число двойной точности с плавающей запятой, которое больше или равно 0,0, и меньше 1,0.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-389">A double-precision floating point number that is greater than or equal to 0.0, and less than 1.0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e5c7-390">Для создания другого распределения случайных или различных случайных чисел принцип генератор, наследуйте класс от <xref:System.Random> класса и переопределить <xref:System.Random.Sample%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-390">To produce a different random distribution or a different random number generator principle, derive a class from the <xref:System.Random> class and override the <xref:System.Random.Sample%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6e5c7-391"><xref:System.Random.Sample%2A> Метод `protected`, что означает, что он доступен только в пределах <xref:System.Random> класса и его производных классов.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-391">The <xref:System.Random.Sample%2A> method is `protected`, which means that it is accessible only within the <xref:System.Random> class and its derived classes.</span></span> <span data-ttu-id="6e5c7-392">Чтобы получить случайное число между 0 и 1 из <xref:System.Random> экземпляра, вызовите <xref:System.Random.NextDouble%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-392">To generate a random number between 0 and 1 from a <xref:System.Random> instance, call the <xref:System.Random.NextDouble%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e5c7-393">Следующий пример является производным от класса <xref:System.Random> и переопределяет <xref:System.Random.Sample%2A> метод для создания распределения случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-393">The following example derives a class from <xref:System.Random> and overrides the <xref:System.Random.Sample%2A> method to generate a distribution of random numbers.</span></span> <span data-ttu-id="6e5c7-394">Этот дистрибутив отличается от равномерного распределения, созданные <xref:System.Random.Sample%2A> метод базового класса.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-394">This distribution is different than the uniform distribution generated by the <xref:System.Random.Sample%2A> method of the base class.</span></span>  
  
 [!code-cpp[System.Random.Sample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Sample/cpp/sampleex.cpp#1)]
 [!code-csharp[System.Random.Sample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Sample/CS/sample.cs#1)]
 [!code-vb[System.Random.Sample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Sample/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="6e5c7-395">Начиная с .NET Framework версии 2.0, если вы наследуете от класса <see cref="T:System.Random" /> и переопределить <see cref="M:System.Random.Sample" /> метод, дистрибутив, предоставленный реализации в производном классе <see cref="M:System.Random.Sample" /> метод не используется в вызовах базового класса Реализация следующих методов:</span><span class="sxs-lookup"><span data-stu-id="6e5c7-395">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the following methods:</span></span> 
<span data-ttu-id="6e5c7-396">– метод <see cref="M:System.Random.NextBytes(System.Byte[])" />.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-396">-   The <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.</span></span>  
  
<span data-ttu-id="6e5c7-397">– метод <see cref="M:System.Random.Next" />.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-397">-   The <see cref="M:System.Random.Next" /> method.</span></span>  
  
<span data-ttu-id="6e5c7-398">- <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> Метод, если (<paramref name="maxValue" /> - <paramref name="minValue" />) больше, чем <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-398">-   The <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method, if (<paramref name="maxValue" /> - <paramref name="minValue" />) is greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
<span data-ttu-id="6e5c7-399">Вместо этого равномерного распределения, предоставляемые базовый <see cref="T:System.Random" /> используется класс.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-399">Instead, the uniform distribution provided by the base <see cref="T:System.Random" /> class is used.</span></span> <span data-ttu-id="6e5c7-400">Это повышает общую производительность <see cref="T:System.Random" /> класса.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-400">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span></span> <span data-ttu-id="6e5c7-401">Чтобы изменить это поведение, чтобы вызвать реализацию <see cref="M:System.Random.Sample" /> метод в производном классе, необходимо также переопределить поведение этих трех элементов.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-401">To modify this behavior to call the implementation of the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the behavior of these three members.</span></span> <span data-ttu-id="6e5c7-402">Иллюстрация приведена в примере.</span><span class="sxs-lookup"><span data-stu-id="6e5c7-402">The example provides an illustration.</span></span></para></block>
        <altmember cref="M:System.Random.NextDouble" />
      </Docs>
    </Member>
  </Members>
</Type>