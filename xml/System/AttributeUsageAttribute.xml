<Type Name="AttributeUsageAttribute" FullName="System.AttributeUsageAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="26912982a56d71f0f38a05b7ede7327988b3b43a" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56374613" /></Metadata><TypeSignature Language="C#" Value="public sealed class AttributeUsageAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AttributeUsageAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.AttributeUsageAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttributeUsageAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeUsageAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AttributeUsageAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="beee1-101">Определяет использование другого класса атрибутов.</span><span class="sxs-lookup"><span data-stu-id="beee1-101">Specifies the usage of another attribute class.</span></span> <span data-ttu-id="beee1-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="beee1-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beee1-103">При определении собственного класса атрибута, управлять образом, в котором он используется, поместив <xref:System.AttributeUsageAttribute> в классе атрибута.</span><span class="sxs-lookup"><span data-stu-id="beee1-103">When you are defining your own attribute class, you can control the manner in which it is used by placing an <xref:System.AttributeUsageAttribute> on your attribute class.</span></span> <span data-ttu-id="beee1-104">Указанный класс атрибутов должен быть производным от <xref:System.Attribute>, прямо или косвенно.</span><span class="sxs-lookup"><span data-stu-id="beee1-104">The indicated attribute class must derive from <xref:System.Attribute>, either directly or indirectly.</span></span>  
  
 <span data-ttu-id="beee1-105">Классы атрибутов имеют позиционные и именованные параметры.</span><span class="sxs-lookup"><span data-stu-id="beee1-105">Attribute classes have positional and named parameters.</span></span> <span data-ttu-id="beee1-106">Каждый открытый конструктор для класса атрибута определяет допустимую последовательность позиционных параметров для этого класса.</span><span class="sxs-lookup"><span data-stu-id="beee1-106">Each public constructor for an attribute class defines a valid sequence of positional parameters for that class.</span></span> <span data-ttu-id="beee1-107">Именованные параметры определяются статическим, открытые и чтения и записи поля или свойства класса атрибута.</span><span class="sxs-lookup"><span data-stu-id="beee1-107">Named parameters are defined by the non-static, public, and read-write fields or properties of the attribute class.</span></span>  
  
 <span data-ttu-id="beee1-108">Три свойства <xref:System.AttributeUsageAttribute> заданы, определив следующие параметры:</span><span class="sxs-lookup"><span data-stu-id="beee1-108">The three properties of <xref:System.AttributeUsageAttribute> are set by defining the following parameters:</span></span>  
  
-   <xref:System.AttributeUsageAttribute.ValidOn%2A>  
  
 <span data-ttu-id="beee1-109">Этот позиционный параметр определяет элементы программы, которые можно разместить на указанный атрибут.</span><span class="sxs-lookup"><span data-stu-id="beee1-109">This positional parameter specifies the program elements that the indicated attribute can be placed on.</span></span> <span data-ttu-id="beee1-110">Набор всех возможных элементов, которые можно добавить атрибут в представлен в <xref:System.AttributeTargets> перечисления.</span><span class="sxs-lookup"><span data-stu-id="beee1-110">The set of all possible elements that you can place an attribute on is listed in the <xref:System.AttributeTargets> enumeration.</span></span> <span data-ttu-id="beee1-111">Можно объединить <xref:System.AttributeTargets> значения с помощью побитовой операции OR, чтобы получить нужное сочетание допустимых элементов программы.</span><span class="sxs-lookup"><span data-stu-id="beee1-111">You can combine several <xref:System.AttributeTargets> values using a bitwise OR operation to get the desired combination of valid program elements.</span></span>  
  
-   <xref:System.AttributeUsageAttribute.AllowMultiple%2A>  
  
 <span data-ttu-id="beee1-112">Этот именованный параметр определяет, может ли указанный атрибут указан более одного раза для заданного элемента программы.</span><span class="sxs-lookup"><span data-stu-id="beee1-112">This named parameter specifies whether the indicated attribute can be specified more than once for a given program element.</span></span>  
  
-   <xref:System.AttributeUsageAttribute.Inherited%2A>  
  
 <span data-ttu-id="beee1-113">Этот именованный параметр определяет, может ли указанный атрибут наследоваться производными классами и переопределенными членами.</span><span class="sxs-lookup"><span data-stu-id="beee1-113">This named parameter specifies whether the indicated attribute can be inherited by derived classes and overriding members.</span></span>  
  
 <span data-ttu-id="beee1-114">Дополнительные сведения об использовании атрибутов см. в разделе <xref:System.Attribute> и [атрибуты](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="beee1-114">For more information about using attributes, see <xref:System.Attribute> and [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.AttributeTargets" />
    <related type="Article" href="~/docs/standard/attributes/index.md"><span data-ttu-id="beee1-115">Расширение метаданных с помощью атрибутов</span><span class="sxs-lookup"><span data-stu-id="beee1-115">Extending Metadata Using Attributes</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeUsageAttribute (AttributeTargets validOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.AttributeTargets validOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validOn As AttributeTargets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttributeUsageAttribute(AttributeTargets validOn);" />
      <MemberSignature Language="F#" Value="new AttributeUsageAttribute : AttributeTargets -&gt; AttributeUsageAttribute" Usage="new System.AttributeUsageAttribute validOn" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validOn" Type="System.AttributeTargets" />
      </Parameters>
      <Docs>
        <param name="validOn"><span data-ttu-id="beee1-116">Набор значений, определенный при помощи побитовой операции ИЛИ, для определения того, какие элементы программы являются допустимыми.</span><span class="sxs-lookup"><span data-stu-id="beee1-116">The set of values combined using a bitwise OR operation to indicate which program elements are valid.</span></span></param>
        <summary><span data-ttu-id="beee1-117">Инициализирует новый экземпляр класса <see cref="T:System.AttributeUsageAttribute" /> указанным списком <see cref="T:System.AttributeTargets" />, значением свойства <see cref="P:System.AttributeUsageAttribute.AllowMultiple" /> и значением свойства <see cref="P:System.AttributeUsageAttribute.Inherited" />.</span><span class="sxs-lookup"><span data-stu-id="beee1-117">Initializes a new instance of the <see cref="T:System.AttributeUsageAttribute" /> class with the specified list of <see cref="T:System.AttributeTargets" />, the <see cref="P:System.AttributeUsageAttribute.AllowMultiple" /> value, and the <see cref="P:System.AttributeUsageAttribute.Inherited" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beee1-118">Можно объединить <xref:System.AttributeTargets> значения с помощью побитовой операции OR, чтобы получить нужное сочетание допустимых элементов программы.</span><span class="sxs-lookup"><span data-stu-id="beee1-118">You can combine several <xref:System.AttributeTargets> values using a bitwise OR operation to get the desired combination of valid program elements.</span></span>  
  
 <span data-ttu-id="beee1-119">Значения свойств по умолчанию, см. в разделе <xref:System.AttributeUsageAttribute.ValidOn%2A>, <xref:System.AttributeUsageAttribute.AllowMultiple%2A>, и <xref:System.AttributeUsageAttribute.Inherited%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="beee1-119">For default property values, see the <xref:System.AttributeUsageAttribute.ValidOn%2A>, <xref:System.AttributeUsageAttribute.AllowMultiple%2A>, and <xref:System.AttributeUsageAttribute.Inherited%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="beee1-120">Определение атрибута DispId иллюстрирует использование побитовой операции OR для объединения нескольких <xref:System.AttributeTargets> значения.</span><span class="sxs-lookup"><span data-stu-id="beee1-120">The definition of the DispId attribute illustrates the use of a bitwise OR operation to combine several <xref:System.AttributeTargets> values.</span></span>  
  
 [!code-cpp[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.AttributeTargets" />
      </Docs>
    </Member>
    <Member MemberName="AllowMultiple">
      <MemberSignature Language="C#" Value="public bool AllowMultiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultiple" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.AllowMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowMultiple { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowMultiple : bool with get, set" Usage="System.AttributeUsageAttribute.AllowMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="beee1-121">Возвращает или задает логическое значение, указывающее, возможно ли для одного элемента программы задать более одного экземпляра указанного атрибута.</span><span class="sxs-lookup"><span data-stu-id="beee1-121">Gets or sets a Boolean value indicating whether more than one instance of the indicated attribute can be specified for a single program element.</span></span></summary>
        <value><span data-ttu-id="beee1-122"><see langword="true" />, если задание более одного экземпляра является допустимым; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="beee1-122"><see langword="true" /> if more than one instance is allowed to be specified; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="beee1-123">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="beee1-123">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beee1-124">Атрибут, который может быть указан более одного раза для программного элемента, называется атрибутом многоразового использования.</span><span class="sxs-lookup"><span data-stu-id="beee1-124">An attribute that can be specified more than once for a program element is called a multi-use attribute.</span></span> <span data-ttu-id="beee1-125">Атрибут, который может быть указан только один раз называется атрибутом однократного использования.</span><span class="sxs-lookup"><span data-stu-id="beee1-125">An attribute that can be specified only once is called a single-use attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Inherited">
      <MemberSignature Language="C#" Value="public bool Inherited { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Inherited" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.Inherited" />
      <MemberSignature Language="VB.NET" Value="Public Property Inherited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Inherited { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Inherited : bool with get, set" Usage="System.AttributeUsageAttribute.Inherited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="beee1-126">Возвращает или задает значение <see cref="T:System.Boolean" />, определяющее, наследуется ли указанный атрибут производными классами и переопределяющими элементами.</span><span class="sxs-lookup"><span data-stu-id="beee1-126">Gets or sets a <see cref="T:System.Boolean" /> value that determines whether the indicated attribute is inherited by derived classes and overriding members.</span></span></summary>
        <value><span data-ttu-id="beee1-127">Возвращает значение <see langword="true" />, если атрибут может наследоваться производными классами и переопределяющими элементами. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="beee1-127"><see langword="true" /> if the attribute can be inherited by derived classes and overriding members; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="beee1-128">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="beee1-128">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beee1-129"><xref:System.AttributeUsageAttribute.Inherited%2A> Определяет свойство:</span><span class="sxs-lookup"><span data-stu-id="beee1-129">The <xref:System.AttributeUsageAttribute.Inherited%2A> property determines:</span></span>  
  
-   <span data-ttu-id="beee1-130">Ли классы, производные от базового класса помечен атрибутом, к которому <xref:System.AttributeUsageAttribute> применяется атрибут наследуют этот атрибут.</span><span class="sxs-lookup"><span data-stu-id="beee1-130">Whether classes derived from a base class tagged with the attribute to which the <xref:System.AttributeUsageAttribute> attribute is applied inherit that attribute.</span></span>  
  
-   <span data-ttu-id="beee1-131">Ли методы производных классах, переопределяющих метод базового класса с тегами с помощью атрибута, которому <xref:System.AttributeUsageAttribute> применяется атрибут наследуют этот атрибут.</span><span class="sxs-lookup"><span data-stu-id="beee1-131">Whether methods of derived classes that override a base class method tagged with the attribute to which the <xref:System.AttributeUsageAttribute> attribute is applied inherit that attribute.</span></span>  <span data-ttu-id="beee1-132">(Если класс наследует свойства члена базового класса, он также наследует любые атрибуты, применяемые к этому члену.)</span><span class="sxs-lookup"><span data-stu-id="beee1-132">(If a class inherits a base class member, it also inherits any attributes applied to that member.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="beee1-133">В следующем примере показано различие между атрибут, с которым <xref:System.AttributeUsageAttribute> атрибут с <xref:System.AttributeUsageAttribute.Inherited%2A> значение свойства `true` применяется и какой <xref:System.AttributeUsageAttribute> атрибут <xref:System.AttributeUsageAttribute.Inherited%2A> значение свойства `false` применяется.</span><span class="sxs-lookup"><span data-stu-id="beee1-133">The following example illustrates the difference between an attribute to which an <xref:System.AttributeUsageAttribute> attribute with an <xref:System.AttributeUsageAttribute.Inherited%2A> property value of `true` is applied and one to which  <xref:System.AttributeUsageAttribute> attribute with an <xref:System.AttributeUsageAttribute.Inherited%2A> property value of `false` is applied .</span></span> <span data-ttu-id="beee1-134">В примере определяется два атрибута `InheritedAttribute` и `NotInheritedAttribute`.</span><span class="sxs-lookup"><span data-stu-id="beee1-134">The example defines two attributes, `InheritedAttribute` and `NotInheritedAttribute`.</span></span> <span data-ttu-id="beee1-135">Оба атрибута можно применять к классам и методы.</span><span class="sxs-lookup"><span data-stu-id="beee1-135">Both attributes can apply to classes and methods.</span></span> <span data-ttu-id="beee1-136">Так как <xref:System.AttributeUsageAttribute.Inherited%2A> свойство <xref:System.AttributeUsageAttribute> атрибут, примененный к `InheritedAttribute` является `true`, наследуется производными классами и элементам производных классов, которые переопределяют метод базового класса.</span><span class="sxs-lookup"><span data-stu-id="beee1-136">Because the <xref:System.AttributeUsageAttribute.Inherited%2A> property of the <xref:System.AttributeUsageAttribute> attribute applied to `InheritedAttribute` is `true`, it is inherited by derived classes and the members of derived classes that override the base class method.</span></span>  <span data-ttu-id="beee1-137">С другой стороны так как <xref:System.AttributeUsageAttribute.Inherited%2A> свойство <xref:System.AttributeUsageAttribute> атрибут, примененный к `NotInheritedAttribute` является `false`, он не наследуется производными классами и элементам производных классов, которые переопределяют метод базового класса.</span><span class="sxs-lookup"><span data-stu-id="beee1-137">On the other hand, because the <xref:System.AttributeUsageAttribute.Inherited%2A> property of the <xref:System.AttributeUsageAttribute> attribute applied to `NotInheritedAttribute` is `false`, it is not inherited by derived classes and the members of derived classes that override the base class method.</span></span>  
  
 [!code-csharp[System.AttributeUsageAttribute.Inherited#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/cs/Inherited1.cs#1)]
 [!code-vb[System.AttributeUsageAttribute.Inherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/vb/Inherited1.vb#1)]  
  
 <span data-ttu-id="beee1-138">Затем в примере определяется двух базовых классов.</span><span class="sxs-lookup"><span data-stu-id="beee1-138">The example then defines two  base classes.</span></span> <span data-ttu-id="beee1-139">Во-первых, `BaseA`, единственный метод, `MethodA`.</span><span class="sxs-lookup"><span data-stu-id="beee1-139">The first, `BaseA`, has a single method, `MethodA`.</span></span>  <span data-ttu-id="beee1-140">Второй, `BaseB`, единственный метод, `MethodB`.</span><span class="sxs-lookup"><span data-stu-id="beee1-140">The second, `BaseB`, has a single method, `MethodB`.</span></span> <span data-ttu-id="beee1-141">`BaseA` и `MethodA` , помечаются тегом `InheritedAttribute` атрибут, и `BaseB` и `MethodB` , помечаются тегом `NotInheritedAttribute` атрибута.</span><span class="sxs-lookup"><span data-stu-id="beee1-141">`BaseA` and `MethodA` are tagged with the `InheritedAttribute` attribute, and `BaseB` and `MethodB` are tagged with the `NotInheritedAttribute` attribute.</span></span> <span data-ttu-id="beee1-142">`DerivedA` наследует от `BaseA` и переопределения его `MethodA` метод.</span><span class="sxs-lookup"><span data-stu-id="beee1-142">`DerivedA` inherits from `BaseA` and overrides its `MethodA` method.</span></span> <span data-ttu-id="beee1-143">`DerivedB` наследует от `BaseB` и переопределения его `MethodB` метод.</span><span class="sxs-lookup"><span data-stu-id="beee1-143">`DerivedB` inherits from `BaseB` and overrides its `MethodB` method.</span></span>  
  
 [!code-csharp[System.AttributeUsageAttribute.Inherited#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/cs/Inherited1.cs#2)]
 [!code-vb[System.AttributeUsageAttribute.Inherited#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/vb/Inherited1.vb#2)]  
  
 <span data-ttu-id="beee1-144">Как видно в результатах показано в примере `DerivedA` и `DerivedA.MethodA` наследовать `InheritedAttribute` атрибута, но `DerivedB` и `DerivedB.MethodB` не наследуют `NotInheritedAttribute` атрибута.</span><span class="sxs-lookup"><span data-stu-id="beee1-144">As the output from the example shows, `DerivedA` and `DerivedA.MethodA` inherit the `InheritedAttribute` attribute, but `DerivedB` and `DerivedB.MethodB` do not inherit the `NotInheritedAttribute` attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="ValidOn">
      <MemberSignature Language="C#" Value="public AttributeTargets ValidOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AttributeTargets ValidOn" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.ValidOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidOn As AttributeTargets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AttributeTargets ValidOn { AttributeTargets get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidOn : AttributeTargets" Usage="System.AttributeUsageAttribute.ValidOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AttributeTargets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="beee1-145">Возвращает или задает набор значений, определяющих, к каким элементам программы может применяться указанный атрибут.</span><span class="sxs-lookup"><span data-stu-id="beee1-145">Gets a set of values identifying which program elements that the indicated attribute can be applied to.</span></span></summary>
        <value><span data-ttu-id="beee1-146">Одно или несколько значений <see cref="T:System.AttributeTargets" />.</span><span class="sxs-lookup"><span data-stu-id="beee1-146">One or several <see cref="T:System.AttributeTargets" /> values.</span></span> <span data-ttu-id="beee1-147">Значение по умолчанию — <see langword="All" />.</span><span class="sxs-lookup"><span data-stu-id="beee1-147">The default is <see langword="All" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.AttributeTargets" />
      </Docs>
    </Member>
  </Members>
</Type>