<Type Name="Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;" FullName="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="78389b13ab2a3b6800c8a10b07729845e8510849" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57945212" /></Metadata><TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`8&lt;T1, T2, T3, T4, T5, T6, T7, TRest&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`8" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename TRest&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
    <TypeParameter Name="T5" />
    <TypeParameter Name="T6" />
    <TypeParameter Name="T7" />
    <TypeParameter Name="TRest" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="2c3bf-101">Тип первого компонента кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-101">The type of the tuple's first component.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="2c3bf-102">Тип второго компонента кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-102">The type of the tuple's second component.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="2c3bf-103">Тип третьего компонента кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-103">The type of the tuple's third component.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="2c3bf-104">Тип четвертого компонента кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-104">The type of the tuple's fourth component.</span></span></typeparam>
    <typeparam name="T5"><span data-ttu-id="2c3bf-105">Тип пятого компонента кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-105">The type of the tuple's fifth component.</span></span></typeparam>
    <typeparam name="T6"><span data-ttu-id="2c3bf-106">Тип шестого компонента кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-106">The type of the tuple's sixth component.</span></span></typeparam>
    <typeparam name="T7"><span data-ttu-id="2c3bf-107">Тип седьмого компонента кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-107">The type of the tuple's seventh component.</span></span></typeparam>
    <typeparam name="TRest"><span data-ttu-id="2c3bf-108">Любой универсальный объект <see langword="Tuple" />, который определяет типы остальных компонентов кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-108">Any generic <see langword="Tuple" /> object that defines the types of the tuple's remaining components.</span></span></typeparam>
    <summary><span data-ttu-id="2c3bf-109">Представляет кортеж из *n* компонентов, где *n* равно 8 или больше.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-109">Represents an *n*-tuple, where *n* is 8 or greater.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3bf-110">Кортеж — это структура данных, с определенным номером и последовательность значений.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-110">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="2c3bf-111"><xref:System.Tuple%608> Класса представляет *n*- кортеж с 8 компонентами.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-111">The <xref:System.Tuple%608> class represents an *n*-tuple that has eight or more components.</span></span>  
  
 <span data-ttu-id="2c3bf-112">Можно создать экземпляр <xref:System.Tuple%608> объект с точно восьми компонентов путем вызова статического <xref:System.Tuple.Create%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-112">You can instantiate a <xref:System.Tuple%608> object with exactly eight components by calling the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="2c3bf-113">В следующем примере создается кортеж восьми (octuple), содержащий простые числа меньше 20.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-113">The following example creates an 8-tuple (octuple) that contains prime numbers that are less than 20.</span></span> <span data-ttu-id="2c3bf-114">Обратите внимание на то, что он использует определение типа для определения типа каждого компонента.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-114">Note that it uses type inference to determine the type of each component.</span></span>  
  
 [!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]
 [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]  
  
 <span data-ttu-id="2c3bf-115">Можно также создать экземпляр объекта n кортежей с 8 компонентами, вызвав <xref:System.Tuple%608.%23ctor%2A> конструктор.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-115">You can also instantiate an n-tuple object with eight or more components by calling the <xref:System.Tuple%608.%23ctor%2A> constructor.</span></span> <span data-ttu-id="2c3bf-116">В следующем примере используется <xref:System.Tuple%608.%23ctor%2A> конструктор для создания 8-кортеж, который эквивалентен кортежа, созданные в предыдущем примере.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-116">The following example uses the <xref:System.Tuple%608.%23ctor%2A> constructor to create an 8-tuple that is equivalent to the tuple created in the previous example.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)]
 [!code-vb[System.Tuple\`8.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="2c3bf-117">Чтобы создать кортеж из n с 9 или более компонентов, необходимо вызвать <xref:System.Tuple%608.%23ctor%2A> конструктор.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-117">To create an n-tuple with nine or more components, you must call the  <xref:System.Tuple%608.%23ctor%2A> constructor.</span></span> <span data-ttu-id="2c3bf-118">Статические методы фабрики из <xref:System.Tuple> класс не поддерживают создание `Tuple` объекты с более чем восьми компонентов.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-118">The static factory methods of the <xref:System.Tuple> class do not support the creation of `Tuple` objects with more than eight components.</span></span>  
  
 <span data-ttu-id="2c3bf-119">Для создания экземпляра n кортеж, который имеет восемь или более компонентов с <xref:System.Tuple%608.%23ctor%2A> конструктор, указываемое в универсальный `Tuple` объекта в виде `rest` параметра для определения восьмого по *n*th компонентов кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-119">To instantiate an n-tuple that has eight or more components with the <xref:System.Tuple%608.%23ctor%2A> constructor, you supply a generic `Tuple` object as the `rest` parameter to define the eighth through *n*th components of the tuple.</span></span> <span data-ttu-id="2c3bf-120">Путем вложения универсального `Tuple` объектов таким образом, можно создать кортеж, который не имеет практические ограничения на число ее компонентов.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-120">By nesting generic `Tuple` objects in this way, you can create a tuple that has no practical limitation on the number of its components.</span></span>  
  
 <span data-ttu-id="2c3bf-121">В следующем примере создается 17-кортеж, содержащий данные о населении для города из Детройт, Мичиган, национальной переписи из 1860 строк до 2000.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-121">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, for each national census from 1860 to 2000.</span></span> <span data-ttu-id="2c3bf-122">Первый компонент кортежа — название города.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-122">The first component of the tuple is the city name.</span></span> <span data-ttu-id="2c3bf-123">Второй компонент — Дата начала ряда данных, а третий компонент — это совокупности на дату начала.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-123">The second component is the start date of the data series, and the third component is the population at the start date.</span></span> <span data-ttu-id="2c3bf-124">Каждый последующий компонент содержат население интервалы десять лет.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-124">Each subsequent component provides the population at decade intervals.</span></span> <span data-ttu-id="2c3bf-125">17 кортежа создается путем вложения <xref:System.Tuple%603> объекта внутри <xref:System.Tuple%608> объекта.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-125">The 17-tuple is created by nesting a <xref:System.Tuple%603> object inside a <xref:System.Tuple%608> object.</span></span> <span data-ttu-id="2c3bf-126">(Это, <xref:System.Tuple%603> объект передается в качестве значения `rest` параметр в <xref:System.Tuple%608> конструктора класса.) Это <xref:System.Tuple%608> объекта в свою очередь, вложен во внешнем <xref:System.Tuple%608> объекта.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-126">(That is, the <xref:System.Tuple%603> object is supplied as the value of the `rest` parameter in the <xref:System.Tuple%608> class constructor.) This <xref:System.Tuple%608> object is, in turn, nested in an outer <xref:System.Tuple%608> object.</span></span> <span data-ttu-id="2c3bf-127">(Это, <xref:System.Tuple%608> объект передается в качестве значения `rest` параметра во внешнем <xref:System.Tuple%608> конструктор класса объекта.)</span><span class="sxs-lookup"><span data-stu-id="2c3bf-127">(That is, the <xref:System.Tuple%608> object is supplied as the value of the `rest` parameter in the outer <xref:System.Tuple%608> object's class constructor.)</span></span>  
  
 [!code-csharp[System.Tuple.Create#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/example.cs#19)]
 [!code-vb[System.Tuple.Create#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/example.vb#19)]  
  
 <span data-ttu-id="2c3bf-128">Значение первых семи компонентов кортежа можно получить с помощью доступной только для чтения <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, и <xref:System.Tuple%607.Item7%2A> свойства экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-128">You can retrieve the value of the tuple's first seven components by using the read-only <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> instance properties.</span></span> <span data-ttu-id="2c3bf-129">Все дополнительные компоненты являются вложенными и могут быть получены из <xref:System.Tuple%608.Rest%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-129">Any additional components are nested and can be retrieved from the <xref:System.Tuple%608.Rest%2A> property.</span></span> <span data-ttu-id="2c3bf-130">В предыдущем примере <xref:System.Tuple%608.Item1%2A> через <xref:System.Tuple%608.Item7%2A> свойства получения первого по седьмой кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-130">In the previous example, the <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties retrieve the first through seventh components of the tuple.</span></span> <span data-ttu-id="2c3bf-131">14-й компоненты с восьмого по содержатся в кортеже, находящегося на втором уровне, а также представлены `Rest.Item1` через `Rest.Item7` свойства.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-131">The eighth through fourteenth components are contained in the tuple that is nested at the second level, and are represented by the `Rest.Item1` through `Rest.Item7` properties.</span></span> <span data-ttu-id="2c3bf-132">Пятнадцатого по семнадцатого компоненты содержатся в кортеже, находящегося на третьем уровне, а также представлены `Rest.Rest.Item1` на то, что `Rest.Rest.Item3` свойства.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-132">The fifteenth through seventeenth components are contained in the tuple that is nested at the third level, and are represented by the `Rest.Rest.Item1` though `Rest.Rest.Item3` properties.</span></span>  
  
 <span data-ttu-id="2c3bf-133">Кортежи обычно используются четырьмя способами:</span><span class="sxs-lookup"><span data-stu-id="2c3bf-133">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="2c3bf-134">Для представления одного набора данных.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-134">To represent a single set of data.</span></span> <span data-ttu-id="2c3bf-135">Например кортеж может представлять запись в базе данных, и его компоненты могут представлять отдельные поля записи.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-135">For example, a tuple can represent a database record, and its components can represent individual fields of the record.</span></span>  
  
-   <span data-ttu-id="2c3bf-136">Для предоставления удобный доступ к и манипуляции, набор данных.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-136">To provide easy access to, and manipulation of, a data set.</span></span>  
  
-   <span data-ttu-id="2c3bf-137">Для возврата нескольких значений из метода без использования `out` параметры (в C#) или `ByRef` (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="2c3bf-137">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="2c3bf-138">Например, предыдущий пример возвращает рассчитанные статистические данные, а также название города, в <xref:System.Tuple%607> объекта.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-138">For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%607> object.</span></span>  
  
-   <span data-ttu-id="2c3bf-139">Чтобы передать несколько значений к методу в качестве одного параметра.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-139">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="2c3bf-140">Например <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> метод имеет один параметр, который позволяет задавать одно значение в метод, который выполняется потоком во время запуска.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-140">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="2c3bf-141">Если вы указали <xref:System.Tuple%607> объекта в виде аргумента метода, можно просто указать процедуру запуска потока с семью элементами данных.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-141">If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the thread's startup routine with seven items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3, !T4 item4, !T5 item5, !T6 item6, !T7 item7, !TRest rest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6, item7 As T7, rest As TRest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);" />
      <MemberSignature Language="F#" Value="new Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt; : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'Rest -&gt; Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;" Usage="new System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt; (item1, item2, item3, item4, item5, item6, item7, rest)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
        <Parameter Name="item7" Type="T7" />
        <Parameter Name="rest" Type="TRest" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="2c3bf-142">Значение первого компонента кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-142">The value of the tuple's first component.</span></span></param>
        <param name="item2"><span data-ttu-id="2c3bf-143">Значение второго компонента кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-143">The value of the tuple's second component.</span></span></param>
        <param name="item3"><span data-ttu-id="2c3bf-144">Значение третьего компонента кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-144">The value of the tuple's third component.</span></span></param>
        <param name="item4"><span data-ttu-id="2c3bf-145">Значение четвертого компонента кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-145">The value of the tuple's fourth component</span></span></param>
        <param name="item5"><span data-ttu-id="2c3bf-146">Значение пятого компонента кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-146">The value of the tuple's fifth component.</span></span></param>
        <param name="item6"><span data-ttu-id="2c3bf-147">Значение шестого компонента кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-147">The value of the tuple's sixth component.</span></span></param>
        <param name="item7"><span data-ttu-id="2c3bf-148">Значение седьмого компонента кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-148">The value of the tuple's seventh component.</span></span></param>
        <param name="rest"><span data-ttu-id="2c3bf-149">Любой универсальный объект <see langword="Tuple" />, который содержит значения остальных компонентов кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-149">Any generic <see langword="Tuple" /> object that contains the values of the tuple's remaining components.</span></span></param>
        <summary><span data-ttu-id="2c3bf-150">Инициализирует новый экземпляр класса <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-150">Initializes a new instance of the <see cref="T:System.Tuple`8" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3bf-151">Можно также использовать статический <xref:System.Tuple.Create%2A?displayProperty=nameWithType> метод для создания экземпляра объекта 8 кортежей (octuple) без необходимости явно указывать типы его компонентов.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-151">You can also use the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method to instantiate an 8-tuple (octuple) object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="2c3bf-152">В следующем примере используется <xref:System.Tuple.Create%2A?displayProperty=nameWithType> метод для создания экземпляра объекта 8 кортеж, содержащий простые числа меньше 20.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-152">The following example uses the <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method to instantiate an 8-tuple object that contains prime numbers that are less than 20.</span></span>  
  
 [!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]
 [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]  
  
 <span data-ttu-id="2c3bf-153">Это эквивалентно следующий вызов в <xref:System.Tuple%607.%23ctor%2A> конструктора класса.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-153">This is equivalent to the following call to the <xref:System.Tuple%607.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)]
 [!code-vb[System.Tuple\`8.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)]  
  
 <span data-ttu-id="2c3bf-154">Тем не менее статический <xref:System.Tuple.Create%2A?displayProperty=nameWithType> метод не может использоваться для создания объекта кортежа с более чем восьми компонентов.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-154">However, the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method cannot be used to create a tuple object with more than eight components.</span></span>  
  
 <span data-ttu-id="2c3bf-155">При использовании <xref:System.Tuple%608.%23ctor%2A> конструктор для создания n кортеж с 8 компонентами, использовании `rest` параметр для создания вложенных n кортежа, имеющий от одного до семи компонентов.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-155">When using the <xref:System.Tuple%608.%23ctor%2A> constructor to create an n-tuple with eight or more components, you use the `rest` parameter to create a nested n-tuple that has from one to seven components.</span></span> <span data-ttu-id="2c3bf-156">Используя последовательные уровни вложения, можно создать кортеж из n с практически неограниченное количество компонентов.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-156">By using successive levels of nesting, you can create an n-tuple that has a virtually unlimited number of components.</span></span> <span data-ttu-id="2c3bf-157">Например, чтобы создать кортеж из 25, можно создать экземпляр <xref:System.Tuple%608> объекта с тремя уровнями вложенности, как показано ниже:</span><span class="sxs-lookup"><span data-stu-id="2c3bf-157">For example, to create a 25-tuple, you instantiate a <xref:System.Tuple%608> object with three levels of nesting, as follows:</span></span>  
  
-   <span data-ttu-id="2c3bf-158">Внешний <xref:System.Tuple%608> объект содержит числа с первого по седьмой.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-158">The outermost <xref:System.Tuple%608> object contains the first through seventh components.</span></span> <span data-ttu-id="2c3bf-159">Его <xref:System.Tuple%608.Rest%2A> свойство предоставляет доступ к <xref:System.Tuple%608> объекта на первом уровне вложенности.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-159">Its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the first level of nesting.</span></span>  
  
-   <span data-ttu-id="2c3bf-160">Самых внешних вложенных <xref:System.Tuple%608> объект содержит 14-й компоненты с восьмого по и его <xref:System.Tuple%608.Rest%2A> свойство предоставляет доступ к <xref:System.Tuple%608> объекта на втором уровне вложенности.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-160">The outermost nested <xref:System.Tuple%608> object contains the eighth through fourteenth components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the second level of nesting.</span></span>  
  
-   <span data-ttu-id="2c3bf-161"><xref:System.Tuple%608> Объект на втором уровне вложенности содержит пятнадцатого по двадцать первый компонентов и его <xref:System.Tuple%608.Rest%2A> свойство предоставляет доступ к <xref:System.Tuple%604> объекта на третьем уровне вложенности.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-161">The <xref:System.Tuple%608> object at the second level of nesting contains the fifteenth through twenty-first  components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%604> object at the third level of nesting.</span></span>  
  
-   <span data-ttu-id="2c3bf-162">Является самой внутренней кортеж <xref:System.Tuple%604> объект, который содержит компоненты двадцать вторым до 25.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-162">The innermost tuple is a <xref:System.Tuple%604> object that contains the twenty-second through twenty-fifth components.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c3bf-163">В следующем примере создается 17-кортеж, содержащий данные о населении для города из Детройт, Мичиган, переписи из 1860 строк до 2000.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-163">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, for each census from 1860 to 2000.</span></span> <span data-ttu-id="2c3bf-164">Первый компонент кортежа — название города.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-164">The first component of the tuple is the city name.</span></span> <span data-ttu-id="2c3bf-165">Второй компонент — Дата начала в ряду данных, а третий компонент — это совокупности на дату начала.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-165">The second component is the start date of the series of data, and the third component is the population at the start date.</span></span> <span data-ttu-id="2c3bf-166">Каждый последующий компонент содержат население интервалы десять лет.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-166">Each subsequent component provides the population at decade intervals.</span></span> <span data-ttu-id="2c3bf-167">В примере используется два уровня вложения для создания кортежа с 17 элементами: Он определяет кортеж из семи которого с третьего по седьмой содержат данные о населении 1860 через 1900, вложенные 7-кортеж, содержащий данные о населении для 1910 по 1970 года, и также вложенный 3-кортеж, содержащий данные о населении для 1980 до 2000.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-167">The example uses two layers of nesting to create the 17-tuple: It defines a 7-tuple whose third through seventh components contain population data for 1860 through 1900, a nested 7-tuple that contains population data for 1910 through 1970, and an inner nested 3-tuple that contains population data for 1980 through 2000.</span></span>  
  
 [!code-csharp[System.Tuple.Create#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/example.cs#19)]
 [!code-vb[System.Tuple.Create#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/example.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2c3bf-168"><paramref name="rest" /> не является универсальным объектом <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-168"><paramref name="rest" /> is not a generic <see langword="Tuple" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2c3bf-169">Объект, сравниваемый с данным экземпляром.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-169">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="2c3bf-170">Возвращает значение, показывающее, равен ли текущий объект <see cref="T:System.Tuple`8" /> указанному объекту.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-170">Returns a value that indicates whether the current <see cref="T:System.Tuple`8" /> object is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="2c3bf-171">Значение <see langword="true" />, если текущий экземпляр равен указанному объекту; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-171"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3bf-172">`obj` Параметр рассматривается как равен текущему экземпляру, если он удовлетворяет все перечисленные ниже условия:</span><span class="sxs-lookup"><span data-stu-id="2c3bf-172">The `obj` parameter is considered to be equal to the current instance if it meets all the following conditions:</span></span>  
  
-   <span data-ttu-id="2c3bf-173">Это <xref:System.Tuple%608> объекта.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-173">It is a <xref:System.Tuple%608> object.</span></span>  
  
-   <span data-ttu-id="2c3bf-174">Он имеет же общее число компонентов, имеющих те же типы, что и текущий экземпляр.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-174">It has the same total number of components that are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="2c3bf-175">Компонентов (включая его вложенные компоненты) считаются равными для текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-175">Its components (including its nested components) are equal to those of the current instance.</span></span> <span data-ttu-id="2c3bf-176">Равенство определяется путем сравнения по умолчанию для каждого компонента.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-176">Equality is determined by the default equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c3bf-177">В следующем примере определяется пять <xref:System.Tuple%608> объектов, содержащих простые числа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-177">The following example defines five <xref:System.Tuple%608> objects that contain prime numbers.</span></span> <span data-ttu-id="2c3bf-178">Затем он сравнивает первый объект с каждым из остальных объектов.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-178">It then compares the first object with each of the remaining objects.</span></span> <span data-ttu-id="2c3bf-179">Как показано в выходных данных, только первый и последний <xref:System.Tuple%608> объекты равны, поскольку они имеют одинаковое число компонентов с одинаковыми значениями.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-179">As the output shows, only the first and the last <xref:System.Tuple%608> objects are equal, because they have an identical number of components with identical values.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`8.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2c3bf-180">Вычисляет хэш-код для текущего объекта <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-180">Calculates the hash code for the current <see cref="T:System.Tuple`8" /> object.</span></span></summary>
        <returns><span data-ttu-id="2c3bf-181">Хэш-код в виде 32-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-181">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item1 : 'T1" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c3bf-182">Получает значение первого компонента текущего объекта <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-182">Gets the value of the current <see cref="T:System.Tuple`8" /> object's first component.</span></span></summary>
        <value><span data-ttu-id="2c3bf-183">Значение первого компонента текущего объекта <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-183">The value of the current <see cref="T:System.Tuple`8" /> object's first component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3bf-184">Можно динамически определить тип <xref:System.Tuple%608.Item1%2A> компонент в одном из двух способов:</span><span class="sxs-lookup"><span data-stu-id="2c3bf-184">You can dynamically determine the type of the <xref:System.Tuple%608.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2c3bf-185">Путем вызова `GetType` метод на значение, которое возвращается методом <xref:System.Tuple%608.Item1%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-185">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="2c3bf-186">Получая <xref:System.Type> , представляющий <xref:System.Tuple%608> объекта и получения первый элемент из массива, возвращаемого его <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-186">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c3bf-187">В следующем примере создается объект 17 кортежа, который содержит данные о населении для города из Детройт, Мичиган, из 1860 строк до 2000.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-187">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="2c3bf-188">Первый компонент кортежа 17 — название города.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-188">The first component of the 17-tuple is the city name.</span></span> <span data-ttu-id="2c3bf-189">В примере используется <xref:System.Tuple%608.Item1%2A> свойство для отображения названия города в заголовке таблицы перед отображением данных о населении.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-189">The example uses the <xref:System.Tuple%608.Item1%2A> property to display the city name in the table header before displaying the population data.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item2 : 'T2" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c3bf-190">Получает значение второго компонента текущего объекта <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-190">Gets the value of the current <see cref="T:System.Tuple`8" /> object's second component.</span></span></summary>
        <value><span data-ttu-id="2c3bf-191">Значение второго компонента текущего объекта <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-191">The value of the current <see cref="T:System.Tuple`8" /> object's second component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3bf-192">Можно динамически определить тип <xref:System.Tuple%608.Item2%2A> компонент в одном из двух способов:</span><span class="sxs-lookup"><span data-stu-id="2c3bf-192">You can dynamically determine the type of the <xref:System.Tuple%608.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2c3bf-193">Путем вызова `GetType` метод на значение, которое возвращается методом <xref:System.Tuple%608.Item2%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-193">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="2c3bf-194">Получая <xref:System.Type> , представляющий <xref:System.Tuple%608> объекта и получение второй элемент из массива, возвращаемого его <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-194">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c3bf-195">В следующем примере создается объект 17 кортежа, который содержит данные о населении для города из Детройт, Мичиган, из 1860 строк до 2000.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-195">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="2c3bf-196">Второй компонент кортежа 17 — первый год выручка от ряда данных.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-196">The second component of the 17-tuple is the first year of the data series.</span></span> <span data-ttu-id="2c3bf-197">В примере присваивается значение <xref:System.Tuple%608.Item2%2A> свойство переменной, а затем использует эту переменную для представления года, данные которого отображается.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-197">The example assigns the value of the <xref:System.Tuple%608.Item2%2A> property to a variable, and then uses that variable to represent the year whose data is displayed.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item3 : 'T3" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c3bf-198">Получает значение третьего компонента текущего объекта <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-198">Gets the value of the current <see cref="T:System.Tuple`8" /> object's third component.</span></span></summary>
        <value><span data-ttu-id="2c3bf-199">Значение третьего компонента текущего объекта <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-199">The value of the current <see cref="T:System.Tuple`8" /> object's third component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3bf-200">Можно динамически определить тип <xref:System.Tuple%608.Item3%2A> компонент в одном из двух способов:</span><span class="sxs-lookup"><span data-stu-id="2c3bf-200">You can dynamically determine the type of the <xref:System.Tuple%608.Item3%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2c3bf-201">Путем вызова `GetType` метод на значение, которое возвращается методом <xref:System.Tuple%608.Item3%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-201">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item3%2A> property.</span></span>  
  
-   <span data-ttu-id="2c3bf-202">Получая <xref:System.Type> , представляющий <xref:System.Tuple%608> объекта и получения третий элемент из массива, возвращаемого его <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-202">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c3bf-203">В следующем примере создается объект 17 кортежа, который содержит данные о населении для города из Детройт, Мичиган, из 1860 строк до 2000.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-203">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="2c3bf-204">Третьего компонента кортежа с 17 элементами является население в 1860 строк.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-204">The third component of the 17-tuple is the population in 1860.</span></span> <span data-ttu-id="2c3bf-205">В примере используется <xref:System.Tuple%608.Item3%2A> свойство для отображения значения заполнения, так и для которого требуется вычислить годовой скорость заполнения изменения между 1860 и 1870.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-205">The example uses the <xref:System.Tuple%608.Item3%2A> property to display the population value and to calculate the annual rate of population change between 1860 and 1870.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item4">
      <MemberSignature Language="C#" Value="public T4 Item4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T4 Item4" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item4" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item4 As T4" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T4 Item4 { T4 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item4 : 'T4" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c3bf-206">Получает значение четвертого компонента текущего объекта <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-206">Gets the value of the current <see cref="T:System.Tuple`8" /> object's fourth component.</span></span></summary>
        <value><span data-ttu-id="2c3bf-207">Значение четвертого компонента текущего объекта <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-207">The value of the current <see cref="T:System.Tuple`8" /> object's fourth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3bf-208">Можно динамически определить тип <xref:System.Tuple%608.Item4%2A> компонент в одном из двух способов:</span><span class="sxs-lookup"><span data-stu-id="2c3bf-208">You can dynamically determine the type of the <xref:System.Tuple%608.Item4%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2c3bf-209">Путем вызова `GetType` метод на значение, которое возвращается методом <xref:System.Tuple%608.Item4%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-209">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item4%2A> property.</span></span>  
  
-   <span data-ttu-id="2c3bf-210">Получая <xref:System.Type> , представляющий <xref:System.Tuple%608> объекта и получения четвертый элемент из массива, возвращаемого его <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-210">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fourth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c3bf-211">В следующем примере создается объект 17 кортежа, который содержит данные о населении для города из Детройт, Мичиган, из 1860 строк до 2000.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-211">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="2c3bf-212">Четвертого компонента кортежа с 17 элементами является население в 1870.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-212">The fourth component of the 17-tuple is the population in 1870.</span></span> <span data-ttu-id="2c3bf-213">В примере используется <xref:System.Tuple%608.Item4%2A> свойство для отображения значения заполнения, так и для которого требуется вычислить годовой скорость заполнения изменения между 1870 и 1880.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-213">The example uses the <xref:System.Tuple%608.Item4%2A> property to display the population value and to calculate the annual rate of population change between 1870 and 1880.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item5">
      <MemberSignature Language="C#" Value="public T5 Item5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T5 Item5" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item5 As T5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T5 Item5 { T5 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item5 : 'T5" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T5</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c3bf-214">Получает значение пятого компонента текущего объекта <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-214">Gets the value of the current <see cref="T:System.Tuple`8" /> object's fifth component.</span></span></summary>
        <value><span data-ttu-id="2c3bf-215">Значение пятого компонента текущего объекта <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-215">The value of the current <see cref="T:System.Tuple`8" /> object's fifth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3bf-216">Можно динамически определить тип <xref:System.Tuple%608.Item5%2A> компонент в одном из двух способов:</span><span class="sxs-lookup"><span data-stu-id="2c3bf-216">You can dynamically determine the type of the <xref:System.Tuple%608.Item5%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2c3bf-217">Путем вызова `GetType` метод на значение, которое возвращается методом <xref:System.Tuple%608.Item5%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-217">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item5%2A> property.</span></span>  
  
-   <span data-ttu-id="2c3bf-218">Получая <xref:System.Type> , представляющий <xref:System.Tuple%608> объекта и получения пятый элемент из массива, возвращаемого его <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-218">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fifth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c3bf-219">В следующем примере создается объект 17 кортежа, который содержит данные о населении для города из Детройт, Мичиган, из 1860 строк до 2000.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-219">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="2c3bf-220">Пятого компонента кортежа с 17 элементами является население в 1880.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-220">The fifth component of the 17-tuple is the population in 1880.</span></span> <span data-ttu-id="2c3bf-221">В примере используется <xref:System.Tuple%608.Item5%2A> свойство для отображения значения заполнения, так и для которого требуется вычислить годовой скорость заполнения изменения между 1880 и 1890 г.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-221">The example uses the <xref:System.Tuple%608.Item5%2A> property to display the population value and to calculate the annual rate of population change between 1880 and 1890.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item6">
      <MemberSignature Language="C#" Value="public T6 Item6 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T6 Item6" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item6" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item6 As T6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T6 Item6 { T6 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item6 : 'T6" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item6" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T6</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c3bf-222">Получает значение шестого компонента текущего объекта <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-222">Gets the value of the current <see cref="T:System.Tuple`8" /> object's sixth component.</span></span></summary>
        <value><span data-ttu-id="2c3bf-223">Значение шестого компонента текущего объекта <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-223">The value of the current <see cref="T:System.Tuple`8" /> object's sixth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3bf-224">Можно динамически определить тип <xref:System.Tuple%608.Item6%2A> компонент в одном из двух способов:</span><span class="sxs-lookup"><span data-stu-id="2c3bf-224">You can dynamically determine the type of the <xref:System.Tuple%608.Item6%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2c3bf-225">Путем вызова `GetType` метод на значение, которое возвращается методом <xref:System.Tuple%608.Item6%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-225">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item6%2A> property.</span></span>  
  
-   <span data-ttu-id="2c3bf-226">Получая <xref:System.Type> , представляющий <xref:System.Tuple%608> объекта и получения шестого элемента массива, возвращаемого его <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-226">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the sixth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c3bf-227">В следующем примере создается объект 17 кортежа, который содержит данные о населении для города из Детройт, Мичиган, из 1860 строк до 2000.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-227">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="2c3bf-228">Шестого компонента кортежа с 17 элементами является население в 1890 г.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-228">The sixth component of the 17-tuple is the population in 1890.</span></span> <span data-ttu-id="2c3bf-229">В примере используется <xref:System.Tuple%608.Item6%2A> свойство для отображения значения заполнения, так и для которого требуется вычислить годовой скорость заполнения изменения между 1890 г и 1900.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-229">The example uses the <xref:System.Tuple%608.Item6%2A> property to display the population value and to calculate the annual rate of population change between 1890 and 1900.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item7">
      <MemberSignature Language="C#" Value="public T7 Item7 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T7 Item7" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item7" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item7 As T7" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T7 Item7 { T7 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item7 : 'T7" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item7" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T7</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c3bf-230">Получает значение седьмого компонента текущего объекта <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-230">Gets the value of the current <see cref="T:System.Tuple`8" /> object's seventh component.</span></span></summary>
        <value><span data-ttu-id="2c3bf-231">Значение седьмого компонента текущего объекта <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-231">The value of the current <see cref="T:System.Tuple`8" /> object's seventh component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3bf-232">Можно динамически определить тип <xref:System.Tuple%608.Item7%2A> компонент в одном из двух способов:</span><span class="sxs-lookup"><span data-stu-id="2c3bf-232">You can dynamically determine the type of the <xref:System.Tuple%608.Item7%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2c3bf-233">Путем вызова `GetType` метод на значение, которое возвращается методом <xref:System.Tuple%608.Item7%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-233">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item7%2A> property.</span></span>  
  
-   <span data-ttu-id="2c3bf-234">Получая <xref:System.Type> , представляющий <xref:System.Tuple%608> объекта и получения седьмой элемент из массива, возвращаемого его <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-234">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the seventh element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c3bf-235">В следующем примере создается объект 17 кортежа, который содержит данные о населении для города из Детройт, Мичиган, из 1860 строк до 2000.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-235">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="2c3bf-236">Седьмого компонента кортежа с 17 элементами является население в 1900.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-236">The seventh component of the 17-tuple is the population in 1900.</span></span> <span data-ttu-id="2c3bf-237">В примере используется <xref:System.Tuple%608.Item7%2A> свойство для отображения значения заполнения, так и для которого требуется вычислить годовой скорость заполнения изменения от 1900 до 1910.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-237">The example uses the <xref:System.Tuple%608.Item7%2A> property to display the population value and to calculate the annual rate of population change between 1900 and 1910.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rest">
      <MemberSignature Language="C#" Value="public TRest Rest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TRest Rest" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Rest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rest As TRest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TRest Rest { TRest get(); };" />
      <MemberSignature Language="F#" Value="member this.Rest : 'Rest" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Rest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TRest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c3bf-238">Получает остальные компоненты текущего объекта <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-238">Gets the current <see cref="T:System.Tuple`8" /> object's remaining components.</span></span></summary>
        <value><span data-ttu-id="2c3bf-239">Значение остальных компонентов текущего объекта <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-239">The value of the current <see cref="T:System.Tuple`8" /> object's remaining components.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3bf-240"><xref:System.Tuple%608.Rest%2A> Свойство возвращает вложенный `Tuple` объект, обеспечивающий доступ к восьмой хотя *n*th компонентов кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-240">The <xref:System.Tuple%608.Rest%2A> property returns a nested `Tuple` object that allows access to the eighth though *n*th components of the tuple.</span></span> <span data-ttu-id="2c3bf-241">В зависимости от общего количества компонентов кортежа, значения восьмого из четырнадцати компонентов можно получить из вложенного `Tuple` объекта <xref:System.Tuple%608.Item1%2A> через <xref:System.Tuple%608.Item7%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-241">Depending on the total number of components in the tuple, the values of the eighth through fourteenth components can be retrieved from the nested `Tuple` object's <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties.</span></span> <span data-ttu-id="2c3bf-242">Затем можно использовать <xref:System.Tuple%608.Rest%2A> вложенное свойство <xref:System.Tuple%608> извлекаемого объекта `Tuple` объекта на следующем уровне вложенности.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-242">You can then use the <xref:System.Tuple%608.Rest%2A> property of a nested <xref:System.Tuple%608> object to retrieve the `Tuple` object at the next level of nesting.</span></span>  
  
 <span data-ttu-id="2c3bf-243">Можно динамически определять количество компонентов в вложенный `Tuple` объект, возвращаемый <xref:System.Tuple%608.Rest%2A> свойство путем извлечения цифр из имени типа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-243">You can dynamically determine the number of components in a nested `Tuple` object that is returned by the <xref:System.Tuple%608.Rest%2A> property by extracting the digit from its type name.</span></span> <span data-ttu-id="2c3bf-244">Ниже приведен пример.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-244">The following example provides an illustration.</span></span>  
  
 [!code-vb[System.Tuple\`8.Item1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/rest.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="2c3bf-245">В следующем примере создается объект 17 кортежа, который содержит данные о населении для города из Детройт, Мичиган, из 1860 строк до 2000.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-245">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="2c3bf-246">Седьмого компонента кортежа с 17 элементами является население в 1900.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-246">The seventh component of the 17-tuple is the population in 1900.</span></span> <span data-ttu-id="2c3bf-247">В примере используется <xref:System.Tuple%608.Rest%2A> свойство для извлечения значений восьмого из четырнадцати компонентов и он использует <xref:System.Tuple%608.Rest%2A> свойство вложенного <xref:System.Tuple%608> объекта для извлечения значения остальных компонентов.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-247">The example uses the <xref:System.Tuple%608.Rest%2A> property to retrieve the values of the eighth through fourteenth components, and it uses the <xref:System.Tuple%608.Rest%2A> property of the nested <xref:System.Tuple%608> object to retrieve the values of the remaining components.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="2c3bf-248">Объект для сравнения с текущим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-248">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="2c3bf-249">Объект, предоставляющий настраиваемые правила для сравнения.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-249">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="2c3bf-250">Сравнивает текущий объект <see cref="T:System.Tuple`8" /> с указанным объектом, используя заданный компаратор, и возвращает целое число, которое показывает положение текущего объекта относительно указанного объекта в порядке сортировки: перед объектом, после него или в той же позиции.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-250">Compares the current <see cref="T:System.Tuple`8" /> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="2c3bf-251">Целое число со знаком, определяющее относительное положение экземпляра и параметра <paramref name="other" /> в порядке сортировки, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-251">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="2c3bf-252">Значение</span><span class="sxs-lookup"><span data-stu-id="2c3bf-252">Value</span></span> 
 </term><description> <span data-ttu-id="2c3bf-253">Описание</span><span class="sxs-lookup"><span data-stu-id="2c3bf-253">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="2c3bf-254">Отрицательное целое число</span><span class="sxs-lookup"><span data-stu-id="2c3bf-254">A negative integer</span></span> 
 </term><description> <span data-ttu-id="2c3bf-255">Данный экземпляр предшествует параметру <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-255">This instance precedes <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2c3bf-256">Нуль</span><span class="sxs-lookup"><span data-stu-id="2c3bf-256">Zero</span></span> 
 </term><description> <span data-ttu-id="2c3bf-257">У этого экземпляра та же позиция в порядке сортировки, что и у <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-257">This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2c3bf-258">Положительное целое число</span><span class="sxs-lookup"><span data-stu-id="2c3bf-258">A positive integer</span></span> 
 </term><description> <span data-ttu-id="2c3bf-259">Данный экземпляр стоит после параметра <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-259">This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3bf-260">Данный член является явной реализацией интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-260">This member is an explicit interface implementation.</span></span> <span data-ttu-id="2c3bf-261">Он может использоваться только при условии, что экземпляр класса <xref:System.Tuple%608> приведен к типу интерфейса <xref:System.Collections.IStructuralComparable>.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-261">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="2c3bf-262">Этот метод позволяет определять пользовательские процедуры сравнения для <xref:System.Tuple%608> объектов.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-262">This method lets you define customized comparisons of <xref:System.Tuple%608> objects.</span></span> <span data-ttu-id="2c3bf-263">Например, можно использовать этот метод, чтобы порядок <xref:System.Tuple%608> объекты на основе значения из указанного компонента.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-263">For example, you can use this method to order <xref:System.Tuple%608> objects based on the value of a specific component.</span></span>  
  
 <span data-ttu-id="2c3bf-264">Несмотря на то, что этот метод может вызываться напрямую, он наиболее часто вызывается сортировки коллекций методы, которые включают <xref:System.Collections.IComparer> параметры для сортировки элементов в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-264">Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="2c3bf-265">Например, она будет вызвана <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> метод и <xref:System.Collections.SortedList.Add%2A> метод <xref:System.Collections.SortedList> объекта, экземпляр которого создается с помощью <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> конструктор.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-265">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2c3bf-266"><xref:System.Tuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> Метод предназначен для использования в операции сортировки.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-266">The <xref:System.Tuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="2c3bf-267">Он не должен использоваться, при основной целью сравнения для определения, равны ли два объекта.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-267">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="2c3bf-268">Чтобы определить, равны ли два объекта, вызовите <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-268">To determine whether two objects are equal, call the <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c3bf-269">В следующем примере создается массив <xref:System.Tuple%608> объектов, содержащий данные о населении для четырех городах США из 1940 до 2000.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-269">The following example creates an array of <xref:System.Tuple%608> objects that contains population data for four U.S. cities from 1940 to 2000.</span></span> <span data-ttu-id="2c3bf-270">Octuple первый компонент — название города.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-270">The octuple's first component is the city name.</span></span> <span data-ttu-id="2c3bf-271">Оставшиеся шесть компонентов представляют численность населения с интервалами в 10-летнему из 1940 до 2000.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-271">The remaining six components represent the population at 10-year intervals from 1940 to 2000.</span></span>  
  
 <span data-ttu-id="2c3bf-272">`PopulationComparer` Класс предоставляет <xref:System.Collections.IComparer> реализация, позволяющая массив кортежей следует отсортировать с любого из его компонентов.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-272">The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of octuples to be sorted by any one of its components.</span></span> <span data-ttu-id="2c3bf-273">Предоставляются два значения `PopulationComparer` конструктору класса: Положение компонента, который определяет порядок сортировки и <xref:System.Boolean> значение, указывающее ли кортежей должны быть отсортированы в порядке возрастания или убывания.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-273">Two values are provided to the `PopulationComparer` class in its constructor: The position of the component that defines the sort order, and a <xref:System.Boolean> value that indicates whether the tuple objects should be sorted in ascending or descending order.</span></span>  
  
 <span data-ttu-id="2c3bf-274">Затем отображает элементы в массиве без сортировки, сортирует их по третий компонент (заполнение 1950) и отображает их и затем сортирует их по восьмого компонента (заполнение в 2000) и отображает их.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-274">The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1950) and displays them, and then sorts them by the eighth component (the population in 2000) and displays them.</span></span>  
  
 [!code-csharp[System.Tuple\`8.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`8.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2c3bf-275"><paramref name="other" /> не является объектом <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-275"><paramref name="other" /> is not a <see cref="T:System.Tuple`8" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="2c3bf-276">Объект, сравниваемый с данным экземпляром.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-276">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="2c3bf-277">Объект, который определяет метод, используемый для вычисления равенства двух объектов.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-277">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="2c3bf-278">Возвращает значение, показывающее, равен ли текущий атрибут <see cref="T:System.Tuple`8" /> указанному объекту при использовании заданного метода сравнения.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-278">Returns a value that indicates whether the current <see cref="T:System.Tuple`8" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns><span data-ttu-id="2c3bf-279">Значение <see langword="true" />, если текущий экземпляр равен указанному объекту; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-279"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3bf-280">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-280">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2c3bf-281">Он может использоваться только при условии, что экземпляр класса <xref:System.Tuple%608> приведен к типу интерфейса <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-281">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="2c3bf-282"><xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> Вызывается только в том случае, если реализация `other` не `null`, и если он может успешно приведите (в C#) или преобразован (в Visual Basic), чтобы <xref:System.Tuple%608> объект с тем же общее число компонентов (включая вложенные `Tuple` объекты) совпадает с типом текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-282">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%608> object that has the same total number of components (including those in nested `Tuple` objects) of the same types as the current instance.</span></span> <span data-ttu-id="2c3bf-283"><xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> Передает первый метод <xref:System.Tuple%608.Item1%2A> значения <xref:System.Tuple%608> объектов, который требуется сравнить с <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> реализации.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-283">The <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%608.Item1%2A> values of the <xref:System.Tuple%608> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="2c3bf-284">Если вызов этого метода возвращает `true`, повторный вызов и передается метод <xref:System.Tuple%608.Item2%2A> значения двух <xref:System.Tuple%608> объектов.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-284">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%608.Item2%2A> values of the two <xref:System.Tuple%608> objects.</span></span> <span data-ttu-id="2c3bf-285">Это продолжается до вызова метода `false` при сравнении пары значений или два <xref:System.Tuple%608.Rest%2A> значения передаются в метод.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-285">This continues until the method call returns `false` when it compares a specific pair of values, or the two <xref:System.Tuple%608.Rest%2A> values are passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="2c3bf-286">Объект, метод <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> которого вычисляет хэш-код текущего объекта <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-286">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`8" /> object.</span></span></param>
        <summary><span data-ttu-id="2c3bf-287">Вычисляет хэш-код для текущего объекта <see cref="T:System.Tuple`8" />, используя заданный метод вычисления.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-287">Calculates the hash code for the current <see cref="T:System.Tuple`8" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="2c3bf-288">Хэш-код в виде 32-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-288">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3bf-289">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-289">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2c3bf-290">Он может использоваться только при условии, что экземпляр класса <xref:System.Tuple%608> приведен к типу интерфейса <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-290">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="2c3bf-291">Этот метод просто создает оболочку вызова `comparer` объекта <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> реализации.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-291">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="2c3bf-292">Алгоритм, используемый для вычисления хэш-код должен возвращать одинаковый хэш-код для двух <xref:System.Tuple%608> объекты, которые считаются равными.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-292">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%608> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2c3bf-293">Объект для сравнения с текущим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-293">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="2c3bf-294">Сравнивает текущий объект <see cref="T:System.Tuple`8" /> с заданным объектом и возвращает целое число, указывающее, находится ли текущий объект в той же позиции, что и указанный объект, после него или перед ним в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-294">Compares the current <see cref="T:System.Tuple`8" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="2c3bf-295">Целое число со знаком, определяющее относительное положение экземпляра и параметра <paramref name="obj" /> в порядке сортировки, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-295">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="2c3bf-296">Значение</span><span class="sxs-lookup"><span data-stu-id="2c3bf-296">Value</span></span> 
 </term><description> <span data-ttu-id="2c3bf-297">Описание</span><span class="sxs-lookup"><span data-stu-id="2c3bf-297">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="2c3bf-298">Отрицательное целое число</span><span class="sxs-lookup"><span data-stu-id="2c3bf-298">A negative integer</span></span> 
 </term><description> <span data-ttu-id="2c3bf-299">Данный экземпляр предшествует параметру <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-299">This instance precedes <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2c3bf-300">Нуль</span><span class="sxs-lookup"><span data-stu-id="2c3bf-300">Zero</span></span> 
 </term><description> <span data-ttu-id="2c3bf-301">У этого экземпляра та же позиция в порядке сортировки, что и у <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-301">This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2c3bf-302">Положительное целое число</span><span class="sxs-lookup"><span data-stu-id="2c3bf-302">A positive integer</span></span> 
 </term><description> <span data-ttu-id="2c3bf-303">Данный экземпляр стоит после параметра <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-303">This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3bf-304">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-304">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2c3bf-305">Он может использоваться только при условии, что экземпляр класса <xref:System.Tuple%608> приведен к типу интерфейса <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-305">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="2c3bf-306">Этот метод обеспечивает <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> внедрению <xref:System.Tuple%608> класса.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-306">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%608> class.</span></span> <span data-ttu-id="2c3bf-307">Несмотря на то, что метод может вызываться напрямую, он наиболее часто вызывается перегрузок по умолчанию для сортировки коллекции методов, таких как <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> и <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, для сортировки элементов в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-307">Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2c3bf-308"><xref:System.Tuple%608.System%23IComparable%23CompareTo%2A> Метод предназначен для использования в операции сортировки.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-308">The <xref:System.Tuple%608.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="2c3bf-309">Он не должен использоваться, при основной целью сравнения для определения, равны ли два объекта.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-309">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="2c3bf-310">Чтобы определить, равны ли два объекта, вызовите <xref:System.Tuple%608.Equals%28System.Object%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-310">To determine whether two objects are equal, call the <xref:System.Tuple%608.Equals%28System.Object%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2c3bf-311">Этот метод использует компаратора по умолчанию объект для сравнения каждого компонента.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-311">This method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c3bf-312">В следующем примере создается массив кортежей, компоненты которого являются целыми числами, которые содержат ряд простых чисел.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-312">The following example creates an array of octuples whose components are integers that contain a range of prime numbers.</span></span> <span data-ttu-id="2c3bf-313">В примере отображает элементы массива без сортировки, сортирует массив и затем отображает массив в отсортированном порядке.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-313">The example displays the elements of the array in unsorted order, sorts the array, and then displays the array in sorted order.</span></span> <span data-ttu-id="2c3bf-314">Выходные данные показывают, что массив был отсортирован по <xref:System.Tuple%608.Item1%2A>, или первого компонента кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-314">The output shows that the array has been sorted by <xref:System.Tuple%608.Item1%2A>, or the tuple's first component.</span></span> <span data-ttu-id="2c3bf-315">Обратите внимание, что пример не вызывает напрямую <xref:System.Tuple%608.System%23IComparable%23CompareTo%28System.Object%29> метод.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-315">Note that the example does not directly call the <xref:System.Tuple%608.System%23IComparable%23CompareTo%28System.Object%29> method.</span></span> <span data-ttu-id="2c3bf-316">Этот метод вызывается неявно <xref:System.Array.Sort%28System.Array%29> метод для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-316">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`8.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`8.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2c3bf-317"><paramref name="obj" /> не является объектом <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-317"><paramref name="obj" /> is not a <see cref="T:System.Tuple`8" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2c3bf-318">Индекс указанного элемента <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-318">The index of the specified <see langword="Tuple" /> element.</span></span> <span data-ttu-id="2c3bf-319"><paramref name="index" /> может находиться в диапазоне от 0 для <see langword="Item1" /> до значения, на единицу меньше, чем число элементов в <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-319"><paramref name="index" /> can range from 0 for <see langword="Item1" /> to one less than the number of elements in the <see langword="Tuple" />.</span></span></param>
        <summary><span data-ttu-id="2c3bf-320">Получает значение указанного элемента <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-320">Gets the value of the specified <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="2c3bf-321">Значение элемента <see langword="Tuple" /> в заданной позиции.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-321">The value of the <see langword="Tuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3bf-322"><xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> Свойство является явной реализацией интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-322">The <xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="2c3bf-323">Назовем ее, необходимо привести или преобразовать <xref:System.Tuple%608> объект <xref:System.Runtime.CompilerServices.ITuple> объект интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-323">To call it, you must cast or convert the <xref:System.Tuple%608> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="2c3bf-324">Значение параметра <paramref name="index" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-324"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="2c3bf-325">-или-</span><span class="sxs-lookup"><span data-stu-id="2c3bf-325">-or-</span></span> 
 <span data-ttu-id="2c3bf-326">Значение <paramref name="index" /> больше или равно <see cref="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-326"><paramref name="index" /> is greater than or equal to <see cref="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c3bf-327">Возвращает количество элементов в <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-327">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="2c3bf-328">Число элементов в массиве <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-328">The number of elements in the <see langword="Tuple" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3bf-329"><xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> Свойство является явной реализацией интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-329">The <xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="2c3bf-330">Назовем ее, необходимо привести или преобразовать <xref:System.Tuple%608> тип <xref:System.Runtime.CompilerServices.ITuple> объект интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-330">To call it, you must cast or convert the <xref:System.Tuple%608> type to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2c3bf-331">Возвращает строковое представление значения этого экземпляра <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-331">Returns a string that represents the value of this <see cref="T:System.Tuple`8" /> instance.</span></span></summary>
        <returns><span data-ttu-id="2c3bf-332">Строковое представление конкретного объекта <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-332">The string representation of this <see cref="T:System.Tuple`8" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3bf-333">Строка, возвращаемая этим методом принимает форму (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`,  *Item8*...), где *Item1*, *Item2*, *Item3*, *Item4*, *«ТОВАР5»*, *Item6*, и *Item7* представляют значения <xref:System.Tuple%608.Item1%2A>, <xref:System.Tuple%608.Item2%2A>, <xref:System.Tuple%608.Item3%2A>, <xref:System.Tuple%608.Item4%2A>, <xref:System.Tuple%608.Item5%2A>, <xref:System.Tuple%608.Item6%2A>, и <xref:System.Tuple%608.Item7%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-333">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`, *Item8*…), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.Tuple%608.Item1%2A>, <xref:System.Tuple%608.Item2%2A>, <xref:System.Tuple%608.Item3%2A>, <xref:System.Tuple%608.Item4%2A>, <xref:System.Tuple%608.Item5%2A>, <xref:System.Tuple%608.Item6%2A>, and <xref:System.Tuple%608.Item7%2A> properties.</span></span> <span data-ttu-id="2c3bf-334">*Item8* представляет значение <xref:System.Tuple%608> объекта `Next.Item1` свойство.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-334">*Item8* represents the value of the <xref:System.Tuple%608> object's `Next.Item1` property.</span></span> <span data-ttu-id="2c3bf-335">Значение всех дополнительных вложенных компонентов выполните *Item8*.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-335">The value of any additional nested components follow *Item8*.</span></span> <span data-ttu-id="2c3bf-336">Если выполняется одно из значений свойств `null`, она представляется как <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-336">If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c3bf-337">В следующем примере создается 17-кортеж, содержащий данные о населении для города из Детройт, Мичиган, из 1860 строк к числу 1900.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-337">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, from 1860 to 1900.</span></span> <span data-ttu-id="2c3bf-338">Затем он использует <xref:System.Tuple%608.ToString%2A> метод для отображения данных кортежа.</span><span class="sxs-lookup"><span data-stu-id="2c3bf-338">It then uses the <xref:System.Tuple%608.ToString%2A> method to display the tuple's data.</span></span>  
  
 [!code-csharp[System.Tuple\`8.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`8.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>