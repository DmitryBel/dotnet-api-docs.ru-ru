<Type Name="Convert" FullName="System.Convert">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c3e2c0d08144fc3aeffdb4f442608ffcf1fed9ce" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57961761" /></Metadata><TypeSignature Language="C#" Value="public static class Convert" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Convert extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Convert" />
  <TypeSignature Language="VB.NET" Value="Public Class Convert" />
  <TypeSignature Language="C++ CLI" Value="public ref class Convert abstract sealed" />
  <TypeSignature Language="F#" Value="type Convert = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="13f48-101">Преобразует значение одного базового типа данных к другому базовому типу данных.</span><span class="sxs-lookup"><span data-stu-id="13f48-101">Converts a base data type to another base data type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-102">Статические методы класса <xref:System.Convert> класс в основном используются для поддержки преобразования в и из типов данных в .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="13f48-102">The static methods of the <xref:System.Convert> class are primarily used to support conversion to and from the base data types in the .NET Framework.</span></span> <span data-ttu-id="13f48-103">Поддерживаемые базовые типы: <xref:System.Boolean>, <xref:System.Char>, <xref:System.SByte>, <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, <xref:System.DateTime> и <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="13f48-103">The supported base types are <xref:System.Boolean>, <xref:System.Char>, <xref:System.SByte>, <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, <xref:System.DateTime> and <xref:System.String>.</span></span> <span data-ttu-id="13f48-104">Кроме того <xref:System.Convert> класс включает методы для поддержки других типов преобразований.</span><span class="sxs-lookup"><span data-stu-id="13f48-104">In addition, the <xref:System.Convert> class includes methods to support  other kinds of conversions.</span></span>  
  
 <span data-ttu-id="13f48-105">В этом разделе:</span><span class="sxs-lookup"><span data-stu-id="13f48-105">This topic consists of the following sections:</span></span>  
  
 <span data-ttu-id="13f48-106">[Преобразования в и из базовых типов](#Base) </span><span class="sxs-lookup"><span data-stu-id="13f48-106">[Conversions to and from Base Types](#Base) </span></span>  
 <span data-ttu-id="13f48-107">[Не являющийся десятичной цифры](#NonDecimal) </span><span class="sxs-lookup"><span data-stu-id="13f48-107">[Non-Decimal Numbers](#NonDecimal) </span></span>  
 <span data-ttu-id="13f48-108">[Преобразования из пользовательских объектов в базовые типы](#Custom) </span><span class="sxs-lookup"><span data-stu-id="13f48-108">[Conversions from Custom Objects to Base Types](#Custom) </span></span>  
 <span data-ttu-id="13f48-109">[Сведения о форматировании для определенного языка и региональных параметров](#Culture) </span><span class="sxs-lookup"><span data-stu-id="13f48-109">[Culture-Specific Formatting Information](#Culture) </span></span>  
 <span data-ttu-id="13f48-110">[Кодировка base64](#Base64) </span><span class="sxs-lookup"><span data-stu-id="13f48-110">[Base64 Encoding](#Base64) </span></span>  
 [<span data-ttu-id="13f48-111">Другие распространенные преобразования</span><span class="sxs-lookup"><span data-stu-id="13f48-111">Other Common Conversions</span></span>](#Other)  
  
<a name="Base"></a>   
## <a name="conversions-to-and-from-base-types"></a><span data-ttu-id="13f48-112">Преобразования в и из базовых типов</span><span class="sxs-lookup"><span data-stu-id="13f48-112">Conversions to and from Base Types</span></span>  
 <span data-ttu-id="13f48-113">Существует метод для преобразования любого базового типа в любой другой базовый тип.</span><span class="sxs-lookup"><span data-stu-id="13f48-113">A conversion method exists to convert every base type to every other base type.</span></span> <span data-ttu-id="13f48-114">Тем не менее фактически осуществляется вызов метода определенного преобразования может выдавать один из пяти разных результатов, в зависимости от значения базового типа во время выполнения и базовый тип объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-114">However, the actual call to a particular conversion method can produce one of five outcomes, depending on the value of the base type at run time and the target base type.</span></span> <span data-ttu-id="13f48-115">Эти пять результатов таковы:</span><span class="sxs-lookup"><span data-stu-id="13f48-115">These five outcomes are:</span></span>  
  
-   <span data-ttu-id="13f48-116">Преобразование не выполнено.</span><span class="sxs-lookup"><span data-stu-id="13f48-116">No conversion.</span></span> <span data-ttu-id="13f48-117">Это происходит, когда предпринята попытка преобразования типа на себя (например, путем вызова <xref:System.Convert.ToInt32%28System.Int32%29?displayProperty=nameWithType> с аргументом типа <xref:System.Int32>).</span><span class="sxs-lookup"><span data-stu-id="13f48-117">This occurs when an attempt is made to convert from a type to itself (for example, by calling <xref:System.Convert.ToInt32%28System.Int32%29?displayProperty=nameWithType> with an argument of type <xref:System.Int32>).</span></span> <span data-ttu-id="13f48-118">В этом случае метод просто возвращает экземпляр исходного типа.</span><span class="sxs-lookup"><span data-stu-id="13f48-118">In this case, the method simply returns an instance of the original type.</span></span>  
  
-   <span data-ttu-id="13f48-119">Объект <xref:System.InvalidCastException>.</span><span class="sxs-lookup"><span data-stu-id="13f48-119">An <xref:System.InvalidCastException>.</span></span> <span data-ttu-id="13f48-120">Это происходит, когда данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-120">This occurs when a particular conversion is not supported.</span></span> <span data-ttu-id="13f48-121"><xref:System.InvalidCastException> Вызываются следующие преобразования:</span><span class="sxs-lookup"><span data-stu-id="13f48-121">An <xref:System.InvalidCastException> is thrown for the following conversions:</span></span>  
  
    -   <span data-ttu-id="13f48-122">Преобразования из <xref:System.Char> для <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, или <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="13f48-122">Conversions from <xref:System.Char> to <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, or <xref:System.DateTime>.</span></span>  
  
    -   <span data-ttu-id="13f48-123">Преобразования из <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, или <xref:System.DateTime> для <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="13f48-123">Conversions from <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, or <xref:System.DateTime> to <xref:System.Char>.</span></span>  
  
    -   <span data-ttu-id="13f48-124">Преобразования из <xref:System.DateTime> для любого другого типа, за исключением <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="13f48-124">Conversions from <xref:System.DateTime> to any other type except <xref:System.String>.</span></span>  
  
    -   <span data-ttu-id="13f48-125">Преобразования из любого другого типа, за исключением <xref:System.String>, <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="13f48-125">Conversions from any other type, except <xref:System.String>, to <xref:System.DateTime>.</span></span>  
  
-   <span data-ttu-id="13f48-126">Объект <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="13f48-126">A <xref:System.FormatException>.</span></span> <span data-ttu-id="13f48-127">Это происходит, когда попытка преобразовать строковое значение к базовому типу завершается неудачей, так как строка имеет правильный формат.</span><span class="sxs-lookup"><span data-stu-id="13f48-127">This occurs when the attempt to convert a string value to any other base type fails because the string is not in the proper format.</span></span> <span data-ttu-id="13f48-128">Исключения для следующих преобразований:</span><span class="sxs-lookup"><span data-stu-id="13f48-128">The exception is thrown for the following conversions:</span></span>  
  
    -   <span data-ttu-id="13f48-129">Строка для преобразования в <xref:System.Boolean> значение не равно <xref:System.Boolean.TrueString?displayProperty=nameWithType> или <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-129">A string to be converted to a <xref:System.Boolean> value does not equal <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
    -   <span data-ttu-id="13f48-130">Строка для преобразования в <xref:System.Char> значение состоит из нескольких символов.</span><span class="sxs-lookup"><span data-stu-id="13f48-130">A string to be converted to a <xref:System.Char> value consists of multiple characters.</span></span>  
  
    -   <span data-ttu-id="13f48-131">Строка для преобразования в любой числовой тип не является допустимым числом.</span><span class="sxs-lookup"><span data-stu-id="13f48-131">A string to be converted to any numeric type is not recognized as a valid number.</span></span>  
  
    -   <span data-ttu-id="13f48-132">Строка для преобразования в <xref:System.DateTime> не распознается как допустимое значение даты и времени.</span><span class="sxs-lookup"><span data-stu-id="13f48-132">A string to be converted to a <xref:System.DateTime> is not recognized as a valid date and time value.</span></span>  
  
-   <span data-ttu-id="13f48-133">Преобразование выполнено успешно.</span><span class="sxs-lookup"><span data-stu-id="13f48-133">A successful conversion.</span></span> <span data-ttu-id="13f48-134">Для выполнения преобразований между двумя базовыми типами не перечисленные выше преобразованиям все расширяющие преобразования, а также все сужающие преобразования, которые не приводят к потере данных будет выполнена успешно, и метод возвращает значение целевого базового типа.</span><span class="sxs-lookup"><span data-stu-id="13f48-134">For conversions between two different base types not listed in the previous outcomes, all widening conversions as well as all narrowing conversions that do not result in a loss of data will succeed and the method will return a value of the targeted base type.</span></span>  
  
-   <span data-ttu-id="13f48-135">Объект <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="13f48-135">An <xref:System.OverflowException>.</span></span> <span data-ttu-id="13f48-136">Это происходит, когда в результате сужающего преобразования к потере данных.</span><span class="sxs-lookup"><span data-stu-id="13f48-136">This occurs when a narrowing conversion results in a loss of data.</span></span> <span data-ttu-id="13f48-137">Например, при попытке преобразовать <xref:System.Int32> экземпляра, значение которого равно 10000 для <xref:System.Byte> введите порождает <xref:System.OverflowException> так, как 10000 находится за пределами диапазона <xref:System.Byte> тип данных.</span><span class="sxs-lookup"><span data-stu-id="13f48-137">For example, trying to convert a <xref:System.Int32> instance whose value is 10000 to a <xref:System.Byte> type throws an <xref:System.OverflowException> because 10000 is outside the range of the <xref:System.Byte> data type.</span></span>  
  
 <span data-ttu-id="13f48-138">Не будет создано исключение, если преобразование числового типа приводит к потере точности (то есть потере некоторых менее значащие цифры).</span><span class="sxs-lookup"><span data-stu-id="13f48-138">An exception will not be thrown if the conversion of a numeric type results in a loss of precision (that is, the loss of some least significant digits).</span></span> <span data-ttu-id="13f48-139">Тем не менее будет создано исключение, если результат больше, чем может быть представлена тип возвращаемого значения метода данное преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-139">However, an exception will be thrown if the result is larger than can be represented by the particular conversion method's return value type.</span></span>  
  
 <span data-ttu-id="13f48-140">Например, если <xref:System.Double> преобразуется в <xref:System.Single>, может произойти потеря точности, но исключения не возникают.</span><span class="sxs-lookup"><span data-stu-id="13f48-140">For example, when a <xref:System.Double> is converted to a <xref:System.Single>, a loss of precision might occur but no exception is thrown.</span></span> <span data-ttu-id="13f48-141">Тем не менее если абсолютное значение <xref:System.Double> слишком велик, чтобы быть представленным <xref:System.Single>, исключение переполнения.</span><span class="sxs-lookup"><span data-stu-id="13f48-141">However, if the magnitude of the <xref:System.Double> is too large to be represented by a <xref:System.Single>, an overflow exception is thrown.</span></span>  
  
<a name="NonDecimal"></a>   
## <a name="non-decimal-numbers"></a><span data-ttu-id="13f48-142">Не являющийся десятичной цифры</span><span class="sxs-lookup"><span data-stu-id="13f48-142">Non-Decimal Numbers</span></span>  
 <span data-ttu-id="13f48-143"><xref:System.Convert> Класс содержит статические методы, которые можно вызвать для преобразования целочисленных значений недесятичных строковые представления, и для преобразования строк в числа, не являющейся десятичной представляют для целых значений.</span><span class="sxs-lookup"><span data-stu-id="13f48-143">The <xref:System.Convert> class includes static methods that you can call to convert integral values to non-decimal string representations, and to convert strings that represent non-decimal numbers to integral values.</span></span> <span data-ttu-id="13f48-144">Каждый из этих методов преобразования включает `base` аргумент, который позволяет указать в системе счисления; двоичного файла (по основанию 2), восьмеричным (основание 8) и шестнадцатеричным (основание 16), а также десятичным (основание 10).</span><span class="sxs-lookup"><span data-stu-id="13f48-144">Each of these conversion methods includes a `base` argument  that lets you specify  the number system; binary (base 2), octal (base 8), and hexadecimal (base 16), as well as decimal (base 10).</span></span> <span data-ttu-id="13f48-145">Есть несколько методов для преобразования каждого из типов-примитивов целочисленных CLS-совместимым в строку и один для преобразования строки для каждого из целочисленных типов-примитивов:</span><span class="sxs-lookup"><span data-stu-id="13f48-145">There is a set of methods to convert each of the CLS-compliant primitive integral types to a string, and one to convert a string to each of the primitive integral types:</span></span>  
  
-   <span data-ttu-id="13f48-146"><xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29> и <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29>, чтобы преобразовать значение в байтах из строки в указанной системе счисления.</span><span class="sxs-lookup"><span data-stu-id="13f48-146"><xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29> and <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29>, to convert a byte value to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="13f48-147"><xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> и <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29>, для преобразования 16-разрядное целое число со знаком и из строки в указанной системе счисления.</span><span class="sxs-lookup"><span data-stu-id="13f48-147"><xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> and <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29>, to convert a 16-bit signed integer to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="13f48-148"><xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> и <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29>, для преобразования 32-разрядное целое число со знаком и из строки в указанной системе счисления.</span><span class="sxs-lookup"><span data-stu-id="13f48-148"><xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> and <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29>, to convert a 32-bit signed integer to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="13f48-149"><xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> и <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29>, для преобразования 64-разрядное целое число со знаком и из строки в указанной системе счисления.</span><span class="sxs-lookup"><span data-stu-id="13f48-149"><xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> and <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29>, to convert a 64-bit signed integer to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="13f48-150"><xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29>, чтобы преобразовать строковое представление значения байтов в указанном формате байт со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-150"><xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29>, to convert the string representation of a byte value in a specified format to a signed byte.</span></span>  
  
-   <span data-ttu-id="13f48-151"><xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29>, чтобы преобразовать строковое представление целого числа в указанном формате в 16-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-151"><xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29>, to convert the string representation of an integer in a specified format to an unsigned 16-bit integer.</span></span>  
  
-   <span data-ttu-id="13f48-152"><xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29>, чтобы преобразовать строковое представление целого числа в указанном формате в 32-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-152"><xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29>, to convert the string representation of an integer in a specified format to an unsigned 32-bit integer.</span></span>  
  
-   <span data-ttu-id="13f48-153"><xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29>, чтобы преобразовать строковое представление целого числа в указанном формате в 64-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-153"><xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29>, to convert the string representation of an integer in a specified format to an unsigned 64-bit integer.</span></span>  
  
 <span data-ttu-id="13f48-154">В следующем примере преобразуется значение <xref:System.Int16.MaxValue?displayProperty=nameWithType> в строку во всех поддерживаемых числовые форматы.</span><span class="sxs-lookup"><span data-stu-id="13f48-154">The following example converts the value of <xref:System.Int16.MaxValue?displayProperty=nameWithType> to a string in all supported numeric formats.</span></span> <span data-ttu-id="13f48-155">Он, а затем Преобразует строковое значение обратно в <xref:System.Int16> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-155">It then converts the string value back to a <xref:System.Int16> value.</span></span>  
  
 [!code-cpp[System.Convert#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert/CPP/NonDecimal1.cpp#2)]
 [!code-csharp[System.Convert#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert/CS/NonDecimal1.cs#2)]
 [!code-vb[System.Convert#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert/VB/NonDecimal1.vb#2)]  
  
<a name="Custom"></a>   
## <a name="conversions-from-custom-objects-to-base-types"></a><span data-ttu-id="13f48-156">Преобразования из пользовательских объектов в базовые типы</span><span class="sxs-lookup"><span data-stu-id="13f48-156">Conversions from Custom Objects to Base Types</span></span>  
 <span data-ttu-id="13f48-157">В дополнение к поддержке преобразований между базовыми типами, <xref:System.Convert> метод поддерживает преобразование любого пользовательского типа в любой базовый тип.</span><span class="sxs-lookup"><span data-stu-id="13f48-157">In addition to supporting conversions between the base types, the <xref:System.Convert> method supports conversion of any custom type to any base type.</span></span> <span data-ttu-id="13f48-158">Чтобы сделать это, необходимо реализовать пользовательский тип <xref:System.IConvertible> интерфейс, который определяет методы для преобразования реализующего типа в каждый из базовых типов.</span><span class="sxs-lookup"><span data-stu-id="13f48-158">To do this, the custom type must implement the <xref:System.IConvertible> interface, which defines methods for converting the implementing type to each of the base types.</span></span> <span data-ttu-id="13f48-159">Преобразования, которые не поддерживаются с помощью определенного типа должны порождать <xref:System.InvalidCastException>.</span><span class="sxs-lookup"><span data-stu-id="13f48-159">Conversions that are not supported by a particular type should throw an <xref:System.InvalidCastException>.</span></span>  
  
 <span data-ttu-id="13f48-160">Когда <xref:System.Convert.ChangeType%2A> метод передается пользовательский тип в качестве первого параметра, или когда `Convert.To` *тип* метод (такие как <xref:System.Convert.ToInt32%28System.Object%29?displayProperty=nameWithType> или <xref:System.Convert.ToDouble%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> вызывается и переданный экземпляр пользовательского типа в качестве своего первого параметр, <xref:System.Convert> метод, в свою очередь, вызывает метод пользовательского типа <xref:System.IConvertible> реализации для выполнения преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-160">When the <xref:System.Convert.ChangeType%2A> method is passed a custom type as its first parameter, or when the `Convert.To`*Type* method (such as <xref:System.Convert.ToInt32%28System.Object%29?displayProperty=nameWithType> or <xref:System.Convert.ToDouble%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> is called and passed an instance of a custom type as its first parameter, the <xref:System.Convert> method, in turn, calls the custom type's <xref:System.IConvertible> implementation to perform the conversion.</span></span> <span data-ttu-id="13f48-161">Дополнительные сведения см. в разделе [преобразование типов в .NET Framework](~/docs/standard/base-types/type-conversion.md).</span><span class="sxs-lookup"><span data-stu-id="13f48-161">For more information, see [Type Conversion in the .NET Framework](~/docs/standard/base-types/type-conversion.md).</span></span>  
  
<a name="Culture"></a>   
## <a name="culture-specific-formatting-information"></a><span data-ttu-id="13f48-162">Сведения о форматировании для определенного языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="13f48-162">Culture-Specific Formatting Information</span></span>  
 <span data-ttu-id="13f48-163">Все методы преобразования базового типа и <xref:System.Convert.ChangeType%2A> метод имеют перегруженные версии, имеют параметр типа <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="13f48-163">All the base type conversion methods and the <xref:System.Convert.ChangeType%2A> method include overloads that have a parameter of type <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="13f48-164">Например <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> метод имеет следующие две перегрузки:</span><span class="sxs-lookup"><span data-stu-id="13f48-164">For example, the <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> method has the following two overloads:</span></span>  
  
-   <xref:System.Convert.ToBoolean%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType>  
  
-   <xref:System.Convert.ToBoolean%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>  
  
 <span data-ttu-id="13f48-165"><xref:System.IFormatProvider> Параметра можно указать сведения об особенностях язык и региональные параметры форматирования для помощи в процессе преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-165">The <xref:System.IFormatProvider> parameter can supply culture-specific formatting information to assist the conversion process.</span></span> <span data-ttu-id="13f48-166">Тем не менее оно учитывается функцией большинство методов преобразования базового типа.</span><span class="sxs-lookup"><span data-stu-id="13f48-166">However, it is ignored by most of the base type conversion methods.</span></span> <span data-ttu-id="13f48-167">Они используются только следующие методы преобразования базового типа. Если `null` <xref:System.IFormatProvider> аргумент, передаваемый этим методам <xref:System.Globalization.CultureInfo> используется объект, представляющий текущий язык потока.</span><span class="sxs-lookup"><span data-stu-id="13f48-167">It is used only by the following base type conversion methods.If a `null`<xref:System.IFormatProvider> argument is passed to these methods, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
-   <span data-ttu-id="13f48-168">Методы, которые преобразуют значение к числовому типу.</span><span class="sxs-lookup"><span data-stu-id="13f48-168">By methods that convert a value to a numeric type.</span></span> <span data-ttu-id="13f48-169"><xref:System.IFormatProvider> Параметра используется перегрузка, имеющая параметров типа <xref:System.String> и <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="13f48-169">The <xref:System.IFormatProvider> parameter is used by the overload that has parameters of type <xref:System.String> and <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="13f48-170">Он также используется перегрузка, имеющая параметров типа <xref:System.Object> и <xref:System.IFormatProvider> Если во время выполнения этого объекта будет <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="13f48-170">It is also used by the overload that has parameters of type <xref:System.Object> and <xref:System.IFormatProvider> if the object's run-time type is a <xref:System.String>.</span></span>  
  
-   <span data-ttu-id="13f48-171">Методы, преобразовать значение даты и времени.</span><span class="sxs-lookup"><span data-stu-id="13f48-171">By methods that convert a value to a date and time.</span></span> <span data-ttu-id="13f48-172"><xref:System.IFormatProvider> Параметра используется перегрузка, имеющая параметров типа <xref:System.String> и <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="13f48-172">The <xref:System.IFormatProvider> parameter is used by the overload that has parameters of type <xref:System.String> and <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="13f48-173">Он также используется перегрузка, имеющая параметров типа <xref:System.Object> и <xref:System.IFormatProvider> Если во время выполнения этого объекта будет <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="13f48-173">It is also used by the overload that has parameters of type <xref:System.Object> and <xref:System.IFormatProvider> if the object's run-time type is a <xref:System.String>.</span></span>  
  
-   <span data-ttu-id="13f48-174">По <xref:System.Convert.ToString%2A?displayProperty=nameWithType> перегрузки, включающие <xref:System.IFormatProvider> параметра и преобразовать числовое значение в строку или <xref:System.DateTime> значение в строку.</span><span class="sxs-lookup"><span data-stu-id="13f48-174">By the <xref:System.Convert.ToString%2A?displayProperty=nameWithType> overloads that include an <xref:System.IFormatProvider> parameter and that convert either a numeric value to a string or a <xref:System.DateTime> value to a string.</span></span>  
  
 <span data-ttu-id="13f48-175">Тем не менее, любой определяемый пользователем тип, реализующий <xref:System.IConvertible> позволяют использовать <xref:System.IFormatProvider> параметра.</span><span class="sxs-lookup"><span data-stu-id="13f48-175">However, any user-defined type that implements <xref:System.IConvertible> can make use of the <xref:System.IFormatProvider> parameter.</span></span>  
  
<a name="Base64"></a>   
## <a name="base64-encoding"></a><span data-ttu-id="13f48-176">Кодировка base64</span><span class="sxs-lookup"><span data-stu-id="13f48-176">Base64 Encoding</span></span>  
 <span data-ttu-id="13f48-177">Кодировки Base64 двоичные данные преобразуется в строку.</span><span class="sxs-lookup"><span data-stu-id="13f48-177">Base64 encoding converts binary data to a string.</span></span> <span data-ttu-id="13f48-178">Данные, выраженные в виде цифр в кодировке Base64 могут легко быть переданы по каналам данных, которые можно передавать только 7-разрядных символов.</span><span class="sxs-lookup"><span data-stu-id="13f48-178">Data expressed as base-64 digits can be easily conveyed over data channels that can only transmit 7-bit characters.</span></span> <span data-ttu-id="13f48-179"><xref:System.Convert> Класс включает следующие методы для поддержки кодировки base64: Набор методов поддерживает преобразование массива байтов и обратно <xref:System.String> или и из массива знаков Юникода, состоящее из цифр в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="13f48-179">The <xref:System.Convert> class includes the following methods to support base64 encoding: A set of methods support converting an array of bytes to and from a <xref:System.String> or to and from an array of Unicode characters consisting of base-64 digit characters.</span></span>  
  
-   <span data-ttu-id="13f48-180"><xref:System.Convert.ToBase64String%2A>, который преобразует массив байтов в строку в кодировке base 64.</span><span class="sxs-lookup"><span data-stu-id="13f48-180"><xref:System.Convert.ToBase64String%2A>, which converts a byte array to a base64-encoded string.</span></span>  
  
-   <span data-ttu-id="13f48-181"><xref:System.Convert.ToBase64CharArray%2A>, который преобразует массив байтов в массив символов в кодировке base 64.</span><span class="sxs-lookup"><span data-stu-id="13f48-181"><xref:System.Convert.ToBase64CharArray%2A>, which converts a byte array to a base64-encoded character array.</span></span>  
  
-   <span data-ttu-id="13f48-182"><xref:System.Convert.FromBase64String%2A>, который преобразует строку в кодировке base64 в массив байтов.</span><span class="sxs-lookup"><span data-stu-id="13f48-182"><xref:System.Convert.FromBase64String%2A>, which converts a base64-encoded string to a byte array.</span></span>  
  
-   <span data-ttu-id="13f48-183"><xref:System.Convert.FromBase64CharArray%2A>, который преобразует массив символов в кодировке base64 в массив байтов.</span><span class="sxs-lookup"><span data-stu-id="13f48-183"><xref:System.Convert.FromBase64CharArray%2A>, which converts a base64-encoded character array to a byte array.</span></span>  
  
<a name="Other"></a>   
## <a name="other-common-conversions"></a><span data-ttu-id="13f48-184">Другие распространенные преобразования</span><span class="sxs-lookup"><span data-stu-id="13f48-184">Other Common Conversions</span></span>  
 <span data-ttu-id="13f48-185">Можно использовать другие классы в .NET Framework для выполнения некоторых преобразований, которые не поддерживаются с помощью статических методов класса <xref:System.Convert> класса.</span><span class="sxs-lookup"><span data-stu-id="13f48-185">You can use other classes in the NET Framework to perform some conversions that are not supported by the static methods of the <xref:System.Convert> class.</span></span>  <span data-ttu-id="13f48-186">Сюда входит следующее.</span><span class="sxs-lookup"><span data-stu-id="13f48-186">These include:</span></span>  
  
 <span data-ttu-id="13f48-187">Преобразование в массивы байтов</span><span class="sxs-lookup"><span data-stu-id="13f48-187">Conversion to byte arrays</span></span>  
 <span data-ttu-id="13f48-188"><xref:System.BitConverter> Класс предоставляет методы для преобразования числовых типов-примитивов (включая <xref:System.Boolean>) обратно в массивы байтов и из байтов массивы примитивных типов данных.</span><span class="sxs-lookup"><span data-stu-id="13f48-188">The <xref:System.BitConverter> class  provides methods that convert the primitive numeric types (including <xref:System.Boolean>) to byte arrays and from byte arrays back to primitive data types.</span></span>  
  
 <span data-ttu-id="13f48-189">Кодирование и декодирование символов</span><span class="sxs-lookup"><span data-stu-id="13f48-189">Character encoding and decoding</span></span>  
 <span data-ttu-id="13f48-190"><xref:System.Text.Encoding> Класс и его производные классы (такие как <xref:System.Text.UnicodeEncoding> и <xref:System.Text.UTF8Encoding>) предоставляют методы для кодирования массива символов или строку (то есть для преобразования их в массив байтов в определенной кодировке) и декодировать закодированных байтов массива (т. е Преобразуйте массив байтов символов Юникода в кодировке UTF16.</span><span class="sxs-lookup"><span data-stu-id="13f48-190">The <xref:System.Text.Encoding> class and its derived classes (such as <xref:System.Text.UnicodeEncoding> and <xref:System.Text.UTF8Encoding>) provide methods to encode a character array or a string (that is, to convert them to a byte array in a particular encoding) and to decode an encoded byte array (that is, convert a byte array back to UTF16-encoded Unicode characters.</span></span> <span data-ttu-id="13f48-191">Дополнительные сведения см. в разделе [кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)</span><span class="sxs-lookup"><span data-stu-id="13f48-191">For more information, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-192">В следующем примере некоторые методы преобразования в <xref:System.Convert> класса, включая <xref:System.Convert.ToInt32%2A>, <xref:System.Convert.ToBoolean%2A>, и <xref:System.Convert.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="13f48-192">The following example demonstrates some of the conversion methods in the <xref:System.Convert> class, including <xref:System.Convert.ToInt32%2A>, <xref:System.Convert.ToBoolean%2A>, and <xref:System.Convert.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Convert#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert/CPP/converter.cpp#1)]
 [!code-csharp[System.Convert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert/CS/converter.cs#1)]
 [!code-vb[System.Convert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert/VB/converter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IConvertible" />
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.SByte" />
    <altmember cref="T:System.Int16" />
    <altmember cref="T:System.Int32" />
    <altmember cref="T:System.Int64" />
    <altmember cref="T:System.Byte" />
    <altmember cref="T:System.UInt16" />
    <altmember cref="T:System.UInt32" />
    <altmember cref="T:System.UInt64" />
    <altmember cref="T:System.Single" />
    <altmember cref="T:System.Double" />
    <altmember cref="T:System.Decimal" />
    <altmember cref="T:System.Boolean" />
    <altmember cref="T:System.Char" />
    <altmember cref="T:System.String" />
    <related type="Article" href="~/docs/standard/base-types/type-conversion.md"><span data-ttu-id="13f48-193">Преобразование типов в .NET Framework</span><span class="sxs-lookup"><span data-stu-id="13f48-193">Type Conversion in the .NET Framework</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="ChangeType">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13f48-194">Возвращает объект указанного типа, значение которого эквивалентно заданному объекту.</span><span class="sxs-lookup"><span data-stu-id="13f48-194">Returns an object of a specified type whose value is equivalent to a specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, Type conversionType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, class System.Type conversionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangeType (value As Object, conversionType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, Type ^ conversionType);" />
      <MemberSignature Language="F#" Value="static member ChangeType : obj * Type -&gt; obj" Usage="System.Convert.ChangeType (value, conversionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="conversionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-195">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-195">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="conversionType"><span data-ttu-id="13f48-196">Тип возвращаемого объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-196">The type of object to return.</span></span></param>
        <summary><span data-ttu-id="13f48-197">Возвращает объект указанного типа, значение которого эквивалентно заданному объекту.</span><span class="sxs-lookup"><span data-stu-id="13f48-197">Returns an object of the specified type and whose value is equivalent to the specified object.</span></span></summary>
        <returns><span data-ttu-id="13f48-198">Объект, тип которого равен <paramref name="conversionType" />, а значение эквивалентно <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-198">An object whose type is <paramref name="conversionType" /> and whose value is equivalent to <paramref name="value" />.</span></span>  
  
<span data-ttu-id="13f48-199">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-199">-or-</span></span> 
<span data-ttu-id="13f48-200">Пустая ссылка (<see langword="Nothing" /> в Visual Basic), если <paramref name="value" /> равняется <see langword="null" />, а <paramref name="conversionType" /> не является типом значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-200">A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is not a value type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-201"><xref:System.Convert.ChangeType%2A> — Это метод преобразования общего назначения, который преобразует объекта, заданного параметром `value` для `conversionType`.</span><span class="sxs-lookup"><span data-stu-id="13f48-201"><xref:System.Convert.ChangeType%2A> is a general-purpose conversion method that converts the object specified by `value` to `conversionType`.</span></span> <span data-ttu-id="13f48-202">`value` Параметр может быть объект любого типа и `conversionType` также может быть <xref:System.Type> , представляющий любой базовый или пользовательский тип.</span><span class="sxs-lookup"><span data-stu-id="13f48-202">The `value` parameter can be an object of any type, and `conversionType` can also be a <xref:System.Type> object that represents any base or custom type.</span></span> <span data-ttu-id="13f48-203">Для успешного преобразования `value` должен реализовывать <xref:System.IConvertible> интерфейс, так как этот метод просто создает оболочку вызова соответствующей <xref:System.IConvertible> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-203">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="13f48-204">Метод требует преобразования из `value` для `conversionType` поддерживаться.</span><span class="sxs-lookup"><span data-stu-id="13f48-204">The method requires that conversion of `value` to `conversionType` be supported.</span></span>  
  
 <span data-ttu-id="13f48-205">Этот метод использует язык и региональные параметры текущего потока для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-205">This method uses the current thread's culture for the conversion.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-206">В следующем примере показано использование метода <xref:System.Convert.ChangeType%2A>.</span><span class="sxs-lookup"><span data-stu-id="13f48-206">The following example illustrates the use of the <xref:System.Convert.ChangeType%2A> method.</span></span>  
  
 [!code-cpp[convertchangetype#1](~/samples/snippets/cpp/VS_Snippets_CLR/convertchangetype/CPP/convertchangetype.cpp#1)]
 [!code-csharp[convertchangetype#1](~/samples/snippets/csharp/VS_Snippets_CLR/convertchangetype/CS/convertchangetype.cs#1)]
 [!code-vb[convertchangetype#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convertchangetype/VB/convertchangetype.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-207">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-207">This conversion is not supported.</span></span>  
  
<span data-ttu-id="13f48-208">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-208">-or-</span></span> 
 <span data-ttu-id="13f48-209">Значение <paramref name="value" /> — <see langword="null" />, а <paramref name="conversionType" /> — это тип значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-209"><paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is a value type.</span></span>  
  
<span data-ttu-id="13f48-210">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-210">-or-</span></span> 
 <span data-ttu-id="13f48-211"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-211"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-212"><paramref name="value" /> не является форматом, распознаваемым типом <paramref name="conversionType" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-212"><paramref name="value" /> is not in a format recognized by <paramref name="conversionType" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-213"><paramref name="value" /> представляет число, которое не входит в диапазон <paramref name="conversionType" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-213"><paramref name="value" /> represents a number that is out of the range of <paramref name="conversionType" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13f48-214"><paramref name="conversionType" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-214"><paramref name="conversionType" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="13f48-215"><see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> Методу можно преобразовать значение перечисления в другой тип.</span><span class="sxs-lookup"><span data-stu-id="13f48-215">The <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> method can convert an enumeration value to another type.</span></span> <span data-ttu-id="13f48-216">Тем не менее не может преобразовать другой тип значения перечисления, даже если исходный тип является базовым типом перечисления.</span><span class="sxs-lookup"><span data-stu-id="13f48-216">However, it cannot convert another type to an enumeration value, even if the source type is the underlying type of the enumeration.</span></span> <span data-ttu-id="13f48-217">Чтобы преобразовать тип в значение перечисления, используйте оператор приведения (в C#) или функции преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="13f48-217">To convert a type to an enumeration value, use a casting operator (in C#) or a conversion function (in Visual Basic).</span></span> <span data-ttu-id="13f48-218">В следующем примере показано преобразование в и из <c>континент</c> значение перечисления.</span><span class="sxs-lookup"><span data-stu-id="13f48-218">The following example illustrates the conversion to and from a <c>Continent</c> enumeration value.</span></span>  
  
<span data-ttu-id="13f48-219">[!code-csharp[System.Convert.ChangeType#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)] [!code-vb[System.Convert.ChangeType#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]</span><span class="sxs-lookup"><span data-stu-id="13f48-219">[!code-csharp[System.Convert.ChangeType#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)] [!code-vb[System.Convert.ChangeType#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]</span></span> 
<span data-ttu-id="13f48-220"><see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> Методу можно преобразовать обнуляемый тип в другой тип.</span><span class="sxs-lookup"><span data-stu-id="13f48-220">The <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> method can convert a nullable type to another type.</span></span> <span data-ttu-id="13f48-221">Тем не менее, не может преобразовать другой тип значение обнуляемого типа, даже если <paramref name="conversionType" /> является базовым типом объекта <see cref="T:System.Nullable`1" />. Чтобы выполнить преобразование, можно использовать оператор приведения (в C#) или функции преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="13f48-221">However, it cannot convert another type to a value of a nullable type, even if <paramref name="conversionType" /> is the underlying type of the <see cref="T:System.Nullable`1" />.To perform the conversion, you can use a casting operator (in C#) or a conversion function (in Visual Basic).</span></span> <span data-ttu-id="13f48-222">В следующем примере показано преобразование в и из типа, допускающего значение NULL.</span><span class="sxs-lookup"><span data-stu-id="13f48-222">The following example illustrates the conversion to and from a nullable type.</span></span>  
  
<span data-ttu-id="13f48-223">[!code-csharp[System.Convert.ChangeType#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable.cs#7)] [!code-vb[System.Convert.ChangeType#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable.vb#7)]</span><span class="sxs-lookup"><span data-stu-id="13f48-223">[!code-csharp[System.Convert.ChangeType#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable.cs#7)] [!code-vb[System.Convert.ChangeType#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable.vb#7)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, TypeCode typeCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, valuetype System.TypeCode typeCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.TypeCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, TypeCode typeCode);" />
      <MemberSignature Language="F#" Value="static member ChangeType : obj * TypeCode -&gt; obj" Usage="System.Convert.ChangeType (value, typeCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeCode" Type="System.TypeCode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-224">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-224">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="typeCode"><span data-ttu-id="13f48-225">Тип возвращаемого объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-225">The type of object to return.</span></span></param>
        <summary><span data-ttu-id="13f48-226">Возвращает объект указанного типа, чье значение эквивалентно заданному объекту.</span><span class="sxs-lookup"><span data-stu-id="13f48-226">Returns an object of the specified type whose value is equivalent to the specified object.</span></span></summary>
        <returns><span data-ttu-id="13f48-227">Объект, базовый тип которого равен <paramref name="typeCode" />, а значение эквивалентно <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-227">An object whose underlying type is <paramref name="typeCode" /> and whose value is equivalent to <paramref name="value" />.</span></span>  
  
<span data-ttu-id="13f48-228">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-228">-or-</span></span> 
<span data-ttu-id="13f48-229">Пустая ссылка (<see langword="Nothing" /> в Visual Basic), если <paramref name="value" /> равняется <see langword="null" />, а <paramref name="typeCode" /> равняется <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" /> или <see cref="F:System.TypeCode.Object" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-229">A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> is <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" />, or <see cref="F:System.TypeCode.Object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-230"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> — Это метод преобразования общего назначения, который преобразует объекта, заданного параметром `value` Предопределенный тип, указанный в `typeCode`.</span><span class="sxs-lookup"><span data-stu-id="13f48-230"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> is a general-purpose conversion method that converts the object specified by `value` to a predefined type specified by `typeCode`.</span></span> <span data-ttu-id="13f48-231">`value` Параметр может быть объект любого типа.</span><span class="sxs-lookup"><span data-stu-id="13f48-231">The `value` parameter can be an object of any type.</span></span> <span data-ttu-id="13f48-232">Для успешного преобразования `value` должен реализовывать <xref:System.IConvertible> интерфейс, так как этот метод просто создает оболочку вызова соответствующей <xref:System.IConvertible> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-232">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="13f48-233">Метод также требует преобразования из `value` для `typeCode` поддерживаться.</span><span class="sxs-lookup"><span data-stu-id="13f48-233">The method also requires that conversion of `value` to `typeCode` be supported.</span></span>  
  
 <span data-ttu-id="13f48-234"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> Метод не поддерживает преобразование `value` к пользовательскому типу.</span><span class="sxs-lookup"><span data-stu-id="13f48-234">The <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> method does not support the conversion of `value` to a custom type.</span></span> <span data-ttu-id="13f48-235">Чтобы выполнить такое преобразование, вызовите <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%29> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-235">To perform such a conversion, call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-236">В следующем примере показано, как использовать <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> метод, чтобы изменить <xref:System.Object> типу, заданному <xref:System.TypeCode> параметр, если это возможно.</span><span class="sxs-lookup"><span data-stu-id="13f48-236">The following example illustrates how to use the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> method to change an <xref:System.Object> to the type specified by the <xref:System.TypeCode> parameter, if possible.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype_01.cpp#2)]
 [!code-csharp[System.Convert.ChangeType#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype01.cs#2)]
 [!code-vb[System.Convert.ChangeType#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype01.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-237">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-237">This conversion is not supported.</span></span>  
  
<span data-ttu-id="13f48-238">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-238">-or-</span></span> 
 <span data-ttu-id="13f48-239"><paramref name="value" /> равен <see langword="null" /> и <paramref name="typeCode" /> указывает тип значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-239"><paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> specifies a value type.</span></span>  
  
<span data-ttu-id="13f48-240">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-240">-or-</span></span> 
 <span data-ttu-id="13f48-241"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-241"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-242"><paramref name="value" /> не является форматом, распознаваемым типом <paramref name="typeCode" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-242"><paramref name="value" /> is not in a format recognized by the <paramref name="typeCode" /> type.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-243"><paramref name="value" /> представляет число, которое не входит в диапазон типа <paramref name="typeCode" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-243"><paramref name="value" /> represents a number that is out of the range of the <paramref name="typeCode" /> type.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="13f48-244"><paramref name="typeCode" /> недопустим.</span><span class="sxs-lookup"><span data-stu-id="13f48-244"><paramref name="typeCode" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, Type conversionType, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, class System.Type conversionType, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangeType (value As Object, conversionType As Type, provider As IFormatProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, Type ^ conversionType, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ChangeType : obj * Type * IFormatProvider -&gt; obj" Usage="System.Convert.ChangeType (value, conversionType, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="conversionType" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-245">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-245">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="conversionType"><span data-ttu-id="13f48-246">Тип возвращаемого объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-246">The type of object to return.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-247">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-247">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-248">Возвращает объект указанного типа, чье значение эквивалентно заданному объекту.</span><span class="sxs-lookup"><span data-stu-id="13f48-248">Returns an object of the specified type whose value is equivalent to the specified object.</span></span> <span data-ttu-id="13f48-249">Параметр предоставляет сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-249">A parameter supplies culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-250">Объект, тип которого равен <paramref name="conversionType" />, а значение эквивалентно <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-250">An object whose type is <paramref name="conversionType" /> and whose value is equivalent to <paramref name="value" />.</span></span>  
  
<span data-ttu-id="13f48-251">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-251">-or-</span></span> 
 <span data-ttu-id="13f48-252"><paramref name="value" />, если <see cref="T:System.Type" /> параметра <paramref name="value" /> равен <paramref name="conversionType" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-252"><paramref name="value" />, if the <see cref="T:System.Type" /> of <paramref name="value" /> and <paramref name="conversionType" /> are equal.</span></span>  
  
<span data-ttu-id="13f48-253">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-253">-or-</span></span> 
<span data-ttu-id="13f48-254">Пустая ссылка (<see langword="Nothing" /> в Visual Basic), если <paramref name="value" /> равняется <see langword="null" />, а <paramref name="conversionType" /> не является типом значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-254">A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is not a value type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-255"><xref:System.Convert.ChangeType%2A> — Это метод преобразования общего назначения, который преобразует объекта, заданного параметром `value` для `conversionType`.</span><span class="sxs-lookup"><span data-stu-id="13f48-255"><xref:System.Convert.ChangeType%2A> is a general-purpose conversion method that converts the object specified by `value` to `conversionType`.</span></span> <span data-ttu-id="13f48-256">`value` Параметр может быть объект любого типа и `conversionType` также может быть <xref:System.Type> , представляющий любой базовый или пользовательский тип.</span><span class="sxs-lookup"><span data-stu-id="13f48-256">The `value` parameter can be an object of any type, and `conversionType` can also be a <xref:System.Type> object that represents any base or custom type.</span></span> <span data-ttu-id="13f48-257">Для успешного преобразования `value` должен реализовывать <xref:System.IConvertible> интерфейс, так как этот метод просто создает оболочку вызова соответствующей <xref:System.IConvertible> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-257">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="13f48-258">Метод требует преобразования из `value` для `conversionType` поддерживаться.</span><span class="sxs-lookup"><span data-stu-id="13f48-258">The method requires that conversion of `value` to `conversionType` be supported.</span></span>  
  
 <span data-ttu-id="13f48-259">`provider` Параметр <xref:System.IFormatProvider> реализация, которая предоставляет сведения о форматировании для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-259">The `provider` parameter is an <xref:System.IFormatProvider> implementation that supplies formatting information for the conversion.</span></span> <span data-ttu-id="13f48-260">Используется ли и как этот параметр зависит от базовой <xref:System.IConvertible> реализации.</span><span class="sxs-lookup"><span data-stu-id="13f48-260">Whether and how this parameter is used depends on the underlying <xref:System.IConvertible> implementation.</span></span> <span data-ttu-id="13f48-261">Если `value` — это тип базовых данных `provider` используется только для следующих преобразований:</span><span class="sxs-lookup"><span data-stu-id="13f48-261">If `value` is a base data type, `provider` is used only for the following conversions:</span></span>  
  
-   <span data-ttu-id="13f48-262">Преобразование из числа в строку или строку в число.</span><span class="sxs-lookup"><span data-stu-id="13f48-262">Conversion from a number to a string, or from a string to a number.</span></span> <span data-ttu-id="13f48-263">`provider` должно быть <xref:System.Globalization.CultureInfo> объекта, <xref:System.Globalization.NumberFormatInfo> объекта или пользовательского <xref:System.IFormatProvider> реализация, которая возвращает <xref:System.Globalization.NumberFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-263">`provider` must be a <xref:System.Globalization.CultureInfo> object, a <xref:System.Globalization.NumberFormatInfo> object, or a custom <xref:System.IFormatProvider> implementation that returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="13f48-264">Тем не менее так как <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> метод выполняет преобразование с помощью описатель формата «G» по умолчанию, `provider` параметр не оказывает влияния `value` или целевой тип — целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-264">However, because the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method performs the conversion using the default "G" format specifier, the `provider` parameter has no effect if `value` or the target type is an unsigned integer.</span></span> <span data-ttu-id="13f48-265">Если `provider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, представляющий текущий язык потока.</span><span class="sxs-lookup"><span data-stu-id="13f48-265">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
-   <span data-ttu-id="13f48-266">Преобразование из <xref:System.DateTime> значение в строку или строки, <xref:System.DateTime> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-266">Conversion from a <xref:System.DateTime> value to a string, or from a string to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="13f48-267">`provider` должно быть <xref:System.Globalization.CultureInfo> или <xref:System.Globalization.DateTimeFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-267">`provider` must be a <xref:System.Globalization.CultureInfo> or <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="13f48-268">Если `provider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, представляющий текущий язык потока.</span><span class="sxs-lookup"><span data-stu-id="13f48-268">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
 <span data-ttu-id="13f48-269">Если `value` имеет тип определяется приложением, его <xref:System.IConvertible> реализация может использовать `provider` параметра.</span><span class="sxs-lookup"><span data-stu-id="13f48-269">If `value` is an application-defined type, its <xref:System.IConvertible> implementation may use the `provider` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-270">В следующем примере определяется класс `Temperature` , реализующий интерфейс <xref:System.IConvertible> .</span><span class="sxs-lookup"><span data-stu-id="13f48-270">The following example defines a `Temperature` class that implements the <xref:System.IConvertible> interface.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype03.cpp#3)]
 [!code-csharp[System.Convert.ChangeType#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype03.cs#3)]
 [!code-vb[System.Convert.ChangeType#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype03.vb#3)]  
  
 <span data-ttu-id="13f48-271">В следующем примере создается экземпляр `Temperature` класс и вызывает метод <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> метод для преобразования его в основные числовые типы, поддерживаемые платформой .NET Framework, позволяющая <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="13f48-271">The following example creates an instance of the `Temperature` class and calls the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method to convert it to the basic numeric types supported by the .NET Framework and to a <xref:System.String>.</span></span> <span data-ttu-id="13f48-272">Этот пример иллюстрирует <xref:System.Convert.ChangeType%2A> метод создает оболочку для вызова типа источника <xref:System.IConvertible> реализации.</span><span class="sxs-lookup"><span data-stu-id="13f48-272">It illustrates that the <xref:System.Convert.ChangeType%2A> method wraps a call to the source type's <xref:System.IConvertible> implementation.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype03.cpp#4)]
 [!code-csharp[System.Convert.ChangeType#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype03.cs#4)]
 [!code-vb[System.Convert.ChangeType#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype03.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-273">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-273">This conversion is not supported.</span></span>  
  
<span data-ttu-id="13f48-274">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-274">-or-</span></span> 
 <span data-ttu-id="13f48-275">Значение <paramref name="value" /> — <see langword="null" />, а <paramref name="conversionType" /> — это тип значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-275"><paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is a value type.</span></span>  
  
<span data-ttu-id="13f48-276">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-276">-or-</span></span> 
 <span data-ttu-id="13f48-277"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-277"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-278"><paramref name="value" /> не является форматом для типа <paramref name="conversionType" />, распознаваемым поставщиком <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-278"><paramref name="value" /> is not in a format for <paramref name="conversionType" /> recognized by <paramref name="provider" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-279"><paramref name="value" /> представляет число, которое не входит в диапазон <paramref name="conversionType" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-279"><paramref name="value" /> represents a number that is out of the range of <paramref name="conversionType" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13f48-280"><paramref name="conversionType" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-280"><paramref name="conversionType" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="13f48-281"><see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> Методу можно преобразовать значение перечисления в другой тип.</span><span class="sxs-lookup"><span data-stu-id="13f48-281">The <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> method can convert an enumeration value to another type.</span></span> <span data-ttu-id="13f48-282">Тем не менее не может преобразовать другой тип значения перечисления, даже если исходный тип является базовым типом перечисления.</span><span class="sxs-lookup"><span data-stu-id="13f48-282">However, it cannot convert another type to an enumeration value, even if the source type is the underlying type of the enumeration.</span></span> <span data-ttu-id="13f48-283">Чтобы преобразовать тип в значение перечисления, используйте оператор приведения (в C#) или функции преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="13f48-283">To convert a type to an enumeration value, use a casting operator (in C#) or a conversion function (in Visual Basic).</span></span> <span data-ttu-id="13f48-284">В следующем примере показано преобразование в и из <c>континент</c> значение перечисления.</span><span class="sxs-lookup"><span data-stu-id="13f48-284">The following example illustrates the conversion to and from a <c>Continent</c> enumeration value.</span></span>  
  
<span data-ttu-id="13f48-285">[!code-csharp[System.Convert.ChangeType#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)] [!code-vb[System.Convert.ChangeType#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]</span><span class="sxs-lookup"><span data-stu-id="13f48-285">[!code-csharp[System.Convert.ChangeType#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)] [!code-vb[System.Convert.ChangeType#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]</span></span> 
<span data-ttu-id="13f48-286"><see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> Методу можно преобразовать обнуляемый тип в другой тип.</span><span class="sxs-lookup"><span data-stu-id="13f48-286">The <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> method can convert a nullable type to another type.</span></span> <span data-ttu-id="13f48-287">Тем не менее, не может преобразовать другой тип значение обнуляемого типа, даже если <paramref name="conversionType" /> является базовым типом объекта <see cref="T:System.Nullable`1" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-287">However, it cannot convert another type to a value of a nullable type, even if <paramref name="conversionType" /> is the underlying type of the <see cref="T:System.Nullable`1" />.</span></span> <span data-ttu-id="13f48-288">Чтобы выполнить преобразование, можно использовать оператор приведения (в C#) или функции преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="13f48-288">To perform the conversion, you can use a casting operator (in C#) or a conversion function (in Visual Basic).</span></span> <span data-ttu-id="13f48-289">В следующем примере показано преобразование в и из типа, допускающего значение NULL.</span><span class="sxs-lookup"><span data-stu-id="13f48-289">The following example illustrates the conversion to and from a nullable type.</span></span>  
  
<span data-ttu-id="13f48-290">[!code-csharp[System.Convert.ChangeType#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable_1.cs#8)] [!code-vb[System.Convert.ChangeType#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable_1.vb#8)]</span><span class="sxs-lookup"><span data-stu-id="13f48-290">[!code-csharp[System.Convert.ChangeType#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable_1.cs#8)] [!code-vb[System.Convert.ChangeType#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable_1.vb#8)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, TypeCode typeCode, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, valuetype System.TypeCode typeCode, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, TypeCode typeCode, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ChangeType : obj * TypeCode * IFormatProvider -&gt; obj" Usage="System.Convert.ChangeType (value, typeCode, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeCode" Type="System.TypeCode" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-291">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-291">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="typeCode"><span data-ttu-id="13f48-292">Тип возвращаемого объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-292">The type of object to return.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-293">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-293">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-294">Возвращает объект указанного типа, чье значение эквивалентно заданному объекту.</span><span class="sxs-lookup"><span data-stu-id="13f48-294">Returns an object of the specified type whose value is equivalent to the specified object.</span></span> <span data-ttu-id="13f48-295">Параметр предоставляет сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-295">A parameter supplies culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-296">Объект, базовый тип которого равен <paramref name="typeCode" />, а значение эквивалентно <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-296">An object whose underlying type is <paramref name="typeCode" /> and whose value is equivalent to <paramref name="value" />.</span></span>  
  
<span data-ttu-id="13f48-297">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-297">-or-</span></span> 
<span data-ttu-id="13f48-298">Пустая ссылка (<see langword="Nothing" /> в Visual Basic), если <paramref name="value" /> равняется <see langword="null" />, а <paramref name="typeCode" /> равняется <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" /> или <see cref="F:System.TypeCode.Object" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-298">A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> is <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" />, or <see cref="F:System.TypeCode.Object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-299"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> — Это метод преобразования общего назначения, который преобразует объекта, заданного параметром `value` Предопределенный тип, указанный в `typeCode`.</span><span class="sxs-lookup"><span data-stu-id="13f48-299"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> is a general-purpose conversion method that converts the object specified by `value` to a predefined type specified by `typeCode`.</span></span> <span data-ttu-id="13f48-300">`value` Параметр может быть объект любого типа.</span><span class="sxs-lookup"><span data-stu-id="13f48-300">The `value` parameter can be an object of any type.</span></span> <span data-ttu-id="13f48-301">Для успешного преобразования `value` должен реализовывать <xref:System.IConvertible> интерфейс, так как этот метод просто создает оболочку вызова соответствующей <xref:System.IConvertible> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-301">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="13f48-302">Метод также требует преобразования из `value` для `typeCode` поддерживаться.</span><span class="sxs-lookup"><span data-stu-id="13f48-302">The method also requires that conversion of `value` to `typeCode` be supported.</span></span>  
  
 <span data-ttu-id="13f48-303"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> Метод не поддерживает преобразование `value` к пользовательскому типу.</span><span class="sxs-lookup"><span data-stu-id="13f48-303">The <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method does not support the conversion of `value` to a custom type.</span></span> <span data-ttu-id="13f48-304">Чтобы выполнить такое преобразование, вызовите <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-304">To perform such a conversion, call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="13f48-305">`provider` Параметр <xref:System.IFormatProvider> реализация, которая предоставляет сведения о форматировании для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-305">The `provider` parameter is an <xref:System.IFormatProvider> implementation that supplies formatting information for the conversion.</span></span> <span data-ttu-id="13f48-306">Используется ли и как этот параметр зависит от базовой <xref:System.IConvertible> реализации.</span><span class="sxs-lookup"><span data-stu-id="13f48-306">Whether and how this parameter is used depends on the underlying <xref:System.IConvertible> implementation.</span></span> <span data-ttu-id="13f48-307">Если `value` — это тип базовых данных `provider` используется только для следующих преобразований.</span><span class="sxs-lookup"><span data-stu-id="13f48-307">If `value` is a base data type, `provider` is used only for the following conversions.</span></span> <span data-ttu-id="13f48-308">Если `null` <xref:System.IFormatProvider> аргумент, передаваемый этим методам <xref:System.Globalization.CultureInfo> используется объект, представляющий текущий язык потока.</span><span class="sxs-lookup"><span data-stu-id="13f48-308">If a `null`<xref:System.IFormatProvider> argument is passed to these methods, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
-   <span data-ttu-id="13f48-309">Преобразование из числа в строку или строку в число.</span><span class="sxs-lookup"><span data-stu-id="13f48-309">Conversion from a number to a string, or from a string to a number.</span></span> <span data-ttu-id="13f48-310">`provider` должно быть <xref:System.Globalization.CultureInfo> объекта, <xref:System.Globalization.NumberFormatInfo> объекта или пользовательского <xref:System.IFormatProvider> реализация, которая возвращает <xref:System.Globalization.NumberFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-310">`provider` must be a <xref:System.Globalization.CultureInfo> object, a <xref:System.Globalization.NumberFormatInfo> object, or a custom <xref:System.IFormatProvider> implementation that returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="13f48-311">Тем не менее так как <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> метод выполняет преобразование с помощью описатель формата «G» по умолчанию, `provider` параметр не оказывает влияния `value` или целевой тип — целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-311">However, because the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method performs the conversion using the default "G" format specifier, the `provider` parameter has no effect if `value` or the target type is an unsigned integer.</span></span>  
  
-   <span data-ttu-id="13f48-312">Преобразование из <xref:System.DateTime> значение в строку или строки, <xref:System.DateTime> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-312">Conversion from a <xref:System.DateTime> value to a string, or from a string to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="13f48-313">`provider` должно быть <xref:System.Globalization.CultureInfo> или <xref:System.Globalization.DateTimeFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-313">`provider` must be a <xref:System.Globalization.CultureInfo> or <xref:System.Globalization.DateTimeFormatInfo> object.</span></span>  
  
 <span data-ttu-id="13f48-314">Если `value` имеет тип определяется приложением, его <xref:System.IConvertible> реализация может использовать `provider` параметра.</span><span class="sxs-lookup"><span data-stu-id="13f48-314">If `value` is an application-defined type, its <xref:System.IConvertible> implementation may use the `provider` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-315">В следующем примере определяется поставщик настраиваемого формата с именем `InterceptProvider` , указывающее, когда его <xref:System.IFormatProvider.GetFormat%2A> метод вызывается и возвращает <xref:System.Globalization.NumberFormatInfo> региональных параметров fr-FR и <xref:System.Globalization.DateTimeFormatInfo> объекта для региональных параметров en US.</span><span class="sxs-lookup"><span data-stu-id="13f48-315">The following example defines a custom format provider named `InterceptProvider` that indicates when its <xref:System.IFormatProvider.GetFormat%2A> method is called and returns a <xref:System.Globalization.NumberFormatInfo> for the fr-FR culture and a <xref:System.Globalization.DateTimeFormatInfo> object for the en-US culture.</span></span> <span data-ttu-id="13f48-316">Этот поставщик формата используется во всех вызовах <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-316">This format provider is used in all calls to the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="13f48-317">Затем в примере создается массив с <xref:System.Double> и <xref:System.DateTime> значение и выполняет повторные вызовы <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> с каждого значения и каждый член <xref:System.TypeCode> перечисления.</span><span class="sxs-lookup"><span data-stu-id="13f48-317">The example then creates an array with a <xref:System.Double> and a <xref:System.DateTime> value and makes repeated calls to <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> with each value and each member of the <xref:System.TypeCode> enumeration.</span></span> <span data-ttu-id="13f48-318">В примере показано, когда данный метод использует <xref:System.IFormatProvider> параметр и также демонстрируется использование `provider` значение параметра для выполнения форматирования с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-318">The example illustrates when the method uses the <xref:System.IFormatProvider> parameter and also illustrates the use of the `provider` parameter to perform culture-sensitive formatting.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype00.cpp#1)]
 [!code-csharp[System.Convert.ChangeType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype00.cs#1)]
 [!code-vb[System.Convert.ChangeType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype00.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-319">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-319">This conversion is not supported.</span></span>  
  
<span data-ttu-id="13f48-320">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-320">-or-</span></span> 
 <span data-ttu-id="13f48-321"><paramref name="value" /> равен <see langword="null" /> и <paramref name="typeCode" /> указывает тип значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-321"><paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> specifies a value type.</span></span>  
  
<span data-ttu-id="13f48-322">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-322">-or-</span></span> 
 <span data-ttu-id="13f48-323"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-323"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-324"><paramref name="value" /> не является форматом для типа <paramref name="typeCode" />, распознаваемым <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-324"><paramref name="value" /> is not in a format for the <paramref name="typeCode" /> type recognized by <paramref name="provider" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-325"><paramref name="value" /> представляет число, которое не входит в диапазон типа <paramref name="typeCode" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-325"><paramref name="value" /> represents a number that is out of the range of the <paramref name="typeCode" /> type.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="13f48-326"><paramref name="typeCode" /> недопустим.</span><span class="sxs-lookup"><span data-stu-id="13f48-326"><paramref name="typeCode" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DBNull">
      <MemberSignature Language="C#" Value="public static readonly object DBNull;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object DBNull" />
      <MemberSignature Language="DocId" Value="F:System.Convert.DBNull" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DBNull As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ DBNull;" />
      <MemberSignature Language="F#" Value=" staticval mutable DBNull : obj" Usage="System.Convert.DBNull" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13f48-327">Константа, представляющая не содержащий данных столбец базы данных, то есть значение NULL базы данных.</span><span class="sxs-lookup"><span data-stu-id="13f48-327">A constant that represents a database column that is absent of data; that is, database null.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-328"><xref:System.Convert.DBNull> Эквивалентно <xref:System.DBNull.Value?displayProperty=nameWithType>, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="13f48-328">The <xref:System.Convert.DBNull> field is equivalent to <xref:System.DBNull.Value?displayProperty=nameWithType>, as the following example shows.</span></span>  
  
 [!code-csharp[System.Convert.DBNull#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.dbnull/cs/dbnull1.cs#1)]
 [!code-vb[System.Convert.DBNull#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.dbnull/vb/dbnull1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DBNull" />
        <altmember cref="F:System.DBNull.Value" />
      </Docs>
    </Member>
    <Member MemberName="FromBase64CharArray">
      <MemberSignature Language="C#" Value="public static byte[] FromBase64CharArray (char[] inArray, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] FromBase64CharArray(char[] inArray, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBase64CharArray (inArray As Char(), offset As Integer, length As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ FromBase64CharArray(cli::array &lt;char&gt; ^ inArray, int offset, int length);" />
      <MemberSignature Language="F#" Value="static member FromBase64CharArray : char[] * int * int -&gt; byte[]" Usage="System.Convert.FromBase64CharArray (inArray, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inArray"><span data-ttu-id="13f48-329">Массив знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="13f48-329">A Unicode character array.</span></span></param>
        <param name="offset"><span data-ttu-id="13f48-330">Позиция в массиве <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-330">A position within <paramref name="inArray" />.</span></span></param>
        <param name="length"><span data-ttu-id="13f48-331">Число преобразуемых элементов массива <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-331">The number of elements in <paramref name="inArray" /> to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-332">Преобразует подмножество массива знаков Юникода, представляющих двоичные данные в виде цифр в кодировке Base64, в эквивалентный массив 8-разрядных целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-332">Converts a subset of a Unicode character array, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.</span></span> <span data-ttu-id="13f48-333">Параметры задают подмножество входного массива и количество преобразуемых элементов.</span><span class="sxs-lookup"><span data-stu-id="13f48-333">Parameters specify the subset in the input array and the number of elements to convert.</span></span></summary>
        <returns><span data-ttu-id="13f48-334">Массив 8-битовых целых чисел без знака, эквивалентный <paramref name="length" /> элементам с позиции <paramref name="offset" /> в массиве <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-334">An array of 8-bit unsigned integers equivalent to <paramref name="length" /> elements at position <paramref name="offset" /> in <paramref name="inArray" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-335">`inArray` он состоит из цифр в кодировке Base64, пробелы и конечные символы заполнения.</span><span class="sxs-lookup"><span data-stu-id="13f48-335">`inArray` is composed of base-64 digits, white-space characters, and trailing padding characters.</span></span> <span data-ttu-id="13f48-336">Base-64 в порядке возрастания являются ли они прописные буквы «A» до «Z», строчные буквы «» до «z», цифры от «0» до «9» и символы «+» и «/».</span><span class="sxs-lookup"><span data-stu-id="13f48-336">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", lowercase characters "a" to "z", numerals "0" to "9", and the symbols "+" and "/".</span></span>  
  
 <span data-ttu-id="13f48-337">Символы пробелов, имена в Юникоде и их шестнадцатеричных кодовых позиций, tab (символ табуляции, U + 0009), символ новой строки (перевод строки, U + 000A), символ возврата каретки (возврат каретки, U + 000D) и пробел (пробел, U + 0020).</span><span class="sxs-lookup"><span data-stu-id="13f48-337">The white-space characters, and their Unicode names and hexadecimal code points, are tab (CHARACTER TABULATION, U+0009), newline (LINE FEED, U+000A), carriage return (CARRIAGE RETURN, U+000D), and blank (SPACE, U+0020).</span></span> <span data-ttu-id="13f48-338">Произвольное число символы-разделители могут присутствовать в `inArray` потому, что все пробелы учитываются.</span><span class="sxs-lookup"><span data-stu-id="13f48-338">An arbitrary number of white-space characters can appear in `inArray` because all white-space characters are ignored.</span></span>  
  
 <span data-ttu-id="13f48-339">Операции символ, «=», используемый для заполнения в конце.</span><span class="sxs-lookup"><span data-stu-id="13f48-339">The valueless character, "=", is used for trailing padding.</span></span> <span data-ttu-id="13f48-340">Конец `inArray` может состоять из нуля, одного или двух символов заполнения.</span><span class="sxs-lookup"><span data-stu-id="13f48-340">The end of `inArray` can consist of zero, one, or two padding characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="13f48-341"><xref:System.Convert.FromBase64CharArray%2A> Метод предназначен для обработки в массив один символ, содержащий все данные для декодирования.</span><span class="sxs-lookup"><span data-stu-id="13f48-341">The <xref:System.Convert.FromBase64CharArray%2A> method is designed to process a single character array that contains all the data to be decoded.</span></span> <span data-ttu-id="13f48-342">Чтобы декодировать base-64 символьные данные из потока, используйте <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType> класса.</span><span class="sxs-lookup"><span data-stu-id="13f48-342">To decode base-64 character data from a stream, use the <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-343">В следующем примере показано использование <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> метод декодировать данные в кодировке UUENCODE (base-64) и сохраните его как Вывод двоичных данных.</span><span class="sxs-lookup"><span data-stu-id="13f48-343">The following example demonstrates the use of the <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to decode UUencoded (base-64) data and save it as binary output.</span></span>  
  
 [!code-cpp[System.Convert UUEncodeDecode functions#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CPP/class1.cpp#3)]
 [!code-csharp[System.Convert UUEncodeDecode functions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CS/class1.cs#3)]
 [!code-vb[System.Convert UUEncodeDecode functions#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/VB/class1.vb#3)]  
  
 <span data-ttu-id="13f48-344">В следующем примере демонстрируется <xref:System.Convert.ToBase64CharArray%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%2CSystem.Base64FormattingOptions%29> и <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> методы.</span><span class="sxs-lookup"><span data-stu-id="13f48-344">The following example demonstrates the <xref:System.Convert.ToBase64CharArray%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%2CSystem.Base64FormattingOptions%29> and <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> methods.</span></span> <span data-ttu-id="13f48-345">Входные данные делятся на группы по три байта (24 бита) каждого.</span><span class="sxs-lookup"><span data-stu-id="13f48-345">The input is divided into groups of three bytes (24 bits) each.</span></span> <span data-ttu-id="13f48-346">Следовательно каждая группа состоит из четырех чисел 6 бит, где каждое число в диапазоне от decimal от 0 до 63.</span><span class="sxs-lookup"><span data-stu-id="13f48-346">Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</span></span> <span data-ttu-id="13f48-347">В этом примере имеется 85 3 байта групп один байт.</span><span class="sxs-lookup"><span data-stu-id="13f48-347">In this example, there are 85 3-byte groups with one byte remaining.</span></span> <span data-ttu-id="13f48-348">Первая группа состоит из шестнадцатеричных значений 00, 01 и 02, в которых получаются четыре 6-разрядных значений, равным десятичное 0, 0, 4 и 2.</span><span class="sxs-lookup"><span data-stu-id="13f48-348">The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</span></span> <span data-ttu-id="13f48-349">Эти четыре значения соответствуют base-64 цифры, «», «», «E» и «C» в начале выходных данных.</span><span class="sxs-lookup"><span data-stu-id="13f48-349">Those four values correspond to the base-64 digits, "A", "A", "E", and "C", at the beginning of the output.</span></span>  
  
 <span data-ttu-id="13f48-350">Если существует целое количество групп 3 байта, оставшиеся байты входные данные дополняются нулями до полной группы.</span><span class="sxs-lookup"><span data-stu-id="13f48-350">If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</span></span> <span data-ttu-id="13f48-351">В этом примере значение последнего байта является шестнадцатеричное FF.</span><span class="sxs-lookup"><span data-stu-id="13f48-351">In this example, the value of the last byte is hexadecimal FF.</span></span> <span data-ttu-id="13f48-352">Первые 6 бит равны десятичному числу 63, соответствующее цифре base-64 «/» в конце выходных данных, и следующие 2 бита заполняются нулями, чтобы выдавать десятичное 48, соответствующее цифре base-64, «w».</span><span class="sxs-lookup"><span data-stu-id="13f48-352">The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</span></span> <span data-ttu-id="13f48-353">Последние два 6-битовых значения являются заполнением и соответствующие операции заполнения символ, «=».</span><span class="sxs-lookup"><span data-stu-id="13f48-353">The last two 6-bit values are padding and correspond to the valueless padding character, "=".</span></span>  
  
 [!code-cpp[convert.tobase64chararray#1](~/samples/snippets/cpp/VS_Snippets_CLR/convert.tobase64chararray/CPP/tb64ca.cpp#1)]
 [!code-csharp[convert.tobase64chararray#1](~/samples/snippets/csharp/VS_Snippets_CLR/convert.tobase64chararray/CS/tb64ca.cs#1)]
 [!code-vb[convert.tobase64chararray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convert.tobase64chararray/VB/tb64ca.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13f48-354"><paramref name="inArray" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-354"><paramref name="inArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="13f48-355">Значение параметра <paramref name="offset" /> или <paramref name="length" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="13f48-355"><paramref name="offset" /> or <paramref name="length" /> is less than 0.</span></span>  
  
<span data-ttu-id="13f48-356">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-356">-or-</span></span> 
 <span data-ttu-id="13f48-357"><paramref name="offset" /> плюс <paramref name="length" /> указывает на позицию за пределами <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-357"><paramref name="offset" /> plus <paramref name="length" /> indicates a position not within <paramref name="inArray" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-358">Длина <paramref name="inArray" />, не учитывая символы пробелов, не равна нулю и не кратна 4.</span><span class="sxs-lookup"><span data-stu-id="13f48-358">The length of <paramref name="inArray" />, ignoring white-space characters, is not zero or a multiple of 4.</span></span>  
  
<span data-ttu-id="13f48-359">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-359">-or-</span></span> 
<span data-ttu-id="13f48-360">Недопустимый формат <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-360">The format of <paramref name="inArray" /> is invalid.</span></span> <span data-ttu-id="13f48-361"><paramref name="inArray" /> содержит символ в кодировке, отличной от Base 64, больше двух символов заполнения или символ, не являющийся пробелом, среди символов заполнения.</span><span class="sxs-lookup"><span data-stu-id="13f48-361"><paramref name="inArray" /> contains a non-base-64 character, more than two padding characters, or a non-white-space character among the padding characters.</span></span></exception>
        <altmember cref="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.FromBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="FromBase64String">
      <MemberSignature Language="C#" Value="public static byte[] FromBase64String (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] FromBase64String(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.FromBase64String(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBase64String (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ FromBase64String(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member FromBase64String : string -&gt; byte[]" Usage="System.Convert.FromBase64String s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="13f48-362">Преобразуемая строка.</span><span class="sxs-lookup"><span data-stu-id="13f48-362">The string to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-363">Преобразует заданную строку, представляющую двоичные данные в виде цифр в кодировке Base64, в эквивалентный массив 8-разрядных целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-363">Converts the specified string, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.</span></span></summary>
        <returns><span data-ttu-id="13f48-364">Массив 8-разрядных целых чисел без знака, эквивалентный <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-364">An array of 8-bit unsigned integers that is equivalent to <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-365">`s` он состоит из цифр в кодировке Base64, пробелы и конечные символы заполнения.</span><span class="sxs-lookup"><span data-stu-id="13f48-365">`s` is composed of base-64 digits, white-space characters, and trailing padding characters.</span></span> <span data-ttu-id="13f48-366">Base-64 в порядке возрастания являются ли они прописные буквы «A» до «Z», строчные буквы «» до «z», цифры от «0» до «9» и символы «+» и «/».</span><span class="sxs-lookup"><span data-stu-id="13f48-366">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", lowercase characters "a" to "z", numerals "0" to "9", and the symbols "+" and "/".</span></span>  
  
 <span data-ttu-id="13f48-367">Символы пробелов, имена в Юникоде и их шестнадцатеричных кодовых позиций, tab (символ табуляции, U + 0009), символ новой строки (перевод строки, U + 000A), символ возврата каретки (возврат каретки, U + 000D) и пробел (пробел, U + 0020).</span><span class="sxs-lookup"><span data-stu-id="13f48-367">The white-space characters, and their Unicode names and hexadecimal code points, are tab (CHARACTER TABULATION, U+0009), newline (LINE FEED, U+000A), carriage return (CARRIAGE RETURN, U+000D), and blank (SPACE, U+0020).</span></span> <span data-ttu-id="13f48-368">Произвольное число символы-разделители могут присутствовать в `s` потому, что все пробелы учитываются.</span><span class="sxs-lookup"><span data-stu-id="13f48-368">An arbitrary number of white-space characters can appear in `s` because all white-space characters are ignored.</span></span>  
  
 <span data-ttu-id="13f48-369">Операции символ, «=», используемый для заполнения в конце.</span><span class="sxs-lookup"><span data-stu-id="13f48-369">The valueless character, "=", is used for trailing padding.</span></span> <span data-ttu-id="13f48-370">Конец `s` может состоять из нуля, одного или двух символов заполнения.</span><span class="sxs-lookup"><span data-stu-id="13f48-370">The end of `s` can consist of zero, one, or two padding characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="13f48-371"><xref:System.Convert.FromBase64String%2A> Метод должно обрабатывать одну строку, которая содержит все данные для декодирования.</span><span class="sxs-lookup"><span data-stu-id="13f48-371">The <xref:System.Convert.FromBase64String%2A> method is designed to process a single string that contains all the data to be decoded.</span></span> <span data-ttu-id="13f48-372">Чтобы декодировать base-64 символьные данные из потока, используйте <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType> класса.</span><span class="sxs-lookup"><span data-stu-id="13f48-372">To decode base-64 character data from a stream, use the <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-373">В следующем примере используется <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> метод для преобразования массива байтов в строку в кодировке UUENCODE (base-64), а затем вызывает <xref:System.Convert.FromBase64String%28System.String%29> метод восстановления исходного массива байтов.</span><span class="sxs-lookup"><span data-stu-id="13f48-373">The following example uses the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to convert a byte array to a UUencoded (base-64) string, and then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to restore the original byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String2.cs#1)]
 [!code-vb[System.Convert.ToBase64String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String2.vb#1)]  
  
 <span data-ttu-id="13f48-374">Ниже приведен более сложный пример, который создает 20-элементный массив 32-разрядных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="13f48-374">The following is a more complex example that creates a 20-element array of 32-bit integers.</span></span> <span data-ttu-id="13f48-375">Затем он использует <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType> метода для преобразования каждого элемента в массив байтов, который хранит в соответствующей позиции в буфере, вызвав <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-375">It then uses the <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType> method to convert each element into a byte array, which it stores in the appropriate position in a buffer by calling the <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="13f48-376">Этот буфер передается <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> метод, чтобы создать строку кодировке UUENCODE (base-64).</span><span class="sxs-lookup"><span data-stu-id="13f48-376">This buffer is then passed to the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to create a UUencoded (base-64) string.</span></span>  <span data-ttu-id="13f48-377">Затем он вызывает <xref:System.Convert.FromBase64String%28System.String%29> метод для декодирования строки в кодировке UUENCODE, а вызовы <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> способа преобразовать каждый набор четыре байта (размер 32-разрядное целое число) в целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-377">It then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to decode the UUencoded string, and calls the <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> method to convert each set of four bytes (the size of a 32-bit integer) to an integer.</span></span> <span data-ttu-id="13f48-378">Из примера видно, что исходный массив был успешно восстановлен.</span><span class="sxs-lookup"><span data-stu-id="13f48-378">The output from the example shows that the original array has been successfully restored.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String.cs#2)]
 [!code-vb[System.Convert.ToBase64String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13f48-379"><paramref name="s" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-379"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-380">Длина <paramref name="s" />, не учитывая символы пробелов, не равна нулю и не кратна 4.</span><span class="sxs-lookup"><span data-stu-id="13f48-380">The length of <paramref name="s" />, ignoring white-space characters, is not zero or a multiple of 4.</span></span>  
  
<span data-ttu-id="13f48-381">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-381">-or-</span></span> 
<span data-ttu-id="13f48-382">Недопустимый формат <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-382">The format of <paramref name="s" /> is invalid.</span></span> <span data-ttu-id="13f48-383"><paramref name="s" /> содержит символ в кодировке, отличной от Base 64, больше двух символов заполнения или символ, не являющийся пробелом, среди символов заполнения.</span><span class="sxs-lookup"><span data-stu-id="13f48-383"><paramref name="s" /> contains a non-base-64 character, more than two padding characters, or a non-white space-character among the padding characters.</span></span></exception>
        <altmember cref="M:System.Convert.ToBase64String(System.Byte[])" />
        <altmember cref="T:System.Security.Cryptography.FromBase64Transform" />
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Base64-1c3d9c03"><span data-ttu-id="13f48-384">Пример: .NET Framework 4 Base64 преобразователя</span><span class="sxs-lookup"><span data-stu-id="13f48-384">Sample: .NET Framework 4 Base64 Converter</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public static TypeCode GetTypeCode (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TypeCode GetTypeCode(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.GetTypeCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeCode (value As Object) As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TypeCode GetTypeCode(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member GetTypeCode : obj -&gt; TypeCode" Usage="System.Convert.GetTypeCode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-385">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-385">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <summary><span data-ttu-id="13f48-386">Возвращает <see cref="T:System.TypeCode" /> для заданного объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-386">Returns the <see cref="T:System.TypeCode" /> for the specified object.</span></span></summary>
        <returns><span data-ttu-id="13f48-387"><see cref="T:System.TypeCode" /> для <paramref name="value" /> или <see cref="F:System.TypeCode.Empty" />, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-387">The <see cref="T:System.TypeCode" /> for <paramref name="value" />, or <see cref="F:System.TypeCode.Empty" /> if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public static bool IsDBNull (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDBNull(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.IsDBNull(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDBNull (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDBNull(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member IsDBNull : obj -&gt; bool" Usage="System.Convert.IsDBNull value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-388">Объект.</span><span class="sxs-lookup"><span data-stu-id="13f48-388">An object.</span></span></param>
        <summary><span data-ttu-id="13f48-389">Возвращает значение, указывающее, имеет ли заданный объект тип <see cref="T:System.DBNull" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-389">Returns an indication whether the specified object is of type <see cref="T:System.DBNull" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-390"><see langword="true" />, если <paramref name="value" /> имеет тип <see cref="T:System.DBNull" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-390"><see langword="true" /> if <paramref name="value" /> is of type <see cref="T:System.DBNull" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-391"><xref:System.Convert.IsDBNull%2A> Тесты метод ли `value` равен параметр <xref:System.DBNull.Value?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-391">The <xref:System.Convert.IsDBNull%2A> method tests whether the `value` parameter is equal to <xref:System.DBNull.Value?displayProperty=nameWithType>.</span></span> <span data-ttu-id="13f48-392">Это аналогично следующему коду:</span><span class="sxs-lookup"><span data-stu-id="13f48-392">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Convert.IsDBNull#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.IsDBNull/cs/Form1.cs#1)]
 [!code-vb[System.Convert.IsDBNull#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.IsDBNull/vb/Form1.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="13f48-393"><xref:System.DBNull.Value?displayProperty=nameWithType> используется для указания значения, которое отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-393"><xref:System.DBNull.Value?displayProperty=nameWithType> is used to indicate a value that is missing.</span></span> <span data-ttu-id="13f48-394">Это не эквивалентно `null` или <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-394">It is not equivalent to `null` or to <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="13f48-395">Таким образом, код например `Convert.IsDBNull(null)` в C# или `Convert.IsDBNull(Nothing)` в Visual Basic возвращает`false`.</span><span class="sxs-lookup"><span data-stu-id="13f48-395">Therefore, code such as `Convert.IsDBNull(null)` in C# or `Convert.IsDBNull(Nothing)` in Visual Basic returns`false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-396">В следующем примере используется <xref:System.Data.SqlClient.SqlDataReader> объект для извлечения данных опроса из базы данных.</span><span class="sxs-lookup"><span data-stu-id="13f48-396">The following example uses a <xref:System.Data.SqlClient.SqlDataReader> object to retrieve survey data from a database.</span></span> <span data-ttu-id="13f48-397">Он назначает значения полей для каждой строки в массив, а затем передает их массива элемент <xref:System.Convert.IsDBNull%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-397">It assigns each row's field values to an array, and then passes each array element to the <xref:System.Convert.IsDBNull%2A> method.</span></span> <span data-ttu-id="13f48-398">Если метод возвращает `true`, этот пример назначает строку «Н/д» элемент массива.</span><span class="sxs-lookup"><span data-stu-id="13f48-398">If the method returns `true`, the example assigns the string "NA" to the array element.</span></span> <span data-ttu-id="13f48-399">Затем добавляется массив <xref:System.Windows.Forms.DataGridView.Rows%2A> коллекцию <xref:System.Windows.Forms.DataGridView?displayProperty=nameWithType> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="13f48-399">The array is then added to the <xref:System.Windows.Forms.DataGridView.Rows%2A> collection of a <xref:System.Windows.Forms.DataGridView?displayProperty=nameWithType> control.</span></span>  
  
 [!code-csharp[System.Convert.IsDBNull#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.IsDBNull/cs/Form1.cs#2)]
 [!code-vb[System.Convert.IsDBNull#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.IsDBNull/vb/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DBNull" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToBase64CharArray">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13f48-400">Преобразует подмножество массива 8-разрядных целых чисел без знака в эквивалентное подмножество массива знаков Юникода, состоящее из цифр в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="13f48-400">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span></span></summary>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ToBase64CharArray">
      <MemberSignature Language="C#" Value="public static int ToBase64CharArray (byte[] inArray, int offsetIn, int length, char[] outArray, int offsetOut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToBase64CharArray(unsigned int8[] inArray, int32 offsetIn, int32 length, char[] outArray, int32 offsetOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64CharArray (inArray As Byte(), offsetIn As Integer, length As Integer, outArray As Char(), offsetOut As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToBase64CharArray(cli::array &lt;System::Byte&gt; ^ inArray, int offsetIn, int length, cli::array &lt;char&gt; ^ outArray, int offsetOut);" />
      <MemberSignature Language="F#" Value="static member ToBase64CharArray : byte[] * int * int * char[] * int -&gt; int" Usage="System.Convert.ToBase64CharArray (inArray, offsetIn, length, outArray, offsetOut)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offsetIn" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="outArray" Type="System.Char[]" />
        <Parameter Name="offsetOut" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inArray"><span data-ttu-id="13f48-401">Входной массив 8-битовых целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-401">An input array of 8-bit unsigned integers.</span></span></param>
        <param name="offsetIn"><span data-ttu-id="13f48-402">Позиция в массиве <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-402">A position within <paramref name="inArray" />.</span></span></param>
        <param name="length"><span data-ttu-id="13f48-403">Число преобразуемых элементов <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-403">The number of elements of <paramref name="inArray" /> to convert.</span></span></param>
        <param name="outArray"><span data-ttu-id="13f48-404">Выходной массив знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="13f48-404">An output array of Unicode characters.</span></span></param>
        <param name="offsetOut"><span data-ttu-id="13f48-405">Позиция в массиве <paramref name="outArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-405">A position within <paramref name="outArray" />.</span></span></param>
        <summary><span data-ttu-id="13f48-406">Преобразует подмножество массива 8-разрядных целых чисел без знака в эквивалентное подмножество массива знаков Юникода, состоящее из цифр в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="13f48-406">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span></span> <span data-ttu-id="13f48-407">Подмножества задаются с помощью параметров как смещение во входном и выходном массивах и количество преобразуемых элементов входного массива.</span><span class="sxs-lookup"><span data-stu-id="13f48-407">Parameters specify the subsets as offsets in the input and output arrays, and the number of elements in the input array to convert.</span></span></summary>
        <returns><span data-ttu-id="13f48-408">32-битовое целое число со знаком, представляющее число байтов в массиве <paramref name="outArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-408">A 32-bit signed integer containing the number of bytes in <paramref name="outArray" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-409">Подмножество `length` элементы `inArray` начиная с позиции `offsetIn`, берутся как числовое значение и преобразованы в подмножество элементов в `outArray` начиная с позиции `offsetOut`.</span><span class="sxs-lookup"><span data-stu-id="13f48-409">The subset of `length` elements of `inArray` starting at position `offsetIn`, are taken as a numeric value and converted to a subset of elements in `outArray` starting at position `offsetOut`.</span></span> <span data-ttu-id="13f48-410">Возвращаемое значение указывает количество элементов, преобразованное в `outArray`.</span><span class="sxs-lookup"><span data-stu-id="13f48-410">The return value indicates the number of converted elements in `outArray`.</span></span> <span data-ttu-id="13f48-411">Подмножество `outArray` состоит из цифр в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="13f48-411">The subset of `outArray` consists of base-64 digits.</span></span>  
  
 <span data-ttu-id="13f48-412">Base-64 в порядке возрастания являются ли они прописные буквы «A» до «Z», строчные буквы «» до «z», цифры от «0» до «9» и символы «+» и «/».</span><span class="sxs-lookup"><span data-stu-id="13f48-412">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="13f48-413">Операции символ, «=», используемый для заполнения в конце.</span><span class="sxs-lookup"><span data-stu-id="13f48-413">The valueless character, "=", is used for trailing padding.</span></span>  
  
 <span data-ttu-id="13f48-414">`offset` И `length` параметры являются 32-разрядных чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-414">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="13f48-415">`offsetIn` И `offsetOut` параметры являются отсчитываемый от нуля массив позиций.</span><span class="sxs-lookup"><span data-stu-id="13f48-415">The `offsetIn` and `offsetOut` parameters are zero-based array positions.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="13f48-416"><xref:System.Convert.ToBase64CharArray%2A> Метод предназначен для обработки в единый массив байтов, содержащий все данные для кодирования.</span><span class="sxs-lookup"><span data-stu-id="13f48-416">The <xref:System.Convert.ToBase64CharArray%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="13f48-417">Для создания массива знаков base-64 из потока байтов, используйте <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> класса.</span><span class="sxs-lookup"><span data-stu-id="13f48-417">To create a base-64 character array from a byte stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-418">В следующем примере показано использование <xref:System.Convert.ToBase64CharArray%2A> метод UUencode (кодирования в кодировке Base64) двоичного потока, а затем сохраните кодировку для файла.</span><span class="sxs-lookup"><span data-stu-id="13f48-418">The following example demonstrates using the <xref:System.Convert.ToBase64CharArray%2A> method to UUencode (encode in base 64) a binary stream, then save the encoding to a file.</span></span>  
  
 [!code-cpp[System.Convert UUEncodeDecode functions#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CPP/class1.cpp#2)]
 [!code-csharp[System.Convert UUEncodeDecode functions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CS/class1.cs#2)]
 [!code-vb[System.Convert UUEncodeDecode functions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13f48-419">Значение параметра <paramref name="inArray" /> или <paramref name="outArray" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-419"><paramref name="inArray" /> or <paramref name="outArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="13f48-420"><paramref name="offsetIn" />, <paramref name="offsetOut" /> или <paramref name="length" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="13f48-420"><paramref name="offsetIn" />, <paramref name="offsetOut" />, or <paramref name="length" /> is negative.</span></span>  
  
<span data-ttu-id="13f48-421">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-421">-or-</span></span> 
 <span data-ttu-id="13f48-422">Сумма значений <paramref name="offsetIn" /> и <paramref name="length" /> превышает длину массива <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-422"><paramref name="offsetIn" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span></span>  
  
<span data-ttu-id="13f48-423">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-423">-or-</span></span> 
 <span data-ttu-id="13f48-424"><paramref name="offsetOut" /> плюс количество возвращаемых элементов превышает длину массива <paramref name="outArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-424"><paramref name="offsetOut" /> plus the number of elements to return is greater than the length of <paramref name="outArray" />.</span></span></exception>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="ToBase64CharArray">
      <MemberSignature Language="C#" Value="public static int ToBase64CharArray (byte[] inArray, int offsetIn, int length, char[] outArray, int offsetOut, Base64FormattingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToBase64CharArray(unsigned int8[] inArray, int32 offsetIn, int32 length, char[] outArray, int32 offsetOut, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64CharArray (inArray As Byte(), offsetIn As Integer, length As Integer, outArray As Char(), offsetOut As Integer, options As Base64FormattingOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToBase64CharArray(cli::array &lt;System::Byte&gt; ^ inArray, int offsetIn, int length, cli::array &lt;char&gt; ^ outArray, int offsetOut, Base64FormattingOptions options);" />
      <MemberSignature Language="F#" Value="static member ToBase64CharArray : byte[] * int * int * char[] * int * Base64FormattingOptions -&gt; int" Usage="System.Convert.ToBase64CharArray (inArray, offsetIn, length, outArray, offsetOut, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offsetIn" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="length" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="outArray" Type="System.Char[]" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offsetOut" Type="System.Int32" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="inArray"><span data-ttu-id="13f48-425">Входной массив 8-битовых целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-425">An input array of 8-bit unsigned integers.</span></span></param>
        <param name="offsetIn"><span data-ttu-id="13f48-426">Позиция в массиве <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-426">A position within <paramref name="inArray" />.</span></span></param>
        <param name="length"><span data-ttu-id="13f48-427">Число преобразуемых элементов <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-427">The number of elements of <paramref name="inArray" /> to convert.</span></span></param>
        <param name="outArray"><span data-ttu-id="13f48-428">Выходной массив знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="13f48-428">An output array of Unicode characters.</span></span></param>
        <param name="offsetOut"><span data-ttu-id="13f48-429">Позиция в массиве <paramref name="outArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-429">A position within <paramref name="outArray" />.</span></span></param>
        <param name="options"><span data-ttu-id="13f48-430"><see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> для вставки разрыва строки после каждых 76 знаков или <see cref="F:System.Base64FormattingOptions.None" />, чтобы разрывы строки не вставлялись.</span><span class="sxs-lookup"><span data-stu-id="13f48-430"><see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span></span></param>
        <summary><span data-ttu-id="13f48-431">Преобразует подмножество массива 8-разрядных целых чисел без знака в эквивалентное подмножество массива знаков Юникода, состоящее из цифр в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="13f48-431">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span></span> <span data-ttu-id="13f48-432">В параметрах задаются подмножества как смещение во входном и выходном массивах и количество преобразуемых элементов входного массива, а также значение, указывающее, следует ли вставлять в выходной массив разрывы строки.</span><span class="sxs-lookup"><span data-stu-id="13f48-432">Parameters specify the subsets as offsets in the input and output arrays, the number of elements in the input array to convert, and whether line breaks are inserted in the output array.</span></span></summary>
        <returns><span data-ttu-id="13f48-433">32-битовое целое число со знаком, представляющее число байтов в массиве <paramref name="outArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-433">A 32-bit signed integer containing the number of bytes in <paramref name="outArray" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-434">Подмножество `length` элементы `inArray` параметра, начиная с позиции `offsetIn`, берутся как числовое значение и преобразованы в подмножество элементов в `outArray` параметра, начиная с позиции `offsetOut`.</span><span class="sxs-lookup"><span data-stu-id="13f48-434">The subset of `length` elements of the `inArray` parameter starting at position `offsetIn`, are taken as a numeric value and converted to a subset of elements in the `outArray` parameter starting at position `offsetOut`.</span></span> <span data-ttu-id="13f48-435">Возвращаемое значение указывает количество элементов, преобразованное в `outArray`.</span><span class="sxs-lookup"><span data-stu-id="13f48-435">The return value indicates the number of converted elements in `outArray`.</span></span> <span data-ttu-id="13f48-436">Подмножество `outArray` состоит из цифр в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="13f48-436">The subset of `outArray` consists of base-64 digits.</span></span>  
  
 <span data-ttu-id="13f48-437">Base-64 в порядке возрастания являются ли они прописные буквы «A» до «Z», строчные буквы «» до «z», цифры от «0» до «9» и символы «+» и «/».</span><span class="sxs-lookup"><span data-stu-id="13f48-437">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="13f48-438">Операции символ «=» используется для заполнения в конце.</span><span class="sxs-lookup"><span data-stu-id="13f48-438">The valueless character "=" is used for trailing padding.</span></span>  
  
 <span data-ttu-id="13f48-439">`offset` И `length` параметры являются 32-разрядных чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-439">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="13f48-440">`offsetIn` И `offsetOut` параметры являются отсчитываемый от нуля массив позиций.</span><span class="sxs-lookup"><span data-stu-id="13f48-440">The `offsetIn` and `offsetOut` parameters are zero-based array positions.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="13f48-441"><xref:System.Convert.ToBase64CharArray%2A> Метод предназначен для обработки в единый массив байтов, содержащий все данные для кодирования.</span><span class="sxs-lookup"><span data-stu-id="13f48-441">The <xref:System.Convert.ToBase64CharArray%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="13f48-442">Для создания массива знаков base-64 из потока байтов, используйте <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> класса.</span><span class="sxs-lookup"><span data-stu-id="13f48-442">To create a base-64 character array from a byte stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="13f48-443">Если `options` параметр имеет значение <xref:System.Base64FormattingOptions.InsertLineBreaks> и выходные данные преобразования длиннее, чем 76 символов, вставить разрыв строки после каждых 76 знаков.</span><span class="sxs-lookup"><span data-stu-id="13f48-443">If the `options` parameter is set to <xref:System.Base64FormattingOptions.InsertLineBreaks> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</span></span> <span data-ttu-id="13f48-444">Разрыв строки определяется как возврат каретки (U + 000D) следует строка символов (U + 000A) веб-канал.</span><span class="sxs-lookup"><span data-stu-id="13f48-444">A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="13f48-445">Дополнительные сведения см. в RFC 2045, «Multipurpose Internet Mail Extensions», адресу [ https://www.rfc-editor.org/ ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="13f48-445">For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at [https://www.rfc-editor.org/](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-446">В следующем примере демонстрируется <xref:System.Convert.ToBase64CharArray%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-446">The following example demonstrates the <xref:System.Convert.ToBase64CharArray%2A> method.</span></span> <span data-ttu-id="13f48-447">Входные данные делятся на группы по три байта (24 бита) каждого.</span><span class="sxs-lookup"><span data-stu-id="13f48-447">The input is divided into groups of three bytes (24 bits) each.</span></span> <span data-ttu-id="13f48-448">Следовательно каждая группа состоит из четырех чисел 6 бит, где каждое число в диапазоне от decimal от 0 до 63.</span><span class="sxs-lookup"><span data-stu-id="13f48-448">Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</span></span> <span data-ttu-id="13f48-449">В этом примере имеется 85 3 байта групп один байт.</span><span class="sxs-lookup"><span data-stu-id="13f48-449">In this example, there are 85 3-byte groups with one byte remaining.</span></span> <span data-ttu-id="13f48-450">Первая группа состоит из шестнадцатеричных значений 00, 01 и 02, в которых получаются четыре 6-разрядных значений, равным десятичное 0, 0, 4 и 2.</span><span class="sxs-lookup"><span data-stu-id="13f48-450">The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</span></span> <span data-ttu-id="13f48-451">Эти четыре значения соответствуют знаков Base64 «A», «», «E» и «C» в начале выходных данных.</span><span class="sxs-lookup"><span data-stu-id="13f48-451">Those four values correspond to the base-64 digits "A", "A", "E", and "C" at the beginning of the output.</span></span>  
  
 <span data-ttu-id="13f48-452">Если существует целое количество групп 3 байта, оставшиеся байты входные данные дополняются нулями до полной группы.</span><span class="sxs-lookup"><span data-stu-id="13f48-452">If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</span></span> <span data-ttu-id="13f48-453">В этом примере значение последнего байта является шестнадцатеричное FF.</span><span class="sxs-lookup"><span data-stu-id="13f48-453">In this example, the value of the last byte is hexadecimal FF.</span></span> <span data-ttu-id="13f48-454">Первые 6 бит равны десятичному числу 63, соответствующее цифре base-64 «/» в конце выходных данных, и следующие 2 бита заполняются нулями, чтобы выдавать десятичное 48, соответствующее цифре base-64, «w».</span><span class="sxs-lookup"><span data-stu-id="13f48-454">The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</span></span> <span data-ttu-id="13f48-455">Последние два 6-битовых значения являются заполнением и соответствующие операции заполнения символ, «=».</span><span class="sxs-lookup"><span data-stu-id="13f48-455">The last two 6-bit values are padding and correspond to the valueless padding character, "=".</span></span>  
  
 [!code-cpp[convert.tobase64chararray#1](~/samples/snippets/cpp/VS_Snippets_CLR/convert.tobase64chararray/CPP/tb64ca.cpp#1)]
 [!code-csharp[convert.tobase64chararray#1](~/samples/snippets/csharp/VS_Snippets_CLR/convert.tobase64chararray/CS/tb64ca.cs#1)]
 [!code-vb[convert.tobase64chararray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convert.tobase64chararray/VB/tb64ca.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13f48-456">Значение параметра <paramref name="inArray" /> или <paramref name="outArray" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-456"><paramref name="inArray" /> or <paramref name="outArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="13f48-457"><paramref name="offsetIn" />, <paramref name="offsetOut" /> или <paramref name="length" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="13f48-457"><paramref name="offsetIn" />, <paramref name="offsetOut" />, or <paramref name="length" /> is negative.</span></span>  
  
<span data-ttu-id="13f48-458">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-458">-or-</span></span> 
 <span data-ttu-id="13f48-459">Сумма значений <paramref name="offsetIn" /> и <paramref name="length" /> превышает длину массива <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-459"><paramref name="offsetIn" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span></span>  
  
<span data-ttu-id="13f48-460">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-460">-or-</span></span> 
 <span data-ttu-id="13f48-461"><paramref name="offsetOut" /> плюс количество возвращаемых элементов превышает длину массива <paramref name="outArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-461"><paramref name="offsetOut" /> plus the number of elements to return is greater than the length of <paramref name="outArray" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="13f48-462"><paramref name="options" /> не является допустимым значением <see cref="T:System.Base64FormattingOptions" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-462"><paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span></span></exception>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToBase64String">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13f48-463">Преобразует значение массива 8-разрядных целых чисел без знака в эквивалентное строковое представление, состоящее из цифр в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="13f48-463">Converts the value of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span></span></summary>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray);" />
      <MemberSignature Language="F#" Value="static member ToBase64String : byte[] -&gt; string" Usage="System.Convert.ToBase64String inArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="inArray"><span data-ttu-id="13f48-464">Массив 8-битовых целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-464">An array of 8-bit unsigned integers.</span></span></param>
        <summary><span data-ttu-id="13f48-465">Преобразует массив 8-разрядных целых чисел без знака в эквивалентное строковое представление, состоящее из цифр в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="13f48-465">Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span></span></summary>
        <returns><span data-ttu-id="13f48-466">Строковое представление содержимого массива <paramref name="inArray" /> в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="13f48-466">The string representation, in base 64, of the contents of <paramref name="inArray" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-467">Элементы `inArray` берутся как числовое значение и преобразуется в строковое представление, в кодировке base-64 разрядов.</span><span class="sxs-lookup"><span data-stu-id="13f48-467">The elements of `inArray` are taken as a numeric value and converted to a string representation that is encoded with base-64 digits.</span></span>  
  
 <span data-ttu-id="13f48-468">Base-64 в порядке возрастания являются ли они прописные буквы «A» до «Z», строчные буквы «» до «z», цифры от «0» до «9» и символы «+» и «/».</span><span class="sxs-lookup"><span data-stu-id="13f48-468">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="13f48-469">Операции символ, «=», используемый для заполнения в конце.</span><span class="sxs-lookup"><span data-stu-id="13f48-469">The valueless character, "=", is used for trailing padding.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="13f48-470"><xref:System.Convert.ToBase64String%2A> Метод предназначен для обработки в единый массив байтов, содержащий все данные для кодирования.</span><span class="sxs-lookup"><span data-stu-id="13f48-470">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="13f48-471">Для кодирования данных из потока, используйте <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> класса.</span><span class="sxs-lookup"><span data-stu-id="13f48-471">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="13f48-472">Как правило <xref:System.Convert.ToBase64String%2A> метод не используется для приема-передачи (в кодировке base-64) кодировке UUENCODE строки.</span><span class="sxs-lookup"><span data-stu-id="13f48-472">Ordinarily, the <xref:System.Convert.ToBase64String%2A> method is not used to round-trip a  UUEncoded (base-64 encoded) string.</span></span>  <span data-ttu-id="13f48-473">То есть если декодировать строку путем вызова <xref:System.Convert.FromBase64String%2A> метод, затем закодируйте возвращаемый массив байтов, вызвав <xref:System.Convert.ToBase64String%2A> метод, результирующая строка не обязательно будет идентична исходной строки.</span><span class="sxs-lookup"><span data-stu-id="13f48-473">That is, if you decode a string by calling the <xref:System.Convert.FromBase64String%2A> method, then encode the returned byte array by calling the <xref:System.Convert.ToBase64String%2A> method, the resulting string will not necessarily be identical to the original string.</span></span> <span data-ttu-id="13f48-474">Строки будут использовать круговой путь только в том случае, если исходная строка представляет допустимую строку кодировке base-64.</span><span class="sxs-lookup"><span data-stu-id="13f48-474">The string will round-trip only if the original string is a valid base-64 encoded string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-475">В следующем примере используется <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> метод для преобразования массива байтов в строку в кодировке UUENCODE (base-64), а затем вызывает <xref:System.Convert.FromBase64String%28System.String%29> метод восстановления исходного массива байтов.</span><span class="sxs-lookup"><span data-stu-id="13f48-475">The following example uses the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to convert a byte array to a UUencoded (base-64) string, and then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to restore the original byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String2.cs#1)]
 [!code-vb[System.Convert.ToBase64String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String2.vb#1)]  
  
 <span data-ttu-id="13f48-476">Ниже приведен более сложный пример, который создает 20-элементный массив 32-разрядных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="13f48-476">The following is a more complex example that creates a 20-element array of 32-bit integers.</span></span> <span data-ttu-id="13f48-477">Затем он использует <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType> метода для преобразования каждого элемента в массив байтов, который хранит в соответствующей позиции в буфере, вызвав <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-477">It then uses the <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType> method to convert each element into a byte array, which it stores in the appropriate position in a buffer by calling the <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="13f48-478">Этот буфер передается <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> метод, чтобы создать строку кодировке UUENCODE (base-64).</span><span class="sxs-lookup"><span data-stu-id="13f48-478">This buffer is then passed to the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to create a UUencoded (base-64) string.</span></span>  <span data-ttu-id="13f48-479">Затем он вызывает <xref:System.Convert.FromBase64String%28System.String%29> метод для декодирования строки в кодировке UUENCODE, а вызовы <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> способа преобразовать каждый набор четыре байта (размер 32-разрядное целое число) в целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-479">It then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to decode the UUencoded string, and calls the <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> method to convert each set of four bytes (the size of a 32-bit integer) to an integer.</span></span> <span data-ttu-id="13f48-480">Из примера видно, что исходный массив был успешно восстановлен.</span><span class="sxs-lookup"><span data-stu-id="13f48-480">The output from the example shows that the original array has been successfully restored.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String.cs#2)]
 [!code-vb[System.Convert.ToBase64String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13f48-481"><paramref name="inArray" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-481"><paramref name="inArray" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray, Base64FormattingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte(), options As Base64FormattingOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray, Base64FormattingOptions options);" />
      <MemberSignature Language="F#" Value="static member ToBase64String : byte[] * Base64FormattingOptions -&gt; string" Usage="System.Convert.ToBase64String (inArray, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="inArray"><span data-ttu-id="13f48-482">Массив 8-битовых целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-482">An array of 8-bit unsigned integers.</span></span></param>
        <param name="options"><span data-ttu-id="13f48-483"><see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> для вставки разрыва строки после каждых 76 знаков или <see cref="F:System.Base64FormattingOptions.None" />, чтобы разрывы строки не вставлялись.</span><span class="sxs-lookup"><span data-stu-id="13f48-483"><see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span></span></param>
        <summary><span data-ttu-id="13f48-484">Преобразует массив 8-разрядных целых чисел без знака в эквивалентное строковое представление, состоящее из цифр в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="13f48-484">Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span></span> <span data-ttu-id="13f48-485">Параметр указывает, следует ли вставлять в возвращаемое значение разрывы строки.</span><span class="sxs-lookup"><span data-stu-id="13f48-485">A parameter specifies whether to insert line breaks in the return value.</span></span></summary>
        <returns><span data-ttu-id="13f48-486">Строковое представление элементов массива <paramref name="inArray" /> в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="13f48-486">The string representation in base 64 of the elements in <paramref name="inArray" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-487">Элементы `inArray` параметра берутся как числовое значение и преобразуются в строковое представление в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="13f48-487">The elements of the `inArray` parameter are taken as a numeric value and converted to a string representation in base 64.</span></span>  
  
 <span data-ttu-id="13f48-488">Base-64 в порядке возрастания являются ли они прописные буквы «A» до «Z», строчные буквы «» до «z», цифры от «0» до «9» и символы «+» и «/».</span><span class="sxs-lookup"><span data-stu-id="13f48-488">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="13f48-489">Операции символ «=» используется для заполнения в конце.</span><span class="sxs-lookup"><span data-stu-id="13f48-489">The valueless character "=" is used for trailing padding.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="13f48-490"><xref:System.Convert.ToBase64String%2A> Метод предназначен для обработки в единый массив байтов, содержащий все данные для кодирования.</span><span class="sxs-lookup"><span data-stu-id="13f48-490">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="13f48-491">Для кодирования данных из потока, используйте <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> класса.</span><span class="sxs-lookup"><span data-stu-id="13f48-491">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="13f48-492">Если `options` параметр имеет значение <xref:System.Base64FormattingOptions.InsertLineBreaks> и выходные данные преобразования длиннее, чем 76 символов, вставить разрыв строки после каждых 76 знаков.</span><span class="sxs-lookup"><span data-stu-id="13f48-492">If the `options` parameter is set to <xref:System.Base64FormattingOptions.InsertLineBreaks> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</span></span> <span data-ttu-id="13f48-493">Разрыв строки определяется как возврат каретки (U + 000D) следует строка символов (U + 000A) веб-канал.</span><span class="sxs-lookup"><span data-stu-id="13f48-493">A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="13f48-494">Так как разрывы строки рассматриваются как символы-разделители в кодировку base-64, они учитываются при преобразовании base-64 строка обратно в массив байтов в кодировке.</span><span class="sxs-lookup"><span data-stu-id="13f48-494">Because line breaks are considered white-space characters in a base-64 encoding, they are ignored when converting a base-64 encoded string back to a byte array.</span></span> <span data-ttu-id="13f48-495">Разрывы строки просто удобны при отображении закодированной строки к элементу управления или устройство, такое как окно консоли.</span><span class="sxs-lookup"><span data-stu-id="13f48-495">The line breaks are simply convenient when displaying the encoded string to a control or a device such as a console window.</span></span> <span data-ttu-id="13f48-496">Дополнительные сведения см. в RFC 2045, «Multipurpose Internet Mail Extensions», адресу [ https://www.rfc-editor.org/ ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="13f48-496">For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at [https://www.rfc-editor.org/](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-497">В следующем примере вызывается <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType> с <xref:System.Base64FormattingOptions.InsertLineBreaks?displayProperty=nameWithType> разрывов аргумент, чтобы вставить строку в строку, полученных при кодировании массив из 100 байтов.</span><span class="sxs-lookup"><span data-stu-id="13f48-497">The following example calls the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType> with a <xref:System.Base64FormattingOptions.InsertLineBreaks?displayProperty=nameWithType> argument to insert line breaks in the string that is produced by encoding a 100-element byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String3.cs#3)]
 [!code-vb[System.Convert.ToBase64String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String3.vb#3)]  
  
 <span data-ttu-id="13f48-498">Как видно в результатах показано в примере <xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType> выполняется успешно при восстановлении исходного массива байтов; символы разрыва строк учитываются во время преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-498">As the output from the example shows, the <xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType> succeeds in restoring the original byte array; the line break characters are ignored during the conversion.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13f48-499"><paramref name="inArray" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-499"><paramref name="inArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="13f48-500"><paramref name="options" /> не является допустимым значением <see cref="T:System.Base64FormattingOptions" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-500"><paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span></span></exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (ReadOnlySpan&lt;byte&gt; bytes, Base64FormattingOptions options = System.Base64FormattingOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.ReadOnlySpan{System.Byte},System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (bytes As ReadOnlySpan(Of Byte), Optional options As Base64FormattingOptions = System.Base64FormattingOptions.None) As String" />
      <MemberSignature Language="F#" Value="static member ToBase64String : ReadOnlySpan&lt;byte&gt; * Base64FormattingOptions -&gt; string" Usage="System.Convert.ToBase64String (bytes, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte(), offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray, int offset, int length);" />
      <MemberSignature Language="F#" Value="static member ToBase64String : byte[] * int * int -&gt; string" Usage="System.Convert.ToBase64String (inArray, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inArray"><span data-ttu-id="13f48-501">Массив 8-битовых целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-501">An array of 8-bit unsigned integers.</span></span></param>
        <param name="offset"><span data-ttu-id="13f48-502">Смещение в массиве <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-502">An offset in <paramref name="inArray" />.</span></span></param>
        <param name="length"><span data-ttu-id="13f48-503">Число преобразуемых элементов <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-503">The number of elements of <paramref name="inArray" /> to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-504">Преобразует подмножество массива 8-разрядных целых чисел без знака в эквивалентное строковое представление, состоящее из цифр в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="13f48-504">Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span></span> <span data-ttu-id="13f48-505">В параметрах задается подмножество как смещение во входном массиве и количество преобразуемых элементов этого массива.</span><span class="sxs-lookup"><span data-stu-id="13f48-505">Parameters specify the subset as an offset in the input array, and the number of elements in the array to convert.</span></span></summary>
        <returns><span data-ttu-id="13f48-506">Строковое представление <paramref name="length" /> элементов массива <paramref name="inArray" /> в кодировке Base64, начиная с позиции <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-506">The string representation in base 64 of <paramref name="length" /> elements of <paramref name="inArray" />, starting at position <paramref name="offset" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-507">Элементы `inArray` берутся как числовое значение и преобразуются в строковое представление в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="13f48-507">The elements of `inArray` are taken as a numeric value and converted to a string representation in base 64.</span></span>  
  
 <span data-ttu-id="13f48-508">Base-64 в порядке возрастания являются ли они прописные буквы «A» до «Z», строчные буквы «» до «z», цифры от «0» до «9» и символы «+» и «/».</span><span class="sxs-lookup"><span data-stu-id="13f48-508">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="13f48-509">Операции символ, «=», используемый для заполнения в конце.</span><span class="sxs-lookup"><span data-stu-id="13f48-509">The valueless character, "=", is used for trailing padding.</span></span>  
  
 <span data-ttu-id="13f48-510">`offset` И `length` параметры являются 32-разрядных чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-510">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="13f48-511">`offset` Параметр отсчитывается от нуля.</span><span class="sxs-lookup"><span data-stu-id="13f48-511">The `offset` parameter is zero-based.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="13f48-512"><xref:System.Convert.ToBase64String%2A> Метод предназначен для обработки в единый массив байтов, содержащий все данные для кодирования.</span><span class="sxs-lookup"><span data-stu-id="13f48-512">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="13f48-513">Для кодирования данных из потока, используйте <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> класса.</span><span class="sxs-lookup"><span data-stu-id="13f48-513">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13f48-514"><paramref name="inArray" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-514"><paramref name="inArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="13f48-515"><paramref name="offset" /> или <paramref name="length" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="13f48-515"><paramref name="offset" /> or <paramref name="length" /> is negative.</span></span>  
  
<span data-ttu-id="13f48-516">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-516">-or-</span></span> 
 <span data-ttu-id="13f48-517">Сумма значений <paramref name="offset" /> и <paramref name="length" /> превышает длину массива <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-517"><paramref name="offset" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span></span></exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Base64-1c3d9c03"><span data-ttu-id="13f48-518">Пример: .NET Framework 4 Base64 преобразователя</span><span class="sxs-lookup"><span data-stu-id="13f48-518">Sample: .NET Framework 4 Base64 Converter</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray, int offset, int length, Base64FormattingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray, int32 offset, int32 length, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte(), offset As Integer, length As Integer, options As Base64FormattingOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray, int offset, int length, Base64FormattingOptions options);" />
      <MemberSignature Language="F#" Value="static member ToBase64String : byte[] * int * int * Base64FormattingOptions -&gt; string" Usage="System.Convert.ToBase64String (inArray, offset, length, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="length" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="inArray"><span data-ttu-id="13f48-519">Массив 8-битовых целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-519">An array of 8-bit unsigned integers.</span></span></param>
        <param name="offset"><span data-ttu-id="13f48-520">Смещение в массиве <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-520">An offset in <paramref name="inArray" />.</span></span></param>
        <param name="length"><span data-ttu-id="13f48-521">Число преобразуемых элементов <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-521">The number of elements of <paramref name="inArray" /> to convert.</span></span></param>
        <param name="options"><span data-ttu-id="13f48-522"><see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> для вставки разрыва строки после каждых 76 знаков или <see cref="F:System.Base64FormattingOptions.None" />, чтобы разрывы строки не вставлялись.</span><span class="sxs-lookup"><span data-stu-id="13f48-522"><see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span></span></param>
        <summary><span data-ttu-id="13f48-523">Преобразует подмножество массива 8-разрядных целых чисел без знака в эквивалентное строковое представление, состоящее из цифр в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="13f48-523">Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span></span> <span data-ttu-id="13f48-524">В параметрах задаются подмножество как смещение во входном массиве и количество преобразуемых элементов этого массива, а также значение, указывающее, следует ли вставлять в выходной массив разрывы строки.</span><span class="sxs-lookup"><span data-stu-id="13f48-524">Parameters specify the subset as an offset in the input array, the number of elements in the array to convert, and whether to insert line breaks in the return value.</span></span></summary>
        <returns><span data-ttu-id="13f48-525">Строковое представление <paramref name="length" /> элементов массива <paramref name="inArray" /> в кодировке Base64, начиная с позиции <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-525">The string representation in base 64 of <paramref name="length" /> elements of <paramref name="inArray" />, starting at position <paramref name="offset" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-526">Элементы `inArray` параметра берутся как числовое значение и преобразуются в строковое представление в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="13f48-526">The elements of the `inArray` parameter are taken as a numeric value and converted to a string representation in base 64.</span></span>  
  
 <span data-ttu-id="13f48-527">Base-64 в порядке возрастания являются ли они прописные буквы «A» до «Z», строчные буквы «» до «z», цифры от «0» до «9» и символы «+» и «/».</span><span class="sxs-lookup"><span data-stu-id="13f48-527">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="13f48-528">Операции символ «=» используется для заполнения в конце.</span><span class="sxs-lookup"><span data-stu-id="13f48-528">The valueless character "=" is used for trailing padding.</span></span>  
  
 <span data-ttu-id="13f48-529">`offset` И `length` параметры являются 32-разрядных чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-529">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="13f48-530">`offset` Параметр отсчитывается от нуля.</span><span class="sxs-lookup"><span data-stu-id="13f48-530">The `offset` parameter is zero-based.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="13f48-531"><xref:System.Convert.ToBase64String%2A> Метод предназначен для обработки в единый массив байтов, содержащий все данные для кодирования.</span><span class="sxs-lookup"><span data-stu-id="13f48-531">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="13f48-532">Для кодирования данных из потока, используйте <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> класса.</span><span class="sxs-lookup"><span data-stu-id="13f48-532">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="13f48-533">Если `options` параметр имеет значение <xref:System.Base64FormattingOptions.InsertLineBreaks> и выходные данные преобразования длиннее, чем 76 символов, вставить разрыв строки после каждых 76 знаков.</span><span class="sxs-lookup"><span data-stu-id="13f48-533">If the `options` parameter is set to <xref:System.Base64FormattingOptions.InsertLineBreaks> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</span></span> <span data-ttu-id="13f48-534">Разрыв строки определяется как возврат каретки (U + 000D) следует строка символов (U + 000A) веб-канал.</span><span class="sxs-lookup"><span data-stu-id="13f48-534">A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="13f48-535">Дополнительные сведения см. в RFC 2045, «Multipurpose Internet Mail Extensions», адресу [ https://www.rfc-editor.org/ ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="13f48-535">For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at [https://www.rfc-editor.org/](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-536">В следующем примере демонстрируется <xref:System.Convert.ToBase64String%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-536">The following example demonstrates the <xref:System.Convert.ToBase64String%2A> method.</span></span> <span data-ttu-id="13f48-537">Входные данные делятся на группы по три байта (24 бита) каждого.</span><span class="sxs-lookup"><span data-stu-id="13f48-537">The input is divided into groups of three bytes (24 bits) each.</span></span> <span data-ttu-id="13f48-538">Следовательно каждая группа состоит из четырех чисел 6 бит, где каждое число в диапазоне от decimal от 0 до 63.</span><span class="sxs-lookup"><span data-stu-id="13f48-538">Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</span></span> <span data-ttu-id="13f48-539">В этом примере имеется 85 3 байта групп один байт.</span><span class="sxs-lookup"><span data-stu-id="13f48-539">In this example, there are 85 3-byte groups with one byte remaining.</span></span> <span data-ttu-id="13f48-540">Первая группа состоит из шестнадцатеричных значений 00, 01 и 02, в которых получаются четыре 6-разрядных значений, равным десятичное 0, 0, 4 и 2.</span><span class="sxs-lookup"><span data-stu-id="13f48-540">The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</span></span> <span data-ttu-id="13f48-541">Эти четыре значения соответствуют знаков Base64 «A», «», «E» и «C» в начале выходных данных.</span><span class="sxs-lookup"><span data-stu-id="13f48-541">Those four values correspond to the base-64 digits "A", "A", "E", and "C" at the beginning of the output.</span></span>  
  
 <span data-ttu-id="13f48-542">Если существует целое количество групп 3 байта, оставшиеся байты входные данные дополняются нулями до полной группы.</span><span class="sxs-lookup"><span data-stu-id="13f48-542">If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</span></span> <span data-ttu-id="13f48-543">В этом примере значение последнего байта является шестнадцатеричное FF.</span><span class="sxs-lookup"><span data-stu-id="13f48-543">In this example, the value of the last byte is hexadecimal FF.</span></span> <span data-ttu-id="13f48-544">Первые 6 бит равны десятичному числу 63, соответствующее цифре base-64 «/» в конце выходных данных, и следующие 2 бита заполняются нулями, чтобы выдавать десятичное 48, соответствующее цифре base-64, «w».</span><span class="sxs-lookup"><span data-stu-id="13f48-544">The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</span></span> <span data-ttu-id="13f48-545">Последние два 6-битовых значения являются заполнением и соответствующие операции заполнения символ, «=».</span><span class="sxs-lookup"><span data-stu-id="13f48-545">The last two 6-bit values are padding and correspond to the valueless padding character, "=".</span></span>  
  
 [!code-cpp[convert.tobase64string#1](~/samples/snippets/cpp/VS_Snippets_CLR/convert.tobase64string/CPP/tb64s.cpp#1)]
 [!code-csharp[convert.tobase64string#1](~/samples/snippets/csharp/VS_Snippets_CLR/convert.tobase64string/CS/tb64s.cs#1)]
 [!code-vb[convert.tobase64string#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convert.tobase64string/VB/tb64s.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13f48-546"><paramref name="inArray" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-546"><paramref name="inArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="13f48-547"><paramref name="offset" /> или <paramref name="length" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="13f48-547"><paramref name="offset" /> or <paramref name="length" /> is negative.</span></span>  
  
<span data-ttu-id="13f48-548">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-548">-or-</span></span> 
 <span data-ttu-id="13f48-549">Сумма значений <paramref name="offset" /> и <paramref name="length" /> превышает длину массива <paramref name="inArray" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-549"><paramref name="offset" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="13f48-550"><paramref name="options" /> не является допустимым значением <see cref="T:System.Base64FormattingOptions" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-550"><paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span></span></exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToBoolean">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13f48-551">Преобразует заданное значение в эквивалентное логическое значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-551">Converts a specified value to an equivalent Boolean value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(bool value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : bool -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-552">Возвращаемое логическое значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-552">The Boolean value to return.</span></span></param>
        <summary><span data-ttu-id="13f48-553">Возвращает заданное логическое значение; фактическое преобразование не производится.</span><span class="sxs-lookup"><span data-stu-id="13f48-553">Returns the specified Boolean value; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="13f48-554"><paramref name="value" /> возвращается без изменений.</span><span class="sxs-lookup"><span data-stu-id="13f48-554"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : byte -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-555">8-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-555">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-556">Преобразует значение заданного 8-битового целого числа без знака в эквивалентное логическое значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-556">Converts the value of the specified 8-bit unsigned integer to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="13f48-557"><see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-557"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-558">В следующем примере преобразуется в массив <xref:System.Byte> значения <xref:System.Boolean> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-558">The following example converts an array of <xref:System.Byte> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#12)]
 [!code-csharp[System.Convert.ToBoolean#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#12)]
 [!code-vb[System.Convert.ToBoolean#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(char value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : char -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-559">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-559">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-560">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-560">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-561">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-561">This conversion is not supported.</span></span> <span data-ttu-id="13f48-562">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-562">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-563">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-563">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : DateTime -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-564">Значение даты и времени для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-564">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-565">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-565">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-566">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-566">This conversion is not supported.</span></span> <span data-ttu-id="13f48-567">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-567">No value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-568">В следующем примере показано, что попытка преобразовать <xref:System.DateTime> выдает значение к логическому типу <xref:System.InvalidCastException>.</span><span class="sxs-lookup"><span data-stu-id="13f48-568">The following example demonstrates that an attempt to convert a <xref:System.DateTime> value to a Boolean type throws <xref:System.InvalidCastException>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#20)]
 [!code-csharp[System.Convert Snippets#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#20)]
 [!code-vb[System.Convert Snippets#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-569">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-569">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : decimal -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-570">Преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-570">The number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-571">Преобразует значение заданного десятичного числа в эквивалентное логическое значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-571">Converts the value of the specified decimal number to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="13f48-572"><see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-572"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-573">В следующем примере преобразуется в массив <xref:System.Decimal> значения <xref:System.Boolean> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-573">The following example converts an array of <xref:System.Decimal> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#2)]
 [!code-csharp[System.Convert.ToBoolean#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#2)]
 [!code-vb[System.Convert.ToBoolean#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(double value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : double -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-574">Число с плавающей запятой двойной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-574">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-575">Преобразует значение заданного числа двойной точности с плавающей запятой в эквивалентное логическое значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-575">Converts the value of the specified double-precision floating-point number to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="13f48-576"><see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-576"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-577">В следующем примере преобразуется в логическое значение, <xref:System.Double> и <xref:System.Double> в значение типа Boolean.</span><span class="sxs-lookup"><span data-stu-id="13f48-577">The following example converts a Boolean to a <xref:System.Double> and a <xref:System.Double> to a Boolean value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#1)]
 [!code-csharp[System.Convert Snippets#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#1)]
 [!code-vb[System.Convert Snippets#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(short value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : int16 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-578">16-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-578">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-579">Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное логическое значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-579">Converts the value of the specified 16-bit signed integer to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="13f48-580"><see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-580"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-581">В следующем примере преобразуется в массив <xref:System.Int16> значения <xref:System.Boolean> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-581">The following example converts an array of <xref:System.Int16> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#3)]
 [!code-csharp[System.Convert.ToBoolean#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#3)]
 [!code-vb[System.Convert.ToBoolean#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(int value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : int -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-582">32-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-582">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-583">Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное логическое значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-583">Converts the value of the specified 32-bit signed integer to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="13f48-584"><see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-584"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-585">В следующем примере преобразуется в массив <xref:System.Int32> значения <xref:System.Boolean> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-585">The following example converts an array of <xref:System.Int32> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#4)]
 [!code-csharp[System.Convert.ToBoolean#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#4)]
 [!code-vb[System.Convert.ToBoolean#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(long value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : int64 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-586">64-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-586">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-587">Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное логическое значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-587">Converts the value of the specified 64-bit signed integer to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="13f48-588"><see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-588"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-589">В следующем примере преобразуется в массив <xref:System.Int64> значения <xref:System.Boolean> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-589">The following example converts an array of <xref:System.Int64> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#5)]
 [!code-csharp[System.Convert.ToBoolean#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#5)]
 [!code-vb[System.Convert.ToBoolean#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : obj -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-590">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-590">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="13f48-591">Преобразует значение заданного объекта в эквивалентное логическое значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-591">Converts the value of a specified object to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="13f48-592"><see langword="true" /> или <see langword="false" />, отражающее значение, возвращаемое методом <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> при вызове для базового типа параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-592"><see langword="true" /> or <see langword="false" />, which reflects the value returned by invoking the <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> method for the underlying type of <paramref name="value" />.</span></span> <span data-ttu-id="13f48-593">Если значением параметра <paramref name="value" /> является <see langword="null" />, метод возвращает <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-593">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-594">В следующем примере преобразуется в массив значений объектов для <xref:System.Boolean> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-594">The following example converts an array of object values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#11)]
 [!code-csharp[System.Convert.ToBoolean#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#11)]
 [!code-vb[System.Convert.ToBoolean#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-595"><paramref name="value" /> является строкой, которая не равна <see cref="F:System.Boolean.TrueString" /> или <see cref="F:System.Boolean.FalseString" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-595"><paramref name="value" /> is a string that does not equal <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-596"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-596"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-597">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-597">-or-</span></span> 
<span data-ttu-id="13f48-598">Преобразование <paramref name="value" /> в <see cref="T:System.Boolean" /> не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-598">The conversion of <paramref name="value" /> to a <see cref="T:System.Boolean" /> is not supported.</span></span></exception>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As SByte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : sbyte -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-599">8-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-599">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-600">Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное логическое значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-600">Converts the value of the specified 8-bit signed integer to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="13f48-601"><see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-601"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-602">В следующем примере преобразуется в массив <xref:System.SByte> значения <xref:System.Boolean> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-602">The following example converts an array of <xref:System.SByte> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#6)]
 [!code-csharp[System.Convert.ToBoolean#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#6)]
 [!code-vb[System.Convert.ToBoolean#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(float value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : single -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-603">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-603">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-604">Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное логическое значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-604">Converts the value of the specified single-precision floating-point number to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="13f48-605"><see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-605"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-606">В следующем примере преобразуется в массив <xref:System.Single> значения <xref:System.Boolean> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-606">The following example converts an array of <xref:System.Single> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#7)]
 [!code-csharp[System.Convert.ToBoolean#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#7)]
 [!code-vb[System.Convert.ToBoolean#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : string -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-607">Строка, содержащая значение <see cref="F:System.Boolean.TrueString" /> или <see cref="F:System.Boolean.FalseString" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-607">A string that contains the value of either <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span></span></param>
        <summary><span data-ttu-id="13f48-608">Преобразует заданное строковое представление логического значения в эквивалентное логическое значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-608">Converts the specified string representation of a logical value to its Boolean equivalent.</span></span></summary>
        <returns><span data-ttu-id="13f48-609"><see langword="true" />, если параметр <paramref name="value" /> имеет значение <see cref="F:System.Boolean.TrueString" />, или <see langword="false" />, если параметр <paramref name="value" /> имеет значение <see cref="F:System.Boolean.FalseString" /> либо <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-609"><see langword="true" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.TrueString" />, or <see langword="false" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.FalseString" /> or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-610">Для успешного преобразования возникает `value` параметра должно быть равно либо <xref:System.Boolean.TrueString?displayProperty=nameWithType>, константа, значение которого представляет собой `True`, <xref:System.Boolean.FalseString?displayProperty=nameWithType>, константа, значение которого представляет собой `False`, или он должен быть `null`.</span><span class="sxs-lookup"><span data-stu-id="13f48-610">For a successful conversion to occur, the `value` parameter must equal either <xref:System.Boolean.TrueString?displayProperty=nameWithType>, a constant whose value is `True`, <xref:System.Boolean.FalseString?displayProperty=nameWithType>, a constant whose value is `False`, or it must be `null`.</span></span> <span data-ttu-id="13f48-611">При сравнении `value` с <xref:System.Boolean.TrueString?displayProperty=nameWithType> и <xref:System.Boolean.FalseString?displayProperty=nameWithType>, метод не учитывает регистр также как начальные и конечные пробелы.</span><span class="sxs-lookup"><span data-stu-id="13f48-611">In comparing `value` with <xref:System.Boolean.TrueString?displayProperty=nameWithType> and <xref:System.Boolean.FalseString?displayProperty=nameWithType>, the method ignores case as well as leading and trailing white space.</span></span>  
  
 <span data-ttu-id="13f48-612">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-612">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-613">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-613">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-614">В следующем примере используется <xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType> метод для преобразования различных строк в логические значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-614">The following example uses the <xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType> method to convert various strings to Boolean values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean1.cpp#1)]
 [!code-csharp[System.Convert.ToBoolean#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/ToBoolean1.cs#1)]
 [!code-vb[System.Convert.ToBoolean#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/ToBoolean1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-615">Параметр <paramref name="value" /> не равен <see cref="F:System.Boolean.TrueString" /> или <see cref="F:System.Boolean.FalseString" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-615"><paramref name="value" /> is not equal to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span></span></exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : uint16 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-616">16-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-616">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-617">Преобразует значение заданного 16-битового целого числа без знака в эквивалентное логическое значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-617">Converts the value of the specified 16-bit unsigned integer to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="13f48-618"><see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-618"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-619">В следующем примере преобразуется в массив <xref:System.UInt16> значения <xref:System.Boolean> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-619">The following example converts an array of <xref:System.UInt16> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#8)]
 [!code-csharp[System.Convert.ToBoolean#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#8)]
 [!code-vb[System.Convert.ToBoolean#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : uint32 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-620">32-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-620">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-621">Преобразует значение заданного 32-битового целого числа без знака в эквивалентное логическое значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-621">Converts the value of the specified 32-bit unsigned integer to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="13f48-622"><see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-622"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-623">В следующем примере преобразуется в массив <xref:System.Int32> значения <xref:System.Boolean> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-623">The following example converts an array of <xref:System.Int32> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#9)]
 [!code-csharp[System.Convert.ToBoolean#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#9)]
 [!code-vb[System.Convert.ToBoolean#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : uint64 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-624">64-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-624">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-625">Преобразует значение заданного 64-битового целого числа без знака в эквивалентное логическое значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-625">Converts the value of the specified 64-bit unsigned integer to an equivalent Boolean value.</span></span></summary>
        <returns><span data-ttu-id="13f48-626"><see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-626"><see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-627">В следующем примере преобразуется в массив <xref:System.UInt64> значения <xref:System.Boolean> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-627">The following example converts an array of <xref:System.UInt64> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#10)]
 [!code-csharp[System.Convert.ToBoolean#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#10)]
 [!code-vb[System.Convert.ToBoolean#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Object, provider As IFormatProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : obj * IFormatProvider -&gt; bool" Usage="System.Convert.ToBoolean (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-628">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-628">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-629">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-629">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-630">Преобразует значение заданного объекта в эквивалентное логическое значение, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-630">Converts the value of the specified object to an equivalent Boolean value, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-631"><see langword="true" /> или <see langword="false" />, отражающее значение, возвращаемое методом <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> при вызове для базового типа параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-631"><see langword="true" /> or <see langword="false" />, which reflects the value returned by invoking the <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> method for the underlying type of <paramref name="value" />.</span></span> <span data-ttu-id="13f48-632">Если значением параметра <paramref name="value" /> является <see langword="null" />, метод возвращает <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-632">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-633">`provider` позволяет пользователю указать сведения о преобразовании региональных содержимое `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-633">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="13f48-634">Базовые типы игнорируют `provider` параметр; тем не менее, если может использоваться параметр `value` является определяемого пользователем типа, который реализует <xref:System.IConvertible> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13f48-634">The base types ignore the `provider` parameter; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-635">В следующем примере определяется класс, реализующий <xref:System.IConvertible> и класс, реализующий <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="13f48-635">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="13f48-636">Объекты класса, реализующего <xref:System.IConvertible> содержат массив <xref:System.Double> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-636">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="13f48-637">Объект каждого класса передается <xref:System.Convert.ToBoolean%28System.Object%2CSystem.IFormatProvider%29> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-637">An object of each class is passed to the <xref:System.Convert.ToBoolean%28System.Object%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="13f48-638">Этот метод возвращает `true` Если любое из значений не игнорируемые массива не равны нулю.</span><span class="sxs-lookup"><span data-stu-id="13f48-638">This method returns `true` if any of the non-discarded array values are non-zero.</span></span> <span data-ttu-id="13f48-639"><xref:System.IFormatProvider> Объект определяет, как для этого вычисления удаляются элементы.</span><span class="sxs-lookup"><span data-stu-id="13f48-639">The <xref:System.IFormatProvider> object determines how elements are discarded for this calculation.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-640"><paramref name="value" /> является строкой, которая не равна <see cref="F:System.Boolean.TrueString" /> или <see cref="F:System.Boolean.FalseString" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-640"><paramref name="value" /> is a string that does not equal <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-641"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-641"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-642">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-642">-or-</span></span> 
<span data-ttu-id="13f48-643">Преобразование <paramref name="value" /> в <see cref="T:System.Boolean" /> не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-643">The conversion of <paramref name="value" /> to a <see cref="T:System.Boolean" /> is not supported.</span></span></exception>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As String, provider As IFormatProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : string * IFormatProvider -&gt; bool" Usage="System.Convert.ToBoolean (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-644">Строка, содержащая значение <see cref="F:System.Boolean.TrueString" /> или <see cref="F:System.Boolean.FalseString" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-644">A string that contains the value of either <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-645">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-645">An object that supplies culture-specific formatting information.</span></span> <span data-ttu-id="13f48-646">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="13f48-646">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="13f48-647">Преобразует заданное строковое представление логического значения в эквивалентное логическое значение, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-647">Converts the specified string representation of a logical value to its Boolean equivalent, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-648"><see langword="true" />, если параметр <paramref name="value" /> имеет значение <see cref="F:System.Boolean.TrueString" />, или <see langword="false" />, если параметр <paramref name="value" /> имеет значение <see cref="F:System.Boolean.FalseString" /> либо <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-648"><see langword="true" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.TrueString" />, or <see langword="false" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.FalseString" /> or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-649">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-649">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-650">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-650">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-651">Параметр <paramref name="value" /> не равен <see cref="F:System.Boolean.TrueString" /> или <see cref="F:System.Boolean.FalseString" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-651"><paramref name="value" /> is not equal to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span></span></exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13f48-652">Преобразует заданное значение в 8-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-652">Converts a specified value to an 8-bit unsigned integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Boolean) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(bool value);" />
      <MemberSignature Language="F#" Value="static member ToByte : bool -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-653">Логическое значение, которое необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-653">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-654">Преобразует заданное логическое значение в эквивалентное 8-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-654">Converts the specified Boolean value to the equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-655">Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</span><span class="sxs-lookup"><span data-stu-id="13f48-655">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-656">В следующем примере показано преобразование <xref:System.Boolean> для <xref:System.Byte> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-656">The following example illustrates the conversion of <xref:System.Boolean> to <xref:System.Byte> values.</span></span>  
  
 [!code-cpp[System.Convert.ToByte#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.tobyte/cpp/tobyte1.cpp#1)]
 [!code-csharp[System.Convert.ToByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#1)]
 [!code-vb[System.Convert.ToByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToByte : byte -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-657">Возвращаемое 8-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-657">The 8-bit unsigned integer to return.</span></span></param>
        <summary><span data-ttu-id="13f48-658">Возвращает заданное 8-битовое целое число без знака; фактическое преобразование не производится.</span><span class="sxs-lookup"><span data-stu-id="13f48-658">Returns the specified 8-bit unsigned integer; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="13f48-659"><paramref name="value" /> возвращается без изменений.</span><span class="sxs-lookup"><span data-stu-id="13f48-659"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Char) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(char value);" />
      <MemberSignature Language="F#" Value="static member ToByte : char -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-660">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-660">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-661">Преобразует значение заданного символа Юникода в эквивалентное 8-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-661">Converts the value of the specified Unicode character to the equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-662">8-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-662">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-663">Этот метод возвращает значение типа byte без знака, представляющее числовой код <xref:System.Char> переданный ему объект.</span><span class="sxs-lookup"><span data-stu-id="13f48-663">This method returns an unsigned byte value that represents the numeric code of the <xref:System.Char> object passed to it.</span></span> <span data-ttu-id="13f48-664">В .NET Framework <xref:System.Char> объект является 16-разрядное значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-664">In the .NET Framework, a <xref:System.Char> object is a 16-bit value.</span></span> <span data-ttu-id="13f48-665">Это означает, что метод подходит для возврата числовых кодов символов в диапазоне символов ASCII, или в диапазонах Юникода C0 элементы управления и Basic Latin и элементы управления C1 и дополнительная латиница-1, от U + 0000 до U + 00FF.</span><span class="sxs-lookup"><span data-stu-id="13f48-665">This means that the method is suitable for returning the numeric codes of characters in the ASCII character range or in the Unicode C0 Controls and Basic Latin, and C1 Controls and Latin-1 Supplement ranges, from U+0000 to U+00FF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-666">В следующем примере преобразуется в массив <xref:System.Char> значения <xref:System.Byte> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-666">The following example converts an array of <xref:System.Char> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#2)]
 [!code-vb[System.Convert.ToByte#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-667">Параметр <paramref name="value" /> представляет число, которое больше <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-667"><paramref name="value" /> represents a number that is greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As DateTime) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToByte : DateTime -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-668">Значение даты и времени для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-668">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-669">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-669">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-670">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-670">This conversion is not supported.</span></span> <span data-ttu-id="13f48-671">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-671">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-672">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-672">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Decimal) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToByte : decimal -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-673">Преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-673">The number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-674">Преобразует значение заданного десятичного числа в эквивалентное 8-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-674">Converts the value of the specified decimal number to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-675">Значение <paramref name="value" />, округленное до ближайшего 8-разрядного целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-675"><paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span></span> <span data-ttu-id="13f48-676">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-676">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-677">В следующем примере выполняется преобразование <xref:System.Byte> значение <xref:System.Decimal> и <xref:System.Decimal> значение <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="13f48-677">The following example converts a <xref:System.Byte> value to a <xref:System.Decimal> and a <xref:System.Decimal> value to a <xref:System.Byte>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#18)]
 [!code-csharp[System.Convert Snippets#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#18)]
 [!code-vb[System.Convert Snippets#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-678"><paramref name="value" /> больше <see cref="F:System.Byte.MaxValue" /> или меньше <see cref="F:System.Byte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-678"><paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Double) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(double value);" />
      <MemberSignature Language="F#" Value="static member ToByte : double -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-679">Число с плавающей запятой двойной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-679">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-680">Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 8-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-680">Converts the value of the specified double-precision floating-point number to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-681">Значение <paramref name="value" />, округленное до ближайшего 8-разрядного целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-681"><paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span></span> <span data-ttu-id="13f48-682">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-682">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-683">В следующем примере выполняется преобразование <xref:System.Byte> значение <xref:System.Double> и <xref:System.Double> значение <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="13f48-683">The following example converts a <xref:System.Byte> value to a <xref:System.Double> and a <xref:System.Double> value to a <xref:System.Byte>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#2)]
 [!code-csharp[System.Convert Snippets#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#2)]
 [!code-vb[System.Convert Snippets#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-684"><paramref name="value" /> больше <see cref="F:System.Byte.MaxValue" /> или меньше <see cref="F:System.Byte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-684"><paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Short) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(short value);" />
      <MemberSignature Language="F#" Value="static member ToByte : int16 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-685">16-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-685">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-686">Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное 8-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-686">Converts the value of the specified 16-bit signed integer to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-687">8-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-687">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-688">В следующем примере преобразуется в массив <xref:System.Int16> значения <xref:System.Byte> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-688">The following example converts an array of <xref:System.Int16> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#3)]
 [!code-vb[System.Convert.ToByte#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-689">Значение <paramref name="value" /> меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-689"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(int value);" />
      <MemberSignature Language="F#" Value="static member ToByte : int -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-690">32-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-690">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-691">Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 8-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-691">Converts the value of the specified 32-bit signed integer to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-692">8-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-692">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-693">В следующем примере преобразуется в массив <xref:System.Int32> значения <xref:System.Byte> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-693">The following example converts an array of <xref:System.Int32> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#4)]
 [!code-vb[System.Convert.ToByte#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-694">Значение <paramref name="value" /> меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-694"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Long) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(long value);" />
      <MemberSignature Language="F#" Value="static member ToByte : int64 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-695">64-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-695">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-696">Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное 8-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-696">Converts the value of the specified 64-bit signed integer to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-697">8-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-697">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-698">В следующем примере преобразуется в массив <xref:System.Int64> значения <xref:System.Byte> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-698">The following example converts an array of <xref:System.Int64> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#5)]
 [!code-vb[System.Convert.ToByte#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-699">Значение <paramref name="value" /> меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-699"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Object) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToByte : obj -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-700">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-700">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="13f48-701">Преобразует значение заданного объекта в 8-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-701">Converts the value of the specified object to an 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-702">8-разрядное целое число без знака, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-702">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-703">Если `value` не `null`, этот метод создает оболочку для вызова <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> реализацию базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-703">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-704">В следующем примере используется <xref:System.Convert.ToByte%28System.Object%29> метод для преобразования массива объектов <xref:System.Byte> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-704">The following example uses the <xref:System.Convert.ToByte%28System.Object%29> method to convert an array of objects to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#6)]
 [!code-vb[System.Convert.ToByte#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-705"><paramref name="value" /> не является форматом свойства для значения <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-705"><paramref name="value" /> is not in the property format for a <see cref="T:System.Byte" /> value.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-706"><paramref name="value" /> не реализует <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-706"><paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span></span>  
  
<span data-ttu-id="13f48-707">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-707">-or-</span></span> 
<span data-ttu-id="13f48-708">Преобразование из <paramref name="value" /> в тип <see cref="T:System.Byte" /> не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-708">Conversion from <paramref name="value" /> to the <see cref="T:System.Byte" /> type is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-709">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-709"><paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As SByte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToByte : sbyte -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-710">8-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-710">The 8-bit signed integer to be converted.</span></span></param>
        <summary><span data-ttu-id="13f48-711">Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное 8-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-711">Converts the value of the specified 8-bit signed integer to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-712">8-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-712">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-713">В следующем примере преобразуется в массив <xref:System.SByte> значения <xref:System.Byte> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-713">The following example converts an array of <xref:System.SByte> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#7)]
 [!code-vb[System.Convert.ToByte#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-714">Значение <paramref name="value" /> меньше <see cref="F:System.Byte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-714"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Single) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(float value);" />
      <MemberSignature Language="F#" Value="static member ToByte : single -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-715">Число одиночной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="13f48-715">A single-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="13f48-716">Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 8-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-716">Converts the value of the specified single-precision floating-point number to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-717">Значение <paramref name="value" />, округленное до ближайшего 8-разрядного целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-717"><paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span></span> <span data-ttu-id="13f48-718">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-718">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-719">В следующем примере выполняется преобразование <xref:System.Single> значение <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="13f48-719">The following example converts a <xref:System.Single> value to a <xref:System.Byte>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#19)]
 [!code-csharp[System.Convert Snippets#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#19)]
 [!code-vb[System.Convert Snippets#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-720"><paramref name="value" /> больше <see cref="F:System.Byte.MaxValue" /> или меньше <see cref="F:System.Byte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-720"><paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span></span></exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As String) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToByte : string -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-721">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-721">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-722">Преобразует заданное строковое представление числа в эквивалентное 8-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-722">Converts the specified string representation of a number to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-723">8-разрядное целое число без знака, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-723">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-724">С помощью <xref:System.Convert.ToByte%28System.String%29> метод эквивалентна передаче `value` для <xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-724">Using the <xref:System.Convert.ToByte%28System.String%29> method is equivalent to passing `value` to the <xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="13f48-725">Параметр `value` интерпретируется с использованием соглашений о форматировании, принятых в культуре текущего потока.</span><span class="sxs-lookup"><span data-stu-id="13f48-725">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="13f48-726">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.Byte.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-726">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Byte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-727">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-727">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-728">В следующем примере, определяет строковый массив и пытается преобразовать каждую строку, чтобы <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="13f48-728">The following example defines a string array and attempts to convert each string to a <xref:System.Byte>.</span></span>  <span data-ttu-id="13f48-729">Обратите внимание, что, хотя `null` выполняет синтаксический анализ строки, равное нулю, <xref:System.String.Empty?displayProperty=nameWithType> вызывает <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="13f48-729">Note that while a `null` string parses to zero, <xref:System.String.Empty?displayProperty=nameWithType> throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="13f48-730">Обратите внимание на то, что хотя начальные и конечные пробелы успешно проходят синтаксический анализ, форматирование символы, символы валюты, разделители групп и десятичные разделители — нет.</span><span class="sxs-lookup"><span data-stu-id="13f48-730">Also note that while leading and trailing spaces parse successfully, formatting symbols, such as currency symbols, group separators, or decimal separators, do not.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/ToByte5.cs#15)]
 [!code-vb[System.Convert.ToByte#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte5.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-731"><paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</span><span class="sxs-lookup"><span data-stu-id="13f48-731"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-732">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-732"><paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Byte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As UShort) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToByte : uint16 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-733">16-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-733">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-734">Преобразует значение заданного 16-битового целого числа без знака в эквивалентное 8-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-734">Converts the value of the specified 16-bit unsigned integer to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-735">8-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-735">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-736">В следующем примере преобразуется в массив целых чисел без знака 16-разрядное <xref:System.Byte> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-736">The following example converts an array of unsigned 16-bit integers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#8)]
 [!code-vb[System.Convert.ToByte#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-737">Значение <paramref name="value" /> больше значения <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-737"><paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As UInteger) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToByte : uint32 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-738">32-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-738">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-739">Преобразует значение заданного 32-битового целого числа без знака в эквивалентное 8-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-739">Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-740">8-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-740">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-741">В следующем примере преобразуется в массив целых чисел без знака <xref:System.Byte> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-741">The following example converts an array of unsigned integers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#9)]
 [!code-vb[System.Convert.ToByte#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-742">Значение <paramref name="value" /> больше значения <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-742"><paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As ULong) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToByte : uint64 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-743">64-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-743">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-744">Преобразует значение заданного 64-разрядного целого числа без знака в эквивалентное 8-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-744">Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-745">8-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-745">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-746">В следующем примере преобразуется в массив длинных целых чисел без знака <xref:System.Byte> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-746">The following example converts an array of unsigned long integers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#10)]
 [!code-vb[System.Convert.ToByte#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-747">Значение <paramref name="value" /> больше значения <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-747"><paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Object, provider As IFormatProvider) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToByte : obj * IFormatProvider -&gt; byte" Usage="System.Convert.ToByte (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-748">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-748">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-749">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-749">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-750">Преобразует значение заданного объекта в эквивалентное 8-разрядное целое число без знака, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-750">Converts the value of the specified object to an 8-bit unsigned integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-751">8-разрядное целое число без знака, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-751">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-752">`provider` позволяет пользователю указать сведения о преобразовании региональных содержимое `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-752">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="13f48-753">Базовые типы игнорируют `provider`, однако параметр может быть использован, если `value` является определяемого пользователем типа, который реализует <xref:System.IConvertible> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13f48-753">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-754">В следующем примере определяется класс `ByteString` , реализующий интерфейс <xref:System.IConvertible> .</span><span class="sxs-lookup"><span data-stu-id="13f48-754">The following example defines a `ByteString` class that implements the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="13f48-755">Класс хранит строковое представление байтовое значение вместе с полем входа, так как это может представлять оба значения байтов со знаком и без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-755">The class stores the string representation of a byte value along with a sign field, so that it is able to represent both signed and unsigned byte values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte3.cs#12)]
 [!code-vb[System.Convert.ToByte#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte3.vb#12)]  
  
 <span data-ttu-id="13f48-756">В следующем примере создается несколько `ByteString` и вызов метода <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29> метод для преобразования их в байтовых значений.</span><span class="sxs-lookup"><span data-stu-id="13f48-756">The following example instantiates several `ByteString` objects and calls the <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29> method to convert them to byte values.</span></span> <span data-ttu-id="13f48-757">Этот пример иллюстрирует <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29> метод создает оболочку для вызова <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> метод объекта для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-757">It illustrates that the <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29> method wraps a call to the <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> method of the object to be converted.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte3.cs#13)]
 [!code-vb[System.Convert.ToByte#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte3.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-758"><paramref name="value" /> не является форматом свойства для значения <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-758"><paramref name="value" /> is not in the property format for a <see cref="T:System.Byte" /> value.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-759"><paramref name="value" /> не реализует <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-759"><paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span></span>  
  
<span data-ttu-id="13f48-760">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-760">-or-</span></span> 
<span data-ttu-id="13f48-761">Преобразование из <paramref name="value" /> в тип <see cref="T:System.Byte" /> не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-761">Conversion from <paramref name="value" /> to the <see cref="T:System.Byte" /> type is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-762">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-762"><paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As String, provider As IFormatProvider) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToByte : string * IFormatProvider -&gt; byte" Usage="System.Convert.ToByte (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-763">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-763">A string that contains the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-764">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-764">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-765">Преобразует заданное строковое представление числа в эквивалентное 8-разрядное целое число без знака, учитывая сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-765">Converts the specified string representation of a number to an equivalent 8-bit unsigned integer, using specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-766">8-разрядное целое число без знака, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-766">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-767">`provider` — <xref:System.IFormatProvider> экземпляр, который получает <xref:System.Globalization.NumberFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-767">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="13f48-768"><xref:System.Globalization.NumberFormatInfo> Предоставляет зависящие от культуры сведения о формате параметра `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-768">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="13f48-769">Если `provider` — `null`, <xref:System.Globalization.NumberFormatInfo> объект для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-769">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
 <span data-ttu-id="13f48-770">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.Byte.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-770">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Byte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-771">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-771">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-772">В следующем примере создается пользовательский <xref:System.Globalization.NumberFormatInfo> , определяющий положительный знак «pos» и знак минус как «neg», который используется в вызовах <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-772">The following example creates a custom <xref:System.Globalization.NumberFormatInfo> object that defines the positive sign as "pos" and the negative sign as "neg", which it uses in calls to the <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="13f48-773">Затем он вызывает <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29> метода несколько раз, для преобразования каждого элемента в массиве строк для <xref:System.Byte> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-773">It then calls the <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29> method repeatedly to convert each element in a string array to a <xref:System.Byte> value.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte4.cs#14)]
 [!code-vb[System.Convert.ToByte#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte4.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-774"><paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</span><span class="sxs-lookup"><span data-stu-id="13f48-774"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-775">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-775"><paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Byte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As String, fromBase As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToByte : string * int -&gt; byte" Usage="System.Convert.ToByte (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-776">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-776">A string that contains the number to convert.</span></span></param>
        <param name="fromBase"><span data-ttu-id="13f48-777">Основание системы счисления, используемой для представления числа, заданного в параметре <paramref name="value" />, равное 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-777">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="13f48-778">Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 8-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-778">Converts the string representation of a number in a specified base to an equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-779">8-разрядное целое число без знака, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-779">An 8-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-780">Если `fromBase` 16, можно добавить префикс номера, указанного в `value` параметр с «0 x» или «0 X».</span><span class="sxs-lookup"><span data-stu-id="13f48-780">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="13f48-781">Так как <xref:System.Byte> тип данных поддерживает только значения без знака <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29> метод предполагает, что `value` выражается с помощью двоичное представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-781">Because the <xref:System.Byte> data type supports unsigned values only, the <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="13f48-782">Другими словами все восемь битов используются для представления числового значения и бит знака отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-782">In other words, all eight bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="13f48-783">Таким образом, можно написать код, в котором значение байт со знаком, которое находится за пределами диапазона <xref:System.Byte> тип данных преобразуется в <xref:System.Byte> значение метод не выбрасывает исключение.</span><span class="sxs-lookup"><span data-stu-id="13f48-783">As a result, it is possible to write code in which a signed byte value that is out of the range of the <xref:System.Byte> data type is converted to a <xref:System.Byte> value without the method throwing an exception.</span></span> <span data-ttu-id="13f48-784">В следующем примере выполняется преобразование <xref:System.SByte.MinValue> шестнадцатеричное строковое представление и затем вызывает <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-784">The following example converts <xref:System.SByte.MinValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="13f48-785">Вместо вызова исключения, метод выводит сообщение «0x80 преобразуется в 128».</span><span class="sxs-lookup"><span data-stu-id="13f48-785">Instead of throwing an exception, the method displays the message, "0x80 converts to 128."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#3)]
 [!code-vb[System.Convert.BaseConversion#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#3)]  
  
 <span data-ttu-id="13f48-786">При выполнении двоичных операций или числовых преобразований, это всегда ответственность за разработчика, чтобы убедиться, что метод или оператор использует подходящее числовое представление для интерпретации определенного значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-786">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="13f48-787">В следующем примере показан один из способов, для обеспечения того, что метод не использует беззнаковое unsigned двоичное представление при преобразовании данных в шестнадцатеричную строку, представляющую <xref:System.Byte> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-787">The following example illustrates one technique for ensuring that the method does not inappropriately use unsigned binary representation when it converts a hexadecimal string representation to a <xref:System.Byte> value.</span></span> <span data-ttu-id="13f48-788">В примере определяется, представляет ли значение со знаком или целое число без знака, преобразуя это значение в строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-788">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="13f48-789">Если код примера преобразует значение обратно в <xref:System.Byte> значение, он проверяет, является ли исходное значение целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-789">When the example converts the value back to a <xref:System.Byte> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="13f48-790">Если Да, и при его старшие бита (который указывает, что значение является отрицательным и двух является дополнением, а не двоичное представление), метод вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="13f48-790">If so, and if its high-order bit is set (which indicates that the value is negative and that it uses two's complement instead of unsigned binary representation), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#4)]
 [!code-vb[System.Convert.BaseConversion#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="13f48-791">Кроме того, в следующем примере предпринимается для интерпретации массив строк, как представление двоичных, восьмеричных, decimal и шестнадцатеричных значений.</span><span class="sxs-lookup"><span data-stu-id="13f48-791">The following example alternately attempts to interpret an array of strings as the representation of binary, octal, decimal, and hexadecimal values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte2.cs#11)]
 [!code-vb[System.Convert.ToByte#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte2.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="13f48-792"><paramref name="fromBase" /> не равно 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-792"><paramref name="fromBase" /> is not 2, 8, 10, or 16.</span></span>  
  
<span data-ttu-id="13f48-793">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-793">-or-</span></span> 
 <span data-ttu-id="13f48-794">Значение <paramref name="value" />, представляющее недесятичное число без знака, использовано со знаком минус.</span><span class="sxs-lookup"><span data-stu-id="13f48-794"><paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="13f48-795"><paramref name="value" /> — <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-795"><paramref name="value" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-796"><paramref name="value" /> содержит символ, который не является допустимой цифрой в основании, заданном параметром <paramref name="fromBase" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-796"><paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span></span> <span data-ttu-id="13f48-797">Сообщение об исключении указывает, что отсутствуют цифры для преобразования, если первый символ в <paramref name="value" /> недопустим; в противном случае сообщение указывает, что <paramref name="value" /> содержит недопустимые конечные символы.</span><span class="sxs-lookup"><span data-stu-id="13f48-797">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-798">Параметру <paramref name="value" />, представляющему десятичное число без знака, предшествует знак минус.</span><span class="sxs-lookup"><span data-stu-id="13f48-798"><paramref name="value" />, which represents a base 10 unsigned number, is prefixed with a negative sign.</span></span>  
  
<span data-ttu-id="13f48-799">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-799">-or-</span></span> 
 <span data-ttu-id="13f48-800">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-800"><paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToChar">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13f48-801">Преобразует заданное значение в символ Юникода.</span><span class="sxs-lookup"><span data-stu-id="13f48-801">Converts a specified value to a Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Boolean) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(bool value);" />
      <MemberSignature Language="F#" Value="static member ToChar : bool -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-802">Логическое значение, которое необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-802">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-803">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-803">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-804">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-804">This conversion is not supported.</span></span> <span data-ttu-id="13f48-805">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-805">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-806">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-806">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Byte) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToChar : byte -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-807">8-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-807">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-808">Преобразует значение заданного 8-разрядного целого числа без знака в эквивалентный символ Юникода.</span><span class="sxs-lookup"><span data-stu-id="13f48-808">Converts the value of the specified 8-bit unsigned integer to its equivalent Unicode character.</span></span></summary>
        <returns><span data-ttu-id="13f48-809">Знак Юникода, который эквивалентен значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-809">A Unicode character that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-810">В следующем примере преобразуется в массив байтов без знака для <xref:System.Char> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-810">The following example converts an array of unsigned bytes to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#1)]
 [!code-vb[System.Convert.ToChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(char value);" />
      <MemberSignature Language="F#" Value="static member ToChar : char -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-811">Возвращаемый знак Юникода.</span><span class="sxs-lookup"><span data-stu-id="13f48-811">The Unicode character to return.</span></span></param>
        <summary><span data-ttu-id="13f48-812">Возвращает заданное значение символа Юникода; фактическое преобразование не производится.</span><span class="sxs-lookup"><span data-stu-id="13f48-812">Returns the specified Unicode character value; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="13f48-813"><paramref name="value" /> возвращается без изменений.</span><span class="sxs-lookup"><span data-stu-id="13f48-813"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As DateTime) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToChar : DateTime -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-814">Значение даты и времени для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-814">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-815">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-815">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-816">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-816">This conversion is not supported.</span></span> <span data-ttu-id="13f48-817">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-817">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-818">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-818">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Decimal) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToChar : decimal -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-819">Десятичное число для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-819">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-820">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-820">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-821">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-821">This conversion is not supported.</span></span> <span data-ttu-id="13f48-822">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-822">No value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-823">В следующем примере предпринимается попытка преобразовать <xref:System.Decimal> для <xref:System.Char>и создает <xref:System.InvalidCastException> в случае сбоя.</span><span class="sxs-lookup"><span data-stu-id="13f48-823">The following example attempts to convert a <xref:System.Decimal> to <xref:System.Char>, and throws <xref:System.InvalidCastException> on failure.</span></span>  
  
 [!code-cpp[System.Convert Snippets#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#17)]
 [!code-csharp[System.Convert Snippets#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#17)]
 [!code-vb[System.Convert Snippets#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-824">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-824">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Double) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(double value);" />
      <MemberSignature Language="F#" Value="static member ToChar : double -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-825">Число с плавающей запятой двойной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-825">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-826">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-826">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-827">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-827">This conversion is not supported.</span></span> <span data-ttu-id="13f48-828">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-828">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-829">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-829">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Short) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(short value);" />
      <MemberSignature Language="F#" Value="static member ToChar : int16 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-830">16-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-830">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-831">Преобразует значение заданного 16-битового целого числа со знаком в эквивалентный символ Юникода.</span><span class="sxs-lookup"><span data-stu-id="13f48-831">Converts the value of the specified 16-bit signed integer to its equivalent Unicode character.</span></span></summary>
        <returns><span data-ttu-id="13f48-832">Знак Юникода, который эквивалентен значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-832">A Unicode character that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-833">В следующем примере преобразуется в массив 16-разрядных целых чисел со знаком <xref:System.Char> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-833">The following example converts an array of signed 16-bit integers to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#2)]
 [!code-vb[System.Convert.ToChar#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-834">Значение <paramref name="value" /> меньше <see cref="F:System.Char.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-834"><paramref name="value" /> is less than <see cref="F:System.Char.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(int value);" />
      <MemberSignature Language="F#" Value="static member ToChar : int -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-835">32-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-835">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-836">Преобразует значение заданного 32-битового целого числа со знаком в эквивалентный символ Юникода.</span><span class="sxs-lookup"><span data-stu-id="13f48-836">Converts the value of the specified 32-bit signed integer to its equivalent Unicode character.</span></span></summary>
        <returns><span data-ttu-id="13f48-837">Знак Юникода, который эквивалентен значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-837">A Unicode character that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-838">В следующем примере преобразуется в массив целых чисел со знаком <xref:System.Char> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-838">The following example converts an array of signed integers to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#3)]
 [!code-vb[System.Convert.ToChar#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-839">Значение <paramref name="value" /> меньше <see cref="F:System.Char.MinValue" /> или больше <see cref="F:System.Char.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-839"><paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Long) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(long value);" />
      <MemberSignature Language="F#" Value="static member ToChar : int64 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-840">64-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-840">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-841">Преобразует значение заданного 64-битового целого числа со знаком в эквивалентный символ Юникода.</span><span class="sxs-lookup"><span data-stu-id="13f48-841">Converts the value of the specified 64-bit signed integer to its equivalent Unicode character.</span></span></summary>
        <returns><span data-ttu-id="13f48-842">Знак Юникода, который эквивалентен значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-842">A Unicode character that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-843">В следующем примере предпринимается попытка преобразовать длинное целое число для <xref:System.Char>и создает <xref:System.OverflowException> в случае сбоя.</span><span class="sxs-lookup"><span data-stu-id="13f48-843">The following example attempts to convert a long integer to a <xref:System.Char>, and throws a <xref:System.OverflowException> on failure.</span></span>  
  
 [!code-cpp[System.Convert Snippets#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#8)]
 [!code-csharp[System.Convert Snippets#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#8)]
 [!code-vb[System.Convert Snippets#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-844">Значение <paramref name="value" /> меньше <see cref="F:System.Char.MinValue" /> или больше <see cref="F:System.Char.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-844"><paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Object) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToChar : obj -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-845">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-845">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <summary><span data-ttu-id="13f48-846">Преобразует значение заданного объекта в знак Юникода.</span><span class="sxs-lookup"><span data-stu-id="13f48-846">Converts the value of the specified object to a Unicode character.</span></span></summary>
        <returns><span data-ttu-id="13f48-847">Знак Юникода, который эквивалентен значению, или <see cref="F:System.Char.MinValue" />, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-847">A Unicode character that is equivalent to value, or <see cref="F:System.Char.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-848">Если `value` не `null`, этот метод создает оболочку для вызова <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> реализацию базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-848">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-849">В следующем примере предпринимается попытка преобразовать каждый элемент в массиве объектов для <xref:System.Char> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-849">The following example attempts to convert each element in an object array to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#9)]
 [!code-vb[System.Convert.ToChar#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13f48-850">Значение <paramref name="value" /> является пустой строкой.</span><span class="sxs-lookup"><span data-stu-id="13f48-850"><paramref name="value" /> is a null string.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-851"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-851"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-852">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-852">-or-</span></span> 
<span data-ttu-id="13f48-853">Преобразование <paramref name="value" /> в <see cref="T:System.Char" /> не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-853">The conversion of <paramref name="value" /> to a <see cref="T:System.Char" /> is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-854">Значение <paramref name="value" /> меньше <see cref="F:System.Char.MinValue" /> или больше <see cref="F:System.Char.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-854"><paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As SByte) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToChar : sbyte -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-855">8-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-855">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-856">Преобразует значение заданного 8-битового целого числа со знаком в эквивалентный символ Юникода.</span><span class="sxs-lookup"><span data-stu-id="13f48-856">Converts the value of the specified 8-bit signed integer to its equivalent Unicode character.</span></span></summary>
        <returns><span data-ttu-id="13f48-857">Знак Юникода, который эквивалентен значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-857">A Unicode character that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-858">В следующем примере преобразуется в массив байтов со знаком для <xref:System.Char> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-858">The following example converts an array of signed bytes to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#4)]
 [!code-vb[System.Convert.ToChar#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-859">Значение <paramref name="value" /> меньше <see cref="F:System.Char.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-859"><paramref name="value" /> is less than <see cref="F:System.Char.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Single) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(float value);" />
      <MemberSignature Language="F#" Value="static member ToChar : single -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-860">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-860">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-861">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-861">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-862">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-862">This conversion is not supported.</span></span> <span data-ttu-id="13f48-863">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-863">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-864">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-864">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToChar : string -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-865">Строка длиной в 1 знак.</span><span class="sxs-lookup"><span data-stu-id="13f48-865">A string of length 1.</span></span></param>
        <summary><span data-ttu-id="13f48-866">Преобразует первый знак указанной строки в знак Юникода.</span><span class="sxs-lookup"><span data-stu-id="13f48-866">Converts the first character of a specified string to a Unicode character.</span></span></summary>
        <returns><span data-ttu-id="13f48-867">Знак Юникода, эквивалентный первому и единственному знаку в <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-867">A Unicode character that is equivalent to the first and only character in <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-868">`value` должен быть строкой, содержащей один символ.</span><span class="sxs-lookup"><span data-stu-id="13f48-868">`value` must be a string that contains a single character.</span></span>  
  
 <span data-ttu-id="13f48-869">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.Char.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-869">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Char.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-870">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-870">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-871">В следующем примере преобразуется каждого элемента в массиве строк для <xref:System.Char> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-871">The following example converts each element in a string array to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#5)]
 [!code-vb[System.Convert.ToChar#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13f48-872"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-872"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-873">Длина <paramref name="value" /> не равна 1.</span><span class="sxs-lookup"><span data-stu-id="13f48-873">The length of <paramref name="value" /> is not 1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As UShort) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToChar : uint16 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-874">16-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-874">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-875">Преобразует значение заданного 16-разрядного целого числа без знака в эквивалентный символ Юникода.</span><span class="sxs-lookup"><span data-stu-id="13f48-875">Converts the value of the specified 16-bit unsigned integer to its equivalent Unicode character.</span></span></summary>
        <returns><span data-ttu-id="13f48-876">Знак Юникода, который эквивалентен значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-876">A Unicode character that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-877">В следующем примере преобразуется каждого элемента в массив целых чисел без знака 16-разрядное <xref:System.Char> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-877">The following example converts each element in an array of unsigned 16-bit integers to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#6)]
 [!code-vb[System.Convert.ToChar#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As UInteger) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToChar : uint32 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-878">32-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-878">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-879">Преобразует значение заданного 32-разрядного целого числа без знака в эквивалентный символ Юникода.</span><span class="sxs-lookup"><span data-stu-id="13f48-879">Converts the value of the specified 32-bit unsigned integer to its equivalent Unicode character.</span></span></summary>
        <returns><span data-ttu-id="13f48-880">Знак Юникода, который эквивалентен значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-880">A Unicode character that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-881">В следующем примере преобразуется каждого элемента в массив целых чисел без знака <xref:System.Char> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-881">The following example converts each element in an array of unsigned integers to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#7)]
 [!code-vb[System.Convert.ToChar#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-882">Значение <paramref name="value" /> больше значения <see cref="F:System.Char.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-882"><paramref name="value" /> is greater than <see cref="F:System.Char.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As ULong) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToChar : uint64 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-883">64-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-883">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-884">Преобразует значение заданного 64-разрядного целого числа без знака в эквивалентный символ Юникода.</span><span class="sxs-lookup"><span data-stu-id="13f48-884">Converts the value of the specified 64-bit unsigned integer to its equivalent Unicode character.</span></span></summary>
        <returns><span data-ttu-id="13f48-885">Знак Юникода, который эквивалентен значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-885">A Unicode character that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-886">В следующем примере преобразуется каждого элемента в массив длинных целых чисел без знака <xref:System.Char> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-886">The following example converts each element in an array of unsigned long integers to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#8)]
 [!code-vb[System.Convert.ToChar#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-887">Значение <paramref name="value" /> больше значения <see cref="F:System.Char.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-887"><paramref name="value" /> is greater than <see cref="F:System.Char.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Object, provider As IFormatProvider) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToChar : obj * IFormatProvider -&gt; char" Usage="System.Convert.ToChar (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-888">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-888">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-889">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-889">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-890">Преобразует значение заданного объекта в эквивалентный знак Юникода, используя указанные сведения о форматировании, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-890">Converts the value of the specified object to its equivalent Unicode character, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-891">Знак Юникода, который эквивалентен <paramref name="value" />, или <see cref="F:System.Char.MinValue" />, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-891">A Unicode character that is equivalent to <paramref name="value" />, or <see cref="F:System.Char.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-892">Возвращает значение, в результате вызова <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> метод базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-892">The return value is the result of invoking the <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="13f48-893">`provider` позволяет пользователю указать сведения о преобразовании региональных содержимое `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-893">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="13f48-894">Базовые типы игнорируют `provider`, однако параметр может быть использован, если `value` является определяемого пользователем типа, который реализует <xref:System.IConvertible> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13f48-894">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-895">В следующем примере определяется класс, реализующий <xref:System.IConvertible> и класс, реализующий <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="13f48-895">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="13f48-896">Объекты класса, реализующего <xref:System.IConvertible> содержат массив <xref:System.Double> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-896">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="13f48-897">Объект каждого класса передается `ToChar` метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-897">An object of each class is passed to the `ToChar` method.</span></span> <span data-ttu-id="13f48-898">Этот метод возвращает символ Юникода, значение является средним массива <xref:System.Double> значения, с помощью объекта, который реализует <xref:System.IFormatProvider> для определения способа, для которых вычисляется среднее.</span><span class="sxs-lookup"><span data-stu-id="13f48-898">This method returns a character whose Unicode value is the average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13f48-899">Значение <paramref name="value" /> является пустой строкой.</span><span class="sxs-lookup"><span data-stu-id="13f48-899"><paramref name="value" /> is a null string.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-900"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-900"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-901">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-901">-or-</span></span> 
<span data-ttu-id="13f48-902">Преобразование <paramref name="value" /> в <see cref="T:System.Char" /> не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-902">The conversion of <paramref name="value" /> to a <see cref="T:System.Char" /> is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-903">Значение <paramref name="value" /> меньше <see cref="F:System.Char.MinValue" /> или больше <see cref="F:System.Char.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-903"><paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As String, provider As IFormatProvider) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToChar : string * IFormatProvider -&gt; char" Usage="System.Convert.ToChar (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-904">Строка длиной в 1 знак или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-904">A string of length 1 or <see langword="null" />.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-905">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-905">An object that supplies culture-specific formatting information.</span></span> <span data-ttu-id="13f48-906">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="13f48-906">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="13f48-907">Преобразует первый знак заданной строки в знак Юникода, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-907">Converts the first character of a specified string to a Unicode character, using specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-908">Знак Юникода, эквивалентный первому и единственному знаку в <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-908">A Unicode character that is equivalent to the first and only character in <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-909">`value` должен быть строкой, содержащей один символ.</span><span class="sxs-lookup"><span data-stu-id="13f48-909">`value` must be a string that contains a single character.</span></span>  
  
 <span data-ttu-id="13f48-910">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.Char.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-910">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Char.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-911">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-911">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-912">В следующем примере преобразуется в строковое представление <xref:System.Char> со значением `ToChar` метод, с помощью <xref:System.IFormatProvider> объекта, который отображает тип поставщика формата, для которого он вызывается.</span><span class="sxs-lookup"><span data-stu-id="13f48-912">The following example converts a string representation of a <xref:System.Char> value with the `ToChar` method, using an <xref:System.IFormatProvider> object that displays the type of the format provider for which it is called.</span></span> <span data-ttu-id="13f48-913">В примере показано, что поставщик формата не используется.</span><span class="sxs-lookup"><span data-stu-id="13f48-913">The example shows that the format provider is not referenced.</span></span>  
  
 [!code-cpp[System.Convert.ToNonNum_String#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToNonNum_String/CPP/stringnonnum.cpp#2)]
 [!code-csharp[System.Convert.ToNonNum_String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToNonNum_String/CS/stringnonnum.cs#2)]
 [!code-vb[System.Convert.ToNonNum_String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToNonNum_String/VB/stringnonnum.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13f48-914"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-914"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-915">Длина <paramref name="value" /> не равна 1.</span><span class="sxs-lookup"><span data-stu-id="13f48-915">The length of <paramref name="value" /> is not 1.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDateTime">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13f48-916">Преобразует заданное значение к значению <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-916">Converts a specified value to a <see cref="T:System.DateTime" /> value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Boolean) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(bool value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : bool -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-917">Логическое значение, которое необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-917">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-918">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-918">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-919">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-919">This conversion is not supported.</span></span> <span data-ttu-id="13f48-920">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-920">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-921">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-921">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Byte) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : byte -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-922">8-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-922">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-923">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-923">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-924">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-924">This conversion is not supported.</span></span> <span data-ttu-id="13f48-925">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-925">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-926">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-926">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Char) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(char value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : char -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-927">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-927">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-928">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-928">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-929">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-929">This conversion is not supported.</span></span> <span data-ttu-id="13f48-930">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-930">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-931">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-931">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : DateTime -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-932">Значение даты и времени.</span><span class="sxs-lookup"><span data-stu-id="13f48-932">A date and time value.</span></span></param>
        <summary><span data-ttu-id="13f48-933">Возвращает заданный объект <see cref="T:System.DateTime" />; фактическое преобразование не производится.</span><span class="sxs-lookup"><span data-stu-id="13f48-933">Returns the specified <see cref="T:System.DateTime" /> object; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="13f48-934"><paramref name="value" /> возвращается без изменений.</span><span class="sxs-lookup"><span data-stu-id="13f48-934"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Decimal) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : decimal -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-935">Преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-935">The number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-936">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-936">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-937">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-937">This conversion is not supported.</span></span> <span data-ttu-id="13f48-938">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-938">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-939">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-939">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(double value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : double -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-940">Значение с плавающей запятой двойной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-940">The double-precision floating-point value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-941">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-941">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-942">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-942">This conversion is not supported.</span></span> <span data-ttu-id="13f48-943">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-943">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-944">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-944">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Short) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(short value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : int16 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-945">16-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-945">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-946">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-946">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-947">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-947">This conversion is not supported.</span></span> <span data-ttu-id="13f48-948">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-948">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-949">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-949">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(int value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : int -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-950">32-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-950">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-951">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-951">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-952">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-952">This conversion is not supported.</span></span> <span data-ttu-id="13f48-953">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-953">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-954">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-954">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(long value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : int64 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-955">64-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-955">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-956">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-956">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-957">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-957">This conversion is not supported.</span></span> <span data-ttu-id="13f48-958">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-958">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-959">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-959">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Object) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : obj -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-960">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-960">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="13f48-961">Преобразует значение указанного объекта в объект <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-961">Converts the value of the specified object to a <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="13f48-962">Дата и время, эквивалентные значению <paramref name="value" />, или дата и время, эквивалентные значению <see cref="F:System.DateTime.MinValue" />, если значение <paramref name="value" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-962">The date and time equivalent of the value of <paramref name="value" />, or a date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-963">Для успешного, тип среды выполнения преобразования `value` должен быть равен <xref:System.DateTime> или <xref:System.String>, или `value` должно быть `null`.</span><span class="sxs-lookup"><span data-stu-id="13f48-963">For the conversion to succeed, the runtime type of the `value` parameter must be either a <xref:System.DateTime> or a <xref:System.String>, or `value` must be `null`.</span></span> <span data-ttu-id="13f48-964">В противном случае метод создает <xref:System.InvalidCastException>.</span><span class="sxs-lookup"><span data-stu-id="13f48-964">Otherwise, the method throws an <xref:System.InvalidCastException>.</span></span> <span data-ttu-id="13f48-965">Кроме того Если `value` представляет собой строку, он должен содержать допустимое представление значения даты и времени в текущих региональных параметров или <xref:System.FormatException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="13f48-965">In addition, if `value` is a string, it must contain a valid representation of a date and time value in the current culture or a <xref:System.FormatException> is thrown.</span></span>  
  
 <span data-ttu-id="13f48-966">Возвращает значение, в результате вызова <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> метод базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-966">The return value is the result of invoking the <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-967">В следующем примере вызывается <xref:System.Convert.ToDateTime%28System.Object%29> метод с разнообразными <xref:System.Object> переменные.</span><span class="sxs-lookup"><span data-stu-id="13f48-967">The following example calls the <xref:System.Convert.ToDateTime%28System.Object%29> method with a variety of <xref:System.Object> variables.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/ToDateTime1.cs#1)]
 [!code-vb[System.Convert.ToDateTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/ToDateTime1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-968"><paramref name="value" /> не является допустимым значением даты и времени.</span><span class="sxs-lookup"><span data-stu-id="13f48-968"><paramref name="value" /> is not a valid date and time value.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-969"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-969"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-970">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-970">-or-</span></span> 
<span data-ttu-id="13f48-971">Преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-971">The conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As SByte) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : sbyte -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-972">8-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-972">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-973">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-973">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-974">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-974">This conversion is not supported.</span></span> <span data-ttu-id="13f48-975">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-975">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-976">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-976">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Single) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(float value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : single -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-977">Значение с плавающей запятой одиночной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-977">The single-precision floating-point value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-978">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-978">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-979">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-979">This conversion is not supported.</span></span> <span data-ttu-id="13f48-980">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-980">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-981">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-981">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : string -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-982">Строковое представление даты и времени.</span><span class="sxs-lookup"><span data-stu-id="13f48-982">The string representation of a date and time.</span></span></param>
        <summary><span data-ttu-id="13f48-983">Преобразует заданное строковое представление даты и времени в эквивалентное значение даты и времени.</span><span class="sxs-lookup"><span data-stu-id="13f48-983">Converts the specified string representation of a date and time to an equivalent date and time value.</span></span></summary>
        <returns><span data-ttu-id="13f48-984">Дата и время, эквивалентные значению <paramref name="value" />, или дата и время, эквивалентные значению <see cref="F:System.DateTime.MinValue" />, если значение <paramref name="value" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-984">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-985">Если `value` не `null`, возвращаемое значение является результатом вызова <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> метод `value` с использованием сведений о форматировании в <xref:System.Globalization.DateTimeFormatInfo> , инициализируемый для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-985">If `value` is not `null`, the return value is the result of invoking the <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> method on `value` using the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object that is initialized for the current culture.</span></span> <span data-ttu-id="13f48-986">`value` Аргумент должен содержать представление даты и времени в одном из форматов, описанных в <xref:System.Globalization.DateTimeFormatInfo> разделе.</span><span class="sxs-lookup"><span data-stu-id="13f48-986">The `value` argument must contain the representation of a date and time in one of the formats described in the <xref:System.Globalization.DateTimeFormatInfo> topic.</span></span> <span data-ttu-id="13f48-987">Если значением параметра `value` является `null`, метод возвращает <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-987">If `value` is `null`, the method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="13f48-988">Этот метод пытается проанализировать `value` полностью и избежать возникновения <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="13f48-988">This method tries to parse `value` completely and avoid throwing a <xref:System.FormatException>.</span></span> <span data-ttu-id="13f48-989">Он завершает отсутствует месяца, день и год сведения с текущей даты.</span><span class="sxs-lookup"><span data-stu-id="13f48-989">It completes missing month, day, and year information with the current date.</span></span> <span data-ttu-id="13f48-990">Если `value` содержит только дату, без времени, этот метод предполагает время со значениями в полночь.</span><span class="sxs-lookup"><span data-stu-id="13f48-990">If `value` contains only a date and no time, this method assumes a time of midnight.</span></span> <span data-ttu-id="13f48-991">Любые начальные, внутренние или конечные пробелы в `value` игнорируются.</span><span class="sxs-lookup"><span data-stu-id="13f48-991">Any leading, inner, or trailing white-space characters in `value` are ignored.</span></span>  
  
 <span data-ttu-id="13f48-992">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-992">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-993">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-993">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-994">В следующем примере используется <xref:System.Convert.ToDateTime%2A> метод для преобразования различные строковые представления значений даты и времени для <xref:System.DateTime> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-994">The following example uses the <xref:System.Convert.ToDateTime%2A> method to convert various string representations of dates and times to <xref:System.DateTime> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/ToDateTime2.cs#2)]
 [!code-vb[System.Convert.ToDateTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/ToDateTime2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-995"><paramref name="value" /> является неправильно отформатированной строкой даты и времени.</span><span class="sxs-lookup"><span data-stu-id="13f48-995"><paramref name="value" /> is not a properly formatted date and time string.</span></span></exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="13f48-996">Анализ строк даты и времени в .NET Framework</span><span class="sxs-lookup"><span data-stu-id="13f48-996">Parsing Date and Time Strings in the .NET Framework</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As UShort) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : uint16 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-997">16-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-997">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-998">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-998">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-999">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-999">This conversion is not supported.</span></span> <span data-ttu-id="13f48-1000">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-1000">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1001">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1001">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As UInteger) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : uint32 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1002">32-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1002">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1003">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1003">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-1004">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1004">This conversion is not supported.</span></span> <span data-ttu-id="13f48-1005">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-1005">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1006">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1006">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As ULong) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : uint64 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1007">64-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1007">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1008">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1008">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-1009">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1009">This conversion is not supported.</span></span> <span data-ttu-id="13f48-1010">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-1010">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1011">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1011">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Object, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : obj * IFormatProvider -&gt; DateTime" Usage="System.Convert.ToDateTime (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1012">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1012">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-1013">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1013">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-1014">Преобразует значение заданного объекта в объект <see cref="T:System.DateTime" />, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-1014">Converts the value of the specified object to a <see cref="T:System.DateTime" /> object, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-1015">Дата и время, эквивалентные значению <paramref name="value" />, или дата и время, эквивалентные значению <see cref="F:System.DateTime.MinValue" />, если значение <paramref name="value" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1015">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1016">Возвращает значение, в результате вызова <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> метод базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1016">The return value is the result of invoking the <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="13f48-1017">`provider` позволяет пользователю указать сведения о преобразовании региональных содержимое `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1017">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="13f48-1018">Например если `value` — <xref:System.String> представляет дату, `provider` должно указать связанные с языком и региональными параметрами сведения об Наура, используемой для представления этой даты.</span><span class="sxs-lookup"><span data-stu-id="13f48-1018">For example, if `value` is a <xref:System.String> that represents a date, `provider` could supply culture-specific information about the notation used to represent that date.</span></span> <span data-ttu-id="13f48-1019">`provider` участвует в преобразование `value` Если тип среды выполнения `value` — <xref:System.String>, или если `value` — это определяемый пользователем тип, <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> реализация использует `provider`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1019">`provider` is involved in the conversion of `value` if the runtime type of `value` is a <xref:System.String>, or if `value` is a user-defined type whose <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> implementation makes use of `provider`.</span></span> <span data-ttu-id="13f48-1020">Если тип среды выполнения `value` — <xref:System.String> и `provider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, представляющий текущий язык потока.</span><span class="sxs-lookup"><span data-stu-id="13f48-1020">If the runtime type of `value` is <xref:System.String> and `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1021">В следующем примере определяется поставщик настраиваемого формата, `CustomProvider`, чей <xref:System.IFormatProvider.GetFormat%2A> метод выводит сообщение в консоли, где он был вызван, а затем возвращает <xref:System.Globalization.DateTimeFormatInfo> объекта языка и региональных параметров, имя которого был передан в качестве параметра к классу конструктор.</span><span class="sxs-lookup"><span data-stu-id="13f48-1021">The following example defines a custom format provider, `CustomProvider`, whose <xref:System.IFormatProvider.GetFormat%2A> method outputs a message to the console that it has been invoked, and then returns the <xref:System.Globalization.DateTimeFormatInfo> object of the culture whose name was passed as a parameter to its class constructor.</span></span> <span data-ttu-id="13f48-1022">Каждый из этих `CustomProvider` объектов используется для преобразования элементов в массиве объектов к значениям даты и времени.</span><span class="sxs-lookup"><span data-stu-id="13f48-1022">Each of these `CustomProvider` objects is used to convert the elements in an object array to date and time values.</span></span> <span data-ttu-id="13f48-1023">Указывает, что выходные данные `CustomProvider` объект используется в преобразовании только тогда, когда тип `value` параметр <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1023">The output indicates that the `CustomProvider` object is used in the conversion only when the type of the `value` parameter is a <xref:System.String>.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/todatetime4.cs#4)]
 [!code-vb[System.Convert.ToDateTime#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/todatetime4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1024"><paramref name="value" /> не является допустимым значением даты и времени.</span><span class="sxs-lookup"><span data-stu-id="13f48-1024"><paramref name="value" /> is not a valid date and time value.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1025"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1025"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-1026">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-1026">-or-</span></span> 
<span data-ttu-id="13f48-1027">Преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1027">The conversion is not supported.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="13f48-1028">Анализ строк даты и времени в .NET Framework</span><span class="sxs-lookup"><span data-stu-id="13f48-1028">Parsing Date and Time Strings in the .NET Framework</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As String, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : string * IFormatProvider -&gt; DateTime" Usage="System.Convert.ToDateTime (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1029">Строка, содержащая дату и время, которые нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1029">A string that contains a date and time to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-1030">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1030">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-1031">Преобразует заданное строковое представление числа в эквивалентное значение даты и времени, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-1031">Converts the specified string representation of a number to an equivalent date and time, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-1032">Дата и время, эквивалентные значению <paramref name="value" />, или дата и время, эквивалентные значению <see cref="F:System.DateTime.MinValue" />, если значение <paramref name="value" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1032">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1033">Возвращает значение, в результате вызова <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1033">The return value is the result of invoking the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="13f48-1034">`provider` — <xref:System.IFormatProvider> экземпляр, который получает <xref:System.Globalization.DateTimeFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-1034">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="13f48-1035"><xref:System.Globalization.DateTimeFormatInfo> Предоставляет зависящие от культуры сведения о формате параметра `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1035">The <xref:System.Globalization.DateTimeFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="13f48-1036">Если `provider` — `null`, <xref:System.Globalization.DateTimeFormatInfo> для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1036">If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="13f48-1037">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-1037">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-1038">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-1038">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1039">В следующем примере преобразуется строковые представления значений даты с `ToDateTime` метод, с помощью <xref:System.IFormatProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-1039">The following example converts string representations of date values with the `ToDateTime` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/ToDateTime3.cs#3)]
 [!code-vb[System.Convert.ToDateTime#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/ToDateTime3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1040"><paramref name="value" /> является неправильно отформатированной строкой даты и времени.</span><span class="sxs-lookup"><span data-stu-id="13f48-1040"><paramref name="value" /> is not a properly formatted date and time string.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="13f48-1041">Анализ строк даты и времени в .NET Framework</span><span class="sxs-lookup"><span data-stu-id="13f48-1041">Parsing Date and Time Strings in the .NET Framework</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDecimal">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13f48-1042">Преобразует заданное значение в десятичное число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1042">Converts a specified value to a decimal number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Boolean) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(bool value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : bool -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1043">Логическое значение, которое необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1043">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1044">Преобразует заданное логическое значение в эквивалентное десятичное число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1044">Converts the specified Boolean value to the equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1045">Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</span><span class="sxs-lookup"><span data-stu-id="13f48-1045">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1046">В следующем примере показано преобразование <xref:System.Boolean> для <xref:System.Decimal> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-1046">The following example illustrates the conversion of <xref:System.Boolean> to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#1)]
 [!code-vb[System.Convert.ToDecimal2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Byte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : byte -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1047">8-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1047">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1048">Преобразует значение заданного 8-разрядного целого число без знака в эквивалентное десятичное число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1048">Converts the value of the specified 8-bit unsigned integer to the equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1049">Десятичное число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1049">The decimal number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1050">В следующем примере выполняется преобразование <xref:System.Byte> значение <xref:System.Decimal> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1050">The following example converts a <xref:System.Byte> value to a <xref:System.Decimal> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#18)]
 [!code-csharp[System.Convert Snippets#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#18)]
 [!code-vb[System.Convert Snippets#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Char) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(char value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : char -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1051">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1051">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1052">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1052">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-1053">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1053">This conversion is not supported.</span></span> <span data-ttu-id="13f48-1054">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-1054">No value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1055">В следующем примере предпринимается попытка преобразовать <xref:System.Char> значение <xref:System.Decimal>и создает <xref:System.InvalidCastException> в случае сбоя.</span><span class="sxs-lookup"><span data-stu-id="13f48-1055">The following example attempts to convert a <xref:System.Char> value to <xref:System.Decimal>, and throws <xref:System.InvalidCastException> upon failure.</span></span>  
  
 [!code-cpp[System.Convert Snippets#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#17)]
 [!code-csharp[System.Convert Snippets#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#17)]
 [!code-vb[System.Convert Snippets#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1056">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1056">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As DateTime) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : DateTime -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1057">Значение даты и времени для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1057">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1058">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1058">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-1059">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1059">This conversion is not supported.</span></span> <span data-ttu-id="13f48-1060">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-1060">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1061">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1061">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : decimal -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1062">Десятичное число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1062">A decimal number.</span></span></param>
        <summary><span data-ttu-id="13f48-1063">Возвращает заданное десятичное число; фактическое преобразование не производится.</span><span class="sxs-lookup"><span data-stu-id="13f48-1063">Returns the specified decimal number; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="13f48-1064"><paramref name="value" /> возвращается без изменений.</span><span class="sxs-lookup"><span data-stu-id="13f48-1064"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Double) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(double value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : double -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1065">Число с плавающей запятой двойной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1065">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1066">Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное десятичное число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1066">Converts the value of the specified double-precision floating-point number to an equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1067">Десятичное число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1067">A decimal number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1068"><xref:System.Decimal> Значение, возвращаемое этим методом содержит не более 15 значащих цифр.</span><span class="sxs-lookup"><span data-stu-id="13f48-1068">The <xref:System.Decimal> value returned by this method contains a maximum of 15 significant digits.</span></span> <span data-ttu-id="13f48-1069">Если `value` параметр содержит более 15 значащих цифр, оно округляется до ближайшего числа.</span><span class="sxs-lookup"><span data-stu-id="13f48-1069">If the `value` parameter contains more than 15 significant digits, it is rounded using rounding to nearest.</span></span> <span data-ttu-id="13f48-1070">В следующем примере показано как <xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType> метод использует округление до ближайшего возврата <xref:System.Decimal> значение с 15 значащих цифр.</span><span class="sxs-lookup"><span data-stu-id="13f48-1070">The following example illustrates how the <xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType> method uses rounding to nearest to return a <xref:System.Decimal> value with 15 significant digits.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDecimal/cs/ToDecimal1.cs#2)]
 [!code-vb[System.Convert.ToDecimal#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDecimal/vb/ToDecimal1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1071">В следующем примере выполняется преобразование <xref:System.Double> значение <xref:System.Decimal> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1071">The following example converts a <xref:System.Double> value to a <xref:System.Decimal> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#5)]
 [!code-csharp[System.Convert Snippets#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#5)]
 [!code-vb[System.Convert Snippets#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1072"><paramref name="value" /> больше <see cref="F:System.Decimal.MaxValue" /> или меньше <see cref="F:System.Decimal.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1072"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Short) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(short value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : int16 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1073">16-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1073">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1074">Преобразует значение заданного 16-разрядного знакового целого числа в эквивалентное десятичное число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1074">Converts the value of the specified 16-bit signed integer to an equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1075">Десятичное число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1075">A decimal number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1076">В следующем примере преобразуется в массив 16-разрядных целых чисел со знаком <xref:System.Decimal> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-1076">The following example converts an array of 16-bit signed integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#2)]
 [!code-vb[System.Convert.ToDecimal2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(int value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : int -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1077">32-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1077">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1078">Преобразует значение заданного 32-разрядного знакового целого числа в эквивалентное десятичное число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1078">Converts the value of the specified 32-bit signed integer to an equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1079">Десятичное число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1079">A decimal number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1080">В следующем примере преобразуется в массив целых чисел со знаком <xref:System.Decimal> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-1080">The following example converts an array of signed integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#3)]
 [!code-vb[System.Convert.ToDecimal2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Long) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(long value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : int64 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1081">64-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1081">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1082">Преобразует значение заданного 64-разрядного знакового целого числа в эквивалентное десятичное число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1082">Converts the value of the specified 64-bit signed integer to an equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1083">Десятичное число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1083">A decimal number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1084">В следующем примере выполняется преобразование <xref:System.Int64> значение <xref:System.Decimal> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1084">The following example converts an <xref:System.Int64> value to a <xref:System.Decimal> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#10)]
 [!code-csharp[System.Convert Snippets#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#10)]
 [!code-vb[System.Convert Snippets#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Object) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : obj -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1085">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1085">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="13f48-1086">Преобразует значение заданного объекта в эквивалентное десятичное число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1086">Converts the value of the specified object to an equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1087">Десятичное число, эквивалентное <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> равняется <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1087">A decimal number that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1088">Возвращает значение, в результате вызова <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> метод базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1088">The return value is the result of invoking the <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1089">В следующем примере предпринимается попытка преобразовать каждый элемент в массиве объектов для <xref:System.Decimal> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1089">The following example tries to convert each element in an object array to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#4)]
 [!code-vb[System.Convert.ToDecimal2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1090"><paramref name="value" /> имеет неправильный формат для типа <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1090"><paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Decimal" /> type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1091"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1091"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-1092">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-1092">-or-</span></span> 
<span data-ttu-id="13f48-1093">Преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1093">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1094">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Decimal.MinValue" /> или больше <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1094"><paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As SByte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : sbyte -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1095">8-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1095">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1096">Преобразует значение заданного 8-разрядного знакового целого числа в эквивалентное десятичное число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1096">Converts the value of the specified 8-bit signed integer to the equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1097">Десятичное число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1097">A decimal number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1098">В следующем примере преобразуется каждого элемента в массив байтов со знаком для <xref:System.Decimal> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1098">The following example converts each element in an array of signed bytes to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#5)]
 [!code-vb[System.Convert.ToDecimal2#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Single) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(float value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : single -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1099">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1099">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1100">Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное десятичное число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1100">Converts the value of the specified single-precision floating-point number to the equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1101">Десятичное число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1101">A decimal number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1102"><xref:System.Decimal> Значение, возвращаемое этим методом содержит более семи значащих цифр.</span><span class="sxs-lookup"><span data-stu-id="13f48-1102">The <xref:System.Decimal> value returned by this method contains a maximum of seven significant digits.</span></span> <span data-ttu-id="13f48-1103">Если `value` параметр содержит более семи значащих цифр, оно округляется до ближайшего числа.</span><span class="sxs-lookup"><span data-stu-id="13f48-1103">If the `value` parameter contains more than seven significant digits, it is rounded using rounding to nearest.</span></span> <span data-ttu-id="13f48-1104">В следующем примере показано как <xref:System.Convert.ToDecimal%28System.Single%29> метод использует округление до ближайшего возврата <xref:System.Decimal> значение семь значащих цифр.</span><span class="sxs-lookup"><span data-stu-id="13f48-1104">The following example illustrates how the <xref:System.Convert.ToDecimal%28System.Single%29> method uses rounding to nearest to return a <xref:System.Decimal> value with seven significant digits.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDecimal/cs/ToDecimal1.cs#1)]
 [!code-vb[System.Convert.ToDecimal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDecimal/vb/ToDecimal1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1105">В следующем примере предпринимается попытка преобразовать каждый элемент массива <xref:System.Single> значения <xref:System.Decimal> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1105">The following example tries to convert each element in an array of <xref:System.Single> values to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#6)]
 [!code-vb[System.Convert.ToDecimal2#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1106"><paramref name="value" /> больше <see cref="F:System.Decimal.MaxValue" /> или меньше <see cref="F:System.Decimal.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1106"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span></exception>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : string -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1107">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1107">A string that contains a number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1108">Преобразует заданное строковое представление числа в эквивалентное десятичное число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1108">Converts the specified string representation of a number to an equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1109">Десятичное число, эквивалентное числу <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> равняется <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1109">A decimal number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1110">С помощью <xref:System.Convert.ToDecimal%28System.String%29> метод эквивалентна передаче `value` для <xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-1110">Using the <xref:System.Convert.ToDecimal%28System.String%29> method is equivalent to passing `value` to the <xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="13f48-1111">Параметр `value` интерпретируется с использованием соглашений о форматировании, принятых в культуре текущего потока.</span><span class="sxs-lookup"><span data-stu-id="13f48-1111">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="13f48-1112">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-1112">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-1113">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-1113">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1114">Следующий пример иллюстрирует использование `ToDecimal`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1114">The following example illustrates the use of `ToDecimal`.</span></span> <span data-ttu-id="13f48-1115">Предпринимается попытка преобразовать <xref:System.String> для <xref:System.Decimal>и создает возможные исключения, которые могут возникнуть во время преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1115">It attempts to convert a <xref:System.String> to a <xref:System.Decimal>, and throws the possible exceptions that may arise during the conversion.</span></span>  
  
 [!code-cpp[System.Convert Snippets#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#15)]
 [!code-csharp[System.Convert Snippets#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#15)]
 [!code-vb[System.Convert Snippets#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1116"><paramref name="value" /> не является числом в допустимом формате.</span><span class="sxs-lookup"><span data-stu-id="13f48-1116"><paramref name="value" /> is not a number in a valid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1117">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Decimal.MinValue" /> или больше <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1117"><paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As UShort) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : uint16 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1118">16-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1118">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1119">Преобразует значение заданного 16-разрядного целого числа без знака в эквивалентное десятичное число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1119">Converts the value of the specified 16-bit unsigned integer to an equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1120">Десятичное число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1120">The decimal number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1121">В следующем примере преобразуется в массив 16-разрядных целых чисел без знака <xref:System.Decimal> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-1121">The following example converts an array of 16-bit unsigned integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#7)]
 [!code-vb[System.Convert.ToDecimal2#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As UInteger) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : uint32 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1122">32-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1122">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1123">Преобразует значение заданного 32-разрядного целого числа без знака в эквивалентное десятичное число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1123">Converts the value of the specified 32-bit unsigned integer to an equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1124">Десятичное число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1124">A decimal number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1125">В следующем примере преобразуется в массив целых чисел без знака <xref:System.Decimal> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-1125">The following example converts an array of unsigned integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#8)]
 [!code-vb[System.Convert.ToDecimal2#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As ULong) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : uint64 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1126">64-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1126">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1127">Преобразует значение заданного 64-разрядного целого числа без знака в эквивалентное десятичное число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1127">Converts the value of the specified 64-bit unsigned integer to an equivalent decimal number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1128">Десятичное число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1128">A decimal number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1129">В следующем примере преобразуется в массив длинных целых чисел без знака <xref:System.Decimal> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-1129">The following example converts an array of unsigned long integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#9)]
 [!code-vb[System.Convert.ToDecimal2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Object, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : obj * IFormatProvider -&gt; decimal" Usage="System.Convert.ToDecimal (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1130">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1130">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-1131">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1131">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-1132">Преобразует значение заданного объекта в эквивалентное десятичное число, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-1132">Converts the value of the specified object to an equivalent decimal number, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-1133">Десятичное число, эквивалентное <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> равняется <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1133">A decimal number that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1134">Возвращает значение, в результате вызова <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> метод базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1134">The return value is the result of invoking the <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="13f48-1135">`provider` позволяет пользователю указать сведения о преобразовании региональных содержимое `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1135">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="13f48-1136">Базовые типы игнорируют `provider`, однако параметр может быть использован, если `value` является определяемого пользователем типа, который реализует <xref:System.IConvertible> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13f48-1136">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1137">В следующем примере определяется класс `Temperature` , реализующий интерфейс <xref:System.IConvertible> .</span><span class="sxs-lookup"><span data-stu-id="13f48-1137">The following example defines a `Temperature` class that implements the <xref:System.IConvertible> interface.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal2.cs#10)]
 [!code-vb[System.Convert.ToDecimal2#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal2.vb#10)]  
  
 <span data-ttu-id="13f48-1138">В следующем примере показано, когда `Temperature` объект передается в качестве параметра <xref:System.Convert.ToDecimal%28System.Object%2CSystem.IFormatProvider%29> метод, <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> реализация `Temperature` класса вызывается для выполнения преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1138">The following example shows that when a `Temperature` object is passed as a parameter to the <xref:System.Convert.ToDecimal%28System.Object%2CSystem.IFormatProvider%29> method, the <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> implementation of the `Temperature` class is called to perform the conversion.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal2.cs#11)]
 [!code-vb[System.Convert.ToDecimal2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal2.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1139"><paramref name="value" /> имеет неправильный формат для типа <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1139"><paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Decimal" /> type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1140"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1140"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-1141">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-1141">-or-</span></span> 
<span data-ttu-id="13f48-1142">Преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1142">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1143">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Decimal.MinValue" /> или больше <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1143"><paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As String, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : string * IFormatProvider -&gt; decimal" Usage="System.Convert.ToDecimal (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1144">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1144">A string that contains a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-1145">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1145">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-1146">Преобразует заданное строковое представление числа в эквивалентное десятичное число, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-1146">Converts the specified string representation of a number to an equivalent decimal number, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-1147">Десятичное число, эквивалентное числу <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> равняется <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1147">A decimal number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1148">Возвращает значение, в результате вызова <xref:System.Decimal.Parse%2A?displayProperty=nameWithType> метод `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1148">The return value is the result of invoking the <xref:System.Decimal.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="13f48-1149">`provider` — <xref:System.IFormatProvider> экземпляр, который получает <xref:System.Globalization.NumberFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-1149">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="13f48-1150"><xref:System.Globalization.NumberFormatInfo> Предоставляет зависящие от культуры сведения о формате параметра `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1150">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="13f48-1151">Если `provider` — `null`, <xref:System.Globalization.NumberFormatInfo> для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1151">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="13f48-1152">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-1152">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-1153">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-1153">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1154">В следующем примере предпринимается попытка преобразовать массив строк для <xref:System.Decimal> значения с помощью <xref:System.Globalization.NumberFormatInfo> объектов, представляющих два разных языков и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1154">The following example attempts to convert an array of strings to <xref:System.Decimal> values by using <xref:System.Globalization.NumberFormatInfo> objects that represent two different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal3.cs#12)]
 [!code-vb[System.Convert.ToDecimal2#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal3.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1155"><paramref name="value" /> не является числом в допустимом формате.</span><span class="sxs-lookup"><span data-stu-id="13f48-1155"><paramref name="value" /> is not a number in a valid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1156">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Decimal.MinValue" /> или больше <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1156"><paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDouble">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13f48-1157">Преобразует заданное значение в число с плавающей запятой двойной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1157">Converts a specified value to a double-precision floating-point number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(bool value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : bool -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1158">Логическое значение, которое необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1158">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1159">Преобразует заданное логическое значение в эквивалентное число с плавающей запятой двойной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1159">Converts the specified Boolean value to the equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1160">Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</span><span class="sxs-lookup"><span data-stu-id="13f48-1160">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1161">В следующем примере выполняется преобразование <xref:System.Boolean> значение <xref:System.Double> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1161">The following example converts a <xref:System.Boolean> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#1)]
 [!code-csharp[System.Convert Snippets#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#1)]
 [!code-vb[System.Convert Snippets#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Byte) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : byte -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1162">8-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1162">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1163">Преобразует значение заданного 8-разрядного целого числа без знака в эквивалентное число с плавающей запятой двойной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1163">Converts the value of the specified 8-bit unsigned integer to the equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1164">Число с плавающей запятой двойной точности, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1164">The double-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1165">В следующем примере выполняется преобразование <xref:System.Byte> значение <xref:System.Double> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1165">The following example converts a <xref:System.Byte> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#2)]
 [!code-csharp[System.Convert Snippets#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#2)]
 [!code-vb[System.Convert Snippets#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(char value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : char -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1166">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1166">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1167">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1167">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-1168">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1168">This conversion is not supported.</span></span> <span data-ttu-id="13f48-1169">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-1169">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1170">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1170">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As DateTime) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : DateTime -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1171">Значение даты и времени для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1171">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1172">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1172">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-1173">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1173">This conversion is not supported.</span></span> <span data-ttu-id="13f48-1174">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-1174">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1175">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1175">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Decimal) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : decimal -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1176">Десятичное число для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1176">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1177">Преобразует значение заданного десятичного числа в эквивалентное число с плавающей запятой двойной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1177">Converts the value of the specified decimal number to an equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1178">Число с плавающей запятой двойной точности, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1178">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1179">В следующем примере выполняется преобразование <xref:System.Decimal> значение <xref:System.Double> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1179">The following example converts a <xref:System.Decimal> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#5)]
 [!code-csharp[System.Convert Snippets#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#5)]
 [!code-vb[System.Convert Snippets#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(double value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : double -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1180">Возвращаемое число с плавающей запятой двойной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1180">The double-precision floating-point number to return.</span></span></param>
        <summary><span data-ttu-id="13f48-1181">Возвращает заданное число с плавающей запятой двойной точности; фактическое преобразование не производится.</span><span class="sxs-lookup"><span data-stu-id="13f48-1181">Returns the specified double-precision floating-point number; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="13f48-1182"><paramref name="value" /> возвращается без изменений.</span><span class="sxs-lookup"><span data-stu-id="13f48-1182"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Short) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(short value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : int16 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1183">16-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1183">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1184">Преобразует значение заданного 16-разрядного знакового целого числа в эквивалентное число с плавающей запятой двойной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1184">Converts the value of the specified 16-bit signed integer to an equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1185">Число с плавающей запятой двойной точности, эквивалентное значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1185">A double-precision floating-point number equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1186">В следующем примере преобразуется каждого элемента в массив 16-разрядных целых чисел со знаком <xref:System.Double> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1186">The following example converts each element in an array of 16-bit signed integers to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#1)]
 [!code-vb[System.Convert.ToDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(int value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : int -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1187">32-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1187">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1188">Преобразует значение заданного 32-разрядного знакового целого числа в эквивалентное число с плавающей запятой двойной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1188">Converts the value of the specified 32-bit signed integer to an equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1189">Число с плавающей запятой двойной точности, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1189">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1190">В следующем примере выполняется преобразование <xref:System.Int32> значение <xref:System.Double> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1190">The following example converts an <xref:System.Int32> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#3)]
 [!code-csharp[System.Convert Snippets#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#3)]
 [!code-vb[System.Convert Snippets#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Long) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(long value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : int64 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1191">64-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1191">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1192">Преобразует значение заданного 64-разрядного знакового целого числа в эквивалентное число с плавающей запятой двойной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1192">Converts the value of the specified 64-bit signed integer to an equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1193">Число с плавающей запятой двойной точности, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1193">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1194">В следующем примере преобразуется каждого элемента в массив длинных целых чисел со знаком <xref:System.Double> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1194">The following example converts each element in an array of signed long integers to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#2)]
 [!code-vb[System.Convert.ToDouble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : obj -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1195">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1195">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="13f48-1196">Преобразует значение заданного объекта в число с плавающей запятой двойной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1196">Converts the value of the specified object to a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1197">Число с плавающей запятой двойной точности, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1197">A double-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1198">Если `value` не `null`, этот метод создает оболочку для вызова <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> реализацию базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1198">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1199">В следующем примере предпринимается попытка преобразовать каждое значение в массиве объектов для <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1199">The following example attempts to convert each value in an object array to a <xref:System.Double>.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#3)]
 [!code-vb[System.Convert.ToDouble#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1200"><paramref name="value" /> имеет неправильный формат для типа <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1200"><paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Double" /> type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1201"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1201"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-1202">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-1202">-or-</span></span> 
<span data-ttu-id="13f48-1203">Преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1203">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1204">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Double.MinValue" /> или больше <see cref="F:System.Double.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1204"><paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As SByte) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : sbyte -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1205">8-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1205">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1206">Преобразует значение заданного 8-разрядного знакового целого числа в эквивалентное число с плавающей запятой двойной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1206">Converts the value of the specified 8-bit signed integer to the equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1207">8-разрядное целое число со знаком, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1207">The 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1208">В следующем примере преобразуется каждого элемента в массиве <xref:System.SByte> значения <xref:System.Double> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1208">The following example converts each element in an array of <xref:System.SByte> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#4)]
 [!code-vb[System.Convert.ToDouble#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Single) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(float value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : single -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1209">Число с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1209">The single-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="13f48-1210">Преобразует значение заданного числа с плавающей запятой одинарной точности в эквивалентное число с плавающей запятой двойной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1210">Converts the value of the specified single-precision floating-point number to an equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1211">Число с плавающей запятой двойной точности, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1211">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1212">В следующем примере выполняется преобразование <xref:System.Single> значение <xref:System.Double> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1212">The following example converts a <xref:System.Single> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#6)]
 [!code-csharp[System.Convert Snippets#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#6)]
 [!code-vb[System.Convert Snippets#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : string -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1213">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1213">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1214">Преобразует заданное строковое представление числа в эквивалентное число с плавающей запятой двойной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1214">Converts the specified string representation of a number to an equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1215">Число с плавающей запятой двойной точности, эквивалентное числу <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1215">A double-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1216">С помощью <xref:System.Convert.ToDouble%28System.String%29> метод эквивалентна передаче `value` для <xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-1216">Using the <xref:System.Convert.ToDouble%28System.String%29> method is equivalent to passing `value` to the <xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="13f48-1217">Параметр `value` интерпретируется с использованием соглашений о форматировании, принятых в культуре текущего потока.</span><span class="sxs-lookup"><span data-stu-id="13f48-1217">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="13f48-1218">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.Double.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-1218">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Double.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-1219">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-1219">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1220">В следующем примере предпринимается попытка преобразовать каждый элемент массива числовых строк для <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1220">The following example attempts to convert each element in an array of numeric strings to a <xref:System.Double>.</span></span> <span data-ttu-id="13f48-1221">Результат выполнения этого примера — из системы, в которой текущий язык — en US.</span><span class="sxs-lookup"><span data-stu-id="13f48-1221">The example's output is from a system whose current culture is en-US.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/example8.cs#8)]
 [!code-vb[System.Convert.ToDouble#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/example8.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1222"><paramref name="value" /> не является числом в допустимом формате.</span><span class="sxs-lookup"><span data-stu-id="13f48-1222"><paramref name="value" /> is not a number in a valid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1223">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Double.MinValue" /> или больше <see cref="F:System.Double.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1223"><paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As UShort) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : uint16 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1224">16-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1224">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1225">Преобразует значение заданного 16-разрядного целого числа без знака в эквивалентное число с плавающей запятой двойной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1225">Converts the value of the specified 16-bit unsigned integer to the equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1226">Число с плавающей запятой двойной точности, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1226">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1227">В следующем примере преобразуется каждого элемента в массиве <xref:System.UInt16> значения <xref:System.Double> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1227">The following example converts each element in an array of <xref:System.UInt16> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#5)]
 [!code-vb[System.Convert.ToDouble#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As UInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : uint32 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1228">32-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1228">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1229">Преобразует значение заданного 32-разрядного целого числа без знака в эквивалентное число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="13f48-1229">Converts the value of the specified 32-bit unsigned integer to an equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1230">Число с плавающей запятой двойной точности, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1230">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1231">В следующем примере преобразуется каждого элемента в массиве <xref:System.UInt32> значения <xref:System.Double> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1231">The following example converts each element in an array of <xref:System.UInt32> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#6)]
 [!code-vb[System.Convert.ToDouble#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As ULong) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : uint64 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1232">64-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1232">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1233">Преобразует значение заданного 64-разрядного целого числа без знака в эквивалентное число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="13f48-1233">Converts the value of the specified 64-bit unsigned integer to an equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1234">Число с плавающей запятой двойной точности, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1234">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1235">В следующем примере преобразуется каждого элемента в массиве <xref:System.UInt64> значения <xref:System.Double> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1235">The following example converts each element in an array of <xref:System.UInt64> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#7)]
 [!code-vb[System.Convert.ToDouble#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Object, provider As IFormatProvider) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDouble : obj * IFormatProvider -&gt; double" Usage="System.Convert.ToDouble (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1236">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1236">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-1237">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1237">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-1238">Преобразует значение заданного объекта в число с плавающей запятой двойной точности, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-1238">Converts the value of the specified object to an double-precision floating-point number, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-1239">Число с плавающей запятой двойной точности, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1239">A double-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1240">Возвращает значение, в результате вызова <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> метод базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1240">The return value is the result of invoking the <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="13f48-1241">`provider` позволяет пользователю указать сведения о преобразовании региональных содержимое `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1241">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="13f48-1242">Например если `value` — <xref:System.String> представляет число, `provider` должно указать зависящие от культуры сведения о формате для представления этого числа.</span><span class="sxs-lookup"><span data-stu-id="13f48-1242">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="13f48-1243">Базовые типы игнорируют `provider`, однако параметр может быть использован, если `value` является определяемого пользователем типа, который реализует <xref:System.IConvertible> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13f48-1243">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1244">В следующем примере определяется класс, реализующий <xref:System.IConvertible> и класс, реализующий <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1244">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="13f48-1245">Объекты класса, реализующего <xref:System.IConvertible> содержат массив <xref:System.Double> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-1245">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="13f48-1246">Объект каждого класса передается `ToDouble` метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-1246">An object of each class is passed to the `ToDouble` method.</span></span> <span data-ttu-id="13f48-1247">Этот метод возвращает массив в среднем <xref:System.Double> значения, с помощью объекта, который реализует <xref:System.IFormatProvider> для определения способа, для которых вычисляется среднее.</span><span class="sxs-lookup"><span data-stu-id="13f48-1247">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1248"><paramref name="value" /> имеет неправильный формат для типа <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1248"><paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Double" /> type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1249"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1249"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1250">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Double.MinValue" /> или больше <see cref="F:System.Double.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1250"><paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As String, provider As IFormatProvider) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDouble : string * IFormatProvider -&gt; double" Usage="System.Convert.ToDouble (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1251">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1251">A string that contains the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-1252">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1252">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-1253">Преобразует заданное строковое представление числа в эквивалентное число с плавающей запятой двойной точности, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-1253">Converts the specified string representation of a number to an equivalent double-precision floating-point number, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-1254">Число с плавающей запятой двойной точности, эквивалентное числу <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1254">A double-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1255">Возвращает значение, в результате вызова <xref:System.Double.Parse%2A?displayProperty=nameWithType> метод `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1255">The return value is the result of invoking the <xref:System.Double.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="13f48-1256">`provider` — <xref:System.IFormatProvider> экземпляр, который получает <xref:System.Globalization.NumberFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-1256">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="13f48-1257"><xref:System.Globalization.NumberFormatInfo> Предоставляет зависящие от культуры сведения о формате параметра `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1257">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="13f48-1258">Если `provider` — `null`, <xref:System.Globalization.NumberFormatInfo> для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1258">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="13f48-1259">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.Double.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-1259">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Double.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-1260">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-1260">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1261">В следующем примере преобразуется строковые представления <xref:System.Double> значения `ToDouble` метод, с помощью <xref:System.IFormatProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-1261">The following example converts string representations of <xref:System.Double> values with the `ToDouble` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-csharp[System.Convert.ToReals_String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToReals_String/CS/todouble.cs#2)]
 [!code-vb[System.Convert.ToReals_String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToReals_String/VB/todouble.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1262"><paramref name="value" /> не является числом в допустимом формате.</span><span class="sxs-lookup"><span data-stu-id="13f48-1262"><paramref name="value" /> is not a number in a valid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1263">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Double.MinValue" /> или больше <see cref="F:System.Double.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1263"><paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13f48-1264">Преобразует заданное значение в 16-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1264">Converts a specified value to a 16-bit signed integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Boolean) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(bool value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : bool -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1265">Логическое значение, которое необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1265">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1266">Преобразует заданное логическое значение в эквивалентное 16-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1266">Converts the specified Boolean value to the equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1267">Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</span><span class="sxs-lookup"><span data-stu-id="13f48-1267">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1268">В следующем примере преобразование логических значений `true` и `false` для <xref:System.Int16> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-1268">The following example converts the Boolean values `true` and `false` to <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#1)]
 [!code-vb[System.Convert.ToInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Byte) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : byte -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1269">8-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1269">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1270">Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 16-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1270">Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1271">16-разрядное целое число со знаком, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1271">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1272">В следующем примере преобразуется каждого элемента в массиве <xref:System.Byte> значения в 16-разрядное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1272">The following example converts each element in an array of <xref:System.Byte> values to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#2)]
 [!code-vb[System.Convert.ToInt16#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Char) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(char value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : char -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1273">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1273">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1274">Преобразует значение заданного символа Юникода в эквивалентное 16-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1274">Converts the value of the specified Unicode character to the equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1275">16-разрядное целое число со знаком, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1275">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1276">В следующем примере предпринимается попытка преобразовать каждый элемент массива <xref:System.Char> значения в 16-разрядное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1276">The following example attempts to convert each element in an array of <xref:System.Char> values to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#3)]
 [!code-vb[System.Convert.ToInt16#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1277">Значение <paramref name="value" /> больше значения <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1277"><paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As DateTime) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : DateTime -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1278">Значение даты и времени для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1278">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1279">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1279">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-1280">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1280">This conversion is not supported.</span></span> <span data-ttu-id="13f48-1281">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-1281">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1282">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1282">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Decimal) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : decimal -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1283">Десятичное число для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1283">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1284">Преобразует значение заданного десятичного числа в эквивалентное 16-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1284">Converts the value of the specified decimal number to an equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1285">Значение <paramref name="value" />, округленное до ближайшего 16-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1285"><paramref name="value" />, rounded to the nearest 16-bit signed integer.</span></span> <span data-ttu-id="13f48-1286">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-1286">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1287">В следующем примере предпринимается попытка преобразовать каждый элемент массива <xref:System.Decimal> значения в 16-разрядное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1287">The following example attempts to convert each element in an array of <xref:System.Decimal> values to a 16-bit signed integer.</span></span> <span data-ttu-id="13f48-1288">В примере показано, что дробная часть <xref:System.Decimal> значение округляется, при выполнении преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1288">The example illustrates that any fractional part of a <xref:System.Decimal> value is rounded when performing the conversion.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#4)]
 [!code-vb[System.Convert.ToInt16#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1289"><paramref name="value" /> больше <see cref="F:System.Int16.MaxValue" /> или меньше <see cref="F:System.Int16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1289"><paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span></span></exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Double) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(double value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : double -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1290">Число с плавающей запятой двойной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1290">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1291">Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 16-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1291">Converts the value of the specified double-precision floating-point number to an equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1292">Значение <paramref name="value" />, округленное до ближайшего 16-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1292"><paramref name="value" />, rounded to the nearest 16-bit signed integer.</span></span> <span data-ttu-id="13f48-1293">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-1293">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1294">В следующем примере преобразуется каждого элемента в массиве <xref:System.Double> значения в 16-разрядное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1294">The following example converts each element in an array of <xref:System.Double> values to a 16-bit signed integer.</span></span> <span data-ttu-id="13f48-1295">В примере показано, что дробная часть <xref:System.Double> значение округляется до выполнения преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1295">The example illustrates that any fractional part of a <xref:System.Double> value is rounded before performing the conversion.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#5)]
 [!code-vb[System.Convert.ToInt16#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1296"><paramref name="value" /> больше <see cref="F:System.Int16.MaxValue" /> или меньше <see cref="F:System.Int16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1296"><paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(short value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : int16 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1297">Возвращаемое 16-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1297">The 16-bit signed integer to return.</span></span></param>
        <summary><span data-ttu-id="13f48-1298">Возвращает заданное 16-битовое целое число со знаком; фактическое преобразование не производится.</span><span class="sxs-lookup"><span data-stu-id="13f48-1298">Returns the specified 16-bit signed integer; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="13f48-1299"><paramref name="value" /> возвращается без изменений.</span><span class="sxs-lookup"><span data-stu-id="13f48-1299"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(int value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : int -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1300">32-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1300">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1301">Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 16-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1301">Converts the value of the specified 32-bit signed integer to an equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1302">16-разрядное целое число со знаком, эквивалентное <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1302">The 16-bit signed integer equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1303">В следующем примере предпринимается попытка преобразовать каждый элемент в массив целых чисел в 16-разрядное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1303">The following example attempts to convert each element in an array of integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#6)]
 [!code-vb[System.Convert.ToInt16#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1304"><paramref name="value" /> больше <see cref="F:System.Int16.MaxValue" /> или меньше <see cref="F:System.Int16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1304"><paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Long) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(long value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : int64 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1305">64-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1305">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1306">Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное 16-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1306">Converts the value of the specified 64-bit signed integer to an equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1307">16-разрядное целое число со знаком, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1307">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1308">В следующем примере предпринимается попытка преобразовать каждый элемент массива длинных целых чисел в 16-разрядное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1308">The following example attempts to convert each element in an array of long integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#7)]
 [!code-vb[System.Convert.ToInt16#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1309"><paramref name="value" /> больше <see cref="F:System.Int16.MaxValue" /> или меньше <see cref="F:System.Int16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1309"><paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Object) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : obj -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1310">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1310">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="13f48-1311">Преобразует значение заданного объекта в 16-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1311">Converts the value of the specified object to a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1312">16-разрядное знаковое целое число, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1312">A 16-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1313">Если `value` не `null`, этот метод создает оболочку для вызова <xref:System.IConvertible.ToInt16%2A?displayProperty=nameWithType> реализацию базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1313">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToInt16%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1314">В следующем примере предпринимается попытка преобразовать каждый элемент в массиве объектов 16-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1314">The following example attempts to convert each element in an object array to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#8)]
 [!code-vb[System.Convert.ToInt16#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1315"><paramref name="value" /> имеет неправильный формат для типа <see cref="T:System.Int16" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1315"><paramref name="value" /> is not in an appropriate format for an <see cref="T:System.Int16" /> type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1316"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1316"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-1317">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-1317">-or-</span></span> 
<span data-ttu-id="13f48-1318">Преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1318">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1319">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int16.MinValue" /> или больше <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1319"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As SByte) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : sbyte -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1320">8-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1320">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1321">Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное 16-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1321">Converts the value of the specified 8-bit signed integer to the equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1322">8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1322">A 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1323">Следующий пример преобразует каждый элемент массива байтов со знаком в 16-разрядное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1323">The following example converts each element in an array of signed bytes to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#9)]
 [!code-vb[System.Convert.ToInt16#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Single) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(float value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : single -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1324">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1324">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1325">Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 16-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1325">Converts the value of the specified single-precision floating-point number to an equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1326">Значение <paramref name="value" />, округленное до ближайшего 16-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1326"><paramref name="value" />, rounded to the nearest 16-bit signed integer.</span></span> <span data-ttu-id="13f48-1327">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-1327">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1328">В следующем примере предпринимается попытка преобразовать каждый элемент массива <xref:System.Single> значения в 16-разрядное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1328">The following example attempts to convert each element in an array of <xref:System.Single> values to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#10)]
 [!code-vb[System.Convert.ToInt16#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1329"><paramref name="value" /> больше <see cref="F:System.Int16.MaxValue" /> или меньше <see cref="F:System.Int16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1329"><paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span></span></exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As String) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : string -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1330">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1330">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1331">Преобразует заданное строковое представление числа в эквивалентное 16-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1331">Converts the specified string representation of a number to an equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1332">16-разрядное знаковое целое число, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1332">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1333">С помощью <xref:System.Convert.ToInt16%28System.String%29> метод эквивалентна передаче `value` для <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-1333">Using the <xref:System.Convert.ToInt16%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="13f48-1334">Параметр `value` интерпретируется с использованием соглашений о форматировании, принятых в культуре текущего потока.</span><span class="sxs-lookup"><span data-stu-id="13f48-1334">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="13f48-1335">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.Int16.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-1335">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-1336">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-1336">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1337">В следующем примере преобразование 16-разрядных целых чисел со строковыми представлениями `ToInt16` метод, используя форматирование по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="13f48-1337">The following example converts string representations of 16-bit integers with the `ToInt16` method, using default formatting.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/toint16.cpp#3)]
 [!code-csharp[System.Convert.ToSInts_String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/toint16.cs#3)]
 [!code-vb[System.Convert.ToSInts_String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/toint16.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1338"><paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</span><span class="sxs-lookup"><span data-stu-id="13f48-1338"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1339">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int16.MinValue" /> или больше <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1339"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As UShort) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : uint16 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1340">16-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1340">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1341">Преобразует значение заданного 16-битового целого числа без знака в эквивалентное 16-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1341">Converts the value of the specified 16-bit unsigned integer to the equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1342">16-разрядное целое число со знаком, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1342">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1343">В следующем примере предпринимается для преобразования каждого элемента в массив 16-разрядных целых чисел в 16-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1343">The following example attempts to convert each element in an array of unsigned 16-bit integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#11)]
 [!code-vb[System.Convert.ToInt16#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1344">Значение <paramref name="value" /> больше значения <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1344"><paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As UInteger) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : uint32 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1345">32-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1345">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1346">Преобразует значение заданного 32-битового целого числа без знака в эквивалентное 16-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1346">Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1347">16-разрядное целое число со знаком, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1347">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1348">В следующем примере предпринимается попытка преобразовать каждый элемент в массив целых чисел без знака в 16-разрядное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1348">The following example attempts to convert each element in an array of unsigned integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#12)]
 [!code-vb[System.Convert.ToInt16#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1349">Значение <paramref name="value" /> больше значения <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1349"><paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As ULong) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : uint64 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1350">64-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1350">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1351">Преобразует значение заданного 64-битового целого числа без знака в эквивалентное 16-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1351">Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1352">16-разрядное целое число со знаком, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1352">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1353">В следующем примере предпринимается попытка преобразовать каждый элемент в массив целых чисел без знака длинное 16-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1353">The following example attempts to convert each element in an array of unsigned long integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#13)]
 [!code-vb[System.Convert.ToInt16#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1354">Значение <paramref name="value" /> больше значения <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1354"><paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Object, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : obj * IFormatProvider -&gt; int16" Usage="System.Convert.ToInt16 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1355">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1355">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-1356">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1356">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-1357">Преобразует значение заданного объекта в эквивалентное 16-битовое целое число со знаком, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-1357">Converts the value of the specified object to a 16-bit signed integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-1358">16-разрядное знаковое целое число, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1358">A 16-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1359">`provider` позволяет пользователю указать сведения о преобразовании региональных содержимое `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1359">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="13f48-1360">Например если `value` — <xref:System.String> представляет число, `provider` должно указать зависящие от культуры сведения о формате для представления этого числа.</span><span class="sxs-lookup"><span data-stu-id="13f48-1360">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="13f48-1361">Базовые типы игнорируют `provider`, однако параметр может быть использован, если `value` является определяемого пользователем типа, который реализует <xref:System.IConvertible> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13f48-1361">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1362">В следующем примере определяется класс, реализующий <xref:System.IConvertible> и класс, реализующий <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1362">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="13f48-1363">Объекты класса, реализующего <xref:System.IConvertible> содержат массив <xref:System.Double> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-1363">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="13f48-1364">Объект каждого класса передается `ToInt16` метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-1364">An object of each class is passed to the `ToInt16` method.</span></span> <span data-ttu-id="13f48-1365">Этот метод возвращает массив в среднем <xref:System.Double> значения, с помощью объекта, который реализует <xref:System.IFormatProvider> для определения способа, для которых вычисляется среднее.</span><span class="sxs-lookup"><span data-stu-id="13f48-1365">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1366"><paramref name="value" /> имеет неправильный формат для типа <see cref="T:System.Int16" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1366"><paramref name="value" /> is not in an appropriate format for an <see cref="T:System.Int16" /> type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1367"><paramref name="value" /> не реализует <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1367"><paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1368">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int16.MinValue" /> или больше <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1368"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As String, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : string * IFormatProvider -&gt; int16" Usage="System.Convert.ToInt16 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1369">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1369">A string that contains the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-1370">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1370">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-1371">Преобразует заданное строковое представление числа в эквивалентное 16-битовое целое число со знаком, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-1371">Converts the specified string representation of a number to an equivalent 16-bit signed integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-1372">16-разрядное знаковое целое число, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1372">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1373">`provider` — <xref:System.IFormatProvider> экземпляр, который получает <xref:System.Globalization.NumberFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-1373">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="13f48-1374"><xref:System.Globalization.NumberFormatInfo> Предоставляет зависящие от культуры сведения о формате параметра `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1374">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="13f48-1375">Если `provider` — `null`, <xref:System.Globalization.NumberFormatInfo> для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1375">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="13f48-1376">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.Int16.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-1376">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-1377">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-1377">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1378">В следующем примере преобразование 16-разрядных целых чисел со строковыми представлениями `ToInt16` метод, с помощью <xref:System.IFormatProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-1378">The following example converts string representations of 16-bit integers with the `ToInt16` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/toint16.cpp#3)]
 [!code-csharp[System.Convert.ToSInts_String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/toint16.cs#3)]
 [!code-vb[System.Convert.ToSInts_String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/toint16.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1379"><paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</span><span class="sxs-lookup"><span data-stu-id="13f48-1379"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1380">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int16.MinValue" /> или больше <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1380"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As String, fromBase As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : string * int -&gt; int16" Usage="System.Convert.ToInt16 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1381">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1381">A string that contains the number to convert.</span></span></param>
        <param name="fromBase"><span data-ttu-id="13f48-1382">Основание системы счисления, используемой для представления числа, заданного в параметре <paramref name="value" />, равное 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-1382">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="13f48-1383">Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 16-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1383">Converts the string representation of a number in a specified base to an equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1384">16-разрядное знаковое целое число, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1384">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1385">Если `fromBase` 16, можно добавить префикс номера, указанного в `value` параметр с «0 x» или «0 X».</span><span class="sxs-lookup"><span data-stu-id="13f48-1385">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="13f48-1386">Поскольку знак минус не поддерживается для системе счисления с основанием 10 числового представления, <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29> метод предполагает, что отрицательные числа использовать представление дополнение до двух.</span><span class="sxs-lookup"><span data-stu-id="13f48-1386">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two's complement representation.</span></span> <span data-ttu-id="13f48-1387">Другими словами метод всегда интерпретирует старший двоичный бит целого числа (бит 15) как бит знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-1387">In other words, the method always interprets the highest-order binary bit of an integer (bit 15) as its sign bit.</span></span> <span data-ttu-id="13f48-1388">Таким образом, можно написать код, в котором 10 не основной номер, который выходит за пределы диапазона <xref:System.Int16> тип данных преобразуется в <xref:System.Int16> значение метод не выбрасывает исключение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1388">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.Int16> data type is converted to an <xref:System.Int16> value without the method throwing an exception.</span></span> <span data-ttu-id="13f48-1389">Ниже пример увеличивает <xref:System.Int16.MaxValue?displayProperty=nameWithType> на единицу, преобразует результирующее число в шестнадцатеричное строковое представление, а затем вызывает <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-1389">The following example increments <xref:System.Int16.MaxValue?displayProperty=nameWithType> by one, converts the resulting number to its hexadecimal string representation, and then calls the <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="13f48-1390">Вместо вызова исключения, метод выводит сообщение «0x8000 преобразуется в -32768».</span><span class="sxs-lookup"><span data-stu-id="13f48-1390">Instead of throwing an exception, the method displays the message, "0x8000 converts to -32768."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#5)]
 [!code-vb[System.Convert.BaseConversion#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#5)]  
  
 <span data-ttu-id="13f48-1391">При выполнении двоичных операций или числовых преобразований, это всегда ответственность за разработчика, чтобы убедиться, что метод используется для интерпретации определенного значения подходящее числовое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1391">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="13f48-1392">Как показано в следующем примере, можно гарантировать, что метод правильной обработки переполнения, предварительно Получив знак числового значения, прежде чем преобразовывать его в шестнадцатеричное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1392">As the following example illustrates, you can ensure that the method handles overflows appropriately by first retrieving the sign of the numeric value before converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="13f48-1393">Создания исключения, если исходное значение было положительным, но преобразование обратно в целое число дает отрицательное значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1393">Throw an exception if the original value was positive but the conversion back to an integer yields a negative value.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#6)]
 [!code-vb[System.Convert.BaseConversion#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#6)]  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1394">В следующем примере предпринимается попытка интерпретировать каждый элемент в массиве строк в виде шестнадцатеричной строки и преобразовать в 16-разрядное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1394">The following example attempts to interpret each element in a string array as a hexadecimal string and to convert it to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_2.cs#14)]
 [!code-vb[System.Convert.ToInt16#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_2.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="13f48-1395"><paramref name="fromBase" /> не равно 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-1395"><paramref name="fromBase" /> is not 2, 8, 10, or 16.</span></span>  
  
<span data-ttu-id="13f48-1396">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-1396">-or-</span></span> 
 <span data-ttu-id="13f48-1397">Значению <paramref name="value" />, представляющему недесятичное число со знаком, предшествует отрицательный знак.</span><span class="sxs-lookup"><span data-stu-id="13f48-1397"><paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="13f48-1398"><paramref name="value" /> — <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1398"><paramref name="value" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1399"><paramref name="value" /> содержит символ, который не является допустимой цифрой в основании, заданном параметром <paramref name="fromBase" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1399"><paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span></span> <span data-ttu-id="13f48-1400">Сообщение об исключении указывает, что отсутствуют цифры для преобразования, если первый символ в <paramref name="value" /> недопустим; в противном случае сообщение указывает, что <paramref name="value" /> содержит недопустимые конечные символы.</span><span class="sxs-lookup"><span data-stu-id="13f48-1400">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1401">Значению <paramref name="value" />, представляющему недесятичное число со знаком, предшествует отрицательный знак.</span><span class="sxs-lookup"><span data-stu-id="13f48-1401"><paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span></span>  
  
<span data-ttu-id="13f48-1402">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-1402">-or-</span></span> 
 <span data-ttu-id="13f48-1403">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int16.MinValue" /> или больше <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1403"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13f48-1404">Преобразует заданное значение в 32-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1404">Converts a specified value to a 32-bit signed integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(bool value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : bool -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1405">Логическое значение, которое необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1405">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1406">Преобразует заданное логическое значение в эквивалентное 32-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1406">Converts the specified Boolean value to the equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1407">Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</span><span class="sxs-lookup"><span data-stu-id="13f48-1407">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1408">В следующем примере выполняется преобразование <xref:System.Boolean> значения `true` и `false` до целых чисел.</span><span class="sxs-lookup"><span data-stu-id="13f48-1408">The following example converts the <xref:System.Boolean> values `true` and `false` to integers.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#1)]
 [!code-vb[System.Convert.ToInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Byte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : byte -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1409">8-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1409">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1410">Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 32-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1410">Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1411">32-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1411">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1412">Следующий пример преобразует каждый элемент массива байтов в целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1412">The following example converts each element in an array of bytes to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#2)]
 [!code-vb[System.Convert.ToInt32#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(char value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : char -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1413">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1413">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1414">Преобразует значение заданного символа Юникода в эквивалентное 32-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1414">Converts the value of the specified Unicode character to the equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1415">32-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1415">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1416"><xref:System.Convert.ToInt32%28System.Char%29> Метод возвращает 32-разрядное знаковое целое число, представляющий Единица кода в кодировке UTF-16 `value` аргумент.</span><span class="sxs-lookup"><span data-stu-id="13f48-1416">The <xref:System.Convert.ToInt32%28System.Char%29> method returns a 32-bit signed integer that represents the UTF-16 encoded code unit of the `value` argument.</span></span> <span data-ttu-id="13f48-1417">Если `value` не является младшим символом-заместителем или заместителем это возвращаемое значение также представляет значение кодовая точка Юникода.</span><span class="sxs-lookup"><span data-stu-id="13f48-1417">If `value` is not a low surrogate or a high surrogate, this return value also represents the Unicode code point of value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1418">В следующем примере преобразуется каждого элемента в массиве <xref:System.Char> значения в целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1418">The following example converts each element in an array of <xref:System.Char> values to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#3)]
 [!code-vb[System.Convert.ToInt32#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : DateTime -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1419">Значение даты и времени для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1419">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1420">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1420">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-1421">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1421">This conversion is not supported.</span></span> <span data-ttu-id="13f48-1422">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-1422">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1423">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1423">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : decimal -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1424">Десятичное число для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1424">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1425">Преобразует значение заданного десятичного числа в эквивалентное 32-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1425">Converts the value of the specified decimal number to an equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1426">Значение <paramref name="value" />, округленное до ближайшего 32-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1426"><paramref name="value" />, rounded to the nearest 32-bit signed integer.</span></span> <span data-ttu-id="13f48-1427">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-1427">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1428">В следующем примере предпринимается попытка преобразовать каждый элемент массива <xref:System.Decimal> значения в целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1428">The following example attempts to convert each element in an array of <xref:System.Decimal> values to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#4)]
 [!code-vb[System.Convert.ToInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1429"><paramref name="value" /> больше <see cref="F:System.Int32.MaxValue" /> или меньше <see cref="F:System.Int32.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1429"><paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span></span></exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(double value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : double -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1430">Число с плавающей запятой двойной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1430">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1431">Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 32-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1431">Converts the value of the specified double-precision floating-point number to an equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1432">Значение <paramref name="value" />, округленное до ближайшего 32-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1432"><paramref name="value" />, rounded to the nearest 32-bit signed integer.</span></span> <span data-ttu-id="13f48-1433">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-1433">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1434">В следующем примере предпринимается попытка преобразовать каждый элемент массива <xref:System.Double> значения aninteger.</span><span class="sxs-lookup"><span data-stu-id="13f48-1434">The following example attempts to convert each element in an array of <xref:System.Double> values to aninteger.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#5)]
 [!code-vb[System.Convert.ToInt32#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1435"><paramref name="value" /> больше <see cref="F:System.Int32.MaxValue" /> или меньше <see cref="F:System.Int32.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1435"><paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(short value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : int16 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1436">16-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1436">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1437">Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное 32-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1437">Converts the value of the specified 16-bit signed integer to an equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1438">32-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1438">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1439">Следующий пример каждого элемента в массив 16-разрядное знаковое целое число преобразуется в целое.</span><span class="sxs-lookup"><span data-stu-id="13f48-1439">The following example converts each element in an array of 16-bit signed integers to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#6)]
 [!code-vb[System.Convert.ToInt32#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(int value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : int -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1440">Возвращаемое 32-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1440">The 32-bit signed integer to return.</span></span></param>
        <summary><span data-ttu-id="13f48-1441">Возвращает заданное 32-битовое целое число со знаком; фактическое преобразование не производится.</span><span class="sxs-lookup"><span data-stu-id="13f48-1441">Returns the specified 32-bit signed integer; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="13f48-1442"><paramref name="value" /> возвращается без изменений.</span><span class="sxs-lookup"><span data-stu-id="13f48-1442"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(long value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : int64 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1443">64-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1443">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1444">Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное 32-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1444">Converts the value of the specified 64-bit signed integer to an equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1445">32-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1445">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1446">В следующем примере предпринимается попытка преобразовать каждый элемент массива длинных целых чисел в целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1446">The following example attempts to convert each element in an array of long integers to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#7)]
 [!code-vb[System.Convert.ToInt32#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1447"><paramref name="value" /> больше <see cref="F:System.Int32.MaxValue" /> или меньше <see cref="F:System.Int32.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1447"><paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : obj -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1448">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1448">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="13f48-1449">Преобразует значение заданного объекта в 32-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1449">Converts the value of the specified object to a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1450">32-разрядное целое число со знаком, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1450">A 32-bit signed integer equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1451">Если`value` не `null`, этот метод создает оболочку для вызова <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> реализацию базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1451">If`value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1452">В следующем примере предпринимается попытка преобразовать каждый элемент в массиве объектов в целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1452">The following example attempts to convert each element in an object array to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#8)]
 [!code-vb[System.Convert.ToInt32#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1453">Параметр <paramref name="value" /> имеет неправильный формат.</span><span class="sxs-lookup"><span data-stu-id="13f48-1453"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1454"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1454"><paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-1455">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-1455">-or-</span></span> 
<span data-ttu-id="13f48-1456">Преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1456">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1457">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int32.MinValue" /> или больше <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1457"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : sbyte -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1458">8-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1458">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1459">Преобразует значение заданного 8-разрядного целого числа со знаком в эквивалентное 32-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1459">Converts the value of the specified 8-bit signed integer to the equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1460">8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1460">A 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1461">Следующий пример каждый элемент в массив байтов со знаком преобразуется в целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1461">The following example converts each element in an array of signed bytes to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#9)]
 [!code-vb[System.Convert.ToInt32#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(float value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : single -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1462">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1462">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1463">Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 32-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1463">Converts the value of the specified single-precision floating-point number to an equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1464">Значение <paramref name="value" />, округленное до ближайшего 32-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1464"><paramref name="value" />, rounded to the nearest 32-bit signed integer.</span></span> <span data-ttu-id="13f48-1465">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-1465">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1466">В следующем примере предпринимается попытка преобразовать каждый элемент массива <xref:System.Single> значения в целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1466">The following example attempts to convert each element in an array of <xref:System.Single> values to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#10)]
 [!code-vb[System.Convert.ToInt32#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1467"><paramref name="value" /> больше <see cref="F:System.Int32.MaxValue" /> или меньше <see cref="F:System.Int32.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1467"><paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span></span></exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : string -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1468">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1468">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1469">Преобразует заданное строковое представление числа в эквивалентное 32-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1469">Converts the specified string representation of a number to an equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1470">32-разрядное знаковое целое число, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1470">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1471">С помощью <xref:System.Convert.ToInt32%28System.String%29> метод эквивалентна передаче `value` для <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> метод.`value`</span><span class="sxs-lookup"><span data-stu-id="13f48-1471">Using the <xref:System.Convert.ToInt32%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> method.`value`</span></span> <span data-ttu-id="13f48-1472">интерпретируется с использованием соглашений о форматировании языка и региональных параметров текущего потока.</span><span class="sxs-lookup"><span data-stu-id="13f48-1472">is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="13f48-1473">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-1473">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-1474">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-1474">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1475">В следующем примере предпринимается для преобразования каждого элемента в массиве числовую строку в целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1475">The following example attempts to convert each element in a numeric string array to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#11)]
 [!code-vb[System.Convert.ToInt32#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1476"><paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</span><span class="sxs-lookup"><span data-stu-id="13f48-1476"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1477">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int32.MinValue" /> или больше <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1477"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As UShort) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : uint16 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1478">16-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1478">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1479">Преобразует значение заданного 16-битового целого числа без знака в эквивалентное 32-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1479">Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1480">32-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1480">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1481">Следующий пример преобразует каждый элемент массива 16-разрядных целых чисел без знака в целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1481">The following example converts each element in an array of 16-bit unsigned integers to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#12)]
 [!code-vb[System.Convert.ToInt32#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : uint32 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1482">32-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1482">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1483">Преобразует значение заданного 32-битового целого числа без знака в эквивалентное 32-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1483">Converts the value of the specified 32-bit unsigned integer to an equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1484">32-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1484">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1485">В следующем примере предпринимается для преобразования каждого элемента в массив целых чисел без знака в целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1485">The following example attempts to convert each element in an array of unsigned integers to a signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#13)]
 [!code-vb[System.Convert.ToInt32#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1486">Значение <paramref name="value" /> больше значения <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1486"><paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : uint64 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1487">64-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1487">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1488">Преобразует значение заданного 64-разрядного целого числа без знака в эквивалентное 32-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1488">Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1489">32-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1489">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1490">В следующем примере предпринимается попытка преобразовать каждый элемент в массив целых чисел без знака длинное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1490">The following example attempts to convert each element in an array of unsigned long integers to a signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#14)]
 [!code-vb[System.Convert.ToInt32#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1491">Значение <paramref name="value" /> больше значения <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1491"><paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Object, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : obj * IFormatProvider -&gt; int" Usage="System.Convert.ToInt32 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1492">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1492">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-1493">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1493">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-1494">Преобразует значение заданного объекта в эквивалентное 32-битовое целое число со знаком, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-1494">Converts the value of the specified object to a 32-bit signed integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-1495">32-разрядное знаковое целое число, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1495">A 32-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1496">Возвращает значение, в результате вызова <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> метод базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1496">The return value is the result of invoking the <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="13f48-1497">`provider` позволяет пользователю указать сведения о преобразовании региональных содержимое `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1497">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="13f48-1498">Например если `value` — <xref:System.String> представляет число, `provider` должно указать зависящие от культуры сведения о формате для представления этого числа.</span><span class="sxs-lookup"><span data-stu-id="13f48-1498">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="13f48-1499">Базовые типы игнорируют `provider`, однако параметр может быть использован, если `value` является определяемого пользователем типа, который реализует <xref:System.IConvertible> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13f48-1499">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1500">В следующем примере определяется класс, реализующий <xref:System.IConvertible> и класс, реализующий <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1500">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="13f48-1501">Объекты класса, реализующего <xref:System.IConvertible> содержат массив <xref:System.Double> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-1501">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="13f48-1502">Объект каждого класса передается `ToInt32` метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-1502">An object of each class is passed to the `ToInt32` method.</span></span> <span data-ttu-id="13f48-1503">Этот метод возвращает массив в среднем <xref:System.Double> значения, с помощью объекта, который реализует <xref:System.IFormatProvider> для определения способа, для которых вычисляется среднее.</span><span class="sxs-lookup"><span data-stu-id="13f48-1503">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1504">Параметр <paramref name="value" /> имеет неправильный формат.</span><span class="sxs-lookup"><span data-stu-id="13f48-1504"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1505"><paramref name="value" /> не реализует <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1505"><paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1506">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int32.MinValue" /> или больше <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1506"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As String, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : string * IFormatProvider -&gt; int" Usage="System.Convert.ToInt32 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1507">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1507">A string that contains the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-1508">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1508">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-1509">Преобразует заданное строковое представление числа в эквивалентное 32-битовое целое число со знаком, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-1509">Converts the specified string representation of a number to an equivalent 32-bit signed integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-1510">32-разрядное знаковое целое число, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1510">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1511">Возвращает значение, в результате вызова <xref:System.Int32.Parse%2A?displayProperty=nameWithType> метод `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1511">The return value is the result of invoking the <xref:System.Int32.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="13f48-1512">`provider` — <xref:System.IFormatProvider> экземпляр, который получает <xref:System.Globalization.NumberFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-1512">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="13f48-1513"><xref:System.Globalization.NumberFormatInfo> Предоставляет зависящие от культуры сведения о формате параметра `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1513">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="13f48-1514">Если `provider` — `null`, <xref:System.Globalization.NumberFormatInfo> для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1514">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="13f48-1515">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-1515">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-1516">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-1516">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1517">В следующем примере определяется пользовательский <xref:System.Globalization.NumberFormatInfo> объект, который распознает строку «pos» как знак плюс и строку «neg» как знак минус.</span><span class="sxs-lookup"><span data-stu-id="13f48-1517">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="13f48-1518">Затем он пытается преобразовать каждый элемент массива числовых строк в целое число с использованием обоих этого поставщика и <xref:System.Globalization.NumberFormatInfo> поставщик для инвариантного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1518">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_2.cs#15)]
 [!code-vb[System.Convert.ToInt32#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1519"><paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</span><span class="sxs-lookup"><span data-stu-id="13f48-1519"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1520">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int32.MinValue" /> или больше <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1520"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As String, fromBase As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : string * int -&gt; int" Usage="System.Convert.ToInt32 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1521">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1521">A string that contains the number to convert.</span></span></param>
        <param name="fromBase"><span data-ttu-id="13f48-1522">Основание системы счисления, используемой для представления числа, заданного в параметре <paramref name="value" />, равное 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-1522">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="13f48-1523">Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 32-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1523">Converts the string representation of a number in a specified base to an equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1524">32-разрядное знаковое целое число, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1524">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1525">Если `fromBase` 16, можно добавить префикс номера, указанного в `value` параметр с «0 x» или «0 X».</span><span class="sxs-lookup"><span data-stu-id="13f48-1525">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="13f48-1526">Поскольку знак минус не поддерживается для системе счисления с основанием 10 числового представления, <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> метод предполагает, что отрицательные числа использовать представление дополнение до двух.</span><span class="sxs-lookup"><span data-stu-id="13f48-1526">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two's complement representation.</span></span> <span data-ttu-id="13f48-1527">Другими словами метод всегда интерпретирует старший двоичный бит целого числа (бит 31) как бит знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-1527">In other words, the method always interprets the highest-order binary bit of an integer (bit 31) as its sign bit.</span></span> <span data-ttu-id="13f48-1528">Таким образом, можно написать код, в котором 10 не основной номер, который выходит за пределы диапазона <xref:System.Int32> тип данных преобразуется в <xref:System.Int32> значение метод не выбрасывает исключение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1528">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.Int32> data type is converted to an <xref:System.Int32> value without the method throwing an exception.</span></span> <span data-ttu-id="13f48-1529">Ниже пример увеличивает <xref:System.Int32.MaxValue?displayProperty=nameWithType> на единицу, преобразует результирующее число в шестнадцатеричное строковое представление, а затем вызывает <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-1529">The following example increments <xref:System.Int32.MaxValue?displayProperty=nameWithType> by one, converts the resulting number to its hexadecimal string representation, and then calls the <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="13f48-1530">Вместо вызова исключения, метод выводит сообщение «0x80000000 преобразуется в -2147483648».</span><span class="sxs-lookup"><span data-stu-id="13f48-1530">Instead of throwing an exception, the method displays the message, "0x80000000 converts to -2147483648."</span></span>  
  
 [!code-cpp[System.Convert.BaseConversion#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cpp/toint_str_int32.cpp#1)]
 [!code-csharp[System.Convert.BaseConversion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#1)]
 [!code-vb[System.Convert.BaseConversion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#1)]  
  
 <span data-ttu-id="13f48-1531">При выполнении двоичных операций или числовых преобразований, это всегда ответственность за разработчика, чтобы убедиться, что метод используется для интерпретации определенного значения подходящее числовое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1531">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="13f48-1532">Как показано в следующем примере, можно гарантировать, что метод правильной обработки переполнения, предварительно Получив знак числового значения, прежде чем преобразовывать его в шестнадцатеричное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1532">As the following example illustrates, you can ensure that the method handles overflows appropriately by first retrieving the sign of the numeric value before converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="13f48-1533">Создания исключения, если исходное значение было положительным, но преобразование обратно в целое число дает отрицательное значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1533">Throw an exception if the original value was positive but the conversion back to an integer yields a negative value.</span></span>  
  
 [!code-cpp[System.Convert.BaseConversion#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cpp/toint_str_int32.cpp#2)]
 [!code-csharp[System.Convert.BaseConversion#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#2)]
 [!code-vb[System.Convert.BaseConversion#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="13f48-1534"><paramref name="fromBase" /> не равно 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-1534"><paramref name="fromBase" /> is not 2, 8, 10, or 16.</span></span>  
  
<span data-ttu-id="13f48-1535">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-1535">-or-</span></span> 
 <span data-ttu-id="13f48-1536">Значению <paramref name="value" />, представляющему недесятичное число со знаком, предшествует отрицательный знак.</span><span class="sxs-lookup"><span data-stu-id="13f48-1536"><paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="13f48-1537"><paramref name="value" /> — <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1537"><paramref name="value" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1538"><paramref name="value" /> содержит символ, который не является допустимой цифрой в основании, заданном параметром <paramref name="fromBase" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1538"><paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span></span> <span data-ttu-id="13f48-1539">Сообщение об исключении указывает, что отсутствуют цифры для преобразования, если первый символ в <paramref name="value" /> недопустим; в противном случае сообщение указывает, что <paramref name="value" /> содержит недопустимые конечные символы.</span><span class="sxs-lookup"><span data-stu-id="13f48-1539">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1540">Значению <paramref name="value" />, представляющему недесятичное число со знаком, предшествует отрицательный знак.</span><span class="sxs-lookup"><span data-stu-id="13f48-1540"><paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span></span>  
  
<span data-ttu-id="13f48-1541">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-1541">-or-</span></span> 
 <span data-ttu-id="13f48-1542">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int32.MinValue" /> или больше <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1542"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13f48-1543">Преобразует заданное значение в 64-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1543">Converts a specified value to a 64-bit signed integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Boolean) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(bool value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : bool -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1544">Логическое значение, которое необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1544">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1545">Преобразует заданное логическое значение в эквивалентное 64-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1545">Converts the specified Boolean value to the equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1546">Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</span><span class="sxs-lookup"><span data-stu-id="13f48-1546">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1547">В следующем примере выполняется преобразование <xref:System.Boolean> значения `true` и `false` для длинных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="13f48-1547">The following example converts the <xref:System.Boolean> values `true` and `false` to long integers.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#1)]
 [!code-vb[System.Convert.ToInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Byte) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : byte -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1548">8-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1548">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1549">Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 64-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1549">Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1550">64-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1550">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1551">Следующий пример преобразует каждый элемент массива байтов в длинное целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1551">The following example converts each element in an array of bytes to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#2)]
 [!code-vb[System.Convert.ToInt64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Char) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(char value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : char -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1552">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1552">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1553">Преобразует значение заданного символа Юникода в эквивалентное 64-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1553">Converts the value of the specified Unicode character to the equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1554">64-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1554">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1555">Каждый элемент преобразуется в следующем примере <xref:System.Char> массива в длинное целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1555">The following example converts each element in a <xref:System.Char> array to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#3)]
 [!code-vb[System.Convert.ToInt64#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As DateTime) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : DateTime -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1556">Значение даты и времени для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1556">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1557">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1557">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-1558">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1558">This conversion is not supported.</span></span> <span data-ttu-id="13f48-1559">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-1559">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1560">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1560">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : decimal -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1561">Десятичное число для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1561">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1562">Преобразует значение заданного десятичного числа в эквивалентное 64-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1562">Converts the value of the specified decimal number to an equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1563">Значение <paramref name="value" />, округленное до ближайшего 64-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1563"><paramref name="value" />, rounded to the nearest 64-bit signed integer.</span></span> <span data-ttu-id="13f48-1564">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-1564">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1565">В следующем примере предпринимается попытка преобразовать каждый элемент массива <xref:System.Decimal> значения в длинное целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1565">The following example attempts to convert each element in an array of <xref:System.Decimal> values to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#4)]
 [!code-vb[System.Convert.ToInt64#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1566"><paramref name="value" /> больше <see cref="F:System.Int64.MaxValue" /> или меньше <see cref="F:System.Int64.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1566"><paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span></span></exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Double) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(double value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : double -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1567">Число с плавающей запятой двойной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1567">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1568">Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 64-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1568">Converts the value of the specified double-precision floating-point number to an equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1569">Значение <paramref name="value" />, округленное до ближайшего 64-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1569"><paramref name="value" />, rounded to the nearest 64-bit signed integer.</span></span> <span data-ttu-id="13f48-1570">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-1570">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1571">В следующем примере предпринимается попытка преобразовать каждый элемент массива <xref:System.Double> значения в длинное целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1571">The following example attempts to convert each element in an array of <xref:System.Double> values to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#5)]
 [!code-vb[System.Convert.ToInt64#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1572"><paramref name="value" /> больше <see cref="F:System.Int64.MaxValue" /> или меньше <see cref="F:System.Int64.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1572"><paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Short) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(short value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : int16 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1573">16-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1573">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1574">Преобразует значение заданного 16-разрядного целого числа со знаком в эквивалентное 64-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1574">Converts the value of the specified 16-bit signed integer to an equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1575">64-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1575">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1576">Следующий пример преобразует каждый элемент массива 16-разрядных целых чисел в длинное целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1576">The following example converts each element in an array of 16-bit integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#6)]
 [!code-vb[System.Convert.ToInt64#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(int value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : int -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1577">32-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1577">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1578">Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 64-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1578">Converts the value of the specified 32-bit signed integer to an equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1579">64-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1579">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(long value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : int64 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1580">64-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1580">A 64-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="13f48-1581">Возвращает заданное 64-битовое целое число со знаком; фактическое преобразование не производится.</span><span class="sxs-lookup"><span data-stu-id="13f48-1581">Returns the specified 64-bit signed integer; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="13f48-1582"><paramref name="value" /> возвращается без изменений.</span><span class="sxs-lookup"><span data-stu-id="13f48-1582"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1583">Следующий пример преобразует каждый элемент в массив целых чисел в длинное целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1583">The following example converts each element in an array of integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#7)]
 [!code-vb[System.Convert.ToInt64#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Object) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : obj -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1584">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1584">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="13f48-1585">Преобразует значение заданного объекта в 64-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1585">Converts the value of the specified object to a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1586">64-разрядное знаковое целое число, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1586">A 64-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1587">Если `value` не `null`, этот метод создает оболочку для вызова <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> реализацию базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1587">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1588">В следующем примере предпринимается попытка преобразовать каждый элемент в массиве объектов в длинное целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1588">The following example attempts to convert each element in an object array to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#8)]
 [!code-vb[System.Convert.ToInt64#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1589">Параметр <paramref name="value" /> имеет неправильный формат.</span><span class="sxs-lookup"><span data-stu-id="13f48-1589"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1590"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1590"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-1591">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-1591">-or-</span></span> 
<span data-ttu-id="13f48-1592">Преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1592">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1593">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int64.MinValue" /> или больше <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1593"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As SByte) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : sbyte -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1594">8-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1594">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1595">Преобразует значение заданного 8-разрядного целого числа со знаком в эквивалентное 64-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1595">Converts the value of the specified 8-bit signed integer to the equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1596">64-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1596">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1597">Следующий пример преобразует каждый элемент массива байт со знаком в длинное целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1597">The following example converts each element in a signed byte array to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#9)]
 [!code-vb[System.Convert.ToInt64#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Single) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(float value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : single -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1598">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1598">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1599">Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 64-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1599">Converts the value of the specified single-precision floating-point number to an equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1600">Значение <paramref name="value" />, округленное до ближайшего 64-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1600"><paramref name="value" />, rounded to the nearest 64-bit signed integer.</span></span> <span data-ttu-id="13f48-1601">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-1601">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1602">В следующем примере предпринимается попытка преобразовать каждый элемент массива <xref:System.Single> значения в длинное целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1602">The following example attempts to convert each element in an array of <xref:System.Single> values to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#10)]
 [!code-vb[System.Convert.ToInt64#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1603"><paramref name="value" /> больше <see cref="F:System.Int64.MaxValue" /> или меньше <see cref="F:System.Int64.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1603"><paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span></span></exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : string -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1604">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1604">A string that contains a number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1605">Преобразует заданное строковое представление числа в эквивалентное 64-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1605">Converts the specified string representation of a number to an equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1606">64-разрядное знаковое целое число, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1606">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1607">С помощью <xref:System.Convert.ToInt64%28System.String%29> метод эквивалентна передаче `value` для <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-1607">Using the <xref:System.Convert.ToInt64%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="13f48-1608">Параметр `value` интерпретируется с использованием соглашений о форматировании, принятых в культуре текущего потока.</span><span class="sxs-lookup"><span data-stu-id="13f48-1608">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="13f48-1609">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.Int64.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-1609">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-1610">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-1610">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1611">В следующем примере предпринимается попытка преобразовать каждый элемент массива из числовых строк в длинное целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1611">The following example attempts to convert each element in an array of numeric strings to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#11)]
 [!code-vb[System.Convert.ToInt64#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1612"><paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</span><span class="sxs-lookup"><span data-stu-id="13f48-1612"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1613">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int64.MinValue" /> или больше <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1613"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As UShort) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : uint16 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1614">16-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1614">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1615">Преобразует значение заданного 16-битового целого числа без знака в эквивалентное 64-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1615">Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1616">64-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1616">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1617">В следующем примере каждый элемент массива 16-разрядных целых чисел без знака преобразуется в длинное целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1617">The following example converts each element in an array of 16-bit unsigned integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#12)]
 [!code-vb[System.Convert.ToInt64#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As UInteger) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : uint32 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1618">32-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1618">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1619">Преобразует значение заданного 32-битового целого числа без знака в эквивалентное 64-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1619">Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1620">64-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1620">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1621">Следующий пример каждого элемента в массив целых чисел без знака преобразуется в длинное целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1621">The following example converts each element in an array of unsigned integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#13)]
 [!code-vb[System.Convert.ToInt64#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As ULong) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : uint64 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1622">64-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1622">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1623">Преобразует значение заданного 64-битового целого числа без знака в эквивалентное 64-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1623">Converts the value of the specified 64-bit unsigned integer to an equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1624">64-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1624">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1625">В следующем примере предпринимается для преобразования каждого элемента в массив целых чисел без знака длинное длинное целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1625">The following example attempts to convert each element in an array of unsigned long integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#14)]
 [!code-vb[System.Convert.ToInt64#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1626">Значение <paramref name="value" /> больше значения <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1626"><paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Object, provider As IFormatProvider) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : obj * IFormatProvider -&gt; int64" Usage="System.Convert.ToInt64 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1627">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1627">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-1628">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1628">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-1629">Преобразует значение заданного объекта в эквивалентное 64-битовое целое число со знаком, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-1629">Converts the value of the specified object to a 64-bit signed integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-1630">64-разрядное знаковое целое число, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1630">A 64-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1631">Возвращает значение, в результате вызова <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> метод базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1631">The return value is the result of invoking the <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="13f48-1632">`provider` позволяет пользователю указать сведения о преобразовании региональных содержимое `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1632">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="13f48-1633">Например если `value` — <xref:System.String> представляет число, `provider` должно указать зависящие от культуры сведения о формате для представления этого числа.</span><span class="sxs-lookup"><span data-stu-id="13f48-1633">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="13f48-1634">Базовые типы игнорируют `provider`, однако параметр может быть использован, если `value` является определяемого пользователем типа, который реализует <xref:System.IConvertible> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13f48-1634">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1635">В следующем примере определяется класс, реализующий <xref:System.IConvertible> и класс, реализующий <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1635">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="13f48-1636">Объекты класса, реализующего <xref:System.IConvertible> содержат массив <xref:System.Double> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-1636">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="13f48-1637">Объект каждого класса передается `ToInt64` метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-1637">An object of each class is passed to the `ToInt64` method.</span></span> <span data-ttu-id="13f48-1638">Этот метод возвращает массив в среднем <xref:System.Double> значения, с помощью объекта, который реализует <xref:System.IFormatProvider> для определения способа, для которых вычисляется среднее.</span><span class="sxs-lookup"><span data-stu-id="13f48-1638">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1639">Параметр <paramref name="value" /> имеет неправильный формат.</span><span class="sxs-lookup"><span data-stu-id="13f48-1639"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1640"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1640"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-1641">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-1641">-or-</span></span> 
<span data-ttu-id="13f48-1642">Преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1642">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1643">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int64.MinValue" /> или больше <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1643"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As String, provider As IFormatProvider) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : string * IFormatProvider -&gt; int64" Usage="System.Convert.ToInt64 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1644">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1644">A string that contains the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-1645">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1645">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-1646">Преобразует заданное строковое представление числа в эквивалентное 64-битовое целое число со знаком, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-1646">Converts the specified string representation of a number to an equivalent 64-bit signed integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-1647">64-разрядное знаковое целое число, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1647">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1648">Возвращает значение, в результате вызова <xref:System.Int64.Parse%2A?displayProperty=nameWithType> метод `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1648">The return value is the result of invoking the <xref:System.Int64.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="13f48-1649">`provider` — `IFormatProvider` экземпляр, который получает <xref:System.Globalization.NumberFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-1649">`provider` is an `IFormatProvider` instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="13f48-1650">`NumberFormatInfo` Предоставляет зависящие от культуры сведения о формате параметра `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1650">The `NumberFormatInfo` object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="13f48-1651">Если `provider` — `null`, `NumberFormatInfo` для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1651">If `provider` is `null`, the `NumberFormatInfo` for the current culture is used.</span></span>  
  
 <span data-ttu-id="13f48-1652">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.Int64.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-1652">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-1653">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-1653">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1654">В следующем примере определяется пользовательский <xref:System.Globalization.NumberFormatInfo> объект, который распознает строку «pos» как знак плюс и строку «neg» как знак минус.</span><span class="sxs-lookup"><span data-stu-id="13f48-1654">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="13f48-1655">Затем он пытается преобразовать каждый элемент массива числовых строк в целое число с использованием обоих этого поставщика и <xref:System.Globalization.NumberFormatInfo> поставщик для инвариантного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1655">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_3.cs#16)]
 [!code-vb[System.Convert.ToInt64#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1656"><paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</span><span class="sxs-lookup"><span data-stu-id="13f48-1656"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1657">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int64.MinValue" /> или больше <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1657"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As String, fromBase As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : string * int -&gt; int64" Usage="System.Convert.ToInt64 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1658">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1658">A string that contains the number to convert.</span></span></param>
        <param name="fromBase"><span data-ttu-id="13f48-1659">Основание системы счисления, используемой для представления числа, заданного в параметре <paramref name="value" />, равное 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-1659">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="13f48-1660">Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 64-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1660">Converts the string representation of a number in a specified base to an equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1661">64-разрядное знаковое целое число, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1661">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1662">Если `fromBase` 16, можно добавить префикс номера, указанного в `value` параметр с «0 x» или «0 X».</span><span class="sxs-lookup"><span data-stu-id="13f48-1662">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="13f48-1663">Поскольку знак минус не поддерживается для системе счисления с основанием 10 числового представления, <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29> метод предполагает, что отрицательные числа использовать представление дополнение до двух.</span><span class="sxs-lookup"><span data-stu-id="13f48-1663">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two's complement representation.</span></span> <span data-ttu-id="13f48-1664">Другими словами метод всегда интерпретирует самого старшего бита двоичного типа данных long integer (бит 63) как бит знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-1664">In other words, the method always interprets the highest-order binary bit of a long integer (bit 63) as its sign bit.</span></span> <span data-ttu-id="13f48-1665">Таким образом, можно написать код, в котором 10 не основной номер, который выходит за пределы диапазона <xref:System.Int64> тип данных преобразуется в <xref:System.Int64> значение метод не выбрасывает исключение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1665">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.Int64> data type is converted to an <xref:System.Int64> value without the method throwing an exception.</span></span> <span data-ttu-id="13f48-1666">В следующем примере выполняется преобразование <xref:System.UInt64.MaxValue> шестнадцатеричное строковое представление и затем вызывает <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-1666">The following example converts <xref:System.UInt64.MaxValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="13f48-1667">Вместо вызова исключения, метод выводит сообщение «0xFFFFFFFFFFFFFFFF преобразуется в значение -1».</span><span class="sxs-lookup"><span data-stu-id="13f48-1667">Instead of throwing an exception, the method displays the message, "0xFFFFFFFFFFFFFFFF converts to -1."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#7)]
 [!code-vb[System.Convert.BaseConversion#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#7)]  
  
 <span data-ttu-id="13f48-1668">При выполнении двоичных операций или числовых преобразований, это всегда ответственность за разработчика, чтобы убедиться, что метод используется для интерпретации определенного значения подходящее числовое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1668">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="13f48-1669">Как показано в следующем примере, можно гарантировать, что метод правильной обработки переполнения, определяя сначала, представляет ли значение без знака или тип со знаком при его преобразовании в шестнадцатеричное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1669">As the following example illustrates, you can ensure that the method handles overflows appropriately by first determining whether a value represents an unsigned or a signed type when converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="13f48-1670">Создания исключения, если исходное значение: тип без знака, но преобразование обратно в целое число дает значение битом знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-1670">Throw an exception if the original value was an unsigned type but the conversion back to an integer yields a value whose sign bit is on.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#8)]
 [!code-vb[System.Convert.BaseConversion#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#8)]  
  
 <span data-ttu-id="13f48-1671">В следующем примере предпринимается интерпретировать каждый элемент в массиве строк в виде шестнадцатеричной строки и преобразовать его в длинное целое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1671">The following example attempts to interpret each element in a string array as a hexadecimal string and convert it to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_2.cs#15)]
 [!code-vb[System.Convert.ToInt64#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="13f48-1672"><paramref name="fromBase" /> не равно 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-1672"><paramref name="fromBase" /> is not 2, 8, 10, or 16.</span></span>  
  
<span data-ttu-id="13f48-1673">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-1673">-or-</span></span> 
 <span data-ttu-id="13f48-1674">Значению <paramref name="value" />, представляющему недесятичное число со знаком, предшествует отрицательный знак.</span><span class="sxs-lookup"><span data-stu-id="13f48-1674"><paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="13f48-1675"><paramref name="value" /> — <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1675"><paramref name="value" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1676"><paramref name="value" /> содержит символ, который не является допустимой цифрой в основании, заданном параметром <paramref name="fromBase" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1676"><paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span></span> <span data-ttu-id="13f48-1677">Сообщение об исключении указывает, что отсутствуют цифры для преобразования, если первый символ в <paramref name="value" /> недопустим; в противном случае сообщение указывает, что <paramref name="value" /> содержит недопустимые конечные символы.</span><span class="sxs-lookup"><span data-stu-id="13f48-1677">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1678">Значению <paramref name="value" />, представляющему недесятичное число со знаком, предшествует отрицательный знак.</span><span class="sxs-lookup"><span data-stu-id="13f48-1678"><paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span></span>  
  
<span data-ttu-id="13f48-1679">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-1679">-or-</span></span> 
 <span data-ttu-id="13f48-1680">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int64.MinValue" /> или больше <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1680"><paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13f48-1681">Преобразует заданное значение в 8-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1681">Converts a specified value to an 8-bit signed integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Boolean) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(bool value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : bool -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1682">Логическое значение, которое необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1682">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1683">Преобразует заданное логическое значение в эквивалентное 8-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1683">Converts the specified Boolean value to the equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1684">Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</span><span class="sxs-lookup"><span data-stu-id="13f48-1684">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1685">В следующем примере преобразование логических значений `true` и `false` для подписанных байтовых значений.</span><span class="sxs-lookup"><span data-stu-id="13f48-1685">The following example converts the Boolean values `true` and `false` to signed byte values.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#1)]
 [!code-vb[System.Convert.ToSByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Byte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : byte -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1686">8-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1686">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1687">Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 8-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1687">Converts the value of the specified 8-bit unsigned integer to the equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1688">8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1688">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1689">В следующем примере предпринимается попытка преобразовать каждый элемент в массиве байтов байт со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1689">The following example attempts to convert each element in a byte array to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#2)]
 [!code-vb[System.Convert.ToSByte#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1690">Значение <paramref name="value" /> больше значения <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1690"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Char) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(char value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : char -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1691">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1691">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1692">Преобразует значение заданного символа Юникода в эквивалентное 8-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1692">Converts the value of the specified Unicode character to the equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1693">8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1693">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1694">В следующем примере предпринимается попытка преобразовать каждый элемент массива <xref:System.Char> значения байт со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1694">The following example attempts to convert each element in an array of <xref:System.Char> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#3)]
 [!code-vb[System.Convert.ToSByte#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1695">Значение <paramref name="value" /> больше значения <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1695"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As DateTime) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : DateTime -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1696">Значение даты и времени для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1696">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1697">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1697">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-1698">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1698">This conversion is not supported.</span></span> <span data-ttu-id="13f48-1699">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-1699">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1700">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1700">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Decimal) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : decimal -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1701">Десятичное число для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1701">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1702">Преобразует значение заданного десятичного числа в эквивалентное 8-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1702">Converts the value of the specified decimal number to an equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1703">Значение <paramref name="value" />, округленное до ближайшего 8-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1703"><paramref name="value" />, rounded to the nearest 8-bit signed integer.</span></span> <span data-ttu-id="13f48-1704">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-1704">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1705">В следующем примере предпринимается попытка преобразовать каждый элемент массива <xref:System.Decimal> значения байт со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1705">The following example attempts to convert each element in an array of <xref:System.Decimal> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#4)]
 [!code-vb[System.Convert.ToSByte#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1706"><paramref name="value" /> больше <see cref="F:System.SByte.MaxValue" /> или меньше <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1706"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span></span></exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Double) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(double value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : double -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1707">Число с плавающей запятой двойной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1707">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1708">Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 8-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1708">Converts the value of the specified double-precision floating-point number to an equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1709">Значение <paramref name="value" />, округленное до ближайшего 8-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1709"><paramref name="value" />, rounded to the nearest 8-bit signed integer.</span></span> <span data-ttu-id="13f48-1710">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-1710">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1711">В следующем примере предпринимается попытка преобразовать каждый элемент массива <xref:System.Double> значения байт со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1711">The following example attempts to convert each element in an array of <xref:System.Double> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#5)]
 [!code-vb[System.Convert.ToSByte#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1712"><paramref name="value" /> больше <see cref="F:System.SByte.MaxValue" /> или меньше <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1712"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Short) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(short value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : int16 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1713">16-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1713">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1714">Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное 8-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1714">Converts the value of the specified 16-bit signed integer to the equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1715">8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1715">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1716">В следующем примере предпринимается попытка преобразовать каждый элемент массива 16-разрядных целых чисел со знаком байт со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1716">The following example attempts to convert each element in an array of signed 16-bit integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#6)]
 [!code-vb[System.Convert.ToSByte#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1717"><paramref name="value" /> больше <see cref="F:System.SByte.MaxValue" /> или меньше <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1717"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Integer) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(int value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : int -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1718">32-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1718">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1719">Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 8-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1719">Converts the value of the specified 32-bit signed integer to an equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1720">8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1720">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1721">В следующем примере предпринимается попытка преобразовать каждый элемент массива целых чисел со знаком байт со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1721">The following example attempts to convert each element in an array of signed integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#7)]
 [!code-vb[System.Convert.ToSByte#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1722"><paramref name="value" /> больше <see cref="F:System.SByte.MaxValue" /> или меньше <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1722"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Long) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(long value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : int64 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1723">64-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1723">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1724">Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное 8-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1724">Converts the value of the specified 64-bit signed integer to an equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1725">8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1725">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1726">В следующем примере предпринимается попытка преобразовать каждый элемент массива длинных целых чисел байт со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1726">The following example attempts to convert each element in an array of long integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#8)]
 [!code-vb[System.Convert.ToSByte#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1727"><paramref name="value" /> больше <see cref="F:System.SByte.MaxValue" /> или меньше <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1727"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Object) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : obj -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1728">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1728">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="13f48-1729">Преобразует значение заданного объекта в 8-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1729">Converts the value of the specified object to an 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1730">8-разрядное знаковое целое число, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1730">An 8-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1731">Возвращает значение, в результате вызова <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> метод базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1731">The return value is the result of invoking the <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1732">В следующем примере предпринимается попытка преобразовать каждый элемент в массиве объектов байт со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1732">The following example attempts to convert each element in an object array to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#9)]
 [!code-vb[System.Convert.ToSByte#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1733">Параметр <paramref name="value" /> имеет неправильный формат.</span><span class="sxs-lookup"><span data-stu-id="13f48-1733"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1734"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1734"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-1735">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-1735">-or-</span></span> 
<span data-ttu-id="13f48-1736">Преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1736">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1737">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.SByte.MinValue" /> или больше <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1737"><paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : sbyte -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1738">Возвращаемое 8-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1738">The 8-bit signed integer to return.</span></span></param>
        <summary><span data-ttu-id="13f48-1739">Возвращает заданное 8-битовое целое число со знаком; фактическое преобразование не производится.</span><span class="sxs-lookup"><span data-stu-id="13f48-1739">Returns the specified 8-bit signed integer; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="13f48-1740"><paramref name="value" /> возвращается без изменений.</span><span class="sxs-lookup"><span data-stu-id="13f48-1740"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Single) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(float value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : single -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1741">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1741">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1742">Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 8-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1742">Converts the value of the specified single-precision floating-point number to an equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1743">Значение <paramref name="value" />, округленное до ближайшего 8-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1743"><paramref name="value" />, rounded to the nearest 8-bit signed integer.</span></span> <span data-ttu-id="13f48-1744">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-1744">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1745">В следующем примере предпринимается попытка преобразовать каждый элемент массива <xref:System.Single> значения байт со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1745">The following example attempts to convert each element in an array of <xref:System.Single> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#9)]
 [!code-vb[System.Convert.ToSByte#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1746"><paramref name="value" /> больше <see cref="F:System.SByte.MaxValue" /> или меньше <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1746"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span></span></exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As String) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : string -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1747">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1747">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1748">Преобразует заданное строковое представление числа в эквивалентное 8-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1748">Converts the specified string representation of a number to an equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1749">8-разрядное целое число со знаком, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если значение равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1749">An 8-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if value is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1750">С помощью <xref:System.Convert.ToSByte%28System.String%29> метод эквивалентна передаче `value` для <xref:System.SByte.Parse%28System.String%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-1750">Using the <xref:System.Convert.ToSByte%28System.String%29> method is equivalent to passing `value` to the <xref:System.SByte.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="13f48-1751">Параметр `value` интерпретируется с использованием соглашений о форматировании, принятых в культуре текущего потока.</span><span class="sxs-lookup"><span data-stu-id="13f48-1751">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="13f48-1752">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.SByte.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-1752">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.SByte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-1753">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-1753">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1754">В следующем примере преобразуется строковые представления <xref:System.SByte> значения `ToSByte` метод, используя форматирование по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="13f48-1754">The following example converts string representations of <xref:System.SByte> values with the `ToSByte` method, using default formatting.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/tosbyte.cpp#4)]
 [!code-csharp[System.Convert.ToSInts_String#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/tosbyte.cs#4)]
 [!code-vb[System.Convert.ToSInts_String#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/tosbyte.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1755"><paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</span><span class="sxs-lookup"><span data-stu-id="13f48-1755"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1756">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.SByte.MinValue" /> или больше <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1756"><paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.SByte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As UShort) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : uint16 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1757">16-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1757">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1758">Преобразует значение заданного 16-битового целого числа без знака в эквивалентное 8-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1758">Converts the value of the specified 16-bit unsigned integer to the equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1759">8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1759">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1760">В следующем примере предпринимается попытка преобразовать каждый элемент массива 16-разрядных целых байт со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1760">The following example attempts to convert each element in an array of unsigned 16-bit integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#11)]
 [!code-vb[System.Convert.ToSByte#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1761">Значение <paramref name="value" /> больше значения <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1761"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As UInteger) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : uint32 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1762">32-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1762">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1763">Преобразует значение заданного 32-битового целого числа без знака в эквивалентное 8-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1763">Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1764">8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1764">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1765">В следующем примере предпринимается попытка преобразовать каждый элемент массива целых чисел байт со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1765">The following example attempts to convert each element in an integer array to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#12)]
 [!code-vb[System.Convert.ToSByte#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1766"><paramref name="value" /> больше <see cref="F:System.SByte.MaxValue" /> или меньше <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1766"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As ULong) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : uint64 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1767">64-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1767">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1768">Преобразует значение заданного 64-битового целого числа без знака в эквивалентное 8-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1768">Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1769">8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1769">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1770">В следующем примере предпринимается попытка преобразовать каждый элемент массива длинных целых чисел байт со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1770">The following example attempts to convert each element in an array of long integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#13)]
 [!code-vb[System.Convert.ToSByte#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1771"><paramref name="value" /> больше <see cref="F:System.SByte.MaxValue" /> или меньше <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1771"><paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Object, provider As IFormatProvider) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToSByte : obj * IFormatProvider -&gt; sbyte" Usage="System.Convert.ToSByte (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1772">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1772">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-1773">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1773">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-1774">Преобразует значение заданного объекта в эквивалентное 8-разрядное знаковое целое число, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-1774">Converts the value of the specified object to an 8-bit signed integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-1775">8-разрядное знаковое целое число, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1775">An 8-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1776">`provider` позволяет пользователю указать сведения о преобразовании региональных содержимое `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1776">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="13f48-1777">Например если `value` — <xref:System.String> представляет число, `provider` должно указать зависящие от культуры сведения о формате для представления этого числа.</span><span class="sxs-lookup"><span data-stu-id="13f48-1777">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="13f48-1778">Базовые типы игнорируют `provider`, однако параметр может быть использован, если `value` является определяемого пользователем типа, который реализует <xref:System.IConvertible> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13f48-1778">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1779">В следующем примере определяется `ByteString` класс, который хранит оба подписанных и неподписанных байтов как шестнадцатеричные строки вместе с полем, которое указывает знак значения байта.</span><span class="sxs-lookup"><span data-stu-id="13f48-1779">The following example defines a `ByteString` class that stores both signed and unsigned bytes as hexadecimal strings along with a field that indicates the sign of the byte.</span></span> <span data-ttu-id="13f48-1780">Класс `ByteString` реализует интерфейс <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1780">The `ByteString` class implements the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="13f48-1781">Его <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> вызовы методов <xref:System.SByte.Parse%28System.String%2CSystem.IFormatProvider%29> метод для выполнения преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1781">Its <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> method calls the <xref:System.SByte.Parse%28System.String%2CSystem.IFormatProvider%29> method to perform the conversion.</span></span> <span data-ttu-id="13f48-1782">Если происходит сбой, он выдает <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1782">If it fails, it throws an <xref:System.OverflowException>.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte2.cs#14)]
 [!code-vb[System.Convert.ToSByte#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte2.vb#14)]  
  
 <span data-ttu-id="13f48-1783">В следующем примере показан как <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> реализация `ByteString` класс вызывается программой <xref:System.Convert.ToSByte%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-1783">The following example shows how the <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> implementation of the `ByteString` class is called by the <xref:System.Convert.ToSByte%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte2.cs#15)]
 [!code-vb[System.Convert.ToSByte#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1784">Параметр <paramref name="value" /> имеет неправильный формат.</span><span class="sxs-lookup"><span data-stu-id="13f48-1784"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1785"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1785"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-1786">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-1786">-or-</span></span> 
<span data-ttu-id="13f48-1787">Преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1787">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1788">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.SByte.MinValue" /> или больше <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1788"><paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As String, provider As IFormatProvider) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToSByte : string * IFormatProvider -&gt; sbyte" Usage="System.Convert.ToSByte (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1789">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1789">A string that contains the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-1790">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1790">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-1791">Преобразует заданное строковое представление числа в эквивалентное 8-битовое целое число со знаком, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-1791">Converts the specified string representation of a number to an equivalent 8-bit signed integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-1792">8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1792">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1793">`provider` — <xref:System.IFormatProvider> экземпляр, который получает <xref:System.Globalization.NumberFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-1793">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="13f48-1794"><xref:System.Globalization.NumberFormatInfo> Предоставляет зависящие от культуры сведения о формате параметра `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1794">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="13f48-1795">Если `provider` — `null`, <xref:System.Globalization.NumberFormatInfo> для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1795">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="13f48-1796">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.SByte.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-1796">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.SByte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-1797">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-1797">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1798">В следующем примере преобразуется строковые представления <xref:System.SByte> значения `ToSByte` метод, с помощью <xref:System.IFormatProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-1798">The following example converts string representations of <xref:System.SByte> values with the `ToSByte` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/tosbyte.cpp#4)]
 [!code-csharp[System.Convert.ToSInts_String#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/tosbyte.cs#4)]
 [!code-vb[System.Convert.ToSInts_String#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/tosbyte.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13f48-1799"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1799"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1800"><paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</span><span class="sxs-lookup"><span data-stu-id="13f48-1800"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1801">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.SByte.MinValue" /> или больше <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1801"><paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.SByte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As String, fromBase As Integer) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToSByte : string * int -&gt; sbyte" Usage="System.Convert.ToSByte (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1802">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1802">A string that contains the number to convert.</span></span></param>
        <param name="fromBase"><span data-ttu-id="13f48-1803">Основание системы счисления, используемой для представления числа, заданного в параметре <paramref name="value" />, равное 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-1803">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="13f48-1804">Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 8-битовое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-1804">Converts the string representation of a number in a specified base to an equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-1805">8-разрядное целое число со знаком, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1805">An 8-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1806">Если `fromBase` 16, можно добавить префикс номера, указанного в `value` параметр с «0 x» или «0 X».</span><span class="sxs-lookup"><span data-stu-id="13f48-1806">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="13f48-1807">Поскольку знак минус не поддерживается для системе счисления с основанием 10 числового представления, <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29> метод предполагает, что отрицательные числа использовать представление дополнение до двух.</span><span class="sxs-lookup"><span data-stu-id="13f48-1807">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two's complement representation.</span></span> <span data-ttu-id="13f48-1808">Другими словами метод всегда интерпретирует старших битов байта (бит 7) как бит знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-1808">In other words, the method always interprets the high-order bit of a byte (bit 7) as its sign bit.</span></span> <span data-ttu-id="13f48-1809">Таким образом, можно написать код, в котором 10 не основной номер, который выходит за пределы диапазона <xref:System.SByte> тип данных преобразуется в <xref:System.SByte> значение метод не выбрасывает исключение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1809">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.SByte> data type is converted to an <xref:System.SByte> value without the method throwing an exception.</span></span> <span data-ttu-id="13f48-1810">В следующем примере выполняется преобразование <xref:System.Byte.MaxValue> шестнадцатеричное строковое представление и затем вызывает <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-1810">The following example converts <xref:System.Byte.MaxValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="13f48-1811">Вместо вызова исключения, метод выводит сообщение «0xff преобразуется в значение -1».</span><span class="sxs-lookup"><span data-stu-id="13f48-1811">Instead of throwing an exception, the method displays the message, "0xff converts to -1."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#9)]
 [!code-vb[System.Convert.BaseConversion#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#9)]  
  
 <span data-ttu-id="13f48-1812">При выполнении двоичных операций или числовых преобразований, это всегда ответственность за разработчика, чтобы убедиться, что метод используется для интерпретации определенного значения подходящее числовое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1812">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="13f48-1813">Как показано в следующем примере, можно гарантировать, что метод правильной обработки переполнения, определяя сначала, представляет ли значение без знака или тип со знаком при его преобразовании в шестнадцатеричное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1813">As the following example illustrates, you can ensure that the method handles overflows appropriately by first determining whether a value represents an unsigned or a signed type when converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="13f48-1814">Создания исключения, если исходное значение: тип без знака, но преобразование обратно в байт со знаком дает значение битом знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-1814">Throw an exception if the original value was an unsigned type but the conversion back to a signed byte yields a value whose sign bit is on.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#10)]
 [!code-vb[System.Convert.BaseConversion#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#10)]  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1815">В следующем примере предпринимается интерпретации элементов в массиве строк как двоичный, восьмеричный и шестнадцатеричным представлением числовых значений для преобразования их в байтов без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-1815">The following example attempts to interpret the elements in a string array as the binary, octal, and hexadecimal representation of numeric values in order to convert them to unsigned bytes.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte3.cs#16)]
 [!code-vb[System.Convert.ToSByte#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="13f48-1816"><paramref name="fromBase" /> не равно 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-1816"><paramref name="fromBase" /> is not 2, 8, 10, or 16.</span></span>  
  
<span data-ttu-id="13f48-1817">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-1817">-or-</span></span> 
 <span data-ttu-id="13f48-1818">Значению <paramref name="value" />, представляющему недесятичное число со знаком, предшествует отрицательный знак.</span><span class="sxs-lookup"><span data-stu-id="13f48-1818"><paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="13f48-1819"><paramref name="value" /> — <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1819"><paramref name="value" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1820"><paramref name="value" /> содержит символ, который не является допустимой цифрой в основании, заданном параметром <paramref name="fromBase" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1820"><paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span></span> <span data-ttu-id="13f48-1821">Сообщение об исключении указывает, что отсутствуют цифры для преобразования, если первый символ в <paramref name="value" /> недопустим; в противном случае сообщение указывает, что <paramref name="value" /> содержит недопустимые конечные символы.</span><span class="sxs-lookup"><span data-stu-id="13f48-1821">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1822">Значению <paramref name="value" />, представляющему недесятичное число со знаком, предшествует отрицательный знак.</span><span class="sxs-lookup"><span data-stu-id="13f48-1822"><paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span></span>  
  
<span data-ttu-id="13f48-1823">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-1823">-or-</span></span> 
 <span data-ttu-id="13f48-1824">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.SByte.MinValue" /> или больше <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1824"><paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSingle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13f48-1825">Преобразует заданное значение в число с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1825">Converts a specified value to a single-precision floating-point number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Boolean) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(bool value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : bool -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1826">Логическое значение, которое необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1826">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1827">Преобразует заданное логическое значение в эквивалентное число с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1827">Converts the specified Boolean value to the equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1828">Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</span><span class="sxs-lookup"><span data-stu-id="13f48-1828">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1829">В следующем примере преобразование логических значений `true` и `false` для <xref:System.Single> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-1829">The following example converts the Boolean values `true` and `false` to <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#1)]
 [!code-vb[System.Convert.ToSingle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Byte) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : byte -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1830">8-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1830">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1831">Преобразует значение заданного 8-битового целого числа без знака в эквивалентное число с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1831">Converts the value of the specified 8-bit unsigned integer to the equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1832">Число с плавающей запятой одиночной точности, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1832">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1833">В следующем примере преобразуется каждого элемента в массив байтовых значений, которые <xref:System.Single> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1833">The following example converts each element in an array of byte values to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#2)]
 [!code-vb[System.Convert.ToSingle#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Char) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(char value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : char -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1834">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1834">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1835">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1835">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-1836">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1836">This conversion is not supported.</span></span> <span data-ttu-id="13f48-1837">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-1837">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1838">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1838">This conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As DateTime) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : DateTime -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1839">Значение даты и времени для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1839">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1840">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1840">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-1841">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1841">This conversion is not supported.</span></span> <span data-ttu-id="13f48-1842">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-1842">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1843">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1843">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Decimal) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : decimal -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1844">Десятичное число для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1844">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1845">Преобразует значение заданного десятичного числа в эквивалентное число с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1845">Converts the value of the specified decimal number to an equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1846">Число с плавающей запятой одиночной точности, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1846">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="13f48-1847">Значение <paramref name="value" /> округляется до ближайшего числа.</span><span class="sxs-lookup"><span data-stu-id="13f48-1847"><paramref name="value" /> is rounded using rounding to nearest.</span></span> <span data-ttu-id="13f48-1848">Например, при округлении до второго знака после десятичной запятой значение 2,345 преобразуется в 2,34, а значение 2,355 — в 2,36.</span><span class="sxs-lookup"><span data-stu-id="13f48-1848">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1849">В следующем примере преобразуется каждого элемента в массиве <xref:System.Decimal> значения <xref:System.Single> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1849">The following example converts each element in an array of <xref:System.Decimal> values to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#3)]
 [!code-vb[System.Convert.ToSingle#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Double) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(double value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : double -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1850">Число с плавающей запятой двойной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1850">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1851">Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное число с плавающей запятой двойной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1851">Converts the value of the specified double-precision floating-point number to an equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1852">Число с плавающей запятой одиночной точности, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1852">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="13f48-1853">Значение <paramref name="value" /> округляется до ближайшего числа.</span><span class="sxs-lookup"><span data-stu-id="13f48-1853"><paramref name="value" /> is rounded using rounding to nearest.</span></span> <span data-ttu-id="13f48-1854">Например, при округлении до второго знака после десятичной запятой значение 2,345 преобразуется в 2,34, а значение 2,355 — в 2,36.</span><span class="sxs-lookup"><span data-stu-id="13f48-1854">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1855">В следующем примере преобразуется каждого элемента в массиве <xref:System.Double> значения <xref:System.Single> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1855">The following example converts each element in an array of <xref:System.Double> values to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#4)]
 [!code-vb[System.Convert.ToSingle#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Short) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(short value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : int16 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1856">16-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1856">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1857">Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное число с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1857">Converts the value of the specified 16-bit signed integer to an equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1858">Число с плавающей запятой одиночной точности, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1858">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1859">В следующем примере преобразуется каждого элемента в массив 16-разрядных целых чисел <xref:System.Single> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1859">The following example converts each element in an array of 16-bit integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#5)]
 [!code-vb[System.Convert.ToSingle#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(int value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : int -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1860">32-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1860">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1861">Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное число с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1861">Converts the value of the specified 32-bit signed integer to an equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1862">Число с плавающей запятой одиночной точности, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1862">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1863">В следующем примере преобразуется каждый элемент массива целых чисел для <xref:System.Single> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1863">The following example converts each element in an integer array to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#6)]
 [!code-vb[System.Convert.ToSingle#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Long) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(long value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : int64 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1864">64-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1864">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1865">Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное число с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1865">Converts the value of the specified 64-bit signed integer to an equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1866">Число с плавающей запятой одиночной точности, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1866">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1867">В следующем примере преобразуется каждый элемент массива длинных целых чисел для <xref:System.Single> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1867">The following example converts each element in an array of long integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#7)]
 [!code-vb[System.Convert.ToSingle#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Object) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : obj -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1868">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1868">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="13f48-1869">Преобразует значение заданного объекта в число с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1869">Converts the value of the specified object to a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1870">Число с плавающей запятой одиночной точности, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1870">A single-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1871">Возвращает значение, в результате вызова <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> метод базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1871">The return value is the result of invoking the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1872">В следующем примере предпринимается попытка преобразовать каждый элемент в массиве объектов для <xref:System.Single> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1872">The following example attempts to convert each element in an object array to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#8)]
 [!code-vb[System.Convert.ToSingle#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1873">Параметр <paramref name="value" /> имеет неправильный формат.</span><span class="sxs-lookup"><span data-stu-id="13f48-1873"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1874"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1874"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-1875">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-1875">-or-</span></span> 
<span data-ttu-id="13f48-1876">Преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-1876">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1877">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Single.MinValue" /> или больше <see cref="F:System.Single.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1877"><paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As SByte) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : sbyte -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1878">8-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1878">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1879">Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное число с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1879">Converts the value of the specified 8-bit signed integer to the equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1880">8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1880">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1881">В следующем примере преобразуется каждого элемента в массиве байт со знаком для <xref:System.Single> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1881">The following example converts each element in a signed byte array to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#9)]
 [!code-vb[System.Convert.ToSingle#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(float value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : single -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1882">Возвращаемое число с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1882">The single-precision floating-point number to return.</span></span></param>
        <summary><span data-ttu-id="13f48-1883">Возвращает заданное число с плавающей запятой одиночной точности; фактическое преобразование не производится.</span><span class="sxs-lookup"><span data-stu-id="13f48-1883">Returns the specified single-precision floating-point number; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="13f48-1884"><paramref name="value" /> возвращается без изменений.</span><span class="sxs-lookup"><span data-stu-id="13f48-1884"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As String) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : string -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1885">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1885">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1886">Преобразует заданное строковое представление числа в эквивалентное число с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1886">Converts the specified string representation of a number to an equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1887">Число с плавающей запятой одиночной точности, эквивалентное числу <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1887">A single-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1888">С помощью <xref:System.Convert.ToSingle%28System.String%29> метод эквивалентна передаче `value` для <xref:System.Single.Parse%28System.String%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-1888">Using the <xref:System.Convert.ToSingle%28System.String%29> method is equivalent to passing `value` to the <xref:System.Single.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="13f48-1889">Параметр `value` интерпретируется с использованием соглашений о форматировании, принятых в культуре текущего потока.</span><span class="sxs-lookup"><span data-stu-id="13f48-1889">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="13f48-1890">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.Single.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-1890">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Single.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-1891">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-1891">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1892">В следующем примере предпринимается попытка преобразовать каждый элемент массива числовых строк для <xref:System.Single> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1892">The following example attempts to convert each element in an array of numeric strings to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#10)]
 [!code-vb[System.Convert.ToSingle#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1893"><paramref name="value" /> не является числом в допустимом формате.</span><span class="sxs-lookup"><span data-stu-id="13f48-1893"><paramref name="value" /> is not a number in a valid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1894">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Single.MinValue" /> или больше <see cref="F:System.Single.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1894"><paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As UShort) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : uint16 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1895">16-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1895">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1896">Преобразует значение заданного 16-битового целого числа без знака в эквивалентное число с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1896">Converts the value of the specified 16-bit unsigned integer to the equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1897">Число с плавающей запятой одиночной точности, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1897">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1898">В следующем примере преобразуется каждого элемента в массив целых чисел без знака 16-разрядное <xref:System.Single> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1898">The following example converts each element in an array of unsigned 16-bit integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#11)]
 [!code-vb[System.Convert.ToSingle#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As UInteger) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : uint32 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1899">32-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1899">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1900">Преобразует значение заданного 32-битового целого числа без знака в эквивалентное число с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1900">Converts the value of the specified 32-bit unsigned integer to an equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1901">Число с плавающей запятой одиночной точности, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1901">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1902">В следующем примере преобразуется каждого элемента в массив целых чисел без знака <xref:System.Single> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1902">The following example converts each element in an array of unsigned integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#12)]
 [!code-vb[System.Convert.ToSingle#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As ULong) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : uint64 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1903">64-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1903">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1904">Преобразует значение заданного 64-битового целого числа без знака в эквивалентное число с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="13f48-1904">Converts the value of the specified 64-bit unsigned integer to an equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="13f48-1905">Число с плавающей запятой одиночной точности, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1905">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-1906">В следующем примере преобразуется каждого элемента в массив длинных целых чисел без знака <xref:System.Single> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1906">The following example converts each element in an array of unsigned long integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#13)]
 [!code-vb[System.Convert.ToSingle#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Object, provider As IFormatProvider) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToSingle : obj * IFormatProvider -&gt; single" Usage="System.Convert.ToSingle (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1907">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1907">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-1908">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1908">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-1909">Преобразует значение заданного объекта в число с плавающей запятой одиночной точности, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-1909">Converts the value of the specified object to an single-precision floating-point number, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-1910">Число с плавающей запятой одиночной точности, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1910">A single-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1911">Возвращает значение, в результате вызова <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> метод базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1911">The return value is the result of invoking the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="13f48-1912">`provider` позволяет пользователю указать сведения о преобразовании региональных содержимое `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1912">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="13f48-1913">Например если `value` — <xref:System.String> представляет число, `provider` должно указать зависящие от культуры сведения о формате для представления этого числа.</span><span class="sxs-lookup"><span data-stu-id="13f48-1913">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="13f48-1914">Базовые типы игнорируют `provider`, однако параметр может быть использован, если `value` является определяемого пользователем типа, который реализует <xref:System.IConvertible> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13f48-1914">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1915">В следующем примере определяется класс `Temperature` , реализующий интерфейс <xref:System.IConvertible> .</span><span class="sxs-lookup"><span data-stu-id="13f48-1915">The following example defines a `Temperature` class that implements the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="13f48-1916">Его реализация <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> метод возвращает внутреннее значение private <xref:System.Single> переменной, представляющей температуры.</span><span class="sxs-lookup"><span data-stu-id="13f48-1916">Its implementation of the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> method returns the internal value of a private <xref:System.Single> variable that represents the temperature.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle2.cs#14)]
 [!code-vb[System.Convert.ToSingle#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle2.vb#14)]  
  
 <span data-ttu-id="13f48-1917">В следующем примере показано, как вызов <xref:System.Convert.ToSingle%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод, в свою очередь, вызывает <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> реализация `Temperature` класса.</span><span class="sxs-lookup"><span data-stu-id="13f48-1917">The following example illustrates how a call to the <xref:System.Convert.ToSingle%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method, in turn, calls the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> implementation of the `Temperature` class.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle2.cs#15)]
 [!code-vb[System.Convert.ToSingle#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1918">Параметр <paramref name="value" /> имеет неправильный формат.</span><span class="sxs-lookup"><span data-stu-id="13f48-1918"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-1919"><paramref name="value" /> не реализует <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1919"><paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1920">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Single.MinValue" /> или больше <see cref="F:System.Single.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1920"><paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As String, provider As IFormatProvider) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToSingle : string * IFormatProvider -&gt; single" Usage="System.Convert.ToSingle (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1921">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-1921">A string that contains the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-1922">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1922">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-1923">Преобразует заданное строковое представление числа в эквивалентное число с плавающей запятой одиночной точности, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-1923">Converts the specified string representation of a number to an equivalent single-precision floating-point number, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-1924">Число с плавающей запятой одиночной точности, эквивалентное числу <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1924">A single-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1925">Возвращает значение, в результате вызова <xref:System.Single.Parse%2A?displayProperty=nameWithType> метод `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1925">The return value is the result of invoking the <xref:System.Single.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="13f48-1926">`provider` — <xref:System.IFormatProvider> экземпляр, который получает <xref:System.Globalization.NumberFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-1926">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="13f48-1927"><xref:System.Globalization.NumberFormatInfo> Предоставляет зависящие от культуры сведения о формате параметра `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1927">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="13f48-1928">Если `provider` — `null`, <xref:System.Globalization.NumberFormatInfo> для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-1928">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="13f48-1929">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.Single.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-1929">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Single.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-1930">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-1930">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1931">В следующем примере используется <xref:System.IFormatProvider> объекты, представляющие языков и региональных параметров en US и fr-FR, при преобразовании элементов в массиве из числовых строк для <xref:System.Single> значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-1931">The following example uses <xref:System.IFormatProvider> objects that represent the en-US and fr-FR cultures when it converts the elements in an array of numeric strings to <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle3.cs#16)]
 [!code-vb[System.Convert.ToSingle#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-1932"><paramref name="value" /> не является числом в допустимом формате.</span><span class="sxs-lookup"><span data-stu-id="13f48-1932"><paramref name="value" /> is not a number in a valid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-1933">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Single.MinValue" /> или больше <see cref="F:System.Single.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1933"><paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13f48-1934">Преобразует указанное значение в его эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1934">Converts the specified value to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(bool value);" />
      <MemberSignature Language="F#" Value="static member ToString : bool -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1935">Логическое значение, которое необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1935">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1936">Преобразует указанное логическое значение в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1936">Converts the specified Boolean value to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="13f48-1937">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1937">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1938">Эта реализация идентична <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1938">This implementation is identical to <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="13f48-1939">Он возвращает <xref:System.Boolean.TrueString?displayProperty=nameWithType> для `true` значения и <xref:System.Boolean.FalseString?displayProperty=nameWithType> для `false` значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-1939">It returns <xref:System.Boolean.TrueString?displayProperty=nameWithType> for `true` values and <xref:System.Boolean.FalseString?displayProperty=nameWithType> for `false` values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1940">В следующем примере показано преобразование <xref:System.Boolean> для <xref:System.String>, с использованием `ToString`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1940">The following example illustrates the conversion of a <xref:System.Boolean> to a <xref:System.String>, using `ToString`.</span></span> <span data-ttu-id="13f48-1941">Он также показывает, что строка, возвращаемая при преобразовании равно либо <xref:System.Boolean.TrueString?displayProperty=nameWithType> или <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1941">It also illustrates that the string returned by the conversion equals either <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Convert.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString/cs/ToString_Bool1.cs#1)]
 [!code-vb[System.Convert.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString/vb/ToString_Bool1.vb#1)]  
 [!code-fsharp[System.Convert.ToString#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.Convert.ToString/fs/ToString_Bool1.fs#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToString : byte -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1942">8-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1942">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1943">Преобразует значение заданного 8-битового целого числа без знака в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1943">Converts the value of the specified 8-bit unsigned integer to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="13f48-1944">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1944">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1945">Эта реализация идентична <xref:System.Byte.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1945">This implementation is identical to <xref:System.Byte.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1946">В следующем примере преобразуется каждого значения в <xref:System.Byte> массива в строку.</span><span class="sxs-lookup"><span data-stu-id="13f48-1946">The following example converts each value in a <xref:System.Byte> array to a string.</span></span>  
  
 [!code-csharp[System.Convert.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString/cs/ToString.Byte1.cs#3)]
 [!code-vb[System.Convert.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString/vb/ToString.Byte1.vb#3)]
 [!code-fsharp[System.Convert.ToString#3](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.Convert.ToString/fs/ToString_Byte1.fs#3)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char value);" />
      <MemberSignature Language="F#" Value="static member ToString : char -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1947">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1947">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1948">Преобразует значение заданного знака Юникода в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1948">Converts the value of the specified Unicode character to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="13f48-1949">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1949">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1950">Эта реализация идентична <xref:System.Char.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1950">This implementation is identical to <xref:System.Char.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1951">В следующем примере выполняется преобразование <xref:System.Char> для <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1951">The following example converts a <xref:System.Char> to a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#14)]
 [!code-csharp[System.Convert Snippets#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#14)]
 [!code-vb[System.Convert Snippets#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToString : DateTime -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1952">Значение даты и времени для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1952">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1953">Преобразует значение заданного объекта <see cref="T:System.DateTime" /> в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1953">Converts the value of the specified <see cref="T:System.DateTime" /> to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="13f48-1954">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1954">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1955">Эта реализация идентична <xref:System.DateTime.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1955">This implementation is identical to <xref:System.DateTime.ToString?displayProperty=nameWithType>.</span></span> <span data-ttu-id="13f48-1956">Соглашения о форматировании текущего языка и региональных параметров и описатель формата «G» используется для преобразования <xref:System.DateTime> значение в строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1956">It uses the formatting conventions of the current culture and the "G" format specifier to convert a <xref:System.DateTime> value to its string representation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1957">В следующем примере преобразуется каждого элемента в массиве <xref:System.DateTime> значение <xref:System.String> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-1957">The following example converts each element in an array of a <xref:System.DateTime> value to a <xref:System.String> value.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#1)]
 [!code-vb[System.Convert.ToString2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Decimal) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToString : decimal -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1958">Десятичное число для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1958">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1959">Преобразует значение заданного десятичного числа в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1959">Converts the value of the specified decimal number to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="13f48-1960">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1960">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1961">Эта реализация идентична <xref:System.Decimal.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1961">This implementation is identical to <xref:System.Decimal.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1962">В следующем примере выполняется преобразование <xref:System.Decimal> для <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1962">The following example converts a <xref:System.Decimal> to a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#15)]
 [!code-csharp[System.Convert Snippets#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#15)]
 [!code-vb[System.Convert Snippets#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(double value);" />
      <MemberSignature Language="F#" Value="static member ToString : double -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1963">Число с плавающей запятой двойной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1963">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1964">Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1964">Converts the value of the specified double-precision floating-point number to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="13f48-1965">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1965">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1966">Эта реализация идентична <xref:System.Double.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1966">This implementation is identical to <xref:System.Double.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1967">В следующем примере выполняется преобразование <xref:System.Double> для <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1967">The following example converts a <xref:System.Double> to a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#7)]
 [!code-csharp[System.Convert Snippets#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#7)]
 [!code-vb[System.Convert Snippets#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value);" />
      <MemberSignature Language="F#" Value="static member ToString : int16 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1968">16-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1968">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1969">Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1969">Converts the value of the specified 16-bit signed integer to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="13f48-1970">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1970">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1971">Эта реализация идентична <xref:System.Int16.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1971">This implementation is identical to <xref:System.Int16.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1972">Следующий пример преобразует каждый элемент массива 16-разрядных целых чисел в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1972">The following example converts each element in an array of 16-bit integers to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#2)]
 [!code-vb[System.Convert.ToString2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value);" />
      <MemberSignature Language="F#" Value="static member ToString : int -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1973">32-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1973">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1974">Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1974">Converts the value of the specified 32-bit signed integer to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="13f48-1975">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1975">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1976">Эта реализация идентична <xref:System.Int32.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1976">This implementation is identical to <xref:System.Int32.ToString?displayProperty=nameWithType>.</span></span> <span data-ttu-id="13f48-1977">Он форматирует `value` с помощью соглашений о форматировании языка и региональных параметров текущего потока.</span><span class="sxs-lookup"><span data-stu-id="13f48-1977">It formats `value` by using the formatting conventions of the current thread culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1978">В следующем примере сравниваются <xref:System.Convert.ToString%28System.Int32%29> метод с <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-1978">The following example compares the <xref:System.Convert.ToString%28System.Int32%29> method with the <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="13f48-1979">Он определяет пользовательский <xref:System.Globalization.NumberFormatInfo> объект, который использует проверяемого «минус» для представления отрицательный знак.</span><span class="sxs-lookup"><span data-stu-id="13f48-1979">It defines a custom <xref:System.Globalization.NumberFormatInfo> object that uses the sting "minus" to represent the negative sign.</span></span> <span data-ttu-id="13f48-1980">Он преобразует каждый элемент массива целых чисел в эквивалентное строковое представление с помощью форматирования по умолчанию (соглашения о форматировании текущего языка и региональных параметров) и поставщик настраиваемого формата.</span><span class="sxs-lookup"><span data-stu-id="13f48-1980">It converts each element in an integer array to its equivalent string representation using default formatting (the formatting conventions of the current culture) and the custom format provider.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring7.cs#27)]
 [!code-vb[System.Convert.ToString2#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring7.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value);" />
      <MemberSignature Language="F#" Value="static member ToString : int64 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1981">64-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1981">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1982">Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1982">Converts the value of the specified 64-bit signed integer to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="13f48-1983">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1983">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1984">Эта реализация идентична <xref:System.Int64.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1984">This implementation is identical to <xref:System.Int64.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1985">Следующий пример преобразует каждый элемент массива длинного целого числа в эквивалентное ему строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1985">The following example converts each element in a long integer array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring6.cs#28)]
 [!code-vb[System.Convert.ToString2#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring6.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToString : obj -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1986">Объект, содержащий значение для преобразования, или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1986">An object that supplies the value to convert, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="13f48-1987">Преобразует значение заданного объекта в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1987">Converts the value of the specified object to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="13f48-1988">Строковое представление имеет значение <paramref name="value" /> или <see cref="F:System.String.Empty" />, если значение параметра <paramref name="value" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1988">The string representation of <paramref name="value" />, or <see cref="F:System.String.Empty" /> if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1989">Для преобразования `value` в строковое представление, метод пытается вызвать <xref:System.IConvertible.ToString%2A?displayProperty=nameWithType> реализацию `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1989">To convert `value` to its string representation, the method tries to call the <xref:System.IConvertible.ToString%2A?displayProperty=nameWithType> implementation of `value`.</span></span> <span data-ttu-id="13f48-1990">Если `value` не реализует <xref:System.IConvertible> интерфейс, метод пытается вызвать <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> реализацию `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1990">If `value` does not implement the <xref:System.IConvertible> interface, the method tries to call the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation of `value`.</span></span> <span data-ttu-id="13f48-1991">Если значение не реализует <xref:System.IFormattable> интерфейс, этот метод вызывает `ToString` метод базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-1991">If value does not implement the <xref:System.IFormattable> interface, the method calls the `ToString` method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1992">Следующий пример каждый элемент в массиве объектов преобразуется в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1992">The following example converts each element in an object array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#3)]
 [!code-vb[System.Convert.ToString2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As SByte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToString : sbyte -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1993">8-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-1993">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1994">Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1994">Converts the value of the specified 8-bit signed integer to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="13f48-1995">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-1995">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-1996">Эта реализация идентична <xref:System.SByte.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-1996">This implementation is identical to <xref:System.SByte.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-1997">Следующий пример преобразует каждый элемент массива байт со знаком в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1997">The following example converts each element in a signed byte array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#4)]
 [!code-vb[System.Convert.ToString2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Single) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(float value);" />
      <MemberSignature Language="F#" Value="static member ToString : single -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-1998">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-1998">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-1999">Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-1999">Converts the value of the specified single-precision floating-point number to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="13f48-2000">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2000">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2001">Эта реализация идентична <xref:System.Single.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2001">This implementation is identical to <xref:System.Single.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2002">В следующем примере преобразуется каждого элемента в массиве <xref:System.Single> значения в эквивалентное ему строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2002">The following example converts each element in an array of <xref:System.Single> values to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#5)]
 [!code-vb[System.Convert.ToString2#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToString : string -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2003">Возвращаемая строка.</span><span class="sxs-lookup"><span data-stu-id="13f48-2003">The string to return.</span></span></param>
        <summary><span data-ttu-id="13f48-2004">Возвращает заданное строковое представление; фактическое преобразование не производится.</span><span class="sxs-lookup"><span data-stu-id="13f48-2004">Returns the specified string instance; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="13f48-2005"><paramref name="value" /> возвращается без изменений.</span><span class="sxs-lookup"><span data-stu-id="13f48-2005"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2006">В следующем примере передается строка, <xref:System.Convert.ToString%28System.String%29> метода и вызывает <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> метод, чтобы убедиться, что этот метод возвращает исходную строку.</span><span class="sxs-lookup"><span data-stu-id="13f48-2006">The following example passes a string to the <xref:System.Convert.ToString%28System.String%29> method and calls the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to confirm that the method returns the original string.</span></span> <span data-ttu-id="13f48-2007">В примере также вызывается <xref:System.String.IsInterned%2A?displayProperty=nameWithType> метод, чтобы гарантировать, что две строки не идентичны, так как уже интернировано исходную строку.</span><span class="sxs-lookup"><span data-stu-id="13f48-2007">The example also calls the <xref:System.String.IsInterned%2A?displayProperty=nameWithType> method to ensure that the two strings are not identical because the original string is interned.</span></span>  
  
 [!code-csharp[System.Convert.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString/cs/tostring_string1.cs#2)]
 [!code-vb[System.Convert.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString/vb/tostring_string1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UShort) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToString : uint16 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2008">16-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2008">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2009">Преобразует значение заданного 16-битового целого числа без знака в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2009">Converts the value of the specified 16-bit unsigned integer to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="13f48-2010">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2010">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2011">Эта реализация идентична <xref:System.UInt16.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2011">This implementation is identical to <xref:System.UInt16.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2012">Следующий пример преобразует каждый элемент массива 16-разрядных целочисленных значений без знака в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2012">The following example converts each element in an array of unsigned 16-bit integer values to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#6)]
 [!code-vb[System.Convert.ToString2#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UInteger) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToString : uint32 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2013">32-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2013">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2014">Преобразует значение заданного 32-битового целого числа без знака в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2014">Converts the value of the specified 32-bit unsigned integer to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="13f48-2015">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2015">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2016">Эта реализация идентична <xref:System.UInt32.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2016">This implementation is identical to <xref:System.UInt32.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2017">Следующий пример преобразует каждый элемент массива целых чисел без знака в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2017">The following example converts each element in an unsigned integer array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#7)]
 [!code-vb[System.Convert.ToString2#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As ULong) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToString : uint64 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2018">64-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2018">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2019">Преобразует значение заданного 64-битового целого числа без знака в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2019">Converts the value of the specified 64-bit unsigned integer to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="13f48-2020">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2020">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2021">Эта реализация идентична <xref:System.UInt64.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2021">This implementation is identical to <xref:System.UInt64.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2022">Следующий пример преобразует каждый элемент массива длинное целое без знака в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2022">The following example converts each element in an unsigned long integer array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#8)]
 [!code-vb[System.Convert.ToString2#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (bool value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(bool value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Boolean, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(bool value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : bool * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2023">Логическое значение, которое необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-2023">The Boolean value to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2024">Экземпляр объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-2024">An instance of an object.</span></span> <span data-ttu-id="13f48-2025">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="13f48-2025">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="13f48-2026">Преобразует указанное логическое значение в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2026">Converts the specified Boolean value to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="13f48-2027">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2027">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2028">Эта реализация идентична <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2028">This implementation is identical to <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="13f48-2029">Он возвращает <xref:System.Boolean.TrueString?displayProperty=nameWithType> для `true` значения и <xref:System.Boolean.FalseString?displayProperty=nameWithType> для `false` значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-2029">It returns <xref:System.Boolean.TrueString?displayProperty=nameWithType> for `true` values and <xref:System.Boolean.FalseString?displayProperty=nameWithType> for `false` values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2030">В следующем примере выполняется преобразование <xref:System.Boolean> значение <xref:System.String> с `ToString` метод, с помощью <xref:System.IFormatProvider> объекта, который отображает тип поставщика формата, для которого он вызывается.</span><span class="sxs-lookup"><span data-stu-id="13f48-2030">The following example converts a <xref:System.Boolean> value to a <xref:System.String> with the `ToString` method, using an <xref:System.IFormatProvider> object that displays the type of the format provider for which it is called.</span></span> <span data-ttu-id="13f48-2031">Пример показывает, что <xref:System.IFormatProvider> не ссылка на объект.</span><span class="sxs-lookup"><span data-stu-id="13f48-2031">The example shows that the <xref:System.IFormatProvider> object is not referenced.</span></span>  
  
 [!code-cpp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CPP/nonnumeric.cpp#2)]
 [!code-csharp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CS/nonnumeric.cs#2)]
 [!code-vb[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/VB/nonnumeric.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Byte,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : byte * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2032">8-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2032">The 8-bit unsigned integer to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2033">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2033">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-2034">Преобразует значение заданного 8-битового целого числа без знака в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-2034">Converts the value of the specified 8-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-2035">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2035">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2036">Эта реализация идентична <xref:System.Byte.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2036">This implementation is identical to <xref:System.Byte.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2037">Следующий пример преобразует каждый элемент массива байтов без знака в эквивалентное строковое представление с использованием соглашений о форматировании языков и региональных параметров en US и fr-FR.</span><span class="sxs-lookup"><span data-stu-id="13f48-2037">The following example converts each element in an unsigned byte array to its equivalent string representation using the formatting conventions of the en-US and fr-FR cultures.</span></span> <span data-ttu-id="13f48-2038">Так как описатель «G» по умолчанию выводит только десятичные цифры в строковом представлении байтовое значение, `provider` параметр не влияет на форматирование возвращаемой строки.</span><span class="sxs-lookup"><span data-stu-id="13f48-2038">Because the "G" specifier by default outputs only decimal digits in a byte value's string representation, the `provider` parameter does not affect the formatting of the returned string.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#16)]
 [!code-vb[System.Convert.ToString2#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Byte,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value, int toBase);" />
      <MemberSignature Language="F#" Value="static member ToString : byte * int -&gt; string" Usage="System.Convert.ToString (value, toBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2039">8-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2039">The 8-bit unsigned integer to convert.</span></span></param>
        <param name="toBase"><span data-ttu-id="13f48-2040">Основание системы счисления возвращаемого значения, равное 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-2040">The base of the return value, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="13f48-2041">Преобразует значение заданного 8-битового целого числа без знака в эквивалентное строковое представление в указанной системе счисления.</span><span class="sxs-lookup"><span data-stu-id="13f48-2041">Converts the value of an 8-bit unsigned integer to its equivalent string representation in a specified base.</span></span></summary>
        <returns><span data-ttu-id="13f48-2042">Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="toBase" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2042">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2043">Если `toBase` не равно 10, строка, которая возвращается методом <xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29?displayProperty=nameWithType> представляет метод `value` , только его величина.</span><span class="sxs-lookup"><span data-stu-id="13f48-2043">If `toBase` does not equal 10, the string that is returned by the <xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29?displayProperty=nameWithType> method represents `value` by its magnitude only.</span></span> <span data-ttu-id="13f48-2044">Если метод вызывается для создания строки, позже будет преобразована обратно в число, соответствующий метод, который предполагает только величины числовое представление должен вызываться для выполнения преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2044">If the method is called to create a string that will later be converted back to a number, a corresponding method that assumes a magnitude-only numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="13f48-2045">Такие методы включают <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> или <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2045">Such methods include <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> or <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2046">Следующий пример преобразует каждый элемент в массив байтов в эквивалентное ему двоичное, шестнадцатеричное, десятичное и шестнадцатеричное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2046">The following example converts each element in a byte array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#9)]
 [!code-vb[System.Convert.ToString2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#9)]
 [!code-fsharp[System.Convert.ToString2#9](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="13f48-2047"><paramref name="toBase" /> не равно 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-2047"><paramref name="toBase" /> is not 2, 8, 10, or 16.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Char,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Char, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : char * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2048">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-2048">The Unicode character to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2049">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2049">An object that supplies culture-specific formatting information.</span></span> <span data-ttu-id="13f48-2050">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="13f48-2050">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="13f48-2051">Преобразует значение заданного знака Юникода в эквивалентное строковое представление, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-2051">Converts the value of the specified Unicode character to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-2052">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2052">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2053">Эта реализация идентична <xref:System.Char.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2053">This implementation is identical to <xref:System.Char.ToString?displayProperty=nameWithType>.</span></span> <span data-ttu-id="13f48-2054">`provider` Параметр учитывается.</span><span class="sxs-lookup"><span data-stu-id="13f48-2054">The `provider` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2055">В следующем примере выполняется преобразование <xref:System.Char> значение <xref:System.String> с `ToString` метод, с помощью <xref:System.IFormatProvider> объекта, который отображает тип поставщика формата, для которого он вызывается.</span><span class="sxs-lookup"><span data-stu-id="13f48-2055">The following example converts a <xref:System.Char> value to a <xref:System.String> with the `ToString` method, using an <xref:System.IFormatProvider> object that displays the type of the format provider for which it is called.</span></span> <span data-ttu-id="13f48-2056">Пример показывает, что <xref:System.IFormatProvider> не ссылка на объект.</span><span class="sxs-lookup"><span data-stu-id="13f48-2056">The example shows that the <xref:System.IFormatProvider> object is not referenced.</span></span>  
  
 [!code-cpp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CPP/nonnumeric.cpp#2)]
 [!code-csharp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CS/nonnumeric.cs#2)]
 [!code-vb[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/VB/nonnumeric.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.DateTime,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : DateTime * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2057">Значение даты и времени для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2057">The date and time value to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2058">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2058">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-2059">Преобразует значение заданного объекта <see cref="T:System.DateTime" /> в эквивалентное строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2059">Converts the value of the specified <see cref="T:System.DateTime" /> to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-2060">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2060">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2061">Эта реализация идентична <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2061">This implementation is identical to <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2062">В следующем примере выполняется преобразование <xref:System.DateTime> значение в эквивалентное ему строковое представление в восемь разных языков и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2062">The following example converts a <xref:System.DateTime> value to its equivalent string representation in eight different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#13)]
 [!code-vb[System.Convert.ToString2#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (decimal value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Decimal value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Decimal,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Decimal, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Decimal value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : decimal * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2063">Десятичное число для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2063">The decimal number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2064">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2064">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-2065">Преобразует значение заданного десятичного числа в эквивалентное строковое представление, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-2065">Converts the value of the specified decimal number to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-2066">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2066">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2067">Эта реализация идентична <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2067">This implementation is identical to <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2068">В следующем примере преобразуется каждого элемента в массиве <xref:System.Decimal> значения в эквивалентное ему строковое представление в четырех разных языков и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2068">The following example converts each element in an array of <xref:System.Decimal> values to its equivalent string representation in four different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#14)]
 [!code-vb[System.Convert.ToString2#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (double value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float64 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Double,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Double, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(double value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : double * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2069">Число с плавающей запятой двойной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-2069">The double-precision floating-point number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2070">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2070">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-2071">Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2071">Converts the value of the specified double-precision floating-point number to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="13f48-2072">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2072">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2073">Эта реализация идентична <xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="13f48-2073">This implementation is identical to <xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2074">В следующем примере преобразуется каждого элемента в массиве <xref:System.Double> значения в эквивалентное ему строковое представление в четырех разных языков и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2074">The following example converts each element in an array of <xref:System.Double> values to its equivalent string representation in four different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#15)]
 [!code-vb[System.Convert.ToString2#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int16,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : int16 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2075">16-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2075">The 16-bit signed integer to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2076">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2076">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-2077">Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-2077">Converts the value of the specified 16-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-2078">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2078">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2079">Эта реализация идентична <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2079">This implementation is identical to <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2080">В следующем примере определяется пользовательский <xref:System.Globalization.NumberFormatInfo> класс, определяющий его отрицательный знак как строку «~ «и его положительного знака в строку»!».</span><span class="sxs-lookup"><span data-stu-id="13f48-2080">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="13f48-2081">Затем он вызывает <xref:System.Convert.ToString%28System.Int16%2CSystem.IFormatProvider%29> метод для преобразования каждого элемента в массив 16-разрядных целых чисел в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2081">It then calls the <xref:System.Convert.ToString%28System.Int16%2CSystem.IFormatProvider%29> method to convert each element in an array of 16-bit integers to its equivalent string representation.</span></span> <span data-ttu-id="13f48-2082">Преобразование использует инвариантный язык и региональные параметры, а также пользовательский <xref:System.Globalization.NumberFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-2082">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#19)]
 [!code-vb[System.Convert.ToString2#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int16,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value, int toBase);" />
      <MemberSignature Language="F#" Value="static member ToString : int16 * int -&gt; string" Usage="System.Convert.ToString (value, toBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2083">16-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2083">The 16-bit signed integer to convert.</span></span></param>
        <param name="toBase"><span data-ttu-id="13f48-2084">Основание системы счисления возвращаемого значения, равное 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-2084">The base of the return value, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="13f48-2085">Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное строковое представление в указанной системе счисления.</span><span class="sxs-lookup"><span data-stu-id="13f48-2085">Converts the value of a 16-bit signed integer to its equivalent string representation in a specified base.</span></span></summary>
        <returns><span data-ttu-id="13f48-2086">Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="toBase" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2086">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2087">Если `value` положительно и `toBase` равен 2, 8 или 16, возвращаемая строка использует представление знака и величины.</span><span class="sxs-lookup"><span data-stu-id="13f48-2087">If `value` is positive and `toBase` is 2, 8, or 16, the returned string uses sign-and-magnitude representation.</span></span> <span data-ttu-id="13f48-2088">Если `value` является отрицательным и `toBase` равен 2, 8 или 16, возвращаемая строка использует представление дополнение до двух.</span><span class="sxs-lookup"><span data-stu-id="13f48-2088">If `value` is negative and `toBase` is 2, 8, or 16, the returned string uses two's complement representation.</span></span> <span data-ttu-id="13f48-2089">Это означает, что старших битов высокого порядка байтов (бит 15) интерпретируется как бит знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2089">This means that the high-order bit of the high-order byte (bit 15) is interpreted as the sign bit.</span></span> <span data-ttu-id="13f48-2090">Если <xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> метод вызывается для создания строки, позже будет преобразована обратно в число, соответствующий метод, который предполагается, что аналогично числовое представление должен вызываться для выполнения преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2090">If the <xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="13f48-2091">Такие методы включают <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> и <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2091">Such methods include <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> and <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2092">Следующий пример преобразует каждого элемента в массив 16-разрядных целых чисел со знаком в эквивалентное двоичные, восьмеричный, decimal и шестнадцатеричное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2092">The following example converts each element in an array of 16-bit signed integers to its equivalent binary, octal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#10)]
 [!code-vb[System.Convert.ToString2#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#10)]
 [!code-fsharp[System.Convert.ToString2#10](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="13f48-2093"><paramref name="toBase" /> не равно 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-2093"><paramref name="toBase" /> is not 2, 8, 10, or 16.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int32,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : int * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2094">32-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2094">The 32-bit signed integer to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2095">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2095">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-2096">Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-2096">Converts the value of the specified 32-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-2097">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2097">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2098">Эта реализация идентична <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2098">This implementation is identical to <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2099">В следующем примере определяется пользовательский <xref:System.Globalization.NumberFormatInfo> класс, определяющий его отрицательный знак как строку «~ «и его положительного знака в строку»!».</span><span class="sxs-lookup"><span data-stu-id="13f48-2099">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="13f48-2100">Затем он вызывает <xref:System.Convert.ToString%28System.Int32%2CSystem.IFormatProvider%29> метод для преобразования каждого элемента в массив целых чисел в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2100">It then calls the <xref:System.Convert.ToString%28System.Int32%2CSystem.IFormatProvider%29> method to convert each element in an array of integers to its equivalent string representation.</span></span> <span data-ttu-id="13f48-2101">Преобразование использует инвариантный язык и региональные параметры, а также пользовательский <xref:System.Globalization.NumberFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-2101">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#20)]
 [!code-vb[System.Convert.ToString2#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value, int toBase);" />
      <MemberSignature Language="F#" Value="static member ToString : int * int -&gt; string" Usage="System.Convert.ToString (value, toBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2102">32-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2102">The 32-bit signed integer to convert.</span></span></param>
        <param name="toBase"><span data-ttu-id="13f48-2103">Основание системы счисления возвращаемого значения, равное 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-2103">The base of the return value, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="13f48-2104">Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное строковое представление в указанной системе счисления.</span><span class="sxs-lookup"><span data-stu-id="13f48-2104">Converts the value of a 32-bit signed integer to its equivalent string representation in a specified base.</span></span></summary>
        <returns><span data-ttu-id="13f48-2105">Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="toBase" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2105">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2106">Если `value` положительно и `toBase` равен 2, 8 или 16, возвращаемая строка использует представление знака и величины.</span><span class="sxs-lookup"><span data-stu-id="13f48-2106">If `value` is positive and `toBase` is 2, 8, or 16, the returned string uses sign-and-magnitude representation.</span></span> <span data-ttu-id="13f48-2107">Если `value` является отрицательным и `toBase` равен 2, 8 или 16, возвращаемая строка использует представление дополнение до двух.</span><span class="sxs-lookup"><span data-stu-id="13f48-2107">If `value` is negative and `toBase` is 2, 8, or 16, the returned string uses two's complement representation.</span></span> <span data-ttu-id="13f48-2108">Это означает, что бит высокого порядка самого старшего байта (бит 31) интерпретируется как бит знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2108">This means that the high-order bit of the highest-order byte (bit 31) is interpreted as the sign bit.</span></span> <span data-ttu-id="13f48-2109">Если <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> метод вызывается для создания строки, позже будет преобразована обратно в число, соответствующий метод, который предполагается, что аналогично числовое представление должен вызываться для выполнения преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2109">If the <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="13f48-2110">Такие методы включают <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> и <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2110">Such methods include <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> and <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2111">Следующий пример преобразует каждый элемент массива целых чисел в эквивалентное ему двоичное, шестнадцатеричное, десятичное и шестнадцатеричное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2111">The following example converts each element in an integer array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#11)]
 [!code-vb[System.Convert.ToString2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#11)]
 [!code-fsharp[System.Convert.ToString2#11](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="13f48-2112"><paramref name="toBase" /> не равно 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-2112"><paramref name="toBase" /> is not 2, 8, 10, or 16.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int64,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : int64 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2113">64-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2113">The 64-bit signed integer to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2114">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2114">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-2115">Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-2115">Converts the value of the specified 64-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-2116">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2116">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2117">Эта реализация идентична <xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2117">This implementation is identical to <xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2118">В следующем примере определяется пользовательский <xref:System.Globalization.NumberFormatInfo> класс, определяющий его отрицательный знак как строку «~ «и его положительного знака в строку»!».</span><span class="sxs-lookup"><span data-stu-id="13f48-2118">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="13f48-2119">Затем он вызывает <xref:System.Convert.ToString%28System.Int64%2CSystem.IFormatProvider%29> метод для преобразования каждого элемента в массиве длинного целого числа в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2119">It then calls the <xref:System.Convert.ToString%28System.Int64%2CSystem.IFormatProvider%29> method to convert each element in a long integer array to its equivalent string representation.</span></span> <span data-ttu-id="13f48-2120">Преобразование использует инвариантный язык и региональные параметры, а также пользовательский <xref:System.Globalization.NumberFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-2120">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#21)]
 [!code-vb[System.Convert.ToString2#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value, int toBase);" />
      <MemberSignature Language="F#" Value="static member ToString : int64 * int -&gt; string" Usage="System.Convert.ToString (value, toBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2121">64-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2121">The 64-bit signed integer to convert.</span></span></param>
        <param name="toBase"><span data-ttu-id="13f48-2122">Основание системы счисления возвращаемого значения, равное 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-2122">The base of the return value, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="13f48-2123">Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное строковое представление в указанной системе счисления.</span><span class="sxs-lookup"><span data-stu-id="13f48-2123">Converts the value of a 64-bit signed integer to its equivalent string representation in a specified base.</span></span></summary>
        <returns><span data-ttu-id="13f48-2124">Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="toBase" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2124">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2125">Если `value` положительно и `toBase` не равно 10, возвращаемая строка использует представление знака и величины.</span><span class="sxs-lookup"><span data-stu-id="13f48-2125">If `value` is positive and `toBase` is not 10, the returned string uses sign-and-magnitude representation.</span></span> <span data-ttu-id="13f48-2126">Если `value` является отрицательным и `toBase` не равно 10, возвращаемая строка использует представление дополнение до двух.</span><span class="sxs-lookup"><span data-stu-id="13f48-2126">If `value` is negative and `toBase` is not 10, the returned string uses two's complement representation.</span></span> <span data-ttu-id="13f48-2127">Это означает, что бит высокого порядка самого старшего байта (бит 63) интерпретируется как бит знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2127">This means that the high-order bit of the highest-order byte (bit 63) is interpreted as the sign bit.</span></span> <span data-ttu-id="13f48-2128">Если <xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> метод вызывается для создания строки, позже будет преобразована обратно в число, соответствующий метод, который предполагается, что аналогично числовое представление должен вызываться для выполнения преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2128">If the <xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="13f48-2129">Такие методы включают <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> и <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2129">Such methods include <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> and <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2130">Следующий пример преобразует каждый элемент массива длинного целого числа в эквивалентное ему двоичное, шестнадцатеричное, десятичное и шестнадцатеричное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2130">The following example converts each element in a long integer array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#12)]
 [!code-vb[System.Convert.ToString2#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#12)]  
 [!code-fsharp[System.Convert.ToString2#12](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#12)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="13f48-2131"><paramref name="toBase" /> не равно 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-2131"><paramref name="toBase" /> is not 2, 8, 10, or 16.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Object, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : obj * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2132">Объект, содержащий значение для преобразования, или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2132">An object that supplies the value to convert, or <see langword="null" />.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2133">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2133">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-2134">Преобразует значение указанного объекта в эквивалентное строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2134">Converts the value of the specified object to its equivalent string representation using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-2135">Строковое представление значения параметра <paramref name="value" /> или <see cref="F:System.String.Empty" />, если <paramref name="value" /> представляет собой объект, значение которого равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2135">The string representation of <paramref name="value" />, or <see cref="F:System.String.Empty" /> if <paramref name="value" /> is an object whose value is <see langword="null" />.</span></span> <span data-ttu-id="13f48-2136">Если значением параметра <paramref name="value" /> является <see langword="null" />, метод возвращает <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2136">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2137">Если `value` реализует параметр <xref:System.IConvertible> интерфейс, этот метод вызывает <xref:System.IConvertible.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> реализацию `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-2137">If the `value` parameter implements the <xref:System.IConvertible> interface, the method calls the <xref:System.IConvertible.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> implementation of `value`.</span></span> <span data-ttu-id="13f48-2138">В противном случае, если `value` реализует параметр <xref:System.IFormattable> интерфейс, этот метод вызывает его <xref:System.IFormattable.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> реализации.</span><span class="sxs-lookup"><span data-stu-id="13f48-2138">Otherwise, if the `value` parameter implements the <xref:System.IFormattable> interface, the method calls its <xref:System.IFormattable.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="13f48-2139">Если `value` реализует ни интерфейс, этот метод вызывает `value` параметра `ToString()` метод и `provider` параметр учитывается.</span><span class="sxs-lookup"><span data-stu-id="13f48-2139">If `value` implements neither interface, the method calls the `value` parameter's `ToString()` method, and the `provider` parameter is ignored.</span></span>  
  
 <span data-ttu-id="13f48-2140">`provider` Параметр используется в том случае, если `value` реализует параметр <xref:System.IConvertible> или <xref:System.IFormattable> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13f48-2140">The `provider` parameter is used if the `value` parameter implements the <xref:System.IConvertible> or <xref:System.IFormattable> interface.</span></span> <span data-ttu-id="13f48-2141">Наиболее распространенное использование `provider` является указание зависящие от культуры сведения, которые использовались при преобразовании из параметра `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-2141">The most common use of the `provider` parameter is to specify culture-specific information used in the conversion of `value`.</span></span> <span data-ttu-id="13f48-2142">Например если `value` параметра является отрицательным числом, decimal, `provider` параметра можно указать конкретного языка и региональных параметров сведения о нотации, используемой для отрицательный знак и десятичного разделителя.</span><span class="sxs-lookup"><span data-stu-id="13f48-2142">For example, if the `value` parameter is a negative decimal number, the `provider` parameter can supply culture-specific information about the notation used for the negative sign and decimal separator.</span></span> <span data-ttu-id="13f48-2143">Во втором примере в следующем разделе показано поставщик формата, не поддерживает зависящей от языка и региональных параметров информации форматирования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2143">The second example in the next section illustrates a format provider that does not supply culture-sensitive formatting information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2144">В следующем примере определяется `Temperature` класса, переопределяющего <xref:System.Object.ToString%2A?displayProperty=nameWithType> метод, но не реализует <xref:System.IConvertible> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13f48-2144">The following example defines a `Temperature` class that overrides the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method but does not implement the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="13f48-2145">В примере показано, как вызовы <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> в свою очередь, вызов метода, `Temperature.ToString` метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-2145">The example illustrates how calls to the <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method, in turn, call the `Temperature.ToString` method.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring5.cs#26)]
 [!code-vb[System.Convert.ToString2#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring5.vb#26)]  
  
 <span data-ttu-id="13f48-2146">В следующем примере определяется `Temperature` класс, реализующий <xref:System.IFormattable> интерфейса, но не реализует <xref:System.IConvertible> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13f48-2146">The following example defines a `Temperature` class that implements the <xref:System.IFormattable> interface but does not implement the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="13f48-2147">Его <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> реализация представляет `Temperature` значение в градусы Цельсия, Фаренгейта или Кельвина, в зависимости от строки формата.</span><span class="sxs-lookup"><span data-stu-id="13f48-2147">Its <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation represents the `Temperature` value in Celsius, Fahrenheit, or Kelvin, depending on the format  string.</span></span> <span data-ttu-id="13f48-2148">В примере также определяется `TemperatureProvider` класс, реализующий <xref:System.IFormatProvider> и предоставляет строку случайным формат, используемый <xref:System.IFormattable> реализация `Temperature` класса.</span><span class="sxs-lookup"><span data-stu-id="13f48-2148">The example also defines a `TemperatureProvider` class that implements <xref:System.IFormatProvider> and provides a randomly generated format string that is used by the <xref:System.IFormattable> implementation of the `Temperature` class.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring_obj30.cs#30)]
 [!code-vb[System.Convert.ToString2#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring_obj30.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (sbyte value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int8 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.SByte,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As SByte, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::SByte value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : sbyte * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2149">8-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2149">The 8-bit signed integer to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2150">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2150">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-2151">Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-2151">Converts the value of the specified 8-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-2152">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2152">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2153">Эта реализация идентична <xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2153">This implementation is identical to <xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2154">В следующем примере определяется пользовательский <xref:System.Globalization.NumberFormatInfo> класс, определяющий его отрицательный знак как строку «~ «и его положительного знака в строку»!».</span><span class="sxs-lookup"><span data-stu-id="13f48-2154">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="13f48-2155">Затем он вызывает <xref:System.Convert.ToString%28System.SByte%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод для преобразования каждого элемента в массиве байт со знаком в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2155">It then calls the <xref:System.Convert.ToString%28System.SByte%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method to convert each element in signed byte array to its equivalent string representation.</span></span> <span data-ttu-id="13f48-2156">Преобразование использует инвариантный язык и региональные параметры, а также пользовательский <xref:System.Globalization.NumberFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-2156">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#17)]
 [!code-vb[System.Convert.ToString2#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (float value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float32 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Single,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Single, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(float value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : single * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2157">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-2157">The single-precision floating-point number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2158">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2158">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-2159">Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное строковое представление, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-2159">Converts the value of the specified single-precision floating-point number to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-2160">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2160">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2161">Эта реализация идентична <xref:System.Single.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2161">This implementation is identical to <xref:System.Single.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2162">В следующем примере преобразуется каждого элемента в массиве <xref:System.Single> значения в эквивалентное ему строковое представление в четырех разных языков и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2162">The following example converts each element in an array of <xref:System.Single> values to its equivalent string representation in four different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#18)]
 [!code-vb[System.Convert.ToString2#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : string * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2163">Возвращаемая строка.</span><span class="sxs-lookup"><span data-stu-id="13f48-2163">The string to return.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2164">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2164">An object that supplies culture-specific formatting information.</span></span> <span data-ttu-id="13f48-2165">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="13f48-2165">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="13f48-2166">Возвращает заданное строковое представление; фактическое преобразование не производится.</span><span class="sxs-lookup"><span data-stu-id="13f48-2166">Returns the specified string instance; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="13f48-2167"><paramref name="value" /> возвращается без изменений.</span><span class="sxs-lookup"><span data-stu-id="13f48-2167"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2168">В следующем примере вызывается `ToString` метод с <xref:System.String> параметра.</span><span class="sxs-lookup"><span data-stu-id="13f48-2168">The following example calls the `ToString` method with a <xref:System.String> parameter.</span></span> <span data-ttu-id="13f48-2169">Этот метод возвращает неизмененного <xref:System.String> без ссылки на <xref:System.IFormatProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-2169">The method returns the unmodified <xref:System.String> without referencing the <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-cpp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CPP/nonnumeric.cpp#2)]
 [!code-csharp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CS/nonnumeric.cs#2)]
 [!code-vb[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/VB/nonnumeric.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ushort value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int16 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UShort, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt16 value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : uint16 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2170">16-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2170">The 16-bit unsigned integer to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2171">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2171">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-2172">Преобразует значение заданного 16-битового целого числа без знака в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-2172">Converts the value of the specified 16-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-2173">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2173">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2174">Эта реализация идентична <xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2174">This implementation is identical to <xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2175">В следующем примере определяется пользовательский <xref:System.Globalization.NumberFormatInfo> класс, определяющий его отрицательный знак как строку «~ «и его положительного знака в строку»!».</span><span class="sxs-lookup"><span data-stu-id="13f48-2175">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="13f48-2176">Затем он вызывает <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29> метод для преобразования 16-разрядное целочисленное значение без знака в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2176">It then calls the <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29> method to convert a 16-bit unsigned integer value to its equivalent string representation.</span></span> <span data-ttu-id="13f48-2177">Преобразование использует инвариантный язык и региональные параметры и пользовательский <xref:System.Globalization.NumberFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-2177">The conversion uses both the invariant culture and the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="13f48-2178">Параметр вывода показывает, что подобные сведения не используется, поскольку по умолчанию описатель формата «G» не включает положительный знак с положительными значениями.</span><span class="sxs-lookup"><span data-stu-id="13f48-2178">The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#22)]
 [!code-vb[System.Convert.ToString2#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (uint value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int32 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UInteger, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt32 value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : uint32 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2179">32-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2179">The 32-bit unsigned integer to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2180">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2180">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-2181">Преобразует значение заданного 32-битового целого числа без знака в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-2181">Converts the value of the specified 32-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-2182">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2182">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2183">Эта реализация идентична <xref:System.UInt32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2183">This implementation is identical to <xref:System.UInt32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2184">В следующем примере определяется пользовательский <xref:System.Globalization.NumberFormatInfo> класс, определяющий его отрицательный знак как строку «~ «и его положительного знака в строку»!».</span><span class="sxs-lookup"><span data-stu-id="13f48-2184">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="13f48-2185">Затем он вызывает <xref:System.Convert.ToString%28System.UInt32%2CSystem.IFormatProvider%29> метод для преобразования целого числа без знака в эквивалентное строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2185">It then calls the <xref:System.Convert.ToString%28System.UInt32%2CSystem.IFormatProvider%29> method to convert an unsigned integer value to its equivalent string representation.</span></span> <span data-ttu-id="13f48-2186">Преобразование использует инвариантный язык и региональные параметры и пользовательский <xref:System.Globalization.NumberFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-2186">The conversion uses both the invariant culture and the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="13f48-2187">Параметр вывода показывает, что подобные сведения не используется, поскольку по умолчанию описатель формата «G» не включает положительный знак с положительными значениями.</span><span class="sxs-lookup"><span data-stu-id="13f48-2187">The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#23)]
 [!code-vb[System.Convert.ToString2#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ulong value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int64 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As ULong, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt64 value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : uint64 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2188">64-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2188">The 64-bit unsigned integer to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2189">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2189">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-2190">Преобразует значение заданного 64-битового целого числа без знака в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-2190">Converts the value of the specified 64-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-2191">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2191">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2192">Эта реализация идентична <xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13f48-2192">This implementation is identical to <xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2193">В следующем примере определяется пользовательский <xref:System.Globalization.NumberFormatInfo> класс, определяющий его отрицательный знак как строку «~ «и его положительного знака в строку»!».</span><span class="sxs-lookup"><span data-stu-id="13f48-2193">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="13f48-2194">Затем он вызывает <xref:System.Convert.ToString%28System.UInt64%2CSystem.IFormatProvider%29> метод для преобразования значения длинное целое без знака в эквивалентное ему строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2194">It then calls the <xref:System.Convert.ToString%28System.UInt64%2CSystem.IFormatProvider%29> method to convert an unsigned long integer value to its equivalent string representation.</span></span> <span data-ttu-id="13f48-2195">Преобразование использует инвариантный язык и региональные параметры и пользовательский <xref:System.Globalization.NumberFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-2195">The conversion uses both the invariant culture and the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="13f48-2196">Параметр вывода показывает, что подобные сведения не используется, поскольку по умолчанию описатель формата «G» не включает положительный знак с положительными значениями.</span><span class="sxs-lookup"><span data-stu-id="13f48-2196">The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#24)]
 [!code-vb[System.Convert.ToString2#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13f48-2197">Преобразует заданное значение в 16-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2197">Converts a specified value to a 16-bit unsigned integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Boolean) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(bool value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : bool -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2198">Логическое значение, которое необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-2198">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2199">Преобразует заданное логическое значение в эквивалентное 16-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2199">Converts the specified Boolean value to the equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2200">Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</span><span class="sxs-lookup"><span data-stu-id="13f48-2200">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2201">В следующем примере преобразование логических значений `true` и `false` для 16-разрядных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="13f48-2201">The following example converts the Boolean values `true` and `false` to unsigned 16-bit integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#1)]
 [!code-vb[System.Convert.ToUInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Byte) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : byte -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2202">8-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2202">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2203">Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 16-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2203">Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2204">16-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2204">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2205">Следующий пример преобразует каждый элемент в массив байтов в 16-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2205">The following example converts each element in a byte array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#2)]
 [!code-vb[System.Convert.ToUInt16#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Char) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(char value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : char -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2206">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-2206">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2207">Преобразует значение заданного символа Юникода в эквивалентное 16-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2207">Converts the value of the specified Unicode character to the equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2208">16-разрядное целое число без знака, эквивалентное <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2208">The 16-bit unsigned integer equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2209">Следующий пример преобразует каждый элемент в массиве знаков в 16-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2209">The following example converts each element in a character array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#3)]
 [!code-vb[System.Convert.ToUInt16#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As DateTime) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : DateTime -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2210">Значение даты и времени для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2210">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2211">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2211">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-2212">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-2212">This conversion is not supported.</span></span> <span data-ttu-id="13f48-2213">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-2213">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-2214">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-2214">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Decimal) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : decimal -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2215">Десятичное число для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2215">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2216">Преобразует значение заданного десятичного числа в эквивалентное 16-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2216">Converts the value of the specified decimal number to an equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2217">Значение <paramref name="value" />, округленное до ближайшего 16-разрядного целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2217"><paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span></span> <span data-ttu-id="13f48-2218">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-2218">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2219">В следующем примере преобразуется каждого элемента в массиве <xref:System.Decimal> значения 16-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2219">The following example converts each element in an array of <xref:System.Decimal> values to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#4)]
 [!code-vb[System.Convert.ToUInt16#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2220"><paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2220"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Double) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(double value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : double -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2221">Число с плавающей запятой двойной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-2221">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2222">Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 16-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2222">Converts the value of the specified double-precision floating-point number to an equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2223">Значение <paramref name="value" />, округленное до ближайшего 16-разрядного целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2223"><paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span></span> <span data-ttu-id="13f48-2224">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-2224">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2225">В следующем примере преобразуется каждого элемента в массиве <xref:System.Double> значения 16-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2225">The following example converts each element in an array of <xref:System.Double> values to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#5)]
 [!code-vb[System.Convert.ToUInt16#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2226"><paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2226"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Short) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(short value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : int16 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2227">16-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2227">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2228">Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное 16-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2228">Converts the value of the specified 16-bit signed integer to the equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2229">16-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2229">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2230">В следующем примере предпринимается попытка преобразовать каждый элемент массива 16-разрядное целое число для 16-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2230">The following example attempts to convert each element in a 16-bit integer array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#6)]
 [!code-vb[System.Convert.ToUInt16#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2231">Значение параметра <paramref name="value" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="13f48-2231"><paramref name="value" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Integer) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(int value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : int -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2232">32-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2232">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2233">Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 16-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2233">Converts the value of the specified 32-bit signed integer to an equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2234">16-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2234">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2235">Следующий пример преобразует каждый элемент массива целых чисел в 16-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2235">The following example converts each element in an integer array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#7)]
 [!code-vb[System.Convert.ToUInt16#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2236"><paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2236"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Long) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(long value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : int64 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2237">64-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2237">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2238">Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное 16-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2238">Converts the value of the specified 64-bit signed integer to an equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2239">16-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2239">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2240">Следующий пример каждого элемента в массиве длинное целое число преобразуется в 16-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2240">The following example converts each element in a long integer array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#8)]
 [!code-vb[System.Convert.ToUInt16#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2241"><paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2241"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Object) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : obj -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2242">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2242">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="13f48-2243">Преобразует значение заданного объекта в 16-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2243">Converts the value of the specified object to a 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2244">16-разрядное целое число без знака, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2244">A 16-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2245">Возвращает значение, в результате вызова <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> метод базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-2245">The return value is the result of invoking the <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2246">В следующем примере предпринимается попытка преобразовать каждый элемент в массиве объектов 16-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2246">The following example attempts to convert each element in an object array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#9)]
 [!code-vb[System.Convert.ToUInt16#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-2247">Параметр <paramref name="value" /> имеет неправильный формат.</span><span class="sxs-lookup"><span data-stu-id="13f48-2247"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-2248"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2248"><paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-2249">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-2249">-or-</span></span> 
<span data-ttu-id="13f48-2250">Преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-2250">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2251">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt16.MinValue" /> или больше <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2251"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As SByte) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : sbyte -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2252">8-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2252">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2253">Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное 16-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2253">Converts the value of the specified 8-bit signed integer to the equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2254">16-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2254">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2255">Следующий пример преобразует каждый элемент массива байт со знаком в 16-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2255">The following example converts each element in a signed byte array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#10)]
 [!code-vb[System.Convert.ToUInt16#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2256">Значение параметра <paramref name="value" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="13f48-2256"><paramref name="value" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Single) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(float value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : single -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2257">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-2257">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2258">Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 16-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2258">Converts the value of the specified single-precision floating-point number to an equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2259">Значение <paramref name="value" />, округленное до ближайшего 16-разрядного целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2259"><paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span></span> <span data-ttu-id="13f48-2260">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-2260">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2261">В следующем примере преобразуется каждого элемента в массиве <xref:System.String> значения 16-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2261">The following example converts each element in an array of <xref:System.String> values to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#11)]
 [!code-vb[System.Convert.ToUInt16#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2262"><paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2262"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As String) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : string -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2263">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-2263">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2264">Преобразует заданное строковое представление числа в эквивалентное 16-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2264">Converts the specified string representation of a number to an equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2265">16-разрядное целое число без знака, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2265">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2266">С помощью <xref:System.Convert.ToUInt16%28System.String%29> метод эквивалентна передаче `value` для <xref:System.UInt16.Parse%28System.String%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-2266">Using the <xref:System.Convert.ToUInt16%28System.String%29> method is equivalent to passing `value` to the <xref:System.UInt16.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="13f48-2267">Параметр `value` интерпретируется с использованием соглашений о форматировании, принятых в культуре текущего потока.</span><span class="sxs-lookup"><span data-stu-id="13f48-2267">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="13f48-2268">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-2268">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-2269">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-2269">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2270">В следующем примере предпринимается попытка преобразовать каждый элемент массива числовой строки 16-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2270">The following example attempts to convert each element in a numeric string array to a 16-bit unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#12)]
 [!code-vb[System.Convert.ToUInt16#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-2271"><paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</span><span class="sxs-lookup"><span data-stu-id="13f48-2271"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2272">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt16.MinValue" /> или больше <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2272"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : uint16 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2273">Возвращаемое 16-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2273">The 16-bit unsigned integer to return.</span></span></param>
        <summary><span data-ttu-id="13f48-2274">Возвращает заданное 16-битовое целое число без знака; фактическое преобразование не производится.</span><span class="sxs-lookup"><span data-stu-id="13f48-2274">Returns the specified 16-bit unsigned integer; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="13f48-2275"><paramref name="value" /> возвращается без изменений.</span><span class="sxs-lookup"><span data-stu-id="13f48-2275"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As UInteger) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : uint32 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2276">32-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2276">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2277">Преобразует значение заданного 32-разрядного целого числа без знака в эквивалентное 16-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2277">Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2278">16-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2278">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2279">В следующем примере предпринимается попытка преобразовать каждый элемент массива целых чисел без знака 16-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2279">The following example attempts to convert each element in an array of unsigned integers to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#13)]
 [!code-vb[System.Convert.ToUInt16#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2280">Значение <paramref name="value" /> больше значения <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2280"><paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As ULong) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : uint64 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2281">64-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2281">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2282">Преобразует значение заданного 64-разрядного целого числа без знака в эквивалентное 16-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2282">Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2283">16-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2283">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2284">В следующем примере предпринимается попытка преобразовать каждый элемент в массив целых чисел без знака длинное 16-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2284">The following example attempts to convert each element in an array of unsigned long integers to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#14)]
 [!code-vb[System.Convert.ToUInt16#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2285">Значение <paramref name="value" /> больше значения <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2285"><paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Object, provider As IFormatProvider) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : obj * IFormatProvider -&gt; uint16" Usage="System.Convert.ToUInt16 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2286">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2286">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2287">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2287">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-2288">Преобразует значение заданного объекта в эквивалентное 16-битовое целое число без знака, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-2288">Converts the value of the specified object to a 16-bit unsigned integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-2289">16-разрядное целое число без знака, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2289">A 16-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2290">Возвращает значение, в результате вызова <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> метод базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-2290">The return value is the result of invoking the <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="13f48-2291">`provider` позволяет пользователю указать сведения о преобразовании региональных содержимое `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-2291">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="13f48-2292">Например если `value` — <xref:System.String> представляет число, `provider` должно указать зависящие от культуры сведения о формате для представления этого числа.</span><span class="sxs-lookup"><span data-stu-id="13f48-2292">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="13f48-2293">Базовые типы игнорируют `provider`, однако параметр может быть использован, если `value` является определяемого пользователем типа, который реализует <xref:System.IConvertible> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13f48-2293">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2294">В следующем примере определяется `HexString` класс, реализующий <xref:System.IConvertible> интерфейс и который предназначен для хранения строковое представление 16-разрядное со знаком и 16-разрядных неподписанных значений.</span><span class="sxs-lookup"><span data-stu-id="13f48-2294">The following example defines a `HexString` class that implements the <xref:System.IConvertible> interface and that is designed to hold the string representation of both 16-bit signed and 16-bit unsigned values.</span></span> <span data-ttu-id="13f48-2295">Этот класс включает `Sign` свойство, которое указывает знак значения шестнадцатеричное значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-2295">The class includes a `Sign` property that indicates the sign of its hexadecimal value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_3.cs#16)]
 [!code-vb[System.Convert.ToUInt16#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_3.vb#16)]  
  
 <span data-ttu-id="13f48-2296">Следующий пример показывает, что вызов <xref:System.Convert.ToUInt16%28System.Object%2CSystem.IFormatProvider%29> метод, который передает `HexString` объект как параметр, в свою очередь, вызывает <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> реализация `HexString` класса.</span><span class="sxs-lookup"><span data-stu-id="13f48-2296">The following example shows that a call to the <xref:System.Convert.ToUInt16%28System.Object%2CSystem.IFormatProvider%29> method that passes a `HexString` object as a parameter, in turn, calls the <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> implementation of the `HexString` class.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_3.cs#17)]
 [!code-vb[System.Convert.ToUInt16#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_3.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-2297">Параметр <paramref name="value" /> имеет неправильный формат.</span><span class="sxs-lookup"><span data-stu-id="13f48-2297"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-2298"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2298"><paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-2299">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-2299">-or-</span></span> 
<span data-ttu-id="13f48-2300">Преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-2300">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2301">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt16.MinValue" /> или больше <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2301"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As String, provider As IFormatProvider) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : string * IFormatProvider -&gt; uint16" Usage="System.Convert.ToUInt16 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2302">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-2302">A string that contains the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2303">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2303">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-2304">Преобразует заданное строковое представление числа в эквивалентное 16-битовое целое число без знака, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-2304">Converts the specified string representation of a number to an equivalent 16-bit unsigned integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-2305">16-разрядное целое число без знака, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2305">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2306">Возвращает значение, в результате вызова <xref:System.UInt16.Parse%2A?displayProperty=nameWithType> на `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-2306">The return value is the result of invoking <xref:System.UInt16.Parse%2A?displayProperty=nameWithType> on `value`.</span></span>  
  
 <span data-ttu-id="13f48-2307">`provider` — <xref:System.IFormatProvider> экземпляр, который получает <xref:System.Globalization.NumberFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-2307">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="13f48-2308"><xref:System.Globalization.NumberFormatInfo> Предоставляет зависящие от культуры сведения о формате параметра `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-2308">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="13f48-2309">Если `provider` — `null`, <xref:System.Globalization.NumberFormatInfo> для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2309">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="13f48-2310">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-2310">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-2311">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-2311">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2312">В следующем примере определяется пользовательский <xref:System.Globalization.NumberFormatInfo> объект, который распознает строку «pos» как знак плюс и строку «neg» как знак минус.</span><span class="sxs-lookup"><span data-stu-id="13f48-2312">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="13f48-2313">Затем он пытается преобразовать каждый элемент массива числовых строк в целое число с использованием обоих этого поставщика и <xref:System.Globalization.NumberFormatInfo> поставщик для инвариантного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2313">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_4.cs#18)]
 [!code-vb[System.Convert.ToUInt16#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_4.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-2314"><paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</span><span class="sxs-lookup"><span data-stu-id="13f48-2314"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2315">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt16.MinValue" /> или больше <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2315"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As String, fromBase As Integer) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : string * int -&gt; uint16" Usage="System.Convert.ToUInt16 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2316">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-2316">A string that contains the number to convert.</span></span></param>
        <param name="fromBase"><span data-ttu-id="13f48-2317">Основание системы счисления, используемой для представления числа, заданного в параметре <paramref name="value" />, равное 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-2317">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="13f48-2318">Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 16-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2318">Converts the string representation of a number in a specified base to an equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2319">16-разрядное целое число без знака, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2319">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2320">Если `fromBase` 16, можно добавить префикс номера, указанного в `value` параметр с «0 x» или «0 X».</span><span class="sxs-lookup"><span data-stu-id="13f48-2320">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="13f48-2321">Так как <xref:System.UInt16> тип данных поддерживает только значения без знака <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29> метод предполагает, что `value` выражается с помощью двоичное представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2321">Because the <xref:System.UInt16> data type supports unsigned values only, the <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="13f48-2322">Другими словами все 16 бит используются для представления числового значения и бит знака отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-2322">In other words, all 16 bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="13f48-2323">Таким образом, можно написать код, в котором значение целого числа со знаком, которое находится за пределами диапазона <xref:System.UInt16> тип данных преобразуется в <xref:System.UInt16> значение метод не выбрасывает исключение.</span><span class="sxs-lookup"><span data-stu-id="13f48-2323">As a result, it is possible to write code in which a signed integer value that is out of the range of the <xref:System.UInt16> data type is converted to a <xref:System.UInt16> value without the method throwing an exception.</span></span> <span data-ttu-id="13f48-2324">В следующем примере выполняется преобразование <xref:System.Int16.MinValue?displayProperty=nameWithType> шестнадцатеричное строковое представление и затем вызывает <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-2324">The following example converts <xref:System.Int16.MinValue?displayProperty=nameWithType> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="13f48-2325">Вместо вызова исключения, метод выводит сообщение «0x8000 преобразуется в 32768».</span><span class="sxs-lookup"><span data-stu-id="13f48-2325">Instead of throwing an exception, the method displays the message, "0x8000 converts to 32768."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#11)]
 [!code-vb[System.Convert.BaseConversion#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#11)]  
  
 <span data-ttu-id="13f48-2326">При выполнении двоичных операций или числовых преобразований, это всегда ответственность за разработчика, чтобы убедиться, что метод или оператор использует подходящее числовое представление для интерпретации определенного значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-2326">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="13f48-2327">В следующем примере демонстрируется методика, позволяющая убедиться, что метод не использует беззнаковое двоичное представление для интерпретации значения, использует представление дополнение до двух, при преобразовании шестнадцатеричной строки в <xref:System.UInt16> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-2327">The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <xref:System.UInt16> value.</span></span> <span data-ttu-id="13f48-2328">В примере определяется, представляет ли значение со знаком или целое число без знака, преобразуя это значение в строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2328">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="13f48-2329">Если пример преобразует значение в <xref:System.UInt16> значение, он проверяет, является ли исходное значение целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-2329">When the example converts the value to a <xref:System.UInt16> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="13f48-2330">Если Да, и если бит высокого порядка (который указывает, что исходное значение было отрицательным), метод создает исключение.</span><span class="sxs-lookup"><span data-stu-id="13f48-2330">If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#12)]
 [!code-vb[System.Convert.BaseConversion#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#12)]  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2331">В следующем примере предпринимается попытка интерпретировать каждый элемент массива из числовых строк как шестнадцатеричное значение и преобразовать его в 16-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2331">The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_2.cs#15)]
 [!code-vb[System.Convert.ToUInt16#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="13f48-2332"><paramref name="fromBase" /> не равно 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-2332"><paramref name="fromBase" /> is not 2, 8, 10, or 16.</span></span>  
  
<span data-ttu-id="13f48-2333">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-2333">-or-</span></span> 
 <span data-ttu-id="13f48-2334">Значение <paramref name="value" />, представляющее недесятичное число без знака, использовано со знаком минус.</span><span class="sxs-lookup"><span data-stu-id="13f48-2334"><paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="13f48-2335"><paramref name="value" /> — <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2335"><paramref name="value" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-2336"><paramref name="value" /> содержит символ, который не является допустимой цифрой в основании, заданном параметром <paramref name="fromBase" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2336"><paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span></span> <span data-ttu-id="13f48-2337">Сообщение об исключении указывает, что отсутствуют цифры для преобразования, если первый символ в <paramref name="value" /> недопустим; в противном случае сообщение указывает, что <paramref name="value" /> содержит недопустимые конечные символы.</span><span class="sxs-lookup"><span data-stu-id="13f48-2337">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2338">Значение <paramref name="value" />, представляющее недесятичное число без знака, использовано со знаком минус.</span><span class="sxs-lookup"><span data-stu-id="13f48-2338"><paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span></span>  
  
<span data-ttu-id="13f48-2339">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-2339">-or-</span></span> 
 <span data-ttu-id="13f48-2340">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt16.MinValue" /> или больше <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2340"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13f48-2341">Преобразует заданное значение в 32-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2341">Converts a specified value to a 32-bit unsigned integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Boolean) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(bool value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : bool -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2342">Логическое значение, которое необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-2342">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2343">Преобразует заданное логическое значение в эквивалентное 32-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2343">Converts the specified Boolean value to the equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2344">Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</span><span class="sxs-lookup"><span data-stu-id="13f48-2344">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2345">В следующем примере преобразование логических значений `true` и `false` для целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2345">The following example converts the Boolean values `true` and `false` to unsigned integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#1)]
 [!code-vb[System.Convert.ToUInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Byte) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : byte -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2346">8-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2346">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2347">Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 32-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2347">Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2348">32-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2348">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2349">Следующий пример каждый элемент в массиве байтов преобразуется в целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2349">The following example converts each element in a byte array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#2)]
 [!code-vb[System.Convert.ToUInt32#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Char) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(char value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : char -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2350">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-2350">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2351">Преобразует значение заданного символа Юникода в эквивалентное 32-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2351">Converts the value of the specified Unicode character to the equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2352">32-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2352">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2353">Следующий пример каждый элемент в массиве знаков преобразуется в целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2353">The following example converts each element in a character array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#3)]
 [!code-vb[System.Convert.ToUInt32#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As DateTime) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : DateTime -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2354">Значение даты и времени для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2354">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2355">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2355">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-2356">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-2356">This conversion is not supported.</span></span> <span data-ttu-id="13f48-2357">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-2357">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-2358">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-2358">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Decimal) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : decimal -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2359">Десятичное число для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2359">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2360">Преобразует значение заданного десятичного числа в эквивалентное 32-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2360">Converts the value of the specified decimal number to an equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2361">Значение <paramref name="value" />, округленное до ближайшего 32-разрядного целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2361"><paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span></span> <span data-ttu-id="13f48-2362">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-2362">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2363">В следующем примере предпринимается попытка преобразовать каждый элемент массива <xref:System.Decimal> значения для целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2363">The following example attempts to convert each element in an array of <xref:System.Decimal> values to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#4)]
 [!code-vb[System.Convert.ToUInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2364"><paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2364"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Double) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(double value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : double -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2365">Число с плавающей запятой двойной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-2365">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2366">Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 32-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2366">Converts the value of the specified double-precision floating-point number to an equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2367">Значение <paramref name="value" />, округленное до ближайшего 32-разрядного целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2367"><paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span></span> <span data-ttu-id="13f48-2368">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-2368">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2369">В следующем примере предпринимается попытка преобразовать каждый элемент массива <xref:System.Double> значения для целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2369">The following example attempts to convert each element in an array of <xref:System.Double> values to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#5)]
 [!code-vb[System.Convert.ToUInt32#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2370"><paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2370"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Short) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(short value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : int16 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2371">16-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2371">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2372">Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное 32-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2372">Converts the value of the specified 16-bit signed integer to the equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2373">32-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2373">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2374">В следующем примере предпринимается попытка преобразовать каждый элемент массива 16-разрядное целое число в целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2374">The following example attempts to convert each element in a 16-bit integer array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#6)]
 [!code-vb[System.Convert.ToUInt32#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2375">Значение параметра <paramref name="value" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="13f48-2375"><paramref name="value" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Integer) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(int value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : int -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2376">32-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2376">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2377">Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 32-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2377">Converts the value of the specified 32-bit signed integer to an equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2378">32-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2378">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2379">В следующем примере предпринимается для преобразования каждого элемента массива целых чисел в целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2379">The following example attempts to convert each element in an integer array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#7)]
 [!code-vb[System.Convert.ToUInt32#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2380">Значение параметра <paramref name="value" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="13f48-2380"><paramref name="value" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Long) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(long value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : int64 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2381">64-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2381">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2382">Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное 32-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2382">Converts the value of the specified 64-bit signed integer to an equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2383">32-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2383">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2384">В следующем примере предпринимается для преобразования каждого элемента в массиве длинное целое число в целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2384">The following example attempts to convert each element in a long integer array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#8)]
 [!code-vb[System.Convert.ToUInt32#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2385"><paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2385"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Object) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : obj -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2386">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2386">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="13f48-2387">Преобразует значение заданного объекта в 32-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2387">Converts the value of the specified object to a 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2388">32-разрядное целое число без знака, эквивалентное значению <paramref name="value" />, или нуль (0), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2388">A 32-bit unsigned integer that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2389">Возвращает значение, в результате вызова <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> метод базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-2389">The return value is the result of invoking the <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2390">В следующем примере предпринимается для преобразования каждого элемента в массиве объектов в целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2390">The following example attempts to convert each element in an object array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#9)]
 [!code-vb[System.Convert.ToUInt32#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-2391">Параметр <paramref name="value" /> имеет неправильный формат.</span><span class="sxs-lookup"><span data-stu-id="13f48-2391"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-2392"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2392"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-2393">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-2393">-or-</span></span> 
<span data-ttu-id="13f48-2394">Преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-2394">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2395">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt32.MinValue" /> или больше <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2395"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As SByte) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : sbyte -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2396">8-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2396">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2397">Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное 32-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2397">Converts the value of the specified 8-bit signed integer to the equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2398">32-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2398">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2399">В следующем примере предпринимается для преобразования каждого элемента в массиве байт со знаком в целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2399">The following example attempts to convert each element in a signed byte array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#10)]
 [!code-vb[System.Convert.ToUInt32#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2400">Значение параметра <paramref name="value" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="13f48-2400"><paramref name="value" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Single) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(float value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : single -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2401">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-2401">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2402">Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 32-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2402">Converts the value of the specified single-precision floating-point number to an equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2403">Значение <paramref name="value" />, округленное до ближайшего 32-разрядного целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2403"><paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span></span> <span data-ttu-id="13f48-2404">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-2404">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2405">В следующем примере предпринимается попытка преобразовать каждый элемент массива <xref:System.Single> значения для целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2405">The following example attempts to convert each element in an array of <xref:System.Single> values to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#11)]
 [!code-vb[System.Convert.ToUInt32#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2406"><paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2406"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As String) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : string -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2407">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-2407">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2408">Преобразует заданное строковое представление числа в эквивалентное 32-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2408">Converts the specified string representation of a number to an equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2409">32-разрядное целое число без знака, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2409">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2410">С помощью <xref:System.Convert.ToUInt32%28System.String%29> метод эквивалентна передаче `value` для <xref:System.UInt32.Parse%28System.String%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-2410">Using the <xref:System.Convert.ToUInt32%28System.String%29> method is equivalent to passing `value` to the <xref:System.UInt32.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="13f48-2411">Параметр `value` интерпретируется с использованием соглашений о форматировании, принятых в культуре текущего потока.</span><span class="sxs-lookup"><span data-stu-id="13f48-2411">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="13f48-2412">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-2412">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-2413">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-2413">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2414">Следующий пример интерпретирует элементов в массиве строк как числовые строки и предпринимается попытка преобразовать их в целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2414">The following example interprets the elements in a string array as numeric strings and attempts to convert them to unsigned integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#12)]
 [!code-vb[System.Convert.ToUInt32#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-2415"><paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</span><span class="sxs-lookup"><span data-stu-id="13f48-2415"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2416">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt32.MinValue" /> или больше <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2416"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As UShort) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : uint16 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2417">16-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2417">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2418">Преобразует значение заданного 16-битового целого числа без знака в эквивалентное 32-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2418">Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2419">32-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2419">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2420">Следующий пример преобразует каждый элемент массива целых 16-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2420">The following example converts each element in an unsigned 16-bit integer array to an unsigned integer value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#13)]
 [!code-vb[System.Convert.ToUInt32#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : uint32 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2421">Возвращаемое 32-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2421">The 32-bit unsigned integer to return.</span></span></param>
        <summary><span data-ttu-id="13f48-2422">Возвращает заданное 32-битовое целое число без знака; фактическое преобразование не производится.</span><span class="sxs-lookup"><span data-stu-id="13f48-2422">Returns the specified 32-bit unsigned integer; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="13f48-2423"><paramref name="value" /> возвращается без изменений.</span><span class="sxs-lookup"><span data-stu-id="13f48-2423"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As ULong) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : uint64 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2424">64-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2424">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2425">Преобразует значение заданного 64-разрядного целого числа без знака в эквивалентное 32-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2425">Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2426">32-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2426">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2427">В следующем примере предпринимается для преобразования каждого элемента в массиве длинное целое без знака в целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2427">The following example attempts to convert each element in an unsigned long integer array to an unsigned integer value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#14)]
 [!code-vb[System.Convert.ToUInt32#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2428">Значение <paramref name="value" /> больше значения <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2428"><paramref name="value" /> is greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Object, provider As IFormatProvider) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : obj * IFormatProvider -&gt; uint32" Usage="System.Convert.ToUInt32 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2429">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2429">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2430">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2430">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-2431">Преобразует значение заданного объекта в эквивалентное 32-битовое целое число без знака, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-2431">Converts the value of the specified object to a 32-bit unsigned integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-2432">32-разрядное целое число без знака, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2432">A 32-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2433">Возвращает значение, в результате вызова <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> метод базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-2433">The return value is the result of invoking the <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="13f48-2434">`provider` позволяет пользователю указать сведения о преобразовании региональных содержимое `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-2434">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="13f48-2435">Например если `value` — <xref:System.String> представляет число, `provider` должно указать зависящие от культуры сведения о формате для представления этого числа.</span><span class="sxs-lookup"><span data-stu-id="13f48-2435">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="13f48-2436">Базовые типы игнорируют `provider`, однако параметр может быть использован, если `value` является определяемого пользователем типа, который реализует <xref:System.IConvertible> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13f48-2436">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2437">В следующем примере определяется `HexString` класс, реализующий <xref:System.IConvertible> интерфейс и который предназначен для хранения строковое представление 32-разрядных со знаком и 32-разрядных неподписанных значений.</span><span class="sxs-lookup"><span data-stu-id="13f48-2437">The following example defines a `HexString` class that implements the <xref:System.IConvertible> interface and that is designed to hold the string representation of both 32-bit signed and 32-bit unsigned values.</span></span> <span data-ttu-id="13f48-2438">Этот класс включает `Sign` свойство, которое указывает знак значения шестнадцатеричное значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-2438">The class includes a `Sign` property that indicates the sign of its hexadecimal value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_4.cs#17)]
 [!code-vb[System.Convert.ToUInt32#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_4.vb#17)]  
  
 <span data-ttu-id="13f48-2439">Следующий пример показывает, что вызов <xref:System.Convert.ToUInt32%28System.Object%2CSystem.IFormatProvider%29> метод, который передает `HexString` объект как параметр, в свою очередь, вызывает <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> реализация `HexString` класса.</span><span class="sxs-lookup"><span data-stu-id="13f48-2439">The following example shows that a call to the <xref:System.Convert.ToUInt32%28System.Object%2CSystem.IFormatProvider%29> method that passes a `HexString` object as a parameter, in turn, calls the <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> implementation of the `HexString` class.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_4.cs#18)]
 [!code-vb[System.Convert.ToUInt32#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_4.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-2440">Параметр <paramref name="value" /> имеет неправильный формат.</span><span class="sxs-lookup"><span data-stu-id="13f48-2440"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-2441"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2441"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-2442">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-2442">-or-</span></span> 
<span data-ttu-id="13f48-2443">Преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-2443">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2444">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt32.MinValue" /> или больше <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2444"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As String, provider As IFormatProvider) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : string * IFormatProvider -&gt; uint32" Usage="System.Convert.ToUInt32 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2445">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-2445">A string that contains the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2446">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2446">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-2447">Преобразует заданное строковое представление числа в эквивалентное 32-битовое целое число без знака, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-2447">Converts the specified string representation of a number to an equivalent 32-bit unsigned integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-2448">32-разрядное целое число без знака, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2448">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2449">Возвращает значение, в результате вызова <xref:System.UInt32.Parse%2A?displayProperty=nameWithType> на `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-2449">The return value is the result of invoking <xref:System.UInt32.Parse%2A?displayProperty=nameWithType> on `value`.</span></span>  
  
 <span data-ttu-id="13f48-2450">`provider` — <xref:System.IFormatProvider> экземпляр, который получает <xref:System.Globalization.NumberFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-2450">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="13f48-2451"><xref:System.Globalization.NumberFormatInfo> Предоставляет зависящие от культуры сведения о формате параметра `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-2451">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="13f48-2452">Если `provider` — `null`, <xref:System.Globalization.NumberFormatInfo> для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2452">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="13f48-2453">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-2453">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-2454">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-2454">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2455">В следующем примере определяется пользовательский <xref:System.Globalization.NumberFormatInfo> объект, который распознает строку «pos» как знак плюс и строку «neg» как знак минус.</span><span class="sxs-lookup"><span data-stu-id="13f48-2455">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="13f48-2456">Затем он пытается преобразовать каждый элемент массива числовых строк в целое число с использованием обоих этого поставщика и <xref:System.Globalization.NumberFormatInfo> поставщик для инвариантного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2456">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_2.cs#15)]
 [!code-vb[System.Convert.ToUInt32#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-2457"><paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</span><span class="sxs-lookup"><span data-stu-id="13f48-2457"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2458">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt32.MinValue" /> или больше <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2458"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As String, fromBase As Integer) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : string * int -&gt; uint32" Usage="System.Convert.ToUInt32 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2459">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-2459">A string that contains the number to convert.</span></span></param>
        <param name="fromBase"><span data-ttu-id="13f48-2460">Основание системы счисления, используемой для представления числа, заданного в параметре <paramref name="value" />, равное 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-2460">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="13f48-2461">Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 32-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2461">Converts the string representation of a number in a specified base to an equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2462">32-разрядное целое число без знака, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2462">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2463">Если `fromBase` 16, можно добавить префикс номера, указанного в `value` параметр с «0 x» или «0 X».</span><span class="sxs-lookup"><span data-stu-id="13f48-2463">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="13f48-2464">Так как <xref:System.UInt32> тип данных поддерживает только значения без знака <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29> метод предполагает, что `value` выражается с помощью двоичное представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2464">Because the <xref:System.UInt32> data type supports unsigned values only, the <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="13f48-2465">Другими словами все 32 бита используются для представления числового значения и бит знака отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-2465">In other words, all 32 bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="13f48-2466">Таким образом, можно написать код, в котором значение целого числа со знаком, которое находится за пределами диапазона <xref:System.UInt32> тип данных преобразуется в <xref:System.UInt32> значение метод не выбрасывает исключение.</span><span class="sxs-lookup"><span data-stu-id="13f48-2466">As a result, it is possible to write code in which a signed integer value that is out of the range of the <xref:System.UInt32> data type is converted to a <xref:System.UInt32> value without the method throwing an exception.</span></span> <span data-ttu-id="13f48-2467">В следующем примере выполняется преобразование <xref:System.Int32.MinValue> шестнадцатеричное строковое представление и затем вызывает <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-2467">The following example converts <xref:System.Int32.MinValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="13f48-2468">Вместо вызова исключения, метод выводит сообщение «0x80000000 преобразуется в 2147483648».</span><span class="sxs-lookup"><span data-stu-id="13f48-2468">Instead of throwing an exception, the method displays the message, "0x80000000 converts to 2147483648."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#13)]
 [!code-vb[System.Convert.BaseConversion#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#13)]  
  
 <span data-ttu-id="13f48-2469">При выполнении двоичных операций или числовых преобразований, это всегда ответственность за разработчика, чтобы убедиться, что метод или оператор использует подходящее числовое представление для интерпретации определенного значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-2469">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="13f48-2470">В следующем примере демонстрируется методика, позволяющая убедиться, что метод не использует беззнаковое двоичное представление для интерпретации значения, использует представление дополнение до двух, при преобразовании шестнадцатеричной строки в <xref:System.UInt32> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-2470">The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <xref:System.UInt32> value.</span></span> <span data-ttu-id="13f48-2471">В примере определяется, представляет ли значение со знаком или целое число без знака, преобразуя это значение в строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2471">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="13f48-2472">Если пример преобразует значение в <xref:System.UInt32> значение, он проверяет, является ли исходное значение целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-2472">When the example converts the value to a <xref:System.UInt32> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="13f48-2473">Если Да, и если бит высокого порядка (который указывает, что исходное значение было отрицательным), метод создает исключение.</span><span class="sxs-lookup"><span data-stu-id="13f48-2473">If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#14)]
 [!code-vb[System.Convert.BaseConversion#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#14)]  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2474">В следующем примере предпринимается попытка интерпретировать каждый элемент массива из числовых строк как шестнадцатеричное значение и преобразовать его в целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2474">The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_3.cs#16)]
 [!code-vb[System.Convert.ToUInt32#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="13f48-2475"><paramref name="fromBase" /> не равно 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-2475"><paramref name="fromBase" /> is not 2, 8, 10, or 16.</span></span>  
  
<span data-ttu-id="13f48-2476">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-2476">-or-</span></span> 
 <span data-ttu-id="13f48-2477">Значение <paramref name="value" />, представляющее недесятичное число без знака, использовано со знаком минус.</span><span class="sxs-lookup"><span data-stu-id="13f48-2477"><paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="13f48-2478"><paramref name="value" /> — <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2478"><paramref name="value" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-2479"><paramref name="value" /> содержит символ, который не является допустимой цифрой в основании, заданном параметром <paramref name="fromBase" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2479"><paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span></span> <span data-ttu-id="13f48-2480">Сообщение об исключении указывает, что отсутствуют цифры для преобразования, если первый символ в <paramref name="value" /> недопустим; в противном случае сообщение указывает, что <paramref name="value" /> содержит недопустимые конечные символы.</span><span class="sxs-lookup"><span data-stu-id="13f48-2480">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2481">Значение <paramref name="value" />, представляющее недесятичное число без знака, использовано со знаком минус.</span><span class="sxs-lookup"><span data-stu-id="13f48-2481"><paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span></span>  
  
<span data-ttu-id="13f48-2482">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-2482">-or-</span></span> 
 <span data-ttu-id="13f48-2483">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt32.MinValue" /> или больше <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2483"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13f48-2484">Преобразует заданное значение в 64-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2484">Converts a specified value to a 64-bit unsigned integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Boolean) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(bool value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : bool -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2485">Логическое значение, которое необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-2485">The Boolean value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2486">Преобразует заданное логическое значение в эквивалентное 64-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2486">Converts the specified Boolean value to the equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2487">Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</span><span class="sxs-lookup"><span data-stu-id="13f48-2487">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2488">В следующем примере преобразуется в логическое значение `true` и `false` значения длинных целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2488">The following example converts Boolean `true` and `false` values to unsigned long integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#1)]
 [!code-vb[System.Convert.ToUInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Byte) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : byte -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2489">8-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2489">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2490">Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 64-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2490">Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2491">64-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2491">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2492">Следующий пример преобразует каждый элемент массива байтов в длинное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2492">The following example converts each element in a byte array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#2)]
 [!code-vb[System.Convert.ToUInt64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Char) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(char value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : char -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2493">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-2493">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2494">Преобразует значение заданного символа Юникода в эквивалентное 64-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2494">Converts the value of the specified Unicode character to the equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2495">64-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2495">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2496">Следующий пример преобразует каждый элемент массива символов в длинное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2496">The following example converts each element in a character array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#3)]
 [!code-vb[System.Convert.ToUInt64#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As DateTime) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : DateTime -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2497">Значение даты и времени для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2497">The date and time value to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2498">При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2498">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="13f48-2499">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-2499">This conversion is not supported.</span></span> <span data-ttu-id="13f48-2500">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-2500">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-2501">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-2501">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Decimal) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : decimal -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2502">Десятичное число для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2502">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2503">Преобразует значение заданного десятичного числа в эквивалентное 64-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2503">Converts the value of the specified decimal number to an equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2504">Значение <paramref name="value" />, округленное до ближайшего 64-разрядного целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2504"><paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span></span> <span data-ttu-id="13f48-2505">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-2505">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2506">В следующем примере предпринимается попытка преобразовать каждый элемент массива <xref:System.Decimal> значения в длинное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2506">The following example attempts to convert each element in an array of <xref:System.Decimal> values to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#4)]
 [!code-vb[System.Convert.ToUInt64#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2507"><paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2507"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Double) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(double value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : double -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2508">Число с плавающей запятой двойной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-2508">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2509">Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 64-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2509">Converts the value of the specified double-precision floating-point number to an equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2510">Значение <paramref name="value" />, округленное до ближайшего 64-разрядного целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2510"><paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span></span> <span data-ttu-id="13f48-2511">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-2511">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2512">В следующем примере предпринимается попытка преобразовать каждый элемент массива <xref:System.Double> значения в длинное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2512">The following example attempts to convert each element in an array of <xref:System.Double> values to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#5)]
 [!code-vb[System.Convert.ToUInt64#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2513"><paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2513"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Short) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(short value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : int16 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2514">16-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2514">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2515">Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное 64-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2515">Converts the value of the specified 16-bit signed integer to the equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2516">64-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2516">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2517">В следующем примере предпринимается попытка преобразовать каждый элемент в массив 16-разрядных целых чисел в длинное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2517">The following example attempts to convert each element in an array of 16-bit integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#6)]
 [!code-vb[System.Convert.ToUInt64#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2518">Значение параметра <paramref name="value" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="13f48-2518"><paramref name="value" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Integer) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(int value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : int -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2519">32-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2519">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2520">Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 64-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2520">Converts the value of the specified 32-bit signed integer to an equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2521">64-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2521">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2522">В следующем примере предпринимается попытка преобразовать каждый элемент в массив целых чисел в длинное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2522">The following example attempts to convert each element in an array of integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#7)]
 [!code-vb[System.Convert.ToUInt64#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2523">Значение параметра <paramref name="value" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="13f48-2523"><paramref name="value" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Long) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(long value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : int64 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2524">64-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2524">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2525">Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное 64-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2525">Converts the value of the specified 64-bit signed integer to an equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2526">64-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2526">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2527">В следующем примере предпринимается попытка преобразовать каждый элемент в массив длинных целых чисел в длинное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2527">The following example attempts to convert each element in an array of long integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#8)]
 [!code-vb[System.Convert.ToUInt64#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2528">Значение параметра <paramref name="value" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="13f48-2528"><paramref name="value" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Object) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : obj -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2529">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2529">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="13f48-2530">Преобразует значение заданного объекта в 64-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2530">Converts the value of the specified object to a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2531">64-разрядное целое число без знака, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2531">A 64-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2532">Возвращает значение, в результате вызова <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> метод базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-2532">The return value is the result of invoking the <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2533">В следующем примере предпринимается попытка преобразовать каждый элемент в массиве объектов в длинное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2533">The following example attempts to convert each element in an object array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#9)]
 [!code-vb[System.Convert.ToUInt64#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-2534">Параметр <paramref name="value" /> имеет неправильный формат.</span><span class="sxs-lookup"><span data-stu-id="13f48-2534"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-2535"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2535"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-2536">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-2536">-or-</span></span> 
<span data-ttu-id="13f48-2537">Преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-2537">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2538">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt64.MinValue" /> или больше <see cref="F:System.UInt64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2538"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As SByte) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : sbyte -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2539">8-разрядное целое число со знаком для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2539">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2540">Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное 64-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2540">Converts the value of the specified 8-bit signed integer to the equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2541">64-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2541">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2542">В следующем примере предпринимается попытка преобразовать каждый элемент массива байт со знаком в длинное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2542">The following example attempts to convert each element in a signed byte array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#10)]
 [!code-vb[System.Convert.ToUInt64#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2543">Значение параметра <paramref name="value" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="13f48-2543"><paramref name="value" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Single) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(float value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : single -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2544">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="13f48-2544">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2545">Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 64-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2545">Converts the value of the specified single-precision floating-point number to an equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2546">Значение <paramref name="value" />, округленное до ближайшего 64-разрядного целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2546"><paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span></span> <span data-ttu-id="13f48-2547">Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</span><span class="sxs-lookup"><span data-stu-id="13f48-2547">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2548">В следующем примере предпринимается попытка преобразовать каждый элемент массива <xref:System.Single> значения в длинное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2548">The following example attempts to convert each element in an array of <xref:System.Single> values to an unsigned long integer.</span></span> <span data-ttu-id="13f48-2549">Выходные данные показывают, что дробные значения округляются, прежде чем будет выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-2549">The output shows that fractional values are rounded before the conversion is performed.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#11)]
 [!code-vb[System.Convert.ToUInt64#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2550"><paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2550"><paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As String) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : string -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2551">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-2551">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2552">Преобразует заданное строковое представление числа в эквивалентное 64-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2552">Converts the specified string representation of a number to an equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2553">64-разрядное знаковое целое число, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2553">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2554">С помощью <xref:System.Convert.ToInt64%28System.String%29> метод эквивалентна передаче `value` для <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-2554">Using the <xref:System.Convert.ToInt64%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="13f48-2555">Параметр `value` интерпретируется с использованием соглашений о форматировании, принятых в культуре текущего потока.</span><span class="sxs-lookup"><span data-stu-id="13f48-2555">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="13f48-2556">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-2556">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-2557">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-2557">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2558">Следующий пример интерпретирует те элементы массива строк, что числовых строк и пытается преобразовать их в длинных целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2558">The following example interprets the elements of a string array as numeric strings and attempts to convert them to unsigned long integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#12)]
 [!code-vb[System.Convert.ToUInt64#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-2559"><paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</span><span class="sxs-lookup"><span data-stu-id="13f48-2559"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2560">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt64.MinValue" /> или больше <see cref="F:System.UInt64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2560"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As UShort) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : uint16 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2561">16-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2561">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2562">Преобразует значение заданного 16-битового целого числа без знака в эквивалентное 64-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2562">Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2563">64-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2563">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2564">Следующий пример преобразует каждый элемент массива 16-разрядных целых чисел в длинное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2564">The following example converts each element in an array of unsigned 16-bit integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#13)]
 [!code-vb[System.Convert.ToUInt64#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As UInteger) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : uint32 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2565">32-разрядное целое число без знака для преобразования.</span><span class="sxs-lookup"><span data-stu-id="13f48-2565">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="13f48-2566">Преобразует значение заданного 32-битового целого числа без знака в эквивалентное 64-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2566">Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2567">64-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2567">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13f48-2568">Следующий пример каждый элемент массива целых чисел без знака преобразуется в длинное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2568">The following example converts each element in an unsigned integer array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#14)]
 [!code-vb[System.Convert.ToUInt64#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : uint64 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2569">Возвращаемое 64-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2569">The 64-bit unsigned integer to return.</span></span></param>
        <summary><span data-ttu-id="13f48-2570">Возвращает заданное 64-битовое целое число без знака; фактическое преобразование не производится.</span><span class="sxs-lookup"><span data-stu-id="13f48-2570">Returns the specified 64-bit unsigned integer; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="13f48-2571"><paramref name="value" /> возвращается без изменений.</span><span class="sxs-lookup"><span data-stu-id="13f48-2571"><paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Object, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : obj * IFormatProvider -&gt; uint64" Usage="System.Convert.ToUInt64 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2572">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2572">An object that implements the <see cref="T:System.IConvertible" /> interface.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2573">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2573">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-2574">Преобразует значение заданного объекта в эквивалентное 64-битовое целое число без знака, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-2574">Converts the value of the specified object to a 64-bit unsigned integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-2575">64-разрядное целое число без знака, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2575">A 64-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2576">Возвращает значение, в результате вызова <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> метод базового типа `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-2576">The return value is the result of invoking the <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="13f48-2577">`provider` позволяет пользователю указать сведения о преобразовании региональных содержимое `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-2577">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="13f48-2578">Например если `value` — <xref:System.String> представляет число, `provider` должно указать зависящие от культуры сведения о формате для представления этого числа.</span><span class="sxs-lookup"><span data-stu-id="13f48-2578">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="13f48-2579">Базовые типы игнорируют `provider`, однако параметр может быть использован, если `value` является определяемого пользователем типа, который реализует <xref:System.IConvertible> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13f48-2579">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2580">В следующем примере определяется `HexString` класс, реализующий <xref:System.IConvertible> интерфейс и который предназначен для хранения строковое представление 64-разрядных со знаком, так и 64-разрядных неподписанных значений.</span><span class="sxs-lookup"><span data-stu-id="13f48-2580">The following example defines a `HexString` class that implements the <xref:System.IConvertible> interface and that is designed to hold the string representation of both 64-bit signed and 64-bit unsigned values.</span></span> <span data-ttu-id="13f48-2581">Этот класс включает `Sign` свойство, которое указывает знак значения шестнадцатеричное значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-2581">The class includes a `Sign` property that indicates the sign of its hexadecimal value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_4.cs#17)]
 [!code-vb[System.Convert.ToUInt64#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_4.vb#17)]  
  
 <span data-ttu-id="13f48-2582">Следующий пример показывает, что вызов <xref:System.Convert.ToUInt64%28System.Object%2CSystem.IFormatProvider%29> метод, который передает `HexString` объект как параметр, в свою очередь, вызывает <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> реализация `HexString` класса.</span><span class="sxs-lookup"><span data-stu-id="13f48-2582">The following example shows that a call to the <xref:System.Convert.ToUInt64%28System.Object%2CSystem.IFormatProvider%29> method that passes a `HexString` object as a parameter, in turn, calls the <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> implementation of the `HexString` class.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_4.cs#18)]
 [!code-vb[System.Convert.ToUInt64#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_4.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-2583">Параметр <paramref name="value" /> имеет неправильный формат.</span><span class="sxs-lookup"><span data-stu-id="13f48-2583"><paramref name="value" /> is not in an appropriate format.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="13f48-2584"><paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2584"><paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span></span>  
  
<span data-ttu-id="13f48-2585">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-2585">-or-</span></span> 
<span data-ttu-id="13f48-2586">Преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="13f48-2586">The conversion is not supported.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2587">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt64.MinValue" /> или больше <see cref="F:System.UInt64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2587"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As String, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : string * IFormatProvider -&gt; uint64" Usage="System.Convert.ToUInt64 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2588">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-2588">A string that contains the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="13f48-2589">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2589">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="13f48-2590">Преобразует заданное строковое представление числа в эквивалентное 64-битовое целое число без знака, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="13f48-2590">Converts the specified string representation of a number to an equivalent 64-bit unsigned integer, using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="13f48-2591">64-разрядное целое число без знака, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2591">A 64-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2592">Возвращает значение, в результате вызова <xref:System.UInt64.Parse%2A?displayProperty=nameWithType> на `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-2592">The return value is the result of invoking <xref:System.UInt64.Parse%2A?displayProperty=nameWithType> on `value`.</span></span>  
  
 <span data-ttu-id="13f48-2593">`provider` — <xref:System.IFormatProvider> реализация, которая получает <xref:System.Globalization.NumberFormatInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="13f48-2593">`provider` is an <xref:System.IFormatProvider> implementation that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="13f48-2594"><xref:System.Globalization.NumberFormatInfo> Предоставляет зависящие от культуры сведения о формате параметра `value`.</span><span class="sxs-lookup"><span data-stu-id="13f48-2594">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="13f48-2595">Если `provider` — `null`, <xref:System.Globalization.NumberFormatInfo> объект для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2595">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
 <span data-ttu-id="13f48-2596">Если вы не хотите обрабатывать исключение, если преобразование завершается неудачей, можно вызвать <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="13f48-2596">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="13f48-2597">Он возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="13f48-2597">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2598">В следующем примере определяется пользовательский <xref:System.Globalization.NumberFormatInfo> объект, который распознает строку «pos» как знак плюс и строку «neg» как знак минус.</span><span class="sxs-lookup"><span data-stu-id="13f48-2598">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="13f48-2599">Затем предпринимается попытка преобразовать каждый элемент массива числовых строк в длинное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2599">It then attempts to convert each element of a numeric string array to an unsigned long integer.</span></span> <span data-ttu-id="13f48-2600">Преобразование использует пользовательский поставщик и <xref:System.Globalization.NumberFormatInfo> поставщик для инвариантного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="13f48-2600">The conversion uses both the custom provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_2.cs#15)]
 [!code-vb[System.Convert.ToUInt64#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-2601"><paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</span><span class="sxs-lookup"><span data-stu-id="13f48-2601"><paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2602">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt64.MinValue" /> или больше <see cref="F:System.UInt64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2602"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As String, fromBase As Integer) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : string * int -&gt; uint64" Usage="System.Convert.ToUInt64 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13f48-2603">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="13f48-2603">A string that contains the number to convert.</span></span></param>
        <param name="fromBase"><span data-ttu-id="13f48-2604">Основание системы счисления, используемой для представления числа, заданного в параметре <paramref name="value" />, равное 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-2604">The base of the number in <paramref name="value" />, which must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="13f48-2605">Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 64-битовое целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2605">Converts the string representation of a number in a specified base to an equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="13f48-2606">64-разрядное целое число без знака, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2606">A 64-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13f48-2607">Если `fromBase` 16, можно добавить префикс номера, указанного в `value` параметр с «0 x» или «0 X».</span><span class="sxs-lookup"><span data-stu-id="13f48-2607">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="13f48-2608">Так как <xref:System.UInt64> тип данных поддерживает только значения без знака <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29> метод предполагает, что `value` выражается с помощью двоичное представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2608">Because the <xref:System.UInt64> data type supports unsigned values only, the <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="13f48-2609">Другими словами все 64 разряда используются для представления числового значения и бит знака отсутствует.</span><span class="sxs-lookup"><span data-stu-id="13f48-2609">In other words, all 64 bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="13f48-2610">Таким образом, можно написать код, в котором значение со знаком длинное целое число, которое находится за пределами диапазона <xref:System.UInt64> тип данных преобразуется в <xref:System.UInt64> значение метод не выбрасывает исключение.</span><span class="sxs-lookup"><span data-stu-id="13f48-2610">As a result, it is possible to write code in which a signed long integer value that is out of the range of the <xref:System.UInt64> data type is converted to a <xref:System.UInt64> value without the method throwing an exception.</span></span> <span data-ttu-id="13f48-2611">В следующем примере выполняется преобразование <xref:System.Int64.MinValue> шестнадцатеричное строковое представление и затем вызывает <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29> метод.</span><span class="sxs-lookup"><span data-stu-id="13f48-2611">The following example converts <xref:System.Int64.MinValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="13f48-2612">Вместо вызова исключения, метод выводит сообщение «0x8000000000000000 преобразуется в 9223372036854775808».</span><span class="sxs-lookup"><span data-stu-id="13f48-2612">Instead of throwing an exception, the method displays the message, "0x8000000000000000 converts to 9223372036854775808."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#15)]
 [!code-vb[System.Convert.BaseConversion#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#15)]  
  
 <span data-ttu-id="13f48-2613">При выполнении двоичных операций или числовых преобразований, это всегда ответственность за разработчика, чтобы убедиться, что метод или оператор использует подходящее числовое представление для интерпретации определенного значения.</span><span class="sxs-lookup"><span data-stu-id="13f48-2613">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="13f48-2614">В следующем примере демонстрируется методика, позволяющая убедиться, что метод не использует беззнаковое двоичное представление для интерпретации значения, использует представление дополнение до двух, при преобразовании шестнадцатеричной строки в <xref:System.UInt64> значение.</span><span class="sxs-lookup"><span data-stu-id="13f48-2614">The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <xref:System.UInt64> value.</span></span> <span data-ttu-id="13f48-2615">В примере определяется, представляет ли значение со знаком или целое число без знака, преобразуя это значение в строковое представление.</span><span class="sxs-lookup"><span data-stu-id="13f48-2615">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="13f48-2616">Если пример преобразует значение в <xref:System.UInt64> значение, он проверяет, является ли исходное значение целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="13f48-2616">When the example converts the value to a <xref:System.UInt64> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="13f48-2617">Если Да, и если бит высокого порядка (который указывает, что исходное значение было отрицательным), метод создает исключение.</span><span class="sxs-lookup"><span data-stu-id="13f48-2617">If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#16)]
 [!code-vb[System.Convert.BaseConversion#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#16)]  
  
   
  
## Examples  
 <span data-ttu-id="13f48-2618">В следующем примере предпринимается попытка интерпретировать каждый элемент массива числовых строк в виде шестнадцатеричного значения и преобразовать в длинное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="13f48-2618">The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_3.cs#16)]
 [!code-vb[System.Convert.ToUInt64#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="13f48-2619"><paramref name="fromBase" /> не равно 2, 8, 10 или 16.</span><span class="sxs-lookup"><span data-stu-id="13f48-2619"><paramref name="fromBase" /> is not 2, 8, 10, or 16.</span></span>  
  
<span data-ttu-id="13f48-2620">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-2620">-or-</span></span> 
 <span data-ttu-id="13f48-2621">Значение <paramref name="value" />, представляющее недесятичное число без знака, использовано со знаком минус.</span><span class="sxs-lookup"><span data-stu-id="13f48-2621"><paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="13f48-2622"><paramref name="value" /> — <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2622"><paramref name="value" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="13f48-2623"><paramref name="value" /> содержит символ, который не является допустимой цифрой в основании, заданном параметром <paramref name="fromBase" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2623"><paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span></span> <span data-ttu-id="13f48-2624">Сообщение об исключении указывает, что отсутствуют цифры для преобразования, если первый символ в <paramref name="value" /> недопустим; в противном случае сообщение указывает, что <paramref name="value" /> содержит недопустимые конечные символы.</span><span class="sxs-lookup"><span data-stu-id="13f48-2624">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="13f48-2625">Значение <paramref name="value" />, представляющее недесятичное число без знака, использовано со знаком минус.</span><span class="sxs-lookup"><span data-stu-id="13f48-2625"><paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span></span>  
  
<span data-ttu-id="13f48-2626">-или-</span><span class="sxs-lookup"><span data-stu-id="13f48-2626">-or-</span></span> 
 <span data-ttu-id="13f48-2627">Параметр <paramref name="value" /> представляет число, которое меньше <see cref="F:System.UInt64.MinValue" /> или больше <see cref="F:System.UInt64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13f48-2627"><paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryFromBase64Chars">
      <MemberSignature Language="C#" Value="public static bool TryFromBase64Chars (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFromBase64Chars(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.TryFromBase64Chars(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFromBase64Chars (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryFromBase64Chars(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member TryFromBase64Chars : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; *  -&gt; bool" Usage="System.Convert.TryFromBase64Chars (chars, bytes, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="bytes">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFromBase64String">
      <MemberSignature Language="C#" Value="public static bool TryFromBase64String (string s, Span&lt;byte&gt; bytes, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFromBase64String(string s, valuetype System.Span`1&lt;unsigned int8&gt; bytes, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.TryFromBase64String(System.String,System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFromBase64String (s As String, bytes As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryFromBase64String(System::String ^ s, Span&lt;System::Byte&gt; bytes, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member TryFromBase64String : string * Span&lt;byte&gt; *  -&gt; bool" Usage="System.Convert.TryFromBase64String (s, bytes, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="bytes">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryToBase64Chars">
      <MemberSignature Language="C#" Value="public static bool TryToBase64Chars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars, out int charsWritten, Base64FormattingOptions options = System.Base64FormattingOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryToBase64Chars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars, [out] int32&amp; charsWritten, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.TryToBase64Chars(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Int32@,System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryToBase64Chars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char), ByRef charsWritten As Integer, Optional options As Base64FormattingOptions = System.Base64FormattingOptions.None) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryToBase64Chars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; *  * Base64FormattingOptions -&gt; bool" Usage="System.Convert.TryToBase64Chars (bytes, chars, charsWritten, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>