<Type Name="SecureString" FullName="System.Security.SecureString">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fe25203598008b380f581e3ca68f53880bebef3f" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56346217" /></Metadata><TypeSignature Language="C#" Value="public sealed class SecureString : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SecureString extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecureString" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecureString&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureString sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SecureString = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.SecureString</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="84bbe-101">Представляет текст, который должен оставаться конфиденциальным, например, путем его удаления из памяти компьютера, если он больше не нужен.</span><span class="sxs-lookup"><span data-stu-id="84bbe-101">Represents text that should be kept confidential, such as by deleting it from computer memory when no longer needed.</span></span> <span data-ttu-id="84bbe-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="84bbe-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!IMPORTANT]
>  <span data-ttu-id="84bbe-103">Мы не рекомендуем использовать `SecureString` класса для разработки новых приложений.</span><span class="sxs-lookup"><span data-stu-id="84bbe-103">We don't recommend that you use the `SecureString` class for new development.</span></span> <span data-ttu-id="84bbe-104">Дополнительные сведения см. в разделе [SecureString не должны использоваться](https://github.com/dotnet/platform-compat/blob/master/docs/DE0001.md) на сайте GitHub.</span><span class="sxs-lookup"><span data-stu-id="84bbe-104">For more information, see [SecureString shouldn't be used](https://github.com/dotnet/platform-compat/blob/master/docs/DE0001.md) on GitHub.</span></span>

 <span data-ttu-id="84bbe-105"><xref:System.Security.SecureString> имеет строковый тип, предоставляющий мер безопасности.</span><span class="sxs-lookup"><span data-stu-id="84bbe-105"><xref:System.Security.SecureString> is a string type that provides a measure of security.</span></span> <span data-ttu-id="84bbe-106">Предпринимается попытка не хранились конфиденциальные строк в памяти процесса в виде обычного текста.</span><span class="sxs-lookup"><span data-stu-id="84bbe-106">It tries to avoid storing potentially sensitive strings in process memory as plain text.</span></span>  <span data-ttu-id="84bbe-107">(Тем не менее, ограничения, см. в разделе [насколько безопасен SecureString?](#HowSecure) разделе.) Значение экземпляра <xref:System.Security.SecureString> автоматически защищены при помощи механизм, который поддерживается используемой платформой при инициализации экземпляра или изменения значения.</span><span class="sxs-lookup"><span data-stu-id="84bbe-107">(For limitations, however, see the [How secure is SecureString?](#HowSecure) section.) The value of an instance of <xref:System.Security.SecureString> is automatically protected using a mechanism supported by the underlying platform when the instance is initialized or when the value is modified.</span></span> <span data-ttu-id="84bbe-108">Приложение может отображать неизменяемый экземпляр и предотвратить его дальнейшее изменение путем вызова <xref:System.Security.SecureString.MakeReadOnly%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="84bbe-108">Your application can render the instance immutable and prevent further modification by invoking the <xref:System.Security.SecureString.MakeReadOnly%2A> method.</span></span>  
  
 <span data-ttu-id="84bbe-109">Максимальная длина <xref:System.Security.SecureString> экземпляра составляет 65 536 символов.</span><span class="sxs-lookup"><span data-stu-id="84bbe-109">The maximum length of a <xref:System.Security.SecureString> instance is 65,536 characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="84bbe-110">Этот тип реализует <xref:System.IDisposable> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="84bbe-110">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="84bbe-111">Когда вы закончите, используя экземпляр типа, следует освободить его прямо или косвенно.</span><span class="sxs-lookup"><span data-stu-id="84bbe-111">When you have finished using an instance of the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="84bbe-112">Чтобы удалить тип напрямую, вызовите его <xref:System.IDisposable.Dispose%2A> метод в `try` / `catch` блока.</span><span class="sxs-lookup"><span data-stu-id="84bbe-112">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="84bbe-113">Чтобы избавиться от его косвенно, используйте языковой конструкции, такие как `using` (в C#) или `Using` (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="84bbe-113">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="84bbe-114">Дополнительные сведения см. в разделе «С помощью объекта, реализует IDisposable» <xref:System.IDisposable> разделу интерфейса.</span><span class="sxs-lookup"><span data-stu-id="84bbe-114">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="84bbe-115"><xref:System.Security.SecureString> Класс и его члены не являются видимыми для модели COM</span><span class="sxs-lookup"><span data-stu-id="84bbe-115">The <xref:System.Security.SecureString> class and its members are not visible to COM.</span></span> <span data-ttu-id="84bbe-116">Дополнительные сведения см. в разделе <xref:System.Runtime.InteropServices.ComVisibleAttribute>.</span><span class="sxs-lookup"><span data-stu-id="84bbe-116">For more information, see <xref:System.Runtime.InteropServices.ComVisibleAttribute>.</span></span>  
  
 <span data-ttu-id="84bbe-117">Содержание</span><span class="sxs-lookup"><span data-stu-id="84bbe-117">In this section:</span></span>  
  
 <span data-ttu-id="84bbe-118">[Строка vs. SecureString](#vsString) </span><span class="sxs-lookup"><span data-stu-id="84bbe-118">[String vs. SecureString](#vsString) </span></span>  
 <span data-ttu-id="84bbe-119">[SecureString операций](#Ops) </span><span class="sxs-lookup"><span data-stu-id="84bbe-119">[SecureString operations](#Ops) </span></span>  
 <span data-ttu-id="84bbe-120">[SecureString и взаимодействия](#interop) </span><span class="sxs-lookup"><span data-stu-id="84bbe-120">[SecureString and interop](#interop) </span></span>  
 [<span data-ttu-id="84bbe-121">Насколько хорошо защищен SecureString?</span><span class="sxs-lookup"><span data-stu-id="84bbe-121">How secure is  SecureString?</span></span>](#HowSecure)  
  
<a name="vsString"></a>   
## <a name="string-versus-securestring"></a><span data-ttu-id="84bbe-122">Строка или SecureString</span><span class="sxs-lookup"><span data-stu-id="84bbe-122">String versus SecureString</span></span>  
 <span data-ttu-id="84bbe-123">Экземпляр <xref:System.String?displayProperty=nameWithType> класс является неизменяемым и, если больше не нужен, не запланировано программным способом для сборки мусора; то есть экземпляр доступен только для чтения после его создания, и невозможно предсказать, когда экземпляр будет удаляется из памяти компьютера.</span><span class="sxs-lookup"><span data-stu-id="84bbe-123">An instance of the <xref:System.String?displayProperty=nameWithType> class is both immutable and, when no longer needed, cannot be programmatically scheduled for garbage collection; that is, the instance is read-only after it is created, and it is not possible to predict when the instance will be deleted from computer memory.</span></span> <span data-ttu-id="84bbe-124">Так как <xref:System.String?displayProperty=nameWithType> экземпляры являются неизменяемыми, операции, которые могут изменить существующий экземпляр фактически создать копию его для управления.</span><span class="sxs-lookup"><span data-stu-id="84bbe-124">Because <xref:System.String?displayProperty=nameWithType> instances are immutable, operations that appear to modify an existing instance  actually create a copy of it to manipulate.</span></span> <span data-ttu-id="84bbe-125">Следовательно Если <xref:System.String> объект содержит конфиденциальные сведения, например пароль, номер кредитной карты или персональные данные, есть риск, данные могут стать доступными после их использования, поскольку приложение не может удалить данные из памяти компьютера .</span><span class="sxs-lookup"><span data-stu-id="84bbe-125">Consequently, if a <xref:System.String> object contains sensitive information such as a password, credit card number, or personal data, there is a risk the information could be revealed after it is used because your application cannot delete the data from computer memory.</span></span>  
  
 <span data-ttu-id="84bbe-126">Объект <xref:System.Security.SecureString> объект подобен <xref:System.String> объекта в том, что он имеет значение text.</span><span class="sxs-lookup"><span data-stu-id="84bbe-126">A <xref:System.Security.SecureString> object is similar to a <xref:System.String> object in that it has a text value.</span></span> <span data-ttu-id="84bbe-127">Тем не менее значение <xref:System.Security.SecureString> объекта закреплен в памяти, могут использовать механизм защиты, такие как шифрование, предоставляемые операционной системы, можно изменять, пока приложение помечает его как доступное только для чтения и могут быть удалены из памяти компьютера с приложением, вызывающим метод <xref:System.Security.SecureString.Dispose%2A> метод или сборщиком мусора .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="84bbe-127">However, the value of a <xref:System.Security.SecureString> object is pinned in memory, may use a protection mechanism, such as encryption, provided by the underlying operating system, can be modified until your application marks it as read-only, and can be deleted from computer memory either by your application calling the <xref:System.Security.SecureString.Dispose%2A> method  or by the .NET Framework garbage collector.</span></span>  
  
 <span data-ttu-id="84bbe-128">Описание ограничения <xref:System.Security.SecureString> , представлена в разделе [насколько безопасен SecureString?](#HowSecure) раздел.</span><span class="sxs-lookup"><span data-stu-id="84bbe-128">For a discussion of the limitations of the <xref:System.Security.SecureString> class, see the [How secure is  SecureString?](#HowSecure) section.</span></span>  
  
 [<span data-ttu-id="84bbe-129">К началу</span><span class="sxs-lookup"><span data-stu-id="84bbe-129">Back to top</span></span>](#top)  
  
<a name="Ops"></a>   
## <a name="securestring-operations"></a><span data-ttu-id="84bbe-130">SecureString операций</span><span class="sxs-lookup"><span data-stu-id="84bbe-130">SecureString operations</span></span>  
 <span data-ttu-id="84bbe-131"><xref:System.Security.SecureString> Класс содержит элементы, которые позволяют выполнять следующее:</span><span class="sxs-lookup"><span data-stu-id="84bbe-131">The <xref:System.Security.SecureString> class includes members that allow you to do the following:</span></span>  
  
 <span data-ttu-id="84bbe-132">Создать экземпляр <xref:System.Security.SecureString> объекта</span><span class="sxs-lookup"><span data-stu-id="84bbe-132">Instantiate a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="84bbe-133">Вы создаете экземпляры <xref:System.Security.SecureString> объекта, вызывая его конструктор без параметров.</span><span class="sxs-lookup"><span data-stu-id="84bbe-133">You instantiate a <xref:System.Security.SecureString> object by calling its parameterless constructor.</span></span>  
  
 <span data-ttu-id="84bbe-134">Добавление символов для <xref:System.Security.SecureString> объекта</span><span class="sxs-lookup"><span data-stu-id="84bbe-134">Add characters to a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="84bbe-135">Можно добавить один символ за раз, чтобы <xref:System.Security.SecureString> , вызвав его <xref:System.Security.SecureString.AppendChar%2A> или <xref:System.Security.SecureString.InsertAt%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="84bbe-135">You can add a single character at a time to a <xref:System.Security.SecureString> object  by calling its <xref:System.Security.SecureString.AppendChar%2A> or <xref:System.Security.SecureString.InsertAt%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="84bbe-136">Объект <xref:System.Security.SecureString> объект никогда не должен быть создан из <xref:System.String>, так как конфиденциальные данные уже регулируется памяти сохраняемости последствия неизменяемый <xref:System.String> класса.</span><span class="sxs-lookup"><span data-stu-id="84bbe-136">A <xref:System.Security.SecureString> object should never be constructed from a <xref:System.String>, because the sensitive data is already subject to the memory persistence consequences of the immutable <xref:System.String> class.</span></span> <span data-ttu-id="84bbe-137">Лучший способ создания <xref:System.Security.SecureString> объект является из неуправляемого источника символа во время, такие как <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="84bbe-137">The best way to construct a <xref:System.Security.SecureString> object is from a character-at-a-time unmanaged source, such as the <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="84bbe-138">Удалите символы из <xref:System.Security.SecureString> объекта</span><span class="sxs-lookup"><span data-stu-id="84bbe-138">Remove characters from a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="84bbe-139">Вы можете заменить отдельный символ, вызвав <xref:System.Security.SecureString.SetAt%2A> метод, удалить отдельный символ, вызвав <xref:System.Security.SecureString.RemoveAt%2A> метода или удалите все символы из <xref:System.Security.SecureString> экземпляра путем вызова <xref:System.Security.SecureString.Clear%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="84bbe-139">You can replace an individual character by calling the <xref:System.Security.SecureString.SetAt%2A> method, remove an individual character by calling the <xref:System.Security.SecureString.RemoveAt%2A> method, or remove all characters from the <xref:System.Security.SecureString> instance by calling the  <xref:System.Security.SecureString.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="84bbe-140">Сделать <xref:System.Security.SecureString> объект только для чтения</span><span class="sxs-lookup"><span data-stu-id="84bbe-140">Make the <xref:System.Security.SecureString> object read-only</span></span>  
 <span data-ttu-id="84bbe-141">После определения строки, <xref:System.Security.SecureString> представляет объект, вызвать его <xref:System.Security.SecureString.MakeReadOnly%2A> метод, образуя из строки только для чтения.</span><span class="sxs-lookup"><span data-stu-id="84bbe-141">Once you have defined the string that the <xref:System.Security.SecureString> object represents, you call its  <xref:System.Security.SecureString.MakeReadOnly%2A> method to make the string read-only.</span></span>  
  
 <span data-ttu-id="84bbe-142">Получить сведения <xref:System.Security.SecureString> объекта</span><span class="sxs-lookup"><span data-stu-id="84bbe-142">Get information about the <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="84bbe-143"><xref:System.Security.SecureString> Класс имеет только два члены, которые предоставляют сведения о строке: его <xref:System.Security.SecureString.Length%2A> свойство, которое указывает количество единиц кода в кодировке UTF16 в строку; и <xref:System.Security.SecureString.IsReadOnly%2A>, метод, который указывает, является ли экземпляр только для чтения.</span><span class="sxs-lookup"><span data-stu-id="84bbe-143">The <xref:System.Security.SecureString> class has only two members that provide information about the string: its <xref:System.Security.SecureString.Length%2A> property, which indicates the number of UTF16-encoded code units in the string; and the <xref:System.Security.SecureString.IsReadOnly%2A>, method, which indicates whether the instance is read-only.</span></span>  
  
 <span data-ttu-id="84bbe-144">Освободить память, выделенную для <xref:System.Security.SecureString> экземпляра</span><span class="sxs-lookup"><span data-stu-id="84bbe-144">Release the memory allocated to the <xref:System.Security.SecureString> instance</span></span>  
 <span data-ttu-id="84bbe-145">Так как <xref:System.Security.SecureString> реализует <xref:System.IDisposable> интерфейс, освобождения его памяти путем вызова <xref:System.Security.SecureString.Dispose%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="84bbe-145">Because <xref:System.Security.SecureString> implements the <xref:System.IDisposable> interface, you release its memory by calling the <xref:System.Security.SecureString.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="84bbe-146"><xref:System.Security.SecureString> Класс не имеет членов, которые проверяют, сравнения или преобразуйте значение параметра <xref:System.Security.SecureString>.</span><span class="sxs-lookup"><span data-stu-id="84bbe-146">The <xref:System.Security.SecureString> class has no members that inspect, compare, or convert the value of a <xref:System.Security.SecureString>.</span></span> <span data-ttu-id="84bbe-147">Отсутствие таких членов защищает значение экземпляра от случайного или злонамеренного раскрытия.</span><span class="sxs-lookup"><span data-stu-id="84bbe-147">The absence of such members helps protect the value of the instance from accidental or malicious exposure.</span></span> <span data-ttu-id="84bbe-148">Используйте соответствующие члены <xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType> класс, например <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> метода, чтобы управлять значение <xref:System.Security.SecureString> объекта.</span><span class="sxs-lookup"><span data-stu-id="84bbe-148">Use appropriate members of the <xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType> class, such as the <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> method, to manipulate the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 <span data-ttu-id="84bbe-149">Библиотеки классов .NET Framework, широко используемые <xref:System.Security.SecureString> экземпляров одним из следующих способов:</span><span class="sxs-lookup"><span data-stu-id="84bbe-149">The .NET Framework Class Library commonly uses <xref:System.Security.SecureString> instances in the following ways:</span></span>  
  
-   <span data-ttu-id="84bbe-150">Чтобы предоставить сведения о пароле к процессу с помощью <xref:System.Diagnostics.ProcessStartInfo> структуры или путем вызова перегрузки <xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType> метод, который имеет параметр типа <xref:System.Security.SecureString>.</span><span class="sxs-lookup"><span data-stu-id="84bbe-150">To provide password information to a process by using the <xref:System.Diagnostics.ProcessStartInfo> structure or by calling an overload of the <xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType> method that has a parameter of type <xref:System.Security.SecureString>.</span></span>  
  
-   <span data-ttu-id="84bbe-151">Для предоставления сведения о пароле сети путем вызова <xref:System.Net.NetworkCredential> конструктора класса, который имеет параметр типа <xref:System.Security.SecureString> или с помощью <xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="84bbe-151">To provide network password information by calling a <xref:System.Net.NetworkCredential> class constructor that has a parameter of type <xref:System.Security.SecureString> or by using the <xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="84bbe-152">Для предоставления сведений пароль для проверки подлинности SQL Server путем вызова <xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType> конструктор или получении значения <xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="84bbe-152">To provide password information for SQL Server Authentication by calling the <xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType> constructor or retrieving the value of the <xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="84bbe-153">Чтобы передать строку в неуправляемый код.</span><span class="sxs-lookup"><span data-stu-id="84bbe-153">To pass a string to unmanaged code.</span></span> <span data-ttu-id="84bbe-154">Дополнительные сведения см. в разделе [SecureString и взаимодействия](#interop) раздел.</span><span class="sxs-lookup"><span data-stu-id="84bbe-154">For more information, see the [SecureString and interop](#interop) section.</span></span>  
  
 [<span data-ttu-id="84bbe-155">К началу</span><span class="sxs-lookup"><span data-stu-id="84bbe-155">Back to top</span></span>](#top)  
  
<a name="interop"></a>   
## <a name="securestring-and-interop"></a><span data-ttu-id="84bbe-156">SecureString и взаимодействия</span><span class="sxs-lookup"><span data-stu-id="84bbe-156">SecureString and interop</span></span>  
 <span data-ttu-id="84bbe-157">Поскольку операционная система не поддерживает непосредственно <xref:System.Security.SecureString>, необходимо преобразовать значение <xref:System.Security.SecureString> объект к типу требуемую строку перед передачей их собственного метода.</span><span class="sxs-lookup"><span data-stu-id="84bbe-157">Because the operating system does not  directly support <xref:System.Security.SecureString>, you must convert the value of the <xref:System.Security.SecureString> object to the required string type before passing the string to a native method.</span></span>  <span data-ttu-id="84bbe-158"><xref:System.Runtime.InteropServices.Marshal> Класс имеет пять методов, которые это сделать:</span><span class="sxs-lookup"><span data-stu-id="84bbe-158">The <xref:System.Runtime.InteropServices.Marshal> class has five methods that do this:</span></span>  
  
-   <span data-ttu-id="84bbe-159"><xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>, который преобразует <xref:System.Security.SecureString> строковое значение для двоичную строку (BSTR), распознаваемые COM.</span><span class="sxs-lookup"><span data-stu-id="84bbe-159"><xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>, which converts the <xref:System.Security.SecureString> string value to a binary string (BSTR) recognized by COM.</span></span>  
  
-   <span data-ttu-id="84bbe-160"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType> и <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>, какие копии <xref:System.Security.SecureString> строковое значение в строку ANSI в неуправляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="84bbe-160"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>, which copy the <xref:System.Security.SecureString> string value to an ANSI string in unmanaged memory.</span></span>  
  
-   <span data-ttu-id="84bbe-161"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType> и <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>, какие копии <xref:System.Security.SecureString> строковое значение для строки в Юникоде в неуправляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="84bbe-161"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>, which copy the <xref:System.Security.SecureString> string value to a Unicode string in unmanaged memory.</span></span>  
  
 <span data-ttu-id="84bbe-162">Каждый из этих методов создает строку открытого текста в неуправляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="84bbe-162">Each of these methods creates a clear-text string in unmanaged memory.</span></span> <span data-ttu-id="84bbe-163">Он отвечает разработчик обнуляется и освободить эту память, как только оно не требуется.</span><span class="sxs-lookup"><span data-stu-id="84bbe-163">It is the responsibility of the developer to zero out and free that memory as soon as it is no longer needed.</span></span> <span data-ttu-id="84bbe-164">Каждый из методов выделения строки преобразования и памяти имеет соответствующий метод для обнуляется и освободить выделенную память:</span><span class="sxs-lookup"><span data-stu-id="84bbe-164">Each of the string conversion and memory allocation methods has a corresponding method to zero out and free the allocated memory:</span></span>  
  
|<span data-ttu-id="84bbe-165">Метод распределения и преобразования</span><span class="sxs-lookup"><span data-stu-id="84bbe-165">Allocation and conversion method</span></span>|<span data-ttu-id="84bbe-166">Ноль и free-метод</span><span class="sxs-lookup"><span data-stu-id="84bbe-166">Zero and free method</span></span>|  
|--------------------------------------|--------------------------|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A?displayProperty=nameWithType>|  
  
 [<span data-ttu-id="84bbe-167">К началу</span><span class="sxs-lookup"><span data-stu-id="84bbe-167">Back to top</span></span>](#top)  
  
<a name="HowSecure"></a>   
## <a name="how-secure-is-securestring"></a><span data-ttu-id="84bbe-168">Насколько хорошо защищен SecureString?</span><span class="sxs-lookup"><span data-stu-id="84bbe-168">How secure is SecureString?</span></span>  
 <span data-ttu-id="84bbe-169">При создании должным образом, <xref:System.Security.SecureString> экземпляра обеспечивает большую степень защиты данных, чем <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="84bbe-169">When created properly, a <xref:System.Security.SecureString> instance provides more data protection than a <xref:System.String>.</span></span> <span data-ttu-id="84bbe-170">При создании строки из источника символ во время <xref:System.String> создает несколько промежуточных в памяти, а <xref:System.Security.SecureString> создает только один экземпляр.</span><span class="sxs-lookup"><span data-stu-id="84bbe-170">When creating a string from a character-at-a-time source, <xref:System.String> creates multiple intermediate in memory, whereas  <xref:System.Security.SecureString> creates just a single instance.</span></span>  <span data-ttu-id="84bbe-171">Сбор мусора в <xref:System.String> объектов является недетерминированным.</span><span class="sxs-lookup"><span data-stu-id="84bbe-171">Garbage collection of <xref:System.String> objects  is non-deterministic.</span></span> <span data-ttu-id="84bbe-172">Кроме того, так как его память не закреплен, сборщик мусора будет сделать дополнительные копии <xref:System.String> значений при перемещении и сжатие памяти.</span><span class="sxs-lookup"><span data-stu-id="84bbe-172">In addition, because its memory is not pinned, the garbage collector will make additional copies of <xref:System.String> values when moving and compacting memory.</span></span> <span data-ttu-id="84bbe-173">Напротив, памяти, выделенной для <xref:System.Security.SecureString> закрепляется объекта, а также что память может освобождаться путем вызова <xref:System.Security.SecureString.Dispose%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="84bbe-173">In contrast, the memory allocated to a <xref:System.Security.SecureString> object is pinned,  and that memory can be freed by calling the <xref:System.Security.SecureString.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="84bbe-174">Несмотря на то, что данные, хранящиеся в <xref:System.Security.SecureString> экземпляр является более безопасной, чем данные, хранящиеся в <xref:System.String> экземпляра, имеют значительные ограничения на безопасной <xref:System.Security.SecureString> экземпляр.</span><span class="sxs-lookup"><span data-stu-id="84bbe-174">Although data stored in a <xref:System.Security.SecureString> instance is more secure than data stored in a <xref:System.String> instance, there are significant limitations on how secure a <xref:System.Security.SecureString> instance is.</span></span> <span data-ttu-id="84bbe-175">Сюда входит следующее.</span><span class="sxs-lookup"><span data-stu-id="84bbe-175">These include:</span></span>  
  
 <span data-ttu-id="84bbe-176">Platform</span><span class="sxs-lookup"><span data-stu-id="84bbe-176">Platform</span></span>  
 <span data-ttu-id="84bbe-177">В операционной системе Windows, а содержимое <xref:System.Security.SecureString> массив внутренних символов экземпляра шифруются.</span><span class="sxs-lookup"><span data-stu-id="84bbe-177">On the Windows operating system, the contents of a <xref:System.Security.SecureString> instance's internal character array are encrypted.</span></span> <span data-ttu-id="84bbe-178">Тем не менее ли из-за отсутствия API или проблемы управления ключами, шифрование не поддерживается на всех платформах.</span><span class="sxs-lookup"><span data-stu-id="84bbe-178">However, whether because of missing APIs or key management issues,  encryption is not available on all platforms.</span></span> <span data-ttu-id="84bbe-179">Из-за этой зависимости платформы <xref:System.Security.SecureString> внутреннего хранилища на платформе, отличных от Windows, не шифруются.</span><span class="sxs-lookup"><span data-stu-id="84bbe-179">Because of this platform dependency, <xref:System.Security.SecureString> does not encrypt the internal storage on non-Windows platform.</span></span> <span data-ttu-id="84bbe-180">Другие функции используются на этих платформах для дополнительной защиты.</span><span class="sxs-lookup"><span data-stu-id="84bbe-180">Other techniques are used on those platforms to provide additional protection.</span></span>
  
 <span data-ttu-id="84bbe-181">Длительность</span><span class="sxs-lookup"><span data-stu-id="84bbe-181">Duration</span></span>  
 <span data-ttu-id="84bbe-182">Даже если <xref:System.Security.SecureString> реализуется возможность воспользоваться преимуществами шифрования, назначенные в виде обычного текста <xref:System.Security.SecureString> экземпляр может быть доступен в разные моменты времени:</span><span class="sxs-lookup"><span data-stu-id="84bbe-182">Even if the <xref:System.Security.SecureString> implementation is able to take advantage of encryption, the plain text assigned to the <xref:System.Security.SecureString> instance may be exposed at various times:</span></span>  
  
-   <span data-ttu-id="84bbe-183">Поскольку Windows не предоставляет реализацию защищенной строки на уровне операционной системы, в .NET Framework по-прежнему имеется для преобразования значения защищенной строки в представление в виде обычного текста для его использования.</span><span class="sxs-lookup"><span data-stu-id="84bbe-183">Because Windows doesn't offer a secure string implementation at the operating system level, the .NET Framework still has to convert the secure string value to its plain text representation in order to use it.</span></span>  
  
-   <span data-ttu-id="84bbe-184">Каждый раз, когда значение защищенной строки изменяется методами, такие как <xref:System.Security.SecureString.AppendChar%2A> или <xref:System.Security.SecureString.RemoveAt%2A>, он должен быть расшифрован (которое преобразуется обратно в обычный текст), изменения и снова зашифровываются.</span><span class="sxs-lookup"><span data-stu-id="84bbe-184">Whenever the value of the secure string is modified by methods such as <xref:System.Security.SecureString.AppendChar%2A> or <xref:System.Security.SecureString.RemoveAt%2A>, it must be decrypted (that is, converted back to plain text), modified, and then encrypted again.</span></span>  
  
-   <span data-ttu-id="84bbe-185">Если защищенная строка используется в вызове взаимодействия, оно должно быть преобразовано в строку ANSI, строки Юникода или двоичную строку (BSTR).</span><span class="sxs-lookup"><span data-stu-id="84bbe-185">If the secure string is used in an interop call, it must be converted to an ANSI string, a Unicode string, or a binary string (BSTR).</span></span> <span data-ttu-id="84bbe-186">Дополнительные сведения см. в разделе [SecureString и взаимодействия](#interop) раздел.</span><span class="sxs-lookup"><span data-stu-id="84bbe-186">For more information, see the [SecureString and interop](#interop) section.</span></span>  
  
 <span data-ttu-id="84bbe-187">Интервал времени, для которого <xref:System.Security.SecureString> экземпляра значение предоставляется просто укорачивается сравнению с <xref:System.String> класса.</span><span class="sxs-lookup"><span data-stu-id="84bbe-187">The time interval for which the <xref:System.Security.SecureString> instance's value is exposed  is merely shortened in comparison to the <xref:System.String> class.</span></span>  
  
 <span data-ttu-id="84bbe-188">Сравнение использования</span><span class="sxs-lookup"><span data-stu-id="84bbe-188">Storage versus usage</span></span>  
 <span data-ttu-id="84bbe-189">Как правило <xref:System.Security.SecureString> класс определяет механизм хранения для строковых значений, которые должны быть защищены или хранить в тайне.</span><span class="sxs-lookup"><span data-stu-id="84bbe-189">More generally, the <xref:System.Security.SecureString> class defines a storage mechanism for string values that should be protected or kept confidential.</span></span> <span data-ttu-id="84bbe-190">Тем не менее, за пределами самой .NET Framework поддерживает механизм использования <xref:System.Security.SecureString>.</span><span class="sxs-lookup"><span data-stu-id="84bbe-190">However, outside of the .NET Framework itself, no usage mechanism supports <xref:System.Security.SecureString>.</span></span> <span data-ttu-id="84bbe-191">Это означает, что защищенная строка необходимо преобразовать в удобный для использования формат (обычно виде открытого текста), можно распознать по своей цели, а что расшифровки и преобразование должно находиться в пространстве пользователя.</span><span class="sxs-lookup"><span data-stu-id="84bbe-191">This means that the secure string must be converted to a usable form (typically a clear text form) that can be recognized by its target, and     that decryption and conversion must occur in user space.</span></span>  
  
 <span data-ttu-id="84bbe-192">Всего <xref:System.Security.SecureString> надежнее, чем <xref:System.String> так, как он ограничивает возможность раскрытия конфиденциальных строковых данных.</span><span class="sxs-lookup"><span data-stu-id="84bbe-192">Overall, <xref:System.Security.SecureString> is more secure than <xref:System.String> because it limits the exposure of sensitive string data.</span></span> <span data-ttu-id="84bbe-193">Тем не менее эти строки, по-прежнему могут быть открыты для любого процесса или операцию, которая имеет доступ к необработанные памяти, например вредоносных процесса, выполняющегося на главном компьютере, дамп процесса или файл подкачки для просмотра пользователем.</span><span class="sxs-lookup"><span data-stu-id="84bbe-193">However, those strings may still be exposed to any process or operation that has access to raw memory, such as a malicious process running on the host computer, a process dump, or a user-viewable swap file.</span></span> <span data-ttu-id="84bbe-194">Вместо использования <xref:System.Security.SecureString> защиты паролей, рекомендуемой альтернативой является использование непрозрачный дескриптор для учетных данных, хранящихся вне процесса.</span><span class="sxs-lookup"><span data-stu-id="84bbe-194">Instead of using <xref:System.Security.SecureString> to protect passwords, the recommended alternative is to use an opaque handle to credentials that are stored outside of the process.</span></span>  
  
 [<span data-ttu-id="84bbe-195">К началу</span><span class="sxs-lookup"><span data-stu-id="84bbe-195">Back to top</span></span>](#top)  
  
   
  
## Examples  
 <span data-ttu-id="84bbe-196">Следующий пример демонстрирует, как использовать <xref:System.Security.SecureString> для защиты пароля пользователя для использования в качестве учетных данных для запуска нового процесса.</span><span class="sxs-lookup"><span data-stu-id="84bbe-196">The following example demonstrates how to use a <xref:System.Security.SecureString> to secure a user's password for use as a credential to start a new process.</span></span>  
  
 [!code-csharp[System.Security.SecureString.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/ctor4.cs#4)]
 [!code-vb[System.Security.SecureString.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/ctor4.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.ComVisibleAttribute" />
    <altmember cref="T:System.Runtime.InteropServices.Marshal" />
    <altmember cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" />
    <altmember cref="T:System.IDisposable" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="84bbe-197">Инициализирует новый экземпляр класса <see cref="T:System.Security.SecureString" />.</span><span class="sxs-lookup"><span data-stu-id="84bbe-197">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecureString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecureString();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84bbe-198">Инициализирует новый экземпляр класса <see cref="T:System.Security.SecureString" />.</span><span class="sxs-lookup"><span data-stu-id="84bbe-198">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="84bbe-199">В следующем примере используется значение по умолчанию (или без параметров) конструктор для создания нового <xref:System.Security.SecureString> объекта.</span><span class="sxs-lookup"><span data-stu-id="84bbe-199">The following example uses the default (or parameterless) constructor to instantiate a new <xref:System.Security.SecureString> object.</span></span> <span data-ttu-id="84bbe-200">Затем он вызывает <xref:System.Security.SecureString.AppendChar%2A> метод, чтобы добавить к нему массив символов.</span><span class="sxs-lookup"><span data-stu-id="84bbe-200">It then calls the <xref:System.Security.SecureString.AppendChar%2A> method to add an array of characters to it.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cpp/Ctor2.cpp#2)]
 [!code-csharp[System.Security.SecureString.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/Ctor2.cs#2)]
 [!code-vb[System.Security.SecureString.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/ctor2.vb#2)]  
  
 <span data-ttu-id="84bbe-201">В следующем примере создается <xref:System.Security.SecureString> объекта из значения <xref:System.String> объекта.</span><span class="sxs-lookup"><span data-stu-id="84bbe-201">The following example creates a <xref:System.Security.SecureString> object from the value of a <xref:System.String> object.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cpp/Ctor3.cpp#3)]
 [!code-csharp[System.Security.SecureString.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/Ctor3.cs#3)]
 [!code-vb[System.Security.SecureString.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/Ctor3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="84bbe-202">Произошла ошибка при защите значения этого экземпляра или снятии с него защиты.</span><span class="sxs-lookup"><span data-stu-id="84bbe-202">An error occurred while protecting or unprotecting the value of this instance.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="84bbe-203">Эта операция не поддерживается этой платформой.</span><span class="sxs-lookup"><span data-stu-id="84bbe-203">This operation is not supported on this platform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecureString (char* value, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char* value, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecureString(char* value, int length);" />
      <MemberSignature Language="F#" Value="new System.Security.SecureString : nativeptr&lt;char&gt; * int -&gt; System.Security.SecureString" Usage="new System.Security.SecureString (value, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Char*" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="84bbe-204">Указатель на массив объектов <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="84bbe-204">A pointer to an array of <see cref="T:System.Char" /> objects.</span></span></param>
        <param name="length"><span data-ttu-id="84bbe-205">Число элементов массива <paramref name="value" />, включаемых в новый экземпляр.</span><span class="sxs-lookup"><span data-stu-id="84bbe-205">The number of elements of <paramref name="value" /> to include in the new instance.</span></span></param>
        <summary><span data-ttu-id="84bbe-206">Инициализирует новый экземпляр класса <see cref="T:System.Security.SecureString" /> из подмассива объектов <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="84bbe-206">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class from a subarray of <see cref="T:System.Char" /> objects.</span></span>  
  
<span data-ttu-id="84bbe-207">Этот конструктор несовместим с CLS.</span><span class="sxs-lookup"><span data-stu-id="84bbe-207">This constructor is not CLS-compliant.</span></span> <span data-ttu-id="84bbe-208">CLS-совместимая альтернатива — <see cref="M:System.Security.SecureString.#ctor" />.</span><span class="sxs-lookup"><span data-stu-id="84bbe-208">The CLS-compliant alternative is <see cref="M:System.Security.SecureString.#ctor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84bbe-209">Этот конструктор инициализирует новый <xref:System.Security.SecureString> объектом количество символов в `value` определяется `length`; значение экземпляра шифруется.</span><span class="sxs-lookup"><span data-stu-id="84bbe-209">This constructor initializes the new <xref:System.Security.SecureString> object to the number of characters in `value` specified by `length`; the value of the instance is then encrypted.</span></span>  
  
 <span data-ttu-id="84bbe-210">В C# этот конструктор определен только в контексте небезопасного кода.</span><span class="sxs-lookup"><span data-stu-id="84bbe-210">In C#, this constructor is defined only in the context of unsafe code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84bbe-211">В следующем примере создается новый <xref:System.Security.SecureString> объект путем передачи его конструктору указатель на массив символов.</span><span class="sxs-lookup"><span data-stu-id="84bbe-211">The following example instantiates a new <xref:System.Security.SecureString> object by passing its constructor a pointer to a character array.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securestring.ctor2/cpp/ctor1.cpp#1)]
 [!code-csharp[System.Security.SecureString.Ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securestring.ctor2/cs/ctor1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="84bbe-212"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84bbe-212"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="84bbe-213"><paramref name="length" /> меньше нуля или больше 65 536.</span><span class="sxs-lookup"><span data-stu-id="84bbe-213"><paramref name="length" /> is less than zero or greater than 65,536.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="84bbe-214">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</span><span class="sxs-lookup"><span data-stu-id="84bbe-214">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="84bbe-215">Эта операция не поддерживается этой платформой.</span><span class="sxs-lookup"><span data-stu-id="84bbe-215">This operation is not supported on this platform.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="84bbe-216">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="84bbe-216">requires full trust for the immediate caller.</span></span> <span data-ttu-id="84bbe-217">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="84bbe-217">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AppendChar">
      <MemberSignature Language="C#" Value="public void AppendChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.AppendChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendChar (c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendChar(char c);" />
      <MemberSignature Language="F#" Value="member this.AppendChar : char -&gt; unit" Usage="secureString.AppendChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="84bbe-218">Знак, добавляемый к защищенной строке.</span><span class="sxs-lookup"><span data-stu-id="84bbe-218">A character to append to this secure string.</span></span></param>
        <summary><span data-ttu-id="84bbe-219">Добавляет знак в конец текущей защищенной строки.</span><span class="sxs-lookup"><span data-stu-id="84bbe-219">Appends a character to the end of the current secure string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84bbe-220">Если реализация использует механизм защиты, такие как шифрование, значение этой защищенной строки, если таковое имеется, не защищен; `c` добавляется; затем новое значение защищенной строки повторной защиты.</span><span class="sxs-lookup"><span data-stu-id="84bbe-220">If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; `c` is appended; then the new value of the secure string is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84bbe-221">В следующем примере показано, как <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, и <xref:System.Security.SecureString.Clear%2A> методы изменяют значение <xref:System.Security.SecureString> объекта.</span><span class="sxs-lookup"><span data-stu-id="84bbe-221">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 <span data-ttu-id="84bbe-222">В следующем примере показано, как <xref:System.Security.SecureString.AppendChar%2A> и <xref:System.Security.SecureString.RemoveAt%2A> методы могут использоваться для сбора символов в пароле.</span><span class="sxs-lookup"><span data-stu-id="84bbe-222">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="84bbe-223">Защищенная строка уже удалена.</span><span class="sxs-lookup"><span data-stu-id="84bbe-223">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="84bbe-224">Данная защищенная строка доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="84bbe-224">This secure string is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="84bbe-225">При выполнении этой операции длина защищенной строки превысит 65 536 символов.</span><span class="sxs-lookup"><span data-stu-id="84bbe-225">Performing this operation would make the length of this secure string greater than 65,536 characters.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="84bbe-226">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</span><span class="sxs-lookup"><span data-stu-id="84bbe-226">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="secureString.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84bbe-227">Удаляет значение текущей защищенной строки.</span><span class="sxs-lookup"><span data-stu-id="84bbe-227">Deletes the value of the current secure string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84bbe-228">Обнуляется памяти компьютера, который содержит значение этой защищенной строки, то длина значения этой защищенной строки, равным нулю.</span><span class="sxs-lookup"><span data-stu-id="84bbe-228">The computer memory that contains the value of this secure string is zeroed, then the length of the value of this secure string is set to zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84bbe-229">В следующем примере показано, как <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, и <xref:System.Security.SecureString.Clear%2A> методы изменяют значение <xref:System.Security.SecureString> объекта.</span><span class="sxs-lookup"><span data-stu-id="84bbe-229">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="84bbe-230">Защищенная строка уже удалена.</span><span class="sxs-lookup"><span data-stu-id="84bbe-230">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="84bbe-231">Данная защищенная строка доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="84bbe-231">This secure string is read-only.</span></span></exception>
        <altmember cref="P:System.Security.SecureString.Length" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecureString Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecureString Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecureString ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Security.SecureString" Usage="secureString.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84bbe-232">Создает копию текущей защищенной строки.</span><span class="sxs-lookup"><span data-stu-id="84bbe-232">Creates a copy of the current secure string.</span></span></summary>
        <returns><span data-ttu-id="84bbe-233">Копия этой защищенной строки.</span><span class="sxs-lookup"><span data-stu-id="84bbe-233">A duplicate of this secure string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84bbe-234">Если экземпляр <xref:System.Security.SecureString> будет помечен как доступный только для чтения, копия этого экземпляра не будет только для чтения.</span><span class="sxs-lookup"><span data-stu-id="84bbe-234">If an instance of a <xref:System.Security.SecureString> is marked read-only, the copy of that instance will not be read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="84bbe-235">Защищенная строка уже удалена.</span><span class="sxs-lookup"><span data-stu-id="84bbe-235">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="84bbe-236">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</span><span class="sxs-lookup"><span data-stu-id="84bbe-236">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
        <altmember cref="M:System.Security.SecureString.MakeReadOnly" />
        <altmember cref="M:System.Security.SecureString.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="secureString.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84bbe-237">Освобождает все ресурсы, используемые текущим объектом <see cref="T:System.Security.SecureString" />.</span><span class="sxs-lookup"><span data-stu-id="84bbe-237">Releases all resources used by the current <see cref="T:System.Security.SecureString" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84bbe-238"><xref:System.Security.SecureString.Dispose%2A> Метод записывает двоичных нулей на выделенную память, содержащий значение данного объекта <xref:System.Security.SecureString> объекта, а затем освобождает выделенную память.</span><span class="sxs-lookup"><span data-stu-id="84bbe-238">The <xref:System.Security.SecureString.Dispose%2A> method writes binary zeroes to the allocated memory that contains the value of this <xref:System.Security.SecureString> object, then frees the allocated memory.</span></span>  
  
 <span data-ttu-id="84bbe-239">Дополнительные сведения см. в разделе [мусора](~/docs/standard/garbage-collection/index.md).</span><span class="sxs-lookup"><span data-stu-id="84bbe-239">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public void InsertAt (int index, char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertAt(int32 index, char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAt (index As Integer, c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAt(int index, char c);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : int * char -&gt; unit" Usage="secureString.InsertAt (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="84bbe-240">Индекс позиции вставки параметра <paramref name="c" />.</span><span class="sxs-lookup"><span data-stu-id="84bbe-240">The index position where parameter <paramref name="c" /> is inserted.</span></span></param>
        <param name="c"><span data-ttu-id="84bbe-241">Вставляемый знак.</span><span class="sxs-lookup"><span data-stu-id="84bbe-241">The character to insert.</span></span></param>
        <summary><span data-ttu-id="84bbe-242">Вставляет знак в заданную индексом позицию защищенной строки.</span><span class="sxs-lookup"><span data-stu-id="84bbe-242">Inserts a character in this secure string at the specified index position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84bbe-243">Индекс (с нуля); Первый символ в этой защищенной строки индекс равен нулю.</span><span class="sxs-lookup"><span data-stu-id="84bbe-243">The index is zero-based; the first character in this secure string is at index position zero.</span></span>  
  
 <span data-ttu-id="84bbe-244">Если реализация использует механизм защиты, такие как шифрование, значение защищенной строки, если таковое имеется, не защищен; `c` вставляется в указанной позиции индекса; затем новое значение повторной защиты.</span><span class="sxs-lookup"><span data-stu-id="84bbe-244">If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; `c` is inserted at the specified index position; then the new value is re-protected.</span></span> <span data-ttu-id="84bbe-245"><xref:System.Security.SecureString.InsertAt%2A> Метод позволяет получить те же результаты, что <xref:System.Security.SecureString.AppendChar%2A> метод, который вставляет символ в конце защищенной строки, если `index` параметр <xref:System.Security.SecureString.InsertAt%2A> присваивается длину этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="84bbe-245">The <xref:System.Security.SecureString.InsertAt%2A> method yields the same results as the <xref:System.Security.SecureString.AppendChar%2A> method, which inserts a character at the end of a secure string, if the `index` parameter of <xref:System.Security.SecureString.InsertAt%2A> is set to the length of this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84bbe-246">В следующем примере показано, как <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, и <xref:System.Security.SecureString.Clear%2A> методы изменяют значение <xref:System.Security.SecureString> объекта.</span><span class="sxs-lookup"><span data-stu-id="84bbe-246">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="84bbe-247">Защищенная строка уже удалена.</span><span class="sxs-lookup"><span data-stu-id="84bbe-247">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="84bbe-248">Данная защищенная строка доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="84bbe-248">This secure string is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="84bbe-249">Значение <paramref name="index" /> менее нуля или более длины защищенной строки.</span><span class="sxs-lookup"><span data-stu-id="84bbe-249"><paramref name="index" /> is less than zero, or greater than the length of this secure string.</span></span>  
  
<span data-ttu-id="84bbe-250">-или-</span><span class="sxs-lookup"><span data-stu-id="84bbe-250">-or-</span></span> 
<span data-ttu-id="84bbe-251">При выполнении этой операции длина защищенной строки превысит 65 536 символов.</span><span class="sxs-lookup"><span data-stu-id="84bbe-251">Performing this operation would make the length of this secure string greater than 65,536 characters.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="84bbe-252">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</span><span class="sxs-lookup"><span data-stu-id="84bbe-252">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function IsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsReadOnly();" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : unit -&gt; bool" Usage="secureString.IsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84bbe-253">Указывает, что защищенная строка доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="84bbe-253">Indicates whether this secure string is marked read-only.</span></span></summary>
        <returns><span data-ttu-id="84bbe-254">Значение <see langword="true" />, если защищенная строка доступна только для чтения; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="84bbe-254"><see langword="true" /> if this secure string is marked read-only; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84bbe-255">После возникновения <xref:System.Security.SecureString> помечен только для чтения <xref:System.Security.SecureString.MakeReadOnly%2A> метод, любая попытка изменить значение этого экземпляра вызывает <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="84bbe-255">After an instance of <xref:System.Security.SecureString> is marked read-only by the <xref:System.Security.SecureString.MakeReadOnly%2A> method, any attempt to modify the value of the instance throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="84bbe-256">Используйте <xref:System.Security.SecureString.IsReadOnly%2A> тестируемого метода ли <xref:System.Security.SecureString> доступен только для чтения, прежде чем пытаться изменить его.</span><span class="sxs-lookup"><span data-stu-id="84bbe-256">Use the <xref:System.Security.SecureString.IsReadOnly%2A> method to test whether a <xref:System.Security.SecureString> is read-only before attempting to modify it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="84bbe-257">Защищенная строка уже удалена.</span><span class="sxs-lookup"><span data-stu-id="84bbe-257">This secure string has already been disposed.</span></span></exception>
        <altmember cref="M:System.Security.SecureString.MakeReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecureString.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Security.SecureString.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84bbe-258">Возвращает количество символов в текущей защищенной строке.</span><span class="sxs-lookup"><span data-stu-id="84bbe-258">Gets the number of characters in the current secure string.</span></span></summary>
        <value><span data-ttu-id="84bbe-259">Количество объектов <see cref="T:System.Char" /> в этой защищенной строке.</span><span class="sxs-lookup"><span data-stu-id="84bbe-259">The number of <see cref="T:System.Char" /> objects in this secure string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84bbe-260"><xref:System.Security.SecureString.Length%2A> Свойство возвращает количество <xref:System.Char> объектов в данном экземпляре, не число символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="84bbe-260">The <xref:System.Security.SecureString.Length%2A> property returns the number of <xref:System.Char> objects in this instance, not the number of Unicode characters.</span></span> <span data-ttu-id="84bbe-261">Символ Юникода могут быть представлены в более чем одной <xref:System.Char> объекта.</span><span class="sxs-lookup"><span data-stu-id="84bbe-261">A Unicode character might be represented by more than one <xref:System.Char> object.</span></span>  
  
 <span data-ttu-id="84bbe-262">Максимальная длина <xref:System.Security.SecureString> экземпляра составляет 65 536 символов.</span><span class="sxs-lookup"><span data-stu-id="84bbe-262">The maximum length of a <xref:System.Security.SecureString> instance is 65,536 characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="84bbe-263">Защищенная строка уже удалена.</span><span class="sxs-lookup"><span data-stu-id="84bbe-263">This secure string has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public void MakeReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.MakeReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeReadOnly();" />
      <MemberSignature Language="F#" Value="member this.MakeReadOnly : unit -&gt; unit" Usage="secureString.MakeReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84bbe-264">Делает текстовое значение этой защищенной строки доступным только для чтения.</span><span class="sxs-lookup"><span data-stu-id="84bbe-264">Makes the text value of this secure string read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84bbe-265">Инициализировать текстовое значение экземпляра <xref:System.Security.SecureString> класса <xref:System.Security.SecureString.%23ctor%2A> конструкторов и измените значение с <xref:System.Security.SecureString.Clear%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, <xref:System.Security.SecureString.InsertAt%2A>, и <xref:System.Security.SecureString.AppendChar%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="84bbe-265">Initialize the text value of an instance of the <xref:System.Security.SecureString> class with the <xref:System.Security.SecureString.%23ctor%2A> constructors, and modify the value with the <xref:System.Security.SecureString.Clear%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, <xref:System.Security.SecureString.InsertAt%2A>, and <xref:System.Security.SecureString.AppendChar%2A> methods.</span></span>  
  
 <span data-ttu-id="84bbe-266">После окончательного изменения были внесены, используйте <xref:System.Security.SecureString.MakeReadOnly%2A> способ сделать неизменяемым значение экземпляра (только для чтения).</span><span class="sxs-lookup"><span data-stu-id="84bbe-266">After you have made your final modifications, use the <xref:System.Security.SecureString.MakeReadOnly%2A> method to make the value of the instance immutable (read-only).</span></span> <span data-ttu-id="84bbe-267">Дополнительно после значение помечен как доступный только для чтения, любая попытка его изменить вызывает <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="84bbe-267">After the value is marked as read-only, any further attempt to modify it throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="84bbe-268">Результат вызова <xref:System.Security.SecureString.MakeReadOnly%2A> необратимо поскольку <xref:System.Security.SecureString> класс предоставляет отсутствуют средства, чтобы вновь сделать изменяемые защищенной строки.</span><span class="sxs-lookup"><span data-stu-id="84bbe-268">The effect of invoking <xref:System.Security.SecureString.MakeReadOnly%2A> is permanent because the <xref:System.Security.SecureString> class provides no means to make the secure string modifiable again.</span></span> <span data-ttu-id="84bbe-269">Используйте <xref:System.Security.SecureString.IsReadOnly%2A> для проверки экземпляра <xref:System.Security.SecureString> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="84bbe-269">Use the <xref:System.Security.SecureString.IsReadOnly%2A> method to test whether an instance of <xref:System.Security.SecureString> is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84bbe-270">В следующем примере показано, как <xref:System.Security.SecureString.AppendChar%2A> и <xref:System.Security.SecureString.RemoveAt%2A> методы могут использоваться для сбора символов в пароле.</span><span class="sxs-lookup"><span data-stu-id="84bbe-270">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span> <span data-ttu-id="84bbe-271">После сбора пароля, оно становится доступным только для чтения.</span><span class="sxs-lookup"><span data-stu-id="84bbe-271">After the password is collected, it is made read-only.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="84bbe-272">Защищенная строка уже удалена.</span><span class="sxs-lookup"><span data-stu-id="84bbe-272">This secure string has already been disposed.</span></span></exception>
        <altmember cref="M:System.Security.SecureString.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="secureString.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="84bbe-273">Индекс знака в защищенной строке.</span><span class="sxs-lookup"><span data-stu-id="84bbe-273">The index position of a character in this secure string.</span></span></param>
        <summary><span data-ttu-id="84bbe-274">Удаляет из защищенной строки знак, расположенный по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="84bbe-274">Removes the character at the specified index position from this secure string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84bbe-275">Индекс (с нуля); Первый символ в этот экземпляр является нулевой позиции индекса.</span><span class="sxs-lookup"><span data-stu-id="84bbe-275">The index is zero-based; the first character in this instance is at index position zero.</span></span>  
  
 <span data-ttu-id="84bbe-276">Если реализация использует механизм защиты, такие как шифрование, значение этой защищенной строки, если таковое имеется, не защищен; символ в указанной позиции индекса удаляется; новое значение, то повторной защиты.</span><span class="sxs-lookup"><span data-stu-id="84bbe-276">If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; the character at the specified index position is removed; then the new value is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84bbe-277">В следующем примере показано, как <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, и <xref:System.Security.SecureString.Clear%2A> методы изменяют значение <xref:System.Security.SecureString> объекта.</span><span class="sxs-lookup"><span data-stu-id="84bbe-277">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 <span data-ttu-id="84bbe-278">В следующем примере показано, как <xref:System.Security.SecureString.AppendChar%2A> и <xref:System.Security.SecureString.RemoveAt%2A> методы могут использоваться для сбора символов в пароле.</span><span class="sxs-lookup"><span data-stu-id="84bbe-278">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="84bbe-279">Защищенная строка уже удалена.</span><span class="sxs-lookup"><span data-stu-id="84bbe-279">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="84bbe-280">Данная защищенная строка доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="84bbe-280">This secure string is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="84bbe-281">Значение <paramref name="index" /> меньше нуля или больше или равно длине данной защищенной строки.</span><span class="sxs-lookup"><span data-stu-id="84bbe-281"><paramref name="index" /> is less than zero, or greater than or equal to the length of this secure string.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="84bbe-282">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</span><span class="sxs-lookup"><span data-stu-id="84bbe-282">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAt">
      <MemberSignature Language="C#" Value="public void SetAt (int index, char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAt(int32 index, char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.SetAt(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAt (index As Integer, c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAt(int index, char c);" />
      <MemberSignature Language="F#" Value="member this.SetAt : int * char -&gt; unit" Usage="secureString.SetAt (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="84bbe-283">Индекс имеющегося знака в защищенной строке.</span><span class="sxs-lookup"><span data-stu-id="84bbe-283">The index position of an existing character in this secure string</span></span></param>
        <param name="c"><span data-ttu-id="84bbe-284">Знак, заменяющий имеющийся знак.</span><span class="sxs-lookup"><span data-stu-id="84bbe-284">A character that replaces the existing character.</span></span></param>
        <summary><span data-ttu-id="84bbe-285">Заменяет расположенный по указанному индексу знак другим знаком.</span><span class="sxs-lookup"><span data-stu-id="84bbe-285">Replaces the existing character at the specified index position with another character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84bbe-286">Индекс (с нуля); Первый символ в этот экземпляр является нулевой позиции индекса.</span><span class="sxs-lookup"><span data-stu-id="84bbe-286">The index is zero-based; the first character in this instance is at index position zero.</span></span>  
  
 <span data-ttu-id="84bbe-287">Если реализация использует механизм защиты, такие как шифрование, значение защищенной строки, если таковое имеется, не защищен; `c` будет назначен указанному положению индекса; затем новое значение повторной защиты.</span><span class="sxs-lookup"><span data-stu-id="84bbe-287">If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; `c` is assigned to the specified index position; then the new value is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84bbe-288">В следующем примере показано, как <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, и <xref:System.Security.SecureString.Clear%2A> методы изменяют значение <xref:System.Security.SecureString> объекта.</span><span class="sxs-lookup"><span data-stu-id="84bbe-288">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="84bbe-289">Защищенная строка уже удалена.</span><span class="sxs-lookup"><span data-stu-id="84bbe-289">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="84bbe-290">Данная защищенная строка доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="84bbe-290">This secure string is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="84bbe-291">Значение <paramref name="index" /> меньше нуля или больше или равно длине данной защищенной строки.</span><span class="sxs-lookup"><span data-stu-id="84bbe-291"><paramref name="index" /> is less than zero, or greater than or equal to the length of this secure string.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="84bbe-292">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</span><span class="sxs-lookup"><span data-stu-id="84bbe-292">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>