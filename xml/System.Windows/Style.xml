<Type Name="Style" FullName="System.Windows.Style">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6566f7ddf4fcacdfcb8b5e46c520cae1f36e0265" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57920707" /></Metadata><TypeSignature Language="C#" Value="public class Style : System.Windows.Threading.DispatcherObject, System.Windows.Markup.IAddChild, System.Windows.Markup.INameScope, System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Style extends System.Windows.Threading.DispatcherObject implements class System.Windows.Markup.IAddChild, class System.Windows.Markup.INameScope, class System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Style" />
  <TypeSignature Language="VB.NET" Value="Public Class Style&#xA;Inherits DispatcherObject&#xA;Implements IAddChild, INameScope, IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public ref class Style : System::Windows::Threading::DispatcherObject, System::Windows::Markup::IAddChild, System::Windows::Markup::INameScope, System::Windows::Markup::IQueryAmbient" />
  <TypeSignature Language="F#" Value="type Style = class&#xA;    inherit DispatcherObject&#xA;    interface INameScope&#xA;    interface IAddChild&#xA;    interface IQueryAmbient" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.INameScope</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IQueryAmbient</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.DictionaryKeyProperty("TargetType")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b8278-101">Обеспечивает возможность совместного использования свойств, ресурсов и обработчиков событий экземплярами типа.</span><span class="sxs-lookup"><span data-stu-id="b8278-101">Enables the sharing of properties, resources, and event handlers between instances of a type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8278-102">Можно задать <xref:System.Windows.Style> для любого элемента, который является производным от <xref:System.Windows.FrameworkElement> или <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="b8278-102">You can set a <xref:System.Windows.Style> on any element that derives from <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="b8278-103">Стиль чаще всего объявляется как ресурсов, входящих в <xref:System.Windows.Application.Resources%2A> разделе.</span><span class="sxs-lookup"><span data-stu-id="b8278-103">A style is most commonly declared as a resource inside the <xref:System.Windows.Application.Resources%2A> section.</span></span> <span data-ttu-id="b8278-104">Так как стили являются ресурсами, они подчиняются тем же правилам области, которые применяются ко всем ресурсам, Да, где объявлен стиль, влияет на место его применения.</span><span class="sxs-lookup"><span data-stu-id="b8278-104">Because styles are resources, they obey the same scoping rules that apply to all resources, so where you declare a style affects where it can be applied.</span></span> <span data-ttu-id="b8278-105">Если, к примеру, объявить стиль в корневом элементе определения приложения [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] файл, стиль может использоваться в любом месте в приложении.</span><span class="sxs-lookup"><span data-stu-id="b8278-105">If, for instance, you declare the style in the root element of your application definition [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file, the style can be used anywhere in your application.</span></span> <span data-ttu-id="b8278-106">Если вы создаете приложение навигации и объявляете стиль в одном из приложения [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] файлы, стиль может использоваться только в том, что [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] файл.</span><span class="sxs-lookup"><span data-stu-id="b8278-106">If you are creating a navigation application and declare the style in one of the application's [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] files, the style can be used only in that [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file.</span></span> <span data-ttu-id="b8278-107">Дополнительные сведения о правилах видимости ресурсов см. в разделе [ресурсы XAML](~/docs/framework/wpf/advanced/xaml-resources.md).</span><span class="sxs-lookup"><span data-stu-id="b8278-107">For more information on scoping rules for resources, see [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="b8278-108">Объявление стиля состоит из <xref:System.Windows.Style> объект, содержащий коллекцию из одного или нескольких <xref:System.Windows.Setter> объектов.</span><span class="sxs-lookup"><span data-stu-id="b8278-108">The style declaration consists of a <xref:System.Windows.Style> object that contains a collection of one or more <xref:System.Windows.Setter> objects.</span></span> <span data-ttu-id="b8278-109">Каждый <xref:System.Windows.Setter> состоит из <xref:System.Windows.Setter.Property%2A> и <xref:System.Windows.Setter.Value%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8278-109">Each <xref:System.Windows.Setter> consists of a <xref:System.Windows.Setter.Property%2A> and a <xref:System.Windows.Setter.Value%2A>.</span></span> <span data-ttu-id="b8278-110">Свойство является имя свойства элемента стиль для применения к.</span><span class="sxs-lookup"><span data-stu-id="b8278-110">The property is the name of the property of the element the style is to apply to.</span></span> <span data-ttu-id="b8278-111">После объявления стиль как ресурс, его можно затем ссылаться так же, как и любой другой ресурс.</span><span class="sxs-lookup"><span data-stu-id="b8278-111">After the style is declared as a resource, it can then be referenced just like any other resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b8278-112">Если имеется более одного метода задания в коллекции объектов setter с тем же <xref:System.Windows.Setter.Property%2A> используется значение свойства, метод задания, который объявлен последнего.</span><span class="sxs-lookup"><span data-stu-id="b8278-112">If there is more than one setter in the setter collection with the same <xref:System.Windows.Setter.Property%2A> property value, the setter that is declared last is used.</span></span> <span data-ttu-id="b8278-113">Аналогично Если задать значение для одного свойства в стиле и для элемента непосредственно, значение напрямую задавать в элементе имеет приоритет.</span><span class="sxs-lookup"><span data-stu-id="b8278-113">Similarly, if you set a value for the same property in a style and on an element directly, the value set on the element directly takes precedence.</span></span>  
  
 <span data-ttu-id="b8278-114">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Модель стилей и шаблонов позволяет и совместного использования внешнего вида, а также разделение представления и логики.</span><span class="sxs-lookup"><span data-stu-id="b8278-114">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] styling and templating model allows maintenance and sharing of a look as well as the separation of presentation and logic.</span></span> <span data-ttu-id="b8278-115">Модель стилей и шаблонов включает набор функций, которые позволяют настраивать ваши [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="b8278-115">The styling and templating model includes a suite of features that enable you to customize your [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="b8278-116">Этот набор функций включает в себя <xref:System.Windows.Style> класса, а также следующие:</span><span class="sxs-lookup"><span data-stu-id="b8278-116">This suite of features includes the <xref:System.Windows.Style> class as well as the following:</span></span>  
  
-   <xref:System.Windows.Trigger>  
  
-   <span data-ttu-id="b8278-117"><xref:System.Windows.EventTrigger> и <xref:System.Windows.Media.Animation.Storyboard></span><span class="sxs-lookup"><span data-stu-id="b8278-117"><xref:System.Windows.EventTrigger> and <xref:System.Windows.Media.Animation.Storyboard></span></span>  
  
-   <xref:System.Windows.Controls.ControlTemplate>  
  
-   <xref:System.Windows.DataTemplate>  
  
 <span data-ttu-id="b8278-118">Более подробную информацию см. в разделе [Стилизация и использование шаблонов](~/docs/framework/wpf/controls/styling-and-templating.md).</span><span class="sxs-lookup"><span data-stu-id="b8278-118">For more information, see [Styling and Templating](~/docs/framework/wpf/controls/styling-and-templating.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8278-119">В следующем примере показано объявление стиля, которые влияют на <xref:System.Windows.Controls.Control.Background%2A> свойство <xref:System.Windows.Controls.Control>.</span><span class="sxs-lookup"><span data-stu-id="b8278-119">The following example shows a style declaration that will affect the <xref:System.Windows.Controls.Control.Background%2A> property of a <xref:System.Windows.Controls.Control>.</span></span>  
  
 [!code-xaml[StyleOvw01#StyleSimple](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#stylesimple)]   
  
 <span data-ttu-id="b8278-120">Чтобы применить стиль выше, сделайте следующее:</span><span class="sxs-lookup"><span data-stu-id="b8278-120">To apply the above style, do the following:</span></span>  
  
 [!code-xaml[StyleOvw01#StyleSimpleApplied](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#stylesimpleapplied)]
  
 <span data-ttu-id="b8278-121">Можно также применить стили ко всем элементам заданного типа с помощью <xref:System.Windows.Style.TargetType%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="b8278-121">You can also apply styles to all elements of a given type by using the <xref:System.Windows.Style.TargetType%2A> property.</span></span> <span data-ttu-id="b8278-122">Добавление в целевой тип стиля означает, что больше не иметь полные свойства задаются с помощью `ClassName.PropertyName` синтаксис.</span><span class="sxs-lookup"><span data-stu-id="b8278-122">Adding the target type to the style means that you no longer have to fully qualify the property you are setting with the `ClassName.PropertyName` syntax.</span></span> <span data-ttu-id="b8278-123">В следующем примере определяется стиль, который будет применяться к каждому <xref:System.Windows.Controls.TextBlock> элемент.</span><span class="sxs-lookup"><span data-stu-id="b8278-123">The following example defines a style that will be applied to every <xref:System.Windows.Controls.TextBlock> element.</span></span>  
  
 [!code-xaml[PhotoStoreDemoStyled#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#1)]   
  
> [!NOTE]
>  <span data-ttu-id="b8278-124">Многие [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] элементы управления состоят из комбинации других [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] элементы управления, поэтому создание стиля, который применяется ко всем элементам управления типа могут иметь широким диапазоном влияния.</span><span class="sxs-lookup"><span data-stu-id="b8278-124">Many [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls consist of a combination of other [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls, so creating a style that applies to all controls of a type can have broad impact.</span></span> <span data-ttu-id="b8278-125">Например если создать стиль, предназначенный <xref:System.Windows.Controls.TextBlock> элементов управления в <xref:System.Windows.Controls.Canvas>, стиль применяется ко всем <xref:System.Windows.Controls.TextBlock> элементов управления на холсте, даже в том случае, если <xref:System.Windows.Controls.TextBlock> является частью другого элемента управления, такие как <xref:System.Windows.Controls.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="b8278-125">For instance, if you create a style that targets the <xref:System.Windows.Controls.TextBlock> controls in a <xref:System.Windows.Controls.Canvas>, the style is applied to all <xref:System.Windows.Controls.TextBlock> controls in the canvas, even if the <xref:System.Windows.Controls.TextBlock> is part of another control, such as a <xref:System.Windows.Controls.ListBox>.</span></span>  
  
 <span data-ttu-id="b8278-126">Сведения о том, как расширить или наследовать определенный стиль, см. в разделе <xref:System.Windows.Style.BasedOn%2A> страницы.</span><span class="sxs-lookup"><span data-stu-id="b8278-126">For information on how to extend or inherit from a defined style, see the <xref:System.Windows.Style.BasedOn%2A> page.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/1985cd45-f197-42d5-b75e-886add64b248"><span data-ttu-id="b8278-127">x: Key-атрибут</span><span class="sxs-lookup"><span data-stu-id="b8278-127">x:Key Attribute</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/e0e0ce6f-e873-49c7-8ad7-8b840eb353ec"><span data-ttu-id="b8278-128">Расширение разметки x:Type</span><span class="sxs-lookup"><span data-stu-id="b8278-128">x:Type Markup Extension</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010"><span data-ttu-id="b8278-129">Введение в часть примера стилизации и</span><span class="sxs-lookup"><span data-stu-id="b8278-129">Introduction to Styling and Templating Sample</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b8278-130">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Style" />.</span><span class="sxs-lookup"><span data-stu-id="b8278-130">Initializes a new instance of the <see cref="T:System.Windows.Style" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Style();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8278-131">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Style" />.</span><span class="sxs-lookup"><span data-stu-id="b8278-131">Initializes a new instance of the <see cref="T:System.Windows.Style" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8278-132">Этот вызов конструктора требуется Отложенная проверка <xref:System.Windows.Style.TargetType%2A> и <xref:System.Windows.Style.BasedOn%2A> стиля типа.</span><span class="sxs-lookup"><span data-stu-id="b8278-132">This constructor call requires delayed validation of <xref:System.Windows.Style.TargetType%2A> and <xref:System.Windows.Style.BasedOn%2A> style type.</span></span> <span data-ttu-id="b8278-133">При использовании вне контекста средства синтаксического анализа, поведение не определено.</span><span class="sxs-lookup"><span data-stu-id="b8278-133">If this is used outside the context of the parser, behavior is undefined.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style (Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Style(Type ^ targetType);" />
      <MemberSignature Language="F#" Value="new System.Windows.Style : Type -&gt; System.Windows.Style" Usage="new System.Windows.Style targetType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="targetType"><span data-ttu-id="b8278-134">Тип данных, к которому будет применяться стиль.</span><span class="sxs-lookup"><span data-stu-id="b8278-134">The type to which the style will apply.</span></span></param>
        <summary><span data-ttu-id="b8278-135">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Style" /> для использования с заданным объектом <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="b8278-135">Initializes a new instance of the <see cref="T:System.Windows.Style" /> class to use on the specified <see cref="T:System.Type" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style (Type targetType, System.Windows.Style basedOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type targetType, class System.Windows.Style basedOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.#ctor(System.Type,System.Windows.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetType As Type, basedOn As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Style(Type ^ targetType, System::Windows::Style ^ basedOn);" />
      <MemberSignature Language="F#" Value="new System.Windows.Style : Type * System.Windows.Style -&gt; System.Windows.Style" Usage="new System.Windows.Style (targetType, basedOn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="basedOn" Type="System.Windows.Style" />
      </Parameters>
      <Docs>
        <param name="targetType"><span data-ttu-id="b8278-136">Тип данных, к которому будет применяться стиль.</span><span class="sxs-lookup"><span data-stu-id="b8278-136">The type to which the style will apply.</span></span></param>
        <param name="basedOn"><span data-ttu-id="b8278-137">Стиль, на котором должен быть основан данный стиль.</span><span class="sxs-lookup"><span data-stu-id="b8278-137">The style to base this style on.</span></span></param>
        <summary><span data-ttu-id="b8278-138">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Style" /> для использования с указанным <see cref="T:System.Type" />, основанный на заданном <see cref="T:System.Windows.Style" />.</span><span class="sxs-lookup"><span data-stu-id="b8278-138">Initializes a new instance of the <see cref="T:System.Windows.Style" /> class to use on the specified <see cref="T:System.Type" /> and based on the specified <see cref="T:System.Windows.Style" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BasedOn">
      <MemberSignature Language="C#" Value="public System.Windows.Style BasedOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style BasedOn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.BasedOn" />
      <MemberSignature Language="VB.NET" Value="Public Property BasedOn As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ BasedOn { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BasedOn : System.Windows.Style with get, set" Usage="System.Windows.Style.BasedOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8278-139">Возвращает или задает определенный стиль, являющийся основой текущего стиля.</span><span class="sxs-lookup"><span data-stu-id="b8278-139">Gets or sets a defined style that is the basis of the current style.</span></span></summary>
        <value><span data-ttu-id="b8278-140">Определенный стиль, являющийся основой текущего стиля.</span><span class="sxs-lookup"><span data-stu-id="b8278-140">A defined style that is the basis of the current style.</span></span> <span data-ttu-id="b8278-141">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b8278-141">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8278-142">Каждый стиль поддерживает, только один <xref:System.Windows.Style.BasedOn%2A> значение.</span><span class="sxs-lookup"><span data-stu-id="b8278-142">Each style only supports one <xref:System.Windows.Style.BasedOn%2A> value.</span></span>  
  
<a name="xamlAttributeUsage_BasedOn"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b8278-143">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="b8278-143">XAML Attribute Usage</span></span>  
  
```  
<object BasedOn="myStyle" .../>  
```  
  
<a name="xamlValues_BasedOn"></a>   
## <a name="xaml-values"></a><span data-ttu-id="b8278-144">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="b8278-144">XAML Values</span></span>  
 <span data-ttu-id="b8278-145">*myStyle*</span><span class="sxs-lookup"><span data-stu-id="b8278-145">*myStyle*</span></span>  
 <span data-ttu-id="b8278-146">Существующий стиль.</span><span class="sxs-lookup"><span data-stu-id="b8278-146">An existing style.</span></span> <span data-ttu-id="b8278-147">Как правило, используется [расширения разметки и XAML WPF](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md) для ссылки на существующий стиль.</span><span class="sxs-lookup"><span data-stu-id="b8278-147">Typically, you use the [Markup Extensions and WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md) to refer to an existing style.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8278-148">Существует несколько способов, которые стили [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] расширения и наследования.</span><span class="sxs-lookup"><span data-stu-id="b8278-148">There are several ways that styles in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] can be extended or inherited.</span></span> <span data-ttu-id="b8278-149">Стили могут быть основаны на другие стили через это свойство.</span><span class="sxs-lookup"><span data-stu-id="b8278-149">Styles can be based on other styles through this property.</span></span> <span data-ttu-id="b8278-150">При использовании этого свойства новый стиль наследует значения исходного стиля, которые явно не переопределяются в новый стиль.</span><span class="sxs-lookup"><span data-stu-id="b8278-150">When you use this property, the new style will inherit the values of the original style that are not explicitly redefined in the new style.</span></span> <span data-ttu-id="b8278-151">В следующем примере `Style2` наследует <xref:System.Windows.Controls.Control.Background%2A?displayProperty=nameWithType> значение `Yellow`и добавляет <xref:System.Windows.Controls.Control.Foreground%2A?displayProperty=nameWithType> значение `Blue`.</span><span class="sxs-lookup"><span data-stu-id="b8278-151">In the following example, `Style2` inherits the <xref:System.Windows.Controls.Control.Background%2A?displayProperty=nameWithType> value of `Yellow`, and adds a <xref:System.Windows.Controls.Control.Foreground%2A?displayProperty=nameWithType> value of `Blue`.</span></span>  
  
 [!code-xaml[StyleOvw01#ExtendingStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#extendingstyle)]   
  
 <span data-ttu-id="b8278-152">Аналогичным образом, стили могут быть основаны на существующий стиль [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] элемент, как в следующем примере, где новый стиль основан на стиль <xref:System.Windows.Controls.TextBlock> элемент.</span><span class="sxs-lookup"><span data-stu-id="b8278-152">Similarly, styles can be based on the style of an existing [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] element, as in the following example where the new style is based on the style of a <xref:System.Windows.Controls.TextBlock> element.</span></span>  
  
 [!code-xaml[PhotoStoreDemoStyled#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#2)]   
  
> [!NOTE]
>  <span data-ttu-id="b8278-153">Если создать стиль с <xref:System.Windows.Style.TargetType%2A> также определяет свойство и его на другом стиле, base <xref:System.Windows.Style.TargetType%2A> свойство, тип целевого объекта производного стиля должен быть таким же, как или быть производным от типа базового стиля.</span><span class="sxs-lookup"><span data-stu-id="b8278-153">If you create a style with a <xref:System.Windows.Style.TargetType%2A> property and base it on another style that also defines a <xref:System.Windows.Style.TargetType%2A> property, the target type of the derived style must be the same as or be derived from the type of the base style.</span></span>  
  
 <span data-ttu-id="b8278-154">Стили, определенные для определенных типов также может основываться на другие стили, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="b8278-154">Styles defined for specific types can also be based on other styles, as in the following example.</span></span>  
  
 [!code-xaml[StyleOvw01#ExtendingStyleTargetType](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#extendingstyletargettype)]   
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010"><span data-ttu-id="b8278-155">Введение в часть примера стилизации и</span><span class="sxs-lookup"><span data-stu-id="b8278-155">Introduction to Styling and Templating Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="style.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8278-156">Возвращает хэш-код для этого <see cref="T:System.Windows.Style" />.</span><span class="sxs-lookup"><span data-stu-id="b8278-156">Returns the hash code for this <see cref="T:System.Windows.Style" />.</span></span></summary>
        <returns><span data-ttu-id="b8278-157">Хэш-код для этого экземпляра <see cref="T:System.Windows.Style" />.</span><span class="sxs-lookup"><span data-stu-id="b8278-157">The hash code for this <see cref="T:System.Windows.Style" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.IsSealed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSealed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSealed : bool" Usage="System.Windows.Style.IsSealed" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.ISealable.IsSealed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8278-158">Возвращает значение, указывающее, доступен ли стиль только для чтения.</span><span class="sxs-lookup"><span data-stu-id="b8278-158">Gets a value that indicates whether the style is read-only and cannot be changed.</span></span></summary>
        <value><span data-ttu-id="b8278-159"><see langword="true" />, если стиль запечатан; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b8278-159"><see langword="true" /> if the style is sealed; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8278-160">Стиль запечатан, на его основании другой стиль или когда он применяется в первый раз.</span><span class="sxs-lookup"><span data-stu-id="b8278-160">A style is sealed when another style is based on it or when it is applied for the first time.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Style.BasedOn" />
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberSignature Language="F#" Value="abstract member RegisterName : string * obj -&gt; unit&#xA;override this.RegisterName : string * obj -&gt; unit" Usage="style.RegisterName (name, scopedElement)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b8278-161">Регистрируемое имя.</span><span class="sxs-lookup"><span data-stu-id="b8278-161">The name to register.</span></span></param>
        <param name="scopedElement"><span data-ttu-id="b8278-162">Объект, сопоставляемый заданному имени <paramref name="name" />.</span><span class="sxs-lookup"><span data-stu-id="b8278-162">The object to map to the specified <paramref name="name" />.</span></span></param>
        <summary><span data-ttu-id="b8278-163">Регистрирует новую пару имя-объект в текущей области имен.</span><span class="sxs-lookup"><span data-stu-id="b8278-163">Registers a new name-object pair in the current namescope.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public System.Windows.ResourceDictionary Resources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.ResourceDictionary Resources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.Resources" />
      <MemberSignature Language="VB.NET" Value="Public Property Resources As ResourceDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ResourceDictionary ^ Resources { System::Windows::ResourceDictionary ^ get(); void set(System::Windows::ResourceDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resources : System.Windows.ResourceDictionary with get, set" Usage="System.Windows.Style.Resources" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IHaveResources.Resources</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8278-164">Возвращает или задает коллекцию ресурсов, которые могут использоваться в области видимости данного стиля.</span><span class="sxs-lookup"><span data-stu-id="b8278-164">Gets or sets the collection of resources that can be used within the scope of this style.</span></span></summary>
        <value><span data-ttu-id="b8278-165">Ресурсы, которые могут использоваться в области видимости данного стиля.</span><span class="sxs-lookup"><span data-stu-id="b8278-165">The resources that can be used within the scope of this style.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Resources"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="b8278-166">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="b8278-166">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Resources>  
    oneOrMoreResourceElements  
  </object.Resources>  
</object>  
- or -   
<object>  
  <object.Resources>  
    <ResourceDictionary Source="externalDictionarySource"/>  
  </object.Resources>  
</object>  
```  
  
<a name="xamlValues_Resources"></a>   
## <a name="xaml-values"></a><span data-ttu-id="b8278-167">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="b8278-167">XAML Values</span></span>  
 <span data-ttu-id="b8278-168">*oneOrMoreResourceElements*</span><span class="sxs-lookup"><span data-stu-id="b8278-168">*oneOrMoreResourceElements*</span></span>  
 <span data-ttu-id="b8278-169">Один или несколько элементов ресурсов.</span><span class="sxs-lookup"><span data-stu-id="b8278-169">One or more resource elements.</span></span> <span data-ttu-id="b8278-170">Ссылаться на более поздней версии либо [расширение разметки StaticResource](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) или [расширение разметки DynamicResource](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) синтаксис в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], должен иметь элемент ресурсов `x:Key` атрибута.</span><span class="sxs-lookup"><span data-stu-id="b8278-170">To be referenced later in either [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) or [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], a resource element must have an `x:Key` attribute.</span></span>  
  
 <span data-ttu-id="b8278-171">\<ResourceDictionary Source=" *externalDictionarySource*"/></span><span class="sxs-lookup"><span data-stu-id="b8278-171">\<ResourceDictionary Source=" *externalDictionarySource*"/></span></span>  
 <span data-ttu-id="b8278-172">Внешний источник словаря.</span><span class="sxs-lookup"><span data-stu-id="b8278-172">An external dictionary source.</span></span> <span data-ttu-id="b8278-173">Дополнительные сведения см. в разделе [объединенные словари ресурсов](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).</span><span class="sxs-lookup"><span data-stu-id="b8278-173">For details, see [Merged Resource Dictionaries](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seal">
      <MemberSignature Language="C#" Value="public void Seal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.Seal" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seal ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seal();" />
      <MemberSignature Language="F#" Value="member this.Seal : unit -&gt; unit" Usage="style.Seal " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.ISealable.Seal</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8278-174">Блокирует этот стиль и все фабрики и триггеры, чтобы их нельзя было изменить.</span><span class="sxs-lookup"><span data-stu-id="b8278-174">Locks this style and all factories and triggers so they cannot be changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.Style.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8278-175">Возвращает коллекцию объектов <see cref="T:System.Windows.Setter" /> и <see cref="T:System.Windows.EventSetter" />.</span><span class="sxs-lookup"><span data-stu-id="b8278-175">Gets a collection of <see cref="T:System.Windows.Setter" /> and <see cref="T:System.Windows.EventSetter" /> objects.</span></span></summary>
        <value><span data-ttu-id="b8278-176">Коллекция объектов <see cref="T:System.Windows.Setter" /> и <see cref="T:System.Windows.EventSetter" />.</span><span class="sxs-lookup"><span data-stu-id="b8278-176">A collection of <see cref="T:System.Windows.Setter" /> and <see cref="T:System.Windows.EventSetter" /> objects.</span></span> <span data-ttu-id="b8278-177">По умолчанию является пустой коллекцией.</span><span class="sxs-lookup"><span data-stu-id="b8278-177">The default is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8278-178"><xref:System.Windows.Style.Setters%2A> Свойство <xref:System.Windows.Style> объекта могут состоять только из объектов, может быть назначен для <xref:System.Windows.SetterBase>.</span><span class="sxs-lookup"><span data-stu-id="b8278-178">The <xref:System.Windows.Style.Setters%2A> property of a <xref:System.Windows.Style> object can consist only of objects assignable to <xref:System.Windows.SetterBase>.</span></span> <span data-ttu-id="b8278-179">Добавление <xref:System.Windows.SetterBase> дочернего окна для <xref:System.Windows.Style> объект неявно добавляется в <xref:System.Windows.SetterBaseCollection> для <xref:System.Windows.Style> объекта.</span><span class="sxs-lookup"><span data-stu-id="b8278-179">Adding a <xref:System.Windows.SetterBase> child to a <xref:System.Windows.Style> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Style> object.</span></span>  
  
 <span data-ttu-id="b8278-180">Использование элемента явные свойства для <xref:System.Windows.Style.Setters%2A> также является относительно часто.</span><span class="sxs-lookup"><span data-stu-id="b8278-180">An explicit property element usage  for <xref:System.Windows.Style.Setters%2A> is also relatively common.</span></span> <span data-ttu-id="b8278-181">Это решение стиля разметки, которое может иногда помочь отличить <xref:System.Windows.Style.Setters%2A> из <xref:System.Windows.Style.Resources%2A> и <xref:System.Windows.Style.Triggers%2A> элементы в сложных стиле.</span><span class="sxs-lookup"><span data-stu-id="b8278-181">This is a markup style decision that can sometimes help distinguish <xref:System.Windows.Style.Setters%2A> from <xref:System.Windows.Style.Resources%2A> and <xref:System.Windows.Style.Triggers%2A> items in a complex style.</span></span> <span data-ttu-id="b8278-182">Например:</span><span class="sxs-lookup"><span data-stu-id="b8278-182">For example:</span></span>  
  
```  
<Style>  
  <Style.Setters>  
    <!--one or more SetterBase derived object elements here-->  
  </Style.Setters>  
</Style>  
```  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="b8278-183">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="b8278-183">XAML Property Element Usage</span></span>  
  
```  
<object>  
  oneOrMoreSetters  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a><span data-ttu-id="b8278-184">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="b8278-184">XAML Values</span></span>  
 <span data-ttu-id="b8278-185">*oneOrMoreSetters*</span><span class="sxs-lookup"><span data-stu-id="b8278-185">*oneOrMoreSetters*</span></span>  
 <span data-ttu-id="b8278-186">Один или несколько <xref:System.Windows.Setter> или <xref:System.Windows.EventSetter> объектов.</span><span class="sxs-lookup"><span data-stu-id="b8278-186">One or more <xref:System.Windows.Setter> or <xref:System.Windows.EventSetter> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8278-187">В следующем примере показано, как для использования этого свойства.</span><span class="sxs-lookup"><span data-stu-id="b8278-187">The following example shows how to use this property.</span></span>  
  
 [!code-csharp[listboxitemstyle#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxItemStyle/CSharp/Pane1.xaml.cs#1)]
 [!code-vb[listboxitemstyle#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBoxItemStyle/VisualBasic/Pane1.xaml.vb#1)]  
  
 <span data-ttu-id="b8278-188">Добавление <xref:System.Windows.SetterBase> дочернего окна для <xref:System.Windows.Style> объект неявно добавляется в <xref:System.Windows.SetterBaseCollection> для <xref:System.Windows.Style> объекта.</span><span class="sxs-lookup"><span data-stu-id="b8278-188">Adding a <xref:System.Windows.SetterBase> child to a <xref:System.Windows.Style> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Style> object.</span></span> <span data-ttu-id="b8278-189">Следующие <xref:System.Windows.EventSetter> неявно добавляется <xref:System.Windows.SetterBaseCollection> стиля:</span><span class="sxs-lookup"><span data-stu-id="b8278-189">The following <xref:System.Windows.EventSetter> is implicitly added to the <xref:System.Windows.SetterBaseCollection> of the style:</span></span>  
  
 [!code-xaml[eventovwsupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Setter" />
        <altmember cref="T:System.Windows.EventSetter" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010"><span data-ttu-id="b8278-190">Введение в часть примера стилизации и</span><span class="sxs-lookup"><span data-stu-id="b8278-190">Introduction to Styling and Templating Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.ISealable.CanSeal">
      <MemberSignature Language="C#" Value="bool System.Windows.ISealable.CanSeal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.ISealable.CanSeal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.System#Windows#ISealable#CanSeal" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CanSeal As Boolean Implements ISealable.CanSeal" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Windows::ISealable::CanSeal { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.ISealable.CanSeal" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.ISealable.CanSeal</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.ISealable.IsSealed">
      <MemberSignature Language="C#" Value="bool System.Windows.ISealable.IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.ISealable.IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.System#Windows#ISealable#IsSealed" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSealed As Boolean Implements ISealable.IsSealed" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Windows::ISealable::IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.ISealable.IsSealed" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.ISealable.IsSealed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.ISealable.Seal">
      <MemberSignature Language="C#" Value="void ISealable.Seal ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.ISealable.Seal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#ISealable#Seal" />
      <MemberSignature Language="VB.NET" Value="Sub Seal () Implements ISealable.Seal" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.ISealable.Seal() = System::Windows::ISealable::Seal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.ISealable.Seal</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b8278-191">Добавляемый дочерний объект.</span><span class="sxs-lookup"><span data-stu-id="b8278-191">The child object to add.</span></span></param>
        <summary><span data-ttu-id="b8278-192">Добавляет дочерний объект.</span><span class="sxs-lookup"><span data-stu-id="b8278-192">Adds a child object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8278-193">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="b8278-193">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b8278-194">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Style> приведен к типу интерфейса <xref:System.Windows.Markup.IAddChild>.</span><span class="sxs-lookup"><span data-stu-id="b8278-194">It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="b8278-195">Текст для добавления в объект.</span><span class="sxs-lookup"><span data-stu-id="b8278-195">The text to add to the object.</span></span></param>
        <summary><span data-ttu-id="b8278-196">Добавляет текстовое содержимое узла в объект.</span><span class="sxs-lookup"><span data-stu-id="b8278-196">Adds the text content of a node to the object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8278-197">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="b8278-197">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b8278-198">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Style> приведен к типу интерфейса <xref:System.Windows.Markup.IAddChild>.</span><span class="sxs-lookup"><span data-stu-id="b8278-198">It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.INameScope.FindName">
      <MemberSignature Language="C#" Value="object INameScope.FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Windows.Markup.INameScope.FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#Markup#INameScope#FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function FindName (name As String) As Object Implements INameScope.FindName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Windows.Markup.INameScope.FindName(System::String ^ name) = System::Windows::Markup::INameScope::FindName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.FindName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b8278-199">Идентификатор имени для запрашиваемого объекта.</span><span class="sxs-lookup"><span data-stu-id="b8278-199">The name identifier for the object being requested.</span></span></param>
        <summary><span data-ttu-id="b8278-200">Возвращает объект, имеющий предоставленное идентифицирующее имя.</span><span class="sxs-lookup"><span data-stu-id="b8278-200">Returns an object that has the provided identifying name.</span></span></summary>
        <returns><span data-ttu-id="b8278-201">Данный объект, если он найден.</span><span class="sxs-lookup"><span data-stu-id="b8278-201">The object, if found.</span></span> <span data-ttu-id="b8278-202">Возвращает <see langword="null" />, если объект с таким именем не найден.</span><span class="sxs-lookup"><span data-stu-id="b8278-202">Returns <see langword="null" /> if no object of that name was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8278-203">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="b8278-203">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b8278-204">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Style> приведен к типу интерфейса <xref:System.Windows.Markup.INameScope>.</span><span class="sxs-lookup"><span data-stu-id="b8278-204">It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.INameScope> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="bool IQueryAmbient.IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsAmbientPropertyAvailable (propertyName As String) As Boolean Implements IQueryAmbient.IsAmbientPropertyAvailable" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System::String ^ propertyName) = System::Windows::Markup::IQueryAmbient::IsAmbientPropertyAvailable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="b8278-205">Имя запрошенного внешнего свойства.</span><span class="sxs-lookup"><span data-stu-id="b8278-205">The name of the requested ambient property.</span></span></param>
        <summary><span data-ttu-id="b8278-206">Запрашивает, доступно ли заданное внешнее свойство в текущей области.</span><span class="sxs-lookup"><span data-stu-id="b8278-206">Queries whether a specified ambient property is available in the current scope.</span></span></summary>
        <returns><span data-ttu-id="b8278-207">Значение <see langword="true" />, если запрошенное внешнее свойство доступно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b8278-207"><see langword="true" /> if the requested ambient property is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Markup.IQueryAmbient" />
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public Type TargetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TargetType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetType : Type with get, set" Usage="System.Windows.Style.TargetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8278-208">Возвращает или задает тип, для которого предназначен данный стиль.</span><span class="sxs-lookup"><span data-stu-id="b8278-208">Gets or sets the type for which this style is intended.</span></span></summary>
        <value><span data-ttu-id="b8278-209">Целевой тип стиля.</span><span class="sxs-lookup"><span data-stu-id="b8278-209">The target type for this style.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8278-210">Можно задать стиль для любого элемента, который является производным от <xref:System.Windows.FrameworkElement> или <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="b8278-210">You can set a style on any element that derives from <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="b8278-211">Таким образом целевой тип может быть любой из этих элементов.</span><span class="sxs-lookup"><span data-stu-id="b8278-211">Therefore, your target type can be any of those elements.</span></span> <span data-ttu-id="b8278-212">Тем не менее если создать стиль с <xref:System.Windows.Style.TargetType%2A> также определяет свойство и его на другом стиле, base <xref:System.Windows.Style.TargetType%2A> свойство, тип целевого объекта производного стиля должен быть таким же, как или быть производным от целевого типа базового стиля.</span><span class="sxs-lookup"><span data-stu-id="b8278-212">However, if you create a style with a <xref:System.Windows.Style.TargetType%2A> property and base it on another style that also defines a <xref:System.Windows.Style.TargetType%2A> property, the target type of the derived style must be the same as or be derived from the target type of the base style.</span></span>  
  
 <span data-ttu-id="b8278-213">Если вы не укажете <xref:System.Windows.Style.TargetType%2A>, то необходимо указать `x:Key` для вашей <xref:System.Windows.Style> и также уточнить свойства в стиле с именем класса.</span><span class="sxs-lookup"><span data-stu-id="b8278-213">If you do not specify a <xref:System.Windows.Style.TargetType%2A>, then you must specify an `x:Key` for your <xref:System.Windows.Style> and also qualify the properties in your style with a class name.</span></span>  
  
<a name="xamlAttributeUsage_TargetType"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b8278-214">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="b8278-214">XAML Attribute Usage</span></span>  
  
```  
<object  TargetType="{x:Type typeName}"/>  
-or-  
<object  TargetType="typeName"/>  
```  
  
<a name="xamlValues_TargetType"></a>   
## <a name="xaml-values"></a><span data-ttu-id="b8278-215">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="b8278-215">XAML Values</span></span>  
 `{x:Type ...}`  
 <span data-ttu-id="b8278-216">[Расширение разметки x: Type](~/docs/framework/xaml-services/x-type-markup-extension.md) использование расширения разметки.</span><span class="sxs-lookup"><span data-stu-id="b8278-216">An [x:Type Markup Extension](~/docs/framework/xaml-services/x-type-markup-extension.md) markup extension usage.</span></span>  
  
 <span data-ttu-id="b8278-217">*Имя типа*</span><span class="sxs-lookup"><span data-stu-id="b8278-217">*typeName*</span></span>  
 <span data-ttu-id="b8278-218">Имя типа класса.</span><span class="sxs-lookup"><span data-stu-id="b8278-218">The type name of the class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8278-219">В следующем примере определяется стиль, который будет применяться ко всем экземплярам <xref:System.Windows.Controls.TextBlock> элемент.</span><span class="sxs-lookup"><span data-stu-id="b8278-219">The following example defines a style that will be applied to all instances of the <xref:System.Windows.Controls.TextBlock> element.</span></span>  
  
 [!code-xaml[PhotoStoreDemoStyled#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#1)]   
  
 <span data-ttu-id="b8278-220">Установка <xref:System.Windows.Style.TargetType%2A> свойства <xref:System.Windows.Controls.TextBlock> типа без параметра `x:Key` неявным образом задает `x:Key` для `{x:Type TextBlock}`.</span><span class="sxs-lookup"><span data-stu-id="b8278-220">Setting the <xref:System.Windows.Style.TargetType%2A> property to the <xref:System.Windows.Controls.TextBlock> type without setting an `x:Key` implicitly sets the `x:Key` to `{x:Type TextBlock}`.</span></span> <span data-ttu-id="b8278-221">Это также означает, что если вы предоставите выше <xref:System.Windows.Style> `x:Key` значение отлично от `{x:Type TextBlock}`, <xref:System.Windows.Style> не будет применяться ко всем <xref:System.Windows.Controls.TextBlock> элементов автоматически.</span><span class="sxs-lookup"><span data-stu-id="b8278-221">This also means that if you give the above <xref:System.Windows.Style> an `x:Key` value of anything other than `{x:Type TextBlock}`, the <xref:System.Windows.Style> would not be applied to all <xref:System.Windows.Controls.TextBlock> elements automatically.</span></span> <span data-ttu-id="b8278-222">Вместо этого необходимо применить стиль к <xref:System.Windows.Controls.TextBlock> элементы явным образом.</span><span class="sxs-lookup"><span data-stu-id="b8278-222">Instead, you need to apply the style to the <xref:System.Windows.Controls.TextBlock> elements explicitly.</span></span>  
  
 <span data-ttu-id="b8278-223">Многие [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] элементы управления состоят из комбинации других [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] элементы управления, поэтому создание стиля, который применяется ко всем элементам управления типа могут иметь широким диапазоном влияния.</span><span class="sxs-lookup"><span data-stu-id="b8278-223">Many [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls consist of a combination of other [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls, so creating a style that applies to all controls of a type can have broad impact.</span></span> <span data-ttu-id="b8278-224">Например если создать стиль, предназначенный <xref:System.Windows.Controls.TextBox> элементов управления в <xref:System.Windows.Controls.Canvas>, стиль применяется ко всем <xref:System.Windows.Controls.TextBox> элементов управления на холсте, даже в том случае, если <xref:System.Windows.Controls.TextBox> является частью другого элемента управления, такие как <xref:System.Windows.Controls.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="b8278-224">For instance, if you create a style that targets the <xref:System.Windows.Controls.TextBox> controls in a <xref:System.Windows.Controls.Canvas>, the style is applied to all <xref:System.Windows.Controls.TextBox> controls in the canvas, even if the <xref:System.Windows.Controls.TextBox> is part of another control, such as a <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010"><span data-ttu-id="b8278-225">Введение в часть примера стилизации и</span><span class="sxs-lookup"><span data-stu-id="b8278-225">Introduction to Styling and Templating Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As TriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerCollection ^ Triggers { System::Windows::TriggerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Windows.TriggerCollection" Usage="System.Windows.Style.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8278-226">Возвращает коллекцию объектов <see cref="T:System.Windows.TriggerBase" />, применяющих значения свойств на основе заданных условий.</span><span class="sxs-lookup"><span data-stu-id="b8278-226">Gets a collection of <see cref="T:System.Windows.TriggerBase" /> objects that apply property values based on specified conditions.</span></span></summary>
        <value><span data-ttu-id="b8278-227">Коллекция объектов <see cref="T:System.Windows.TriggerBase" />.</span><span class="sxs-lookup"><span data-stu-id="b8278-227">A collection of <see cref="T:System.Windows.TriggerBase" /> objects.</span></span> <span data-ttu-id="b8278-228">По умолчанию является пустой коллекцией.</span><span class="sxs-lookup"><span data-stu-id="b8278-228">The default is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8278-229">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Модель стилей и шаблонов позволяет указать триггеры в вашей <xref:System.Windows.Style>.</span><span class="sxs-lookup"><span data-stu-id="b8278-229">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] styling and templating model enables you to specify triggers within your <xref:System.Windows.Style>.</span></span> <span data-ttu-id="b8278-230">По сути, триггеры — это объекты, которые позволяют применить изменения при определенных условий (например, когда значение определенного свойства становится `true`, или при возникновении события) будут удовлетворены.</span><span class="sxs-lookup"><span data-stu-id="b8278-230">Essentially, triggers are objects that enable you to apply changes when certain conditions (such as when a certain property value becomes `true`, or when an event occurs) are satisfied.</span></span>  
  
<a name="xamlPropertyElementUsage_Triggers"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="b8278-231">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="b8278-231">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Triggers>  
    oneOrMoreTriggers  
  </object.Triggers>  
</object>  
```  
  
<a name="xamlValues_Triggers"></a>   
## <a name="xaml-values"></a><span data-ttu-id="b8278-232">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="b8278-232">XAML Values</span></span>  
 <span data-ttu-id="b8278-233">*OneOrMoreTriggers*</span><span class="sxs-lookup"><span data-stu-id="b8278-233">*oneOrMoreTriggers*</span></span>  
 <span data-ttu-id="b8278-234">Ноль или больше элементов объектов, которые являются классы, производные от <xref:System.Windows.TriggerBase>.</span><span class="sxs-lookup"><span data-stu-id="b8278-234">Zero or more object elements that are classes deriving from <xref:System.Windows.TriggerBase>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8278-235">В следующем примере показано именованное <xref:System.Windows.Style> для <xref:System.Windows.Controls.Button> элементов управления.</span><span class="sxs-lookup"><span data-stu-id="b8278-235">The following example shows a named <xref:System.Windows.Style> available to <xref:System.Windows.Controls.Button> controls.</span></span> <span data-ttu-id="b8278-236"><xref:System.Windows.Style> Определяет <xref:System.Windows.Trigger> элемента, который изменяет <xref:System.Windows.Controls.Control.Foreground%2A> свойства кнопки при <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> свойство `true`.</span><span class="sxs-lookup"><span data-stu-id="b8278-236">The <xref:System.Windows.Style> defines a <xref:System.Windows.Trigger> element that changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is `true`.</span></span>  
  
 [!code-xaml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DataTrigger" />
        <altmember cref="T:System.Windows.EventTrigger" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010"><span data-ttu-id="b8278-237">Введение в часть примера стилизации и</span><span class="sxs-lookup"><span data-stu-id="b8278-237">Introduction to Styling and Templating Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterName : string -&gt; unit&#xA;override this.UnregisterName : string -&gt; unit" Usage="style.UnregisterName name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.UnregisterName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b8278-238">Имя удаляемого сопоставления.</span><span class="sxs-lookup"><span data-stu-id="b8278-238">The name of the mapping to remove.</span></span></param>
        <summary><span data-ttu-id="b8278-239">Удаляет из области видимости имен сопоставление имя-объект.</span><span class="sxs-lookup"><span data-stu-id="b8278-239">Removes a name-object mapping from the namescope.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>