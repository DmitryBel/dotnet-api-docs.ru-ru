<Type Name="ImmutableArray" FullName="System.Collections.Immutable.ImmutableArray">
  <Metadata><Meta Name="ms.openlocfilehash" Value="80072ec7560c07af97d4173562188eb5630709d5" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56349636" /></Metadata><TypeSignature Language="C#" Value="public static class ImmutableArray" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableArray extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableArray" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableArray" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableArray abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableArray = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.1.37.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
    <AssemblyVersion>1.2.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="13d06-101">Содержит методы для создания неизменяемого массива (это означает, что изменить его после создания невозможно).</span><span class="sxs-lookup"><span data-stu-id="13d06-101">Provides methods for creating an array that is immutable; meaning it cannot be changed once it is created.</span></span>  
  
 <span data-ttu-id="13d06-102">**Пакет NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">сведения о неизменяемых коллекциях и способах их установки</see>)</span><span class="sxs-lookup"><span data-stu-id="13d06-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">about immutable collections and how to install</see>)</span></span></summary>
    <remarks>To be added.</remarks>
    <threadsafe><span data-ttu-id="13d06-103">Данный тип потокобезопасен.</span><span class="sxs-lookup"><span data-stu-id="13d06-103">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, T value);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="13d06-104">Тип элементов, которые хранятся в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-104">The type of element stored in the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="13d06-105">Отсортированный массив, в котором выполняется поиск.</span><span class="sxs-lookup"><span data-stu-id="13d06-105">The sorted array to search.</span></span></param>
        <param name="value"><span data-ttu-id="13d06-106">Объект, который нужно найти.</span><span class="sxs-lookup"><span data-stu-id="13d06-106">The object to search for.</span></span></param>
        <summary><span data-ttu-id="13d06-107">Выполняет поиск указанного элемента в отсортированном неизменяемом массиве с использованием функции сравнения по умолчанию и в случае успеха возвращает индекс этого элемента, отсчитываемый от нуля.</span><span class="sxs-lookup"><span data-stu-id="13d06-107">Searches the sorted immutable array for a specified element using the default comparer and returns the zero-based index of the element, if it's found.</span></span></summary>
        <returns><span data-ttu-id="13d06-108">Отсчитываемый от нуля индекс элемента в массиве, если он найден; в противном случае — отрицательное число, которое является поразрядным дополнением индекса следующего элемента, большего, чем <paramref name="value" />, или, если большего элемента не существует, поразрядным дополнением значения <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="13d06-108">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13d06-109"><paramref name="value" /> не реализует <see cref="T:System.IComparable" /> или поиск обнаруживает элемент, который не реализует <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="13d06-109"><paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="13d06-110">Тип элементов, которые хранятся в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-110">The type of element stored in the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="13d06-111">Отсортированный массив, в котором выполняется поиск.</span><span class="sxs-lookup"><span data-stu-id="13d06-111">The sorted array to search.</span></span></param>
        <param name="value"><span data-ttu-id="13d06-112">Объект, который нужно найти.</span><span class="sxs-lookup"><span data-stu-id="13d06-112">The object to search for.</span></span></param>
        <param name="comparer"><span data-ttu-id="13d06-113">Реализация функции сравнения, которую нужно использовать при проверке элементов, или null, если следует использовать функцию сравнения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="13d06-113">The comparer implementation to use when comparing elements, or null to use the default comparer.</span></span></param>
        <summary><span data-ttu-id="13d06-114">Выполняет поиск указанного элемента в отсортированном неизменяемом массиве и в случае успеха возвращает индекс этого элемента, отсчитываемый от нуля.</span><span class="sxs-lookup"><span data-stu-id="13d06-114">Searches a sorted immutable array for a specified element and returns the zero-based index of the element, if it's found.</span></span></summary>
        <returns><span data-ttu-id="13d06-115">Отсчитываемый от нуля индекс элемента в массиве, если он найден; в противном случае — отрицательное число, которое является поразрядным дополнением индекса следующего элемента, большего, чем <paramref name="value" />, или, если большего элемента не существует, поразрядным дополнением значения <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="13d06-115">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13d06-116"><paramref name="comparer" /> имеет значение null и <paramref name="value" /> не реализует <see cref="T:System.IComparable" /> или поиск обнаруживает элемент, который не реализует <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="13d06-116"><paramref name="comparer" /> is null and <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, int index, int length, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, int32 index, int32 length, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), index As Integer, length As Integer, value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, int index, int length, T value);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int * int * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, index, length, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="13d06-117">Тип элементов, которые хранятся в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-117">The type of element stored in the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="13d06-118">Отсортированный массив, в котором выполняется поиск.</span><span class="sxs-lookup"><span data-stu-id="13d06-118">The sorted array to search.</span></span></param>
        <param name="index"><span data-ttu-id="13d06-119">Начальный индекс диапазона поиска.</span><span class="sxs-lookup"><span data-stu-id="13d06-119">The starting index of the range to search.</span></span></param>
        <param name="length"><span data-ttu-id="13d06-120">Длина диапазона поиска.</span><span class="sxs-lookup"><span data-stu-id="13d06-120">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="13d06-121">Объект, который нужно найти.</span><span class="sxs-lookup"><span data-stu-id="13d06-121">The object to search for.</span></span></param>
        <summary><span data-ttu-id="13d06-122">Выполняет поиск указанного элемента в отсортированном неизменяемом массиве и в случае успеха возвращает индекс этого элемента, отсчитываемый от нуля.</span><span class="sxs-lookup"><span data-stu-id="13d06-122">Searches a sorted immutable array for a specified element and returns the zero-based index of the element, if it's found.</span></span></summary>
        <returns><span data-ttu-id="13d06-123">Отсчитываемый от нуля индекс элемента в массиве, если он найден; в противном случае — отрицательное число, которое является поразрядным дополнением индекса следующего элемента, большего, чем <paramref name="value" />, или, если большего элемента не существует, поразрядным дополнением значения <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="13d06-123">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13d06-124"><paramref name="value" /> не реализует <see cref="T:System.IComparable" /> или поиск обнаруживает элемент, который не реализует <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="13d06-124"><paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, int index, int length, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, int32 index, int32 length, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), index As Integer, length As Integer, value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, int index, int length, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int * int * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, index, length, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="13d06-125">Тип элементов, которые хранятся в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-125">The type of element stored in the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="13d06-126">Отсортированный массив, в котором выполняется поиск.</span><span class="sxs-lookup"><span data-stu-id="13d06-126">The sorted array to search.</span></span></param>
        <param name="index"><span data-ttu-id="13d06-127">Начальный индекс диапазона поиска.</span><span class="sxs-lookup"><span data-stu-id="13d06-127">The starting index of the range to search.</span></span></param>
        <param name="length"><span data-ttu-id="13d06-128">Длина диапазона поиска.</span><span class="sxs-lookup"><span data-stu-id="13d06-128">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="13d06-129">Объект, который нужно найти.</span><span class="sxs-lookup"><span data-stu-id="13d06-129">The object to search for.</span></span></param>
        <param name="comparer"><span data-ttu-id="13d06-130">Функция сравнения, которую нужно использовать при проверке элементов на предмет равенства, или <see langword="null" />, если следует использовать функцию сравнения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="13d06-130">The comparer to use when comparing elements for equality or <see langword="null" /> to use the default comparer.</span></span></param>
        <summary><span data-ttu-id="13d06-131">Выполняет поиск указанного элемента в отсортированном неизменяемом массиве и возвращает индекс этого элемента, отсчитываемый от нуля.</span><span class="sxs-lookup"><span data-stu-id="13d06-131">Searches a sorted immutable array for a specified element and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="13d06-132">Отсчитываемый от нуля индекс элемента в массиве, если он найден; в противном случае — отрицательное число, которое является поразрядным дополнением индекса следующего элемента, большего, чем <paramref name="value" />, или, если большего элемента не существует, поразрядным дополнением значения <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="13d06-132">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13d06-133"><paramref name="comparer" /> имеет значение null и <paramref name="value" /> не реализует <see cref="T:System.IComparable" /> или поиск обнаруживает элемент, который не реализует <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="13d06-133"><paramref name="comparer" /> is null and <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) () As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="13d06-134">Тип элементов, которые хранятся в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-134">The type of elements stored in the array.</span></span></typeparam>
        <summary><span data-ttu-id="13d06-135">Создает пустой неизменяемый массив.</span><span class="sxs-lookup"><span data-stu-id="13d06-135">Creates an empty immutable array.</span></span></summary>
        <returns><span data-ttu-id="13d06-136">Пустой неизменяемый массив.</span><span class="sxs-lookup"><span data-stu-id="13d06-136">An empty immutable array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item);" />
      <MemberSignature Language="F#" Value="static member Create : 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="13d06-137">Тип элементов, которые хранятся в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-137">The type of elements stored in the array.</span></span></typeparam>
        <param name="item"><span data-ttu-id="13d06-138">Объект, который нужно сохранить в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-138">The object to store in the array.</span></span></param>
        <summary><span data-ttu-id="13d06-139">Создает неизменяемый массив, который содержит указанный объект.</span><span class="sxs-lookup"><span data-stu-id="13d06-139">Creates an immutable array that contains the specified object.</span></span></summary>
        <returns><span data-ttu-id="13d06-140">Неизменяемый массив, который содержит указанные объекты.</span><span class="sxs-lookup"><span data-stu-id="13d06-140">An immutable array that contains the specified object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (params T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (ParamArray items As T()) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(... cli::array &lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="13d06-141">Тип элементов, которые хранятся в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-141">The type of elements stored in the array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="13d06-142">Массив объектов, которыми нужно заполнить массив.</span><span class="sxs-lookup"><span data-stu-id="13d06-142">The array of objects to populate the array with.</span></span></param>
        <summary><span data-ttu-id="13d06-143">Создает неизменяемый массив на основе указанного массива объектов.</span><span class="sxs-lookup"><span data-stu-id="13d06-143">Creates an immutable array from the specified array of objects.</span></span></summary>
        <returns><span data-ttu-id="13d06-144">Неизменяемый массив, который содержит указанный массив объектов.</span><span class="sxs-lookup"><span data-stu-id="13d06-144">An immutable array that contains the array of items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2);" />
      <MemberSignature Language="F#" Value="static member Create : 'T * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (item1, item2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="13d06-145">Тип элементов, которые хранятся в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-145">The type of elements stored in the array.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="13d06-146">Первый объект, который нужно сохранить в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-146">The first object to store in the array.</span></span></param>
        <param name="item2"><span data-ttu-id="13d06-147">Второй объект, который нужно сохранить в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-147">The second object to store in the array.</span></span></param>
        <summary><span data-ttu-id="13d06-148">Создает неизменяемый массив, который содержит указанные объекты.</span><span class="sxs-lookup"><span data-stu-id="13d06-148">Creates an immutable array that contains the specified objects.</span></span></summary>
        <returns><span data-ttu-id="13d06-149">Неизменяемый массив, который содержит указанные объекты.</span><span class="sxs-lookup"><span data-stu-id="13d06-149">An immutable array that contains the specified objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (System.Collections.Immutable.ImmutableArray&lt;T&gt; items, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; items, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (items As ImmutableArray(Of T), start As Integer, length As Integer) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(System::Collections::Immutable::ImmutableArray&lt;T&gt; items, int start, int length);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int * int -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (items, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="13d06-150">Тип элементов, которые хранятся в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-150">The type of elements stored in the array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="13d06-151">Исходный массив объектов.</span><span class="sxs-lookup"><span data-stu-id="13d06-151">The source array of objects.</span></span></param>
        <param name="start"><span data-ttu-id="13d06-152">Индекс первого элемента, который нужно скопировать из <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="13d06-152">The index of the first element to copy from <paramref name="items" />.</span></span></param>
        <param name="length"><span data-ttu-id="13d06-153">Количество элементов из <paramref name="items" />, которые нужно добавить в этот неизменяемый массив.</span><span class="sxs-lookup"><span data-stu-id="13d06-153">The number of elements from <paramref name="items" /> to include in this immutable array.</span></span></param>
        <summary><span data-ttu-id="13d06-154">Создает неизменяемый массив, который содержит указанные объекты из другого неизменяемого массива.</span><span class="sxs-lookup"><span data-stu-id="13d06-154">Creates an immutable array with the specified objects from another immutable array.</span></span></summary>
        <returns><span data-ttu-id="13d06-155">Неизменяемый массив, который содержит указанные объекты из исходного массива.</span><span class="sxs-lookup"><span data-stu-id="13d06-155">An immutable array that contains the specified objects from the source array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2, T item3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2, !!T item3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T, item3 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2, T item3);" />
      <MemberSignature Language="F#" Value="static member Create : 'T * 'T * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (item1, item2, item3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
        <Parameter Name="item3" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="13d06-156">Тип элементов, которые хранятся в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-156">The type of elements stored in the array.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="13d06-157">Первый объект, который нужно сохранить в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-157">The first object to store in the array.</span></span></param>
        <param name="item2"><span data-ttu-id="13d06-158">Второй объект, который нужно сохранить в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-158">The second object to store in the array.</span></span></param>
        <param name="item3"><span data-ttu-id="13d06-159">Третий объект, который нужно сохранить в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-159">The third object to store in the array.</span></span></param>
        <summary><span data-ttu-id="13d06-160">Создает неизменяемый массив, который содержит указанные объекты.</span><span class="sxs-lookup"><span data-stu-id="13d06-160">Creates an immutable array that contains the specified objects.</span></span></summary>
        <returns><span data-ttu-id="13d06-161">Неизменяемый массив, который содержит указанные объекты.</span><span class="sxs-lookup"><span data-stu-id="13d06-161">An immutable array that contains the specified objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T[] items, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (items As T(), start As Integer, length As Integer) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(cli::array &lt;T&gt; ^ items, int start, int length);" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] * int * int -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (items, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="13d06-162">Тип элементов, которые хранятся в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-162">The type of elements stored in the array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="13d06-163">Исходный массив объектов.</span><span class="sxs-lookup"><span data-stu-id="13d06-163">The source array of objects.</span></span></param>
        <param name="start"><span data-ttu-id="13d06-164">Индекс первого элемента, который нужно скопировать из <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="13d06-164">The index of the first element to copy from <paramref name="items" />.</span></span></param>
        <param name="length"><span data-ttu-id="13d06-165">Количество элементов из <paramref name="items" />, которые нужно добавить в этот неизменяемый массив.</span><span class="sxs-lookup"><span data-stu-id="13d06-165">The number of elements from <paramref name="items" /> to include in this immutable array.</span></span></param>
        <summary><span data-ttu-id="13d06-166">Создает неизменяемый массив, который содержит указанные объекты из другого массива.</span><span class="sxs-lookup"><span data-stu-id="13d06-166">Creates an immutable array with specified objects from another array.</span></span></summary>
        <returns><span data-ttu-id="13d06-167">Неизменяемый массив, который содержит указанные объекты из исходного массива.</span><span class="sxs-lookup"><span data-stu-id="13d06-167">An immutable array that contains the specified objects from the source array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2, T item3, T item4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2, !!T item3, !!T item4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T, item3 As T, item4 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2, T item3, T item4);" />
      <MemberSignature Language="F#" Value="static member Create : 'T * 'T * 'T * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (item1, item2, item3, item4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
        <Parameter Name="item3" Type="T" />
        <Parameter Name="item4" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="13d06-168">Тип элементов, которые хранятся в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-168">The type of elements stored in the array.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="13d06-169">Первый объект, который нужно сохранить в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-169">The first object to store in the array.</span></span></param>
        <param name="item2"><span data-ttu-id="13d06-170">Второй объект, который нужно сохранить в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-170">The second object to store in the array.</span></span></param>
        <param name="item3"><span data-ttu-id="13d06-171">Третий объект, который нужно сохранить в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-171">The third object to store in the array.</span></span></param>
        <param name="item4"><span data-ttu-id="13d06-172">Четвертый объект, который нужно сохранить в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-172">The fourth object to store in the array.</span></span></param>
        <summary><span data-ttu-id="13d06-173">Создает неизменяемый массив, который содержит указанные объекты.</span><span class="sxs-lookup"><span data-stu-id="13d06-173">Creates an immutable array that contains the specified objects.</span></span></summary>
        <returns><span data-ttu-id="13d06-174">Неизменяемый массив, который содержит указанные объекты.</span><span class="sxs-lookup"><span data-stu-id="13d06-174">An immutable array that contains the specified objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder CreateBuilder&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateBuilder``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) () As ImmutableArray(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ CreateBuilder();" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder" Usage="System.Collections.Immutable.ImmutableArray.CreateBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="13d06-175">Тип элементов, которые хранятся в построителе.</span><span class="sxs-lookup"><span data-stu-id="13d06-175">The type of elements stored in the builder.</span></span></typeparam>
        <summary><span data-ttu-id="13d06-176">Создает изменяемый массив, который можно преобразовать в <see cref="T:System.Collections.Immutable.ImmutableArray" /> без выделения новой памяти.</span><span class="sxs-lookup"><span data-stu-id="13d06-176">Creates a mutable array that can be converted to an <see cref="T:System.Collections.Immutable.ImmutableArray" /> without allocating new memory.</span></span></summary>
        <returns><span data-ttu-id="13d06-177">Изменяемый массив указанного типа, который можно эффективно преобразовать в неизменяемый.</span><span class="sxs-lookup"><span data-stu-id="13d06-177">A mutable array of the specified type that can be efficiently converted to an immutable array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder CreateBuilder&lt;T&gt; (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateBuilder``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) (initialCapacity As Integer) As ImmutableArray(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ CreateBuilder(int initialCapacity);" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : int -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder" Usage="System.Collections.Immutable.ImmutableArray.CreateBuilder initialCapacity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="13d06-178">Тип элементов, которые хранятся в построителе.</span><span class="sxs-lookup"><span data-stu-id="13d06-178">The type of elements stored in the builder.</span></span></typeparam>
        <param name="initialCapacity"><span data-ttu-id="13d06-179">Начальная емкость построителя.</span><span class="sxs-lookup"><span data-stu-id="13d06-179">The initial capacity of the builder.</span></span></param>
        <summary><span data-ttu-id="13d06-180">Создает изменяемый массив, который можно преобразовать в <see cref="T:System.Collections.Immutable.ImmutableArray" /> без выделения новой памяти.</span><span class="sxs-lookup"><span data-stu-id="13d06-180">Creates a mutable array that can be converted to an <see cref="T:System.Collections.Immutable.ImmutableArray" /> without allocating new memory.</span></span></summary>
        <returns><span data-ttu-id="13d06-181">Изменяемый массив указанного типа, который можно эффективно преобразовать в неизменяемый.</span><span class="sxs-lookup"><span data-stu-id="13d06-181">A mutable array of the specified type that can be efficiently converted to an immutable array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; CreateRange&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; CreateRange&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of T) (items As IEnumerable(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; CreateRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="13d06-182">Тип элементов, которые хранятся в массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-182">The type of element stored in the array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="13d06-183">Элементы, которые нужно добавить в массив.</span><span class="sxs-lookup"><span data-stu-id="13d06-183">The elements to add to the array.</span></span></param>
        <summary><span data-ttu-id="13d06-184">Создает новый экземпляр <see cref="T:System.Collections.Immutable.ImmutableArray`1" />, заполненный указанными элементами.</span><span class="sxs-lookup"><span data-stu-id="13d06-184">Creates a new <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> populated with the specified items.</span></span></summary>
        <returns><span data-ttu-id="13d06-185">Неизменяемый массив, который содержит указанные элементы.</span><span class="sxs-lookup"><span data-stu-id="13d06-185">An immutable array that contains the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TResult) (items As ImmutableArray(Of TSource), selector As Func(Of TSource, TResult)) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * Func&lt;'Source, 'Result&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items"><span data-ttu-id="13d06-186">Исходный массив, с которым необходимо инициализировать результирующий массив.</span><span class="sxs-lookup"><span data-stu-id="13d06-186">The source array to initialize the resulting array with.</span></span></param>
        <param name="selector"><span data-ttu-id="13d06-187">Функция, которую необходимо применить к каждому элементу в исходном массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-187">The function to apply to each element from the source array.</span></span></param>
        <summary><span data-ttu-id="13d06-188">Инициализирует новый экземпляр структуры <see cref="T:System.Collections.Immutable.ImmutableArray`1" />.</span><span class="sxs-lookup"><span data-stu-id="13d06-188">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13d06-189">Эта перегрузка позволяет эффективное создание <xref:System.Collections.Immutable.ImmutableArray%601> на основе существующего <xref:System.Collections.Immutable.ImmutableArray%601>, где функция сопоставления необходимо применить к каждому элементу исходного массива.</span><span class="sxs-lookup"><span data-stu-id="13d06-189">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from             the source array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, int32 start, int32 length, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TResult) (items As ImmutableArray(Of TSource), start As Integer, length As Integer, selector As Func(Of TSource, TResult)) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * int * int * Func&lt;'Source, 'Result&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, start, length, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items"><span data-ttu-id="13d06-190">Исходный массив, с которым необходимо инициализировать результирующий массив.</span><span class="sxs-lookup"><span data-stu-id="13d06-190">The source array to initialize the resulting array with.</span></span></param>
        <param name="start"><span data-ttu-id="13d06-191">Индекс первого элемента в исходном массиве, который необходимо включить в результирующий массив.</span><span class="sxs-lookup"><span data-stu-id="13d06-191">The index of the first element in the source array to include in the resulting array.</span></span></param>
        <param name="length"><span data-ttu-id="13d06-192">Количество элементов из исходного массива, которые нужно добавить в результирующий.</span><span class="sxs-lookup"><span data-stu-id="13d06-192">The number of elements from the source array to include in the resulting array.</span></span></param>
        <param name="selector"><span data-ttu-id="13d06-193">Функция, которую необходимо применить к каждому элементу исходного массива, включенному в результирующий массив.</span><span class="sxs-lookup"><span data-stu-id="13d06-193">The function to apply to each element from the source array included in the resulting array.</span></span></param>
        <summary><span data-ttu-id="13d06-194">Инициализирует новый экземпляр структуры <see cref="T:System.Collections.Immutable.ImmutableArray`1" />.</span><span class="sxs-lookup"><span data-stu-id="13d06-194">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13d06-195">Эта перегрузка позволяет эффективное создание <xref:System.Collections.Immutable.ImmutableArray%601> среза существующего <xref:System.Collections.Immutable.ImmutableArray%601>, где функция сопоставления необходимо применить к каждому элементу из исходного массива, включенному в результирующий массив.</span><span class="sxs-lookup"><span data-stu-id="13d06-195">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on a slice of an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from the source array             included in the resulting array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TArg,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TArg,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, Func&lt;TSource,TArg,TResult&gt; selector, TArg arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TArg, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, class System.Func`3&lt;!!TSource, !!TArg, !!TResult&gt; selector, !!TArg arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1,``2},``1)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TArg, TResult) (items As ImmutableArray(Of TSource), selector As Func(Of TSource, TArg, TResult), arg As TArg) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TArg, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, Func&lt;TSource, TArg, TResult&gt; ^ selector, TArg arg);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * Func&lt;'Source, 'Arg, 'Result&gt; * 'Arg -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, selector, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TArg" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TArg,TResult&gt;" />
        <Parameter Name="arg" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TArg">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items"><span data-ttu-id="13d06-196">Исходный массив, с которым необходимо инициализировать результирующий массив.</span><span class="sxs-lookup"><span data-stu-id="13d06-196">The source array to initialize the resulting array with.</span></span></param>
        <param name="selector"><span data-ttu-id="13d06-197">Функция, которую необходимо применить к каждому элементу в исходном массиве.</span><span class="sxs-lookup"><span data-stu-id="13d06-197">The function to apply to each element from the source array.</span></span></param>
        <param name="arg"><span data-ttu-id="13d06-198">Аргумент, который необходимо передать в функцию сопоставления селектора.</span><span class="sxs-lookup"><span data-stu-id="13d06-198">An argument to be passed to the selector mapping function.</span></span></param>
        <summary><span data-ttu-id="13d06-199">Инициализирует новый экземпляр структуры <see cref="T:System.Collections.Immutable.ImmutableArray`1" />.</span><span class="sxs-lookup"><span data-stu-id="13d06-199">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13d06-200">Эта перегрузка позволяет эффективное создание <xref:System.Collections.Immutable.ImmutableArray%601> на основе существующего <xref:System.Collections.Immutable.ImmutableArray%601>, где функция сопоставления необходимо применить к каждому элементу исходного массива.</span><span class="sxs-lookup"><span data-stu-id="13d06-200">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from             the source array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TArg,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TArg,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource,TArg,TResult&gt; selector, TArg arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TArg, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, int32 start, int32 length, class System.Func`3&lt;!!TSource, !!TArg, !!TResult&gt; selector, !!TArg arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1,``2},``1)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TArg, TResult) (items As ImmutableArray(Of TSource), start As Integer, length As Integer, selector As Func(Of TSource, TArg, TResult), arg As TArg) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TArg, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource, TArg, TResult&gt; ^ selector, TArg arg);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * int * int * Func&lt;'Source, 'Arg, 'Result&gt; * 'Arg -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, start, length, selector, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TArg" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TArg,TResult&gt;" />
        <Parameter Name="arg" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TArg">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items"><span data-ttu-id="13d06-201">Исходный массив, с которым необходимо инициализировать результирующий массив.</span><span class="sxs-lookup"><span data-stu-id="13d06-201">The source array to initialize the resulting array with.</span></span></param>
        <param name="start"><span data-ttu-id="13d06-202">Индекс первого элемента в исходном массиве, который необходимо включить в результирующий массив.</span><span class="sxs-lookup"><span data-stu-id="13d06-202">The index of the first element in the source array to include in the resulting array.</span></span></param>
        <param name="length"><span data-ttu-id="13d06-203">Количество элементов из исходного массива, которые нужно добавить в результирующий.</span><span class="sxs-lookup"><span data-stu-id="13d06-203">The number of elements from the source array to include in the resulting array.</span></span></param>
        <param name="selector"><span data-ttu-id="13d06-204">Функция, которую необходимо применить к каждому элементу исходного массива, включенному в результирующий массив.</span><span class="sxs-lookup"><span data-stu-id="13d06-204">The function to apply to each element from the source array included in the resulting array.</span></span></param>
        <param name="arg"><span data-ttu-id="13d06-205">Аргумент, который необходимо передать в функцию сопоставления селектора.</span><span class="sxs-lookup"><span data-stu-id="13d06-205">An argument to be passed to the selector mapping function.</span></span></param>
        <summary><span data-ttu-id="13d06-206">Инициализирует новый экземпляр структуры <see cref="T:System.Collections.Immutable.ImmutableArray`1" />.</span><span class="sxs-lookup"><span data-stu-id="13d06-206">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13d06-207">Эта перегрузка позволяет эффективное создание <xref:System.Collections.Immutable.ImmutableArray%601> среза существующего <xref:System.Collections.Immutable.ImmutableArray%601>, где функция сопоставления необходимо применить к каждому элементу из исходного массива, включенному в результирующий массив.</span><span class="sxs-lookup"><span data-stu-id="13d06-207">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on a slice of an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from the source array             included in the resulting array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableArray&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TSource&gt; ToImmutableArray&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; ToImmutableArray&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableArray(Of TSource) (items As IEnumerable(Of TSource)) As ImmutableArray(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableArray&lt;TSource&gt; ToImmutableArray(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member ToImmutableArray : seq&lt;'Source&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'Source&gt;" Usage="System.Collections.Immutable.ImmutableArray.ToImmutableArray items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="13d06-208">Количество элементов в <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="13d06-208">The type of elements contained in <paramref name="items" />.</span></span></typeparam>
        <param name="items"><span data-ttu-id="13d06-209">Коллекция объектов, которые нужно скопировать в неизменяемый массив.</span><span class="sxs-lookup"><span data-stu-id="13d06-209">The collection of objects to copy to the immutable array.</span></span></param>
        <summary><span data-ttu-id="13d06-210">Создает неизменяемый массив на основе указанной коллекции.</span><span class="sxs-lookup"><span data-stu-id="13d06-210">Creates an immutable array from the specified collection.</span></span></summary>
        <returns><span data-ttu-id="13d06-211">Неизменяемый массив, который содержит указанную коллекцию объектов.</span><span class="sxs-lookup"><span data-stu-id="13d06-211">An immutable array that contains the specified collection of objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableArray&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TSource&gt; ToImmutableArray&lt;TSource&gt; (this System.Collections.Immutable.ImmutableArray&lt;TSource&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; ToImmutableArray&lt;TSource&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!TSource&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableArray&lt;TSource&gt; ToImmutableArray(System::Collections::Immutable::ImmutableArray&lt;TSource&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ToImmutableArray : System.Collections.Immutable.ImmutableArray&lt;'Source&gt;.Builder -&gt; System.Collections.Immutable.ImmutableArray&lt;'Source&gt;" Usage="System.Collections.Immutable.ImmutableArray.ToImmutableArray builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;+Builder" Index="0" FrameworkAlternate="netcore-3.0" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="builder">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>