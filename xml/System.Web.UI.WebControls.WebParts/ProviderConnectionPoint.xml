<Type Name="ProviderConnectionPoint" FullName="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="575da1e985d2a34222cb6c445b73da8de19944c0" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59352320" /></Metadata><TypeSignature Language="C#" Value="public class ProviderConnectionPoint : System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ProviderConnectionPoint extends System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public Class ProviderConnectionPoint&#xA;Inherits ConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProviderConnectionPoint : System::Web::UI::WebControls::WebParts::ConnectionPoint" />
  <TypeSignature Language="F#" Value="type ProviderConnectionPoint = class&#xA;    inherit ConnectionPoint" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ConnectionPoint</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="811a1-101">Определяет объект точки подключения, позволяющий серверному элементу управления действовать в качестве поставщика, чтобы сформировать подключение к потребителю.</span><span class="sxs-lookup"><span data-stu-id="811a1-101">Defines a connection point object that enables a server control acting as a provider to form a connection with a consumer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="811a1-102">В каждое соединение веб-частей между двумя серверными элементами управления, каждый элемент управления должен иметь (помимо прочих требований) связанный объект точки подключения, включает его для подключения к другому элементу управления, а также для предоставления или получения данных, в зависимости от того, следует ли элемент управления используется в качестве поставщика или потребителя соединения.</span><span class="sxs-lookup"><span data-stu-id="811a1-102">In every Web Parts connection between two server controls, each control must have (among other requirements) an associated connection point object that enables it to connect to the other control and to either provide or consume data, depending on whether the control is designated as the provider or consumer for the connection.</span></span> <span data-ttu-id="811a1-103">Объект <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> объект содержит сведения о том, как элемент управления может подключаться к другому элементу управления и тип данных, он может публиковать.</span><span class="sxs-lookup"><span data-stu-id="811a1-103">A <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> object in general contains the details for how a control can connect to another control and the type of data it can share.</span></span> <span data-ttu-id="811a1-104">Для элемента управления, играющий роль поставщика в подключении, его точка соединения должна быть <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> объекта.</span><span class="sxs-lookup"><span data-stu-id="811a1-104">For a control acting as the provider in a connection, its connection point must be a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object.</span></span> <span data-ttu-id="811a1-105">Дополнительные сведения о подключениях веб-частей и точки подключения см. в разделах, перечисленных в разделе также см. в разделе ниже.</span><span class="sxs-lookup"><span data-stu-id="811a1-105">For details on Web Parts connections and connection points, see the topics listed in the See Also section below.</span></span>  
  
 <span data-ttu-id="811a1-106">Для создания <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> объекта, требуются несколько шагов:</span><span class="sxs-lookup"><span data-stu-id="811a1-106">To create a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object, several steps are required:</span></span>  
  
1.  <span data-ttu-id="811a1-107">Создайте интерфейс.</span><span class="sxs-lookup"><span data-stu-id="811a1-107">Create an interface.</span></span> <span data-ttu-id="811a1-108">Когда данные поставщика общих ресурсов с потребителем, это достигается путем получения экземпляра интерфейса и возвращая этот экземпляр с потребителем.</span><span class="sxs-lookup"><span data-stu-id="811a1-108">When a provider shares data with a consumer, it does so by getting an instance of an interface, and returning that instance to a consumer.</span></span>  
  
2.  <span data-ttu-id="811a1-109">Реализуйте интерфейс в поставщике.</span><span class="sxs-lookup"><span data-stu-id="811a1-109">Implement the interface in a provider.</span></span> <span data-ttu-id="811a1-110">Объект <xref:System.Web.UI.WebControls.WebParts.WebPart> или другого серверного элемента управления (любого типа серверного элемента управления в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> можно использовать зоны), которые будут поставщик должен реализовывать интерфейс, созданный на первом шаге.</span><span class="sxs-lookup"><span data-stu-id="811a1-110">A <xref:System.Web.UI.WebControls.WebParts.WebPart> or other server control (any type of server control in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone can be used) that will be the provider must implement the interface created in the first step.</span></span>  
  
3.  <span data-ttu-id="811a1-111">Определите метод обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="811a1-111">Identify a callback method.</span></span> <span data-ttu-id="811a1-112">Метод в поставщике должно быть идентифицировано как метод обратного вызова для установления соединения.</span><span class="sxs-lookup"><span data-stu-id="811a1-112">A method in the provider must be identified as the callback method to establish a connection.</span></span> <span data-ttu-id="811a1-113">Этот метод возвращает экземпляр реализованного интерфейса потребителю.</span><span class="sxs-lookup"><span data-stu-id="811a1-113">This method returns an instance of the implemented interface to a consumer.</span></span> <span data-ttu-id="811a1-114">Подход веб-частей для идентификации метода обратного вызова в поставщике заключается в добавлении `ConnectionProvider` атрибут метаданных (определяется <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> класс) методу, который возвращает экземпляр интерфейса.</span><span class="sxs-lookup"><span data-stu-id="811a1-114">The Web Parts approach for identifying a callback method in the provider is to add a `ConnectionProvider` metadata attribute (defined by the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> class) to the method that returns the interface instance.</span></span> <span data-ttu-id="811a1-115">При добавлении атрибута Единственным обязательным параметром является отображаемое имя для точки подключения поставщика.</span><span class="sxs-lookup"><span data-stu-id="811a1-115">When the attribute is added, the only required parameter is a display name to use for the provider connection point.</span></span> <span data-ttu-id="811a1-116">Необязательные параметры можно также добавить, например идентификатор для точки подключения.</span><span class="sxs-lookup"><span data-stu-id="811a1-116">Optional parameters can also be added, such as an ID for the connection point.</span></span>  
  
 <span data-ttu-id="811a1-117">После элемента управления начнет действовать в качестве поставщика, элемент управления может участвовать в соединениях, (при условии, что элемент управления получателя аналогично оборудован).</span><span class="sxs-lookup"><span data-stu-id="811a1-117">After a control has been equipped to act as a provider, the control can participate in connections (assuming that a consumer control is similarly equipped and available).</span></span> <span data-ttu-id="811a1-118">Чтобы создать статическое, декларативный подключение в разметке веб-страницы, разработчики могут использовать `<asp:webpartconnection>` элемент.</span><span class="sxs-lookup"><span data-stu-id="811a1-118">To create a static, declarative connection in the markup of a Web page, developers can use the `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="811a1-119">Если `ConnectionProvider` атрибут в исходном коде поставщика, который определяет метод обратного вызова указывает идентификатор для точки подключения, а затем это значение должны быть назначены `ProviderConnectionPointID` атрибут в `<asp:webpartconnection>` элемент на странице.</span><span class="sxs-lookup"><span data-stu-id="811a1-119">If the `ConnectionProvider` attribute in the provider source code that identifies the callback method specifies an ID for the connection point, then that value must be assigned to the `ProviderConnectionPointID` attribute in the `<asp:webpartconnection>` element on a page.</span></span> <span data-ttu-id="811a1-120">Одна из причин, что разработчик может указать идентификатор для точки подключения поставщика, существует несколько точек подключения в элементе управления поставщика.</span><span class="sxs-lookup"><span data-stu-id="811a1-120">One reason that a developer might specify an ID for a provider connection point is if there are multiple connection points in the provider control.</span></span> <span data-ttu-id="811a1-121">Если идентификатор не указан для точки подключения поставщика в элементе управления поставщика, значение не назначаться `ProviderConnectionPointID` атрибут на странице, так как подключение будет создано с использованием значения по умолчанию, полученный из <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> поле.</span><span class="sxs-lookup"><span data-stu-id="811a1-121">If an ID is not specified for the provider connection point in the provider control, a value does not have to be assigned to the `ProviderConnectionPointID` attribute in the page either, because the connection will be created using a default value obtained from the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> field.</span></span>  
  
 <span data-ttu-id="811a1-122">Для создания подключения в коде, разработчикам необходимо создать новый <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> путем вызова метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> метод и передавая ему идентификатор элемента управления поставщика, а также идентификатор или индекс объекта определенного <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> объект в элементе управления поставщика.</span><span class="sxs-lookup"><span data-stu-id="811a1-122">To create a connection in code, developers must create a new <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> method and passing to it the ID of the provider control, along with the ID or index of the defined <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object in the provider control.</span></span> <span data-ttu-id="811a1-123">Возвращенный <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> , вместе со ссылкой на элемент управления поставщика, ссылка на объект для элемента управления получателя, а также соответствующий <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> , являются все передаваемые <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> метод для создания нового <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> объекта.</span><span class="sxs-lookup"><span data-stu-id="811a1-123">The returned <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object, along with a reference to the provider control, a reference to the consumer control, and a corresponding <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object, are all passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method to create a new <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span>  
  
 <span data-ttu-id="811a1-124">Несмотря на то, что разработчики могут использовать точки подключения поставщика, как часть установки подключений декларативно или программно, пользователи также могут взаимодействовать с точками подключения поставщика для установления подключений через пользовательский интерфейс (UI).</span><span class="sxs-lookup"><span data-stu-id="811a1-124">Although developers can use provider connection points as part of establishing connections either declaratively or programmatically, users can also interact with provider connection points to establish connections through the user interface (UI).</span></span> <span data-ttu-id="811a1-125">Если разработчики объявляют <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> элемента управления на веб-странице, он предоставляет пользовательский Интерфейс времени выполнения для создания подключений.</span><span class="sxs-lookup"><span data-stu-id="811a1-125">If developers declare a <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control on a Web page, it provides a run-time UI for users to create connections.</span></span> <span data-ttu-id="811a1-126">Если в качестве отправной точки для установления соединения, нажав кнопку пользователи выбрали элемента управления получателя его команду подключения (они могут выбрать поставщик, нет никакой разницы в установленное подключение), в пользовательском Интерфейсе, они будут видеть элемент управления с раскрывающимся списком с отображаемое имя доступного поставщика подключения точка (или точки, если их несколько).</span><span class="sxs-lookup"><span data-stu-id="811a1-126">If users choose the consumer control as the starting point for establishing the connection by clicking its connect verb (they could also choose the provider; there is no difference in the resulting connection), in the UI they will see a drop-down list control with the display name of the available provider connection point (or points if there are multiple ones).</span></span> <span data-ttu-id="811a1-127">Пользователи должны выбрать точку подключения поставщика, чтобы создать подключение.</span><span class="sxs-lookup"><span data-stu-id="811a1-127">Users must select a provider connection point to create a connection.</span></span>  
  
 <span data-ttu-id="811a1-128">Объект <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> объект связывает непосредственно с элементом управления определенного поставщика и сохраняет сведения о подключении в свойствах, он наследует от базового <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> класса.</span><span class="sxs-lookup"><span data-stu-id="811a1-128">A <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object associates directly with a specific provider control, and stores details about a connection in the properties it inherits from the base <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class.</span></span> <span data-ttu-id="811a1-129">Например, в унаследованный <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> свойство, точки подключения поставщика сохраняет тип интерфейса, возвращаемого поставщиком.</span><span class="sxs-lookup"><span data-stu-id="811a1-129">For example, in the inherited <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property, a provider connection point keeps the type of interface returned by the provider.</span></span> <span data-ttu-id="811a1-130">Если тип интерфейса поставщика и получателя в подключении, как работать с теми же, элементы управления являются совместимыми и могут создавать прямое подключение.</span><span class="sxs-lookup"><span data-stu-id="811a1-130">If the provider and consumer in a connection both work with the same interface type, the controls are compatible and capable of forming a direct connection.</span></span> <span data-ttu-id="811a1-131">Если поставщика и потребителя не может работать с тем же типом интерфейса, они несовместимы и необходимо использовать <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> объекта для преобразования точки подключения поставщика <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> значение в тип, который потребитель может работать с.</span><span class="sxs-lookup"><span data-stu-id="811a1-131">If the provider and consumer cannot work with the same interface type, they are incompatible and must use a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object to translate the provider connection point's <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> value into a type that the consumer can work with.</span></span> <span data-ttu-id="811a1-132">Является другим важным свойством <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> при создании подключений, выберите пункт Свойства, которое предоставляет понятное имя для отображения в пользовательском Интерфейсе, пользователи могут выбрать подключения поставщика.</span><span class="sxs-lookup"><span data-stu-id="811a1-132">Another important inherited property is the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property, which provides a friendly name to display in the UI for users to choose a provider connection point when creating connections.</span></span> <span data-ttu-id="811a1-133">Отображаемое имя — это обязательный параметр при добавлении разработчиками `ConnectionProvider` атрибут в метод обратного вызова в элементе управления поставщика.</span><span class="sxs-lookup"><span data-stu-id="811a1-133">The display name is the required parameter when developers add a `ConnectionProvider` attribute to the callback method in a provider control.</span></span> <span data-ttu-id="811a1-134">Унаследованный <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> свойство полезно также, как указано выше, так как он предоставляет уникальный идентификатор для точки подключения поставщика, в случае, если поставщик имеет несколько точек подключения.</span><span class="sxs-lookup"><span data-stu-id="811a1-134">The inherited <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> property is also useful, as indicated above, because it provides a unique identifier for a provider connection point in the event that a provider has multiple connection points.</span></span> <span data-ttu-id="811a1-135">Поставщик может иметь несколько <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> объекты, определенные в нем и в этом случае при добавлении разработчиками `ConnectionProvider` атрибут к методу, следует указать значение идентификатора для различения каждой точки подключения.</span><span class="sxs-lookup"><span data-stu-id="811a1-135">A provider can have multiple <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> objects defined in it, and in this case, when developers add the `ConnectionProvider` attribute to a method, they should specify an ID value to distinguish each connection point.</span></span> <span data-ttu-id="811a1-136">Один другие важные является свойством <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> свойство, которое указывает, что точка подключения поставщика может одновременно подключаться к нескольким потребителям.</span><span class="sxs-lookup"><span data-stu-id="811a1-136">One other notable inherited property is the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property, which indicates whether a provider connection point can connect simultaneously to multiple consumers.</span></span> <span data-ttu-id="811a1-137">Это свойство имеет значение `true` по умолчанию для точки подключения поставщика (в то время как по умолчанию используется `false` для точки подключения получателя).</span><span class="sxs-lookup"><span data-stu-id="811a1-137">This property value is `true` by default for provider connection points (whereas it defaults to `false` for consumer connection points).</span></span>  
  
 <span data-ttu-id="811a1-138"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> Класс добавляет несколько уникальных методов к членам, он наследует от <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> класса.</span><span class="sxs-lookup"><span data-stu-id="811a1-138">The <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> class adds several unique methods to the members it inherits from the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class.</span></span> <span data-ttu-id="811a1-139"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A> Метод получает экземпляр интерфейса, который будет возвращать метод обратного вызова для потребителей.</span><span class="sxs-lookup"><span data-stu-id="811a1-139">The <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A> method retrieves an instance of the interface that the callback method will return to consumers.</span></span> <span data-ttu-id="811a1-140"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces%2A> Метод позволяет получить дополнительные пользовательские интерфейсы, которые являются частью существующего подключения, но не интерфейсы используются для установления соединения.</span><span class="sxs-lookup"><span data-stu-id="811a1-140">The <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces%2A> method retrieves additional consumer interfaces that are part of an existing connection, but are not the interfaces used to establish the connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="811a1-141">В следующем примере кода показаны простые способы создания подключения декларативно, программно или через пользовательский Интерфейс каждого варианта предоставления доступа, используйте точки подключения поставщика.</span><span class="sxs-lookup"><span data-stu-id="811a1-141">The following code example shows simple ways to create a connection declaratively, programmatically, or through the UI, in each case making use of a provider connection point.</span></span>  
  
 <span data-ttu-id="811a1-142">Пример состоит из четырех частей.</span><span class="sxs-lookup"><span data-stu-id="811a1-142">The example has four parts:</span></span>  
  
-   <span data-ttu-id="811a1-143">Режим отображения пользовательского элемента управления, позволяющий изменить веб-частей на странице.</span><span class="sxs-lookup"><span data-stu-id="811a1-143">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="811a1-144">Исходный код для интерфейса, а также два <xref:System.Web.UI.WebControls.WebParts.WebPart> управляет действующего в качестве поставщика и потребителя для подключения.</span><span class="sxs-lookup"><span data-stu-id="811a1-144">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="811a1-145">Веб-страница для размещения всех элементов управления и выполнение примера кода.</span><span class="sxs-lookup"><span data-stu-id="811a1-145">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="811a1-146">Объяснение того, как запустить пример страницы.</span><span class="sxs-lookup"><span data-stu-id="811a1-146">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="811a1-147">Первая часть этого примера кода — пользовательский элемент управления, позволяющий пользователю изменять режим отображения на веб-страницы.</span><span class="sxs-lookup"><span data-stu-id="811a1-147">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="811a1-148">Сохраните следующий исходный код в файле ASCX, задав для него имя файла, который назначен `Src` атрибут `Register` директив для этого пользовательского элемента управления, который находится в верхней размещения веб-страницы.</span><span class="sxs-lookup"><span data-stu-id="811a1-148">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="811a1-149">Сведения о режимах отображения и описание исходного кода в этом элементе управления, см. в разделе [Пошаговое руководство: Изменение режимов отображения на веб-частей страницы](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span><span class="sxs-lookup"><span data-stu-id="811a1-149">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="811a1-150">Вторая часть в примере кода приведен исходный код для интерфейса и элементов управления.</span><span class="sxs-lookup"><span data-stu-id="811a1-150">The second part of the code example is the source code for the interface and controls.</span></span> <span data-ttu-id="811a1-151">Исходный файл содержит простой интерфейс с именем `IZipCode`.</span><span class="sxs-lookup"><span data-stu-id="811a1-151">The source file contains a simple interface named `IZipCode`.</span></span> <span data-ttu-id="811a1-152">Имеется также <xref:System.Web.UI.WebControls.WebParts.WebPart> класс с именем `ZipCodeWebPart` , реализующий интерфейс и выступает в качестве элемента управления поставщика.</span><span class="sxs-lookup"><span data-stu-id="811a1-152">There is also a <xref:System.Web.UI.WebControls.WebParts.WebPart> class named `ZipCodeWebPart` that implements the interface and acts as the provider control.</span></span> <span data-ttu-id="811a1-153">Его `ProvideIZipCode` метод является методом обратного вызова, реализующий единственный член этого интерфейса.</span><span class="sxs-lookup"><span data-stu-id="811a1-153">Its `ProvideIZipCode` method is the callback method that implements the interface's only member.</span></span> <span data-ttu-id="811a1-154">Метод просто возвращает экземпляр интерфейса.</span><span class="sxs-lookup"><span data-stu-id="811a1-154">The method simply returns an instance of the interface.</span></span> <span data-ttu-id="811a1-155">Обратите внимание, что метод помечен атрибутом `ConnectionProvider` атрибут в своих метаданных.</span><span class="sxs-lookup"><span data-stu-id="811a1-155">Note that the method is marked with a `ConnectionProvider` attribute in its metadata.</span></span> <span data-ttu-id="811a1-156">Это механизм для идентификации метода как метода обратного вызова для точки подключения поставщика.</span><span class="sxs-lookup"><span data-stu-id="811a1-156">This is the mechanism for identifying the method as the callback method for the provider's connection point.</span></span> <span data-ttu-id="811a1-157">Другой <xref:System.Web.UI.WebControls.WebParts.WebPart> класс называется `WeatherWebPart`, и он выступает в роли потребителя для соединения.</span><span class="sxs-lookup"><span data-stu-id="811a1-157">The other <xref:System.Web.UI.WebControls.WebParts.WebPart> class is named `WeatherWebPart`, and it acts as the consumer for the connection.</span></span> <span data-ttu-id="811a1-158">Этот класс содержит метод с именем `GetZipCode` , возвращает экземпляр `IZipCode` интерфейса из элемента управления поставщика.</span><span class="sxs-lookup"><span data-stu-id="811a1-158">This class has a method named `GetZipCode` that gets an instance of the `IZipCode` interface from the provider control.</span></span> <span data-ttu-id="811a1-159">Обратите внимание, что этот метод помечен как метод точки подключения потребителя с `ConnectionConsumer` в метаданных атрибутом.</span><span class="sxs-lookup"><span data-stu-id="811a1-159">Note that this method is marked as the consumer's connection point method with a `ConnectionConsumer` attribute in its metadata.</span></span> <span data-ttu-id="811a1-160">Это механизм идентификации метода точки подключения в элементе управления получателя.</span><span class="sxs-lookup"><span data-stu-id="811a1-160">This is the mechanism for identifying the connection point method in the consumer control.</span></span>  
  
 <span data-ttu-id="811a1-161">Для выполнения примера кода необходимо скомпилировать этот исходный код.</span><span class="sxs-lookup"><span data-stu-id="811a1-161">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="811a1-162">Можно выполнить явную компиляцию и разместить сборку в папку Bin веб сайта или в глобальном кэше сборок.</span><span class="sxs-lookup"><span data-stu-id="811a1-162">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="811a1-163">Кроме того можно поместить исходный код в папку App_Code веб сайта, где он будет компилироваться динамически во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="811a1-163">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="811a1-164">Данный пример кода использует динамической компиляции.</span><span class="sxs-lookup"><span data-stu-id="811a1-164">This code example uses dynamic compilation.</span></span> <span data-ttu-id="811a1-165">Пошаговое руководство по компиляции, см. в разделе [Пошаговое руководство: Разработка и использование пользовательского веб-серверного элемента управления](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span><span class="sxs-lookup"><span data-stu-id="811a1-165">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="811a1-166">В третьей части в примере кода — это веб-страницы.</span><span class="sxs-lookup"><span data-stu-id="811a1-166">The third part of the code example is the Web page.</span></span> <span data-ttu-id="811a1-167">В верхней, `Register` директивы для регистрации пользовательских элементов управления, которые образуют связь и пользовательский элемент управления, позволяющий пользователю изменять режимы отображения на странице.</span><span class="sxs-lookup"><span data-stu-id="811a1-167">Near the top are `Register` directives to register the custom controls that form the connection, and the user control that enables users to change display modes on the page.</span></span> <span data-ttu-id="811a1-168">Само соединение создается декларативно в `<staticconnections>` элемента на странице.</span><span class="sxs-lookup"><span data-stu-id="811a1-168">The connection itself is created declaratively within the `<staticconnections>` element on the page.</span></span> <span data-ttu-id="811a1-169">Этот пример демонстрирует один из способов создания подключения--Примечание `ProviderConnectionPointID` атрибут в `<asp:webpartconnection>` элемент.</span><span class="sxs-lookup"><span data-stu-id="811a1-169">This demonstrates one way of creating a connection--note the `ProviderConnectionPointID` attribute in the `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="811a1-170">Можно также создать соединения программным образом. код для выполнения, который находится в `Button1_Click` метод.</span><span class="sxs-lookup"><span data-stu-id="811a1-170">You can also create the connection programmatically; the code for doing that is in the `Button1_Click` method.</span></span> <span data-ttu-id="811a1-171">В этом случае <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> объект создается и передается в метод, который создает фактическое подключение.</span><span class="sxs-lookup"><span data-stu-id="811a1-171">In this case, a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object is created and then passed to a method that creates the actual connection.</span></span> <span data-ttu-id="811a1-172">Следует ли создать подключение, декларативно или программно, точки подключения всегда необходимо указать для поставщика и потребителя.</span><span class="sxs-lookup"><span data-stu-id="811a1-172">Whether the connection is created declaratively or programmatically, connection points must always be specified for both the provider and the consumer.</span></span> <span data-ttu-id="811a1-173">`Button2_Click` Метод обращается к <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> объектов для поставщика и потребителя, а также записывает некоторые значения свойств метку в странице.</span><span class="sxs-lookup"><span data-stu-id="811a1-173">The `Button2_Click` method accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objects for both the provider and the consumer, and writes some of their property values to a label in the page.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 <span data-ttu-id="811a1-174">После загрузки страницы в браузере, щелкните **сведения о точках подключения** кнопки.</span><span class="sxs-lookup"><span data-stu-id="811a1-174">After you load the page in a browser, click the **Connection Point Details** button.</span></span> <span data-ttu-id="811a1-175">Появятся сведения о точках подключения поставщика и потребителя, установленных в декларативной связи.</span><span class="sxs-lookup"><span data-stu-id="811a1-175">Information about the provider and consumer connection points established in the declarative connection appears.</span></span> <span data-ttu-id="811a1-176">Затем используйте **режим отображения** раскрывающийся элемент управления для переключения страницы в режим подключения.</span><span class="sxs-lookup"><span data-stu-id="811a1-176">Next, use the **Display Mode** drop-down control to switch the page into connect mode.</span></span> <span data-ttu-id="811a1-177">В меню команд **почтовый индекс получателя** <xref:System.Web.UI.WebControls.WebParts.WebPart> управления (представленное стрелкой вниз в строке заголовка), щелкните команду подключения.</span><span class="sxs-lookup"><span data-stu-id="811a1-177">On the verbs menu of the **ZIP Code Consumer**<xref:System.Web.UI.WebControls.WebParts.WebPart> control (represented by a downward arrow in the title bar), click the connect verb.</span></span> <span data-ttu-id="811a1-178">Автоматически создать подключение, отображается пользовательский Интерфейс, `<asp:connectionszone>` элемента управления, объявленные в странице.</span><span class="sxs-lookup"><span data-stu-id="811a1-178">The connection UI appears, created automatically by the `<asp:connectionszone>` control declared in the page.</span></span> <span data-ttu-id="811a1-179">Это еще один способ создания подключения (через пользовательский Интерфейс), а также декларативные и программные методы, описанные ранее.</span><span class="sxs-lookup"><span data-stu-id="811a1-179">This is another way of creating a connection (through the UI), along with the declarative and programmatic methods discussed earlier.</span></span> <span data-ttu-id="811a1-180">Нажмите кнопку **Disconnect** кнопку, чтобы завершить существующие статическое подключение.</span><span class="sxs-lookup"><span data-stu-id="811a1-180">Click the **Disconnect** button to terminate the existing static connection.</span></span> <span data-ttu-id="811a1-181">Нажмите кнопку **создать подключение к поставщику** ссылку.</span><span class="sxs-lookup"><span data-stu-id="811a1-181">Click the **Create a Connection to a Provider** link.</span></span> <span data-ttu-id="811a1-182">Теперь пользовательский Интерфейс отображает элемент управления раскрывающегося списка, который содержит отображаемое имя точки подключения поставщика.</span><span class="sxs-lookup"><span data-stu-id="811a1-182">The UI now displays a drop-down control that lists the provider connection point display name.</span></span> <span data-ttu-id="811a1-183">Выберите точку подключения в раскрывающемся списке и нажмите кнопку **Connect** для завершения подключения.</span><span class="sxs-lookup"><span data-stu-id="811a1-183">Select the connection point in the drop-down list, and then click **Connect** to complete the connection.</span></span> <span data-ttu-id="811a1-184">Затем щелкните **Disconnect** еще раз.</span><span class="sxs-lookup"><span data-stu-id="811a1-184">Next, click **Disconnect** again.</span></span> <span data-ttu-id="811a1-185">Щелкните **динамическое подключение** кнопку, чтобы создать подключение программными средствами.</span><span class="sxs-lookup"><span data-stu-id="811a1-185">Then, click the **Dynamic Connection** button to create a connection programmatically.</span></span> <span data-ttu-id="811a1-186">Используйте **режим отображения** элемента управления, чтобы вернуться в режим просмотра.</span><span class="sxs-lookup"><span data-stu-id="811a1-186">Use the **Display Mode** control to return the page to browse mode.</span></span> <span data-ttu-id="811a1-187">Нажмите кнопку **сведения о пункте подключения** кнопку, чтобы еще раз указать сведения о объекта точки подключения поставщика.</span><span class="sxs-lookup"><span data-stu-id="811a1-187">Click the **Connection Point Details** button again, to once more indicate details about the provider connection point object.</span></span>  
  
 <span data-ttu-id="811a1-188">В этом примере демонстрируется установления соединения и использование поставщика точки подключения тремя способами: статическое подключение, объявленные в разметке веб-страницы; соединение, созданное на код, который используется <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> объект и подключения, созданного пользователем через пользовательский Интерфейс подключения.</span><span class="sxs-lookup"><span data-stu-id="811a1-188">The example has demonstrated establishing a connection and using a provider connection point in three ways: a static connection declared in the Web page markup; a connection created in code that used a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object; and a connection created by a user through the connection UI.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="811a1-189">Веб-частей ASP.NET элементов управления</span><span class="sxs-lookup"><span data-stu-id="811a1-189">ASP.NET Web Parts Controls</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)"><span data-ttu-id="811a1-190">Обзор подключений веб-частей</span><span class="sxs-lookup"><span data-stu-id="811a1-190">Web Parts Connections Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProviderConnectionPoint (System.Reflection.MethodInfo callbackMethod, Type interfaceType, Type controlType, string displayName, string id, bool allowsMultipleConnections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MethodInfo callbackMethod, class System.Type interfaceType, class System.Type controlType, string displayName, string id, bool allowsMultipleConnections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackMethod As MethodInfo, interfaceType As Type, controlType As Type, displayName As String, id As String, allowsMultipleConnections As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProviderConnectionPoint(System::Reflection::MethodInfo ^ callbackMethod, Type ^ interfaceType, Type ^ controlType, System::String ^ displayName, System::String ^ id, bool allowsMultipleConnections);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.ProviderConnectionPoint : System.Reflection.MethodInfo * Type * Type * string * string * bool -&gt; System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" Usage="new System.Web.UI.WebControls.WebParts.ProviderConnectionPoint (callbackMethod, interfaceType, controlType, displayName, id, allowsMultipleConnections)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callbackMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="interfaceType" Type="System.Type" />
        <Parameter Name="controlType" Type="System.Type" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="allowsMultipleConnections" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="callbackMethod"><span data-ttu-id="811a1-191">Метод в элементе управления поставщика, возвращающий экземпляр интерфейса потребителям для установления подключения.</span><span class="sxs-lookup"><span data-stu-id="811a1-191">The method in the provider control that returns an interface instance to consumers to establish a connection.</span></span></param>
        <param name="interfaceType"><span data-ttu-id="811a1-192">Объект <see cref="T:System.Type" /> интерфейса, который поставщик обслуживает для потребителей.</span><span class="sxs-lookup"><span data-stu-id="811a1-192">The <see cref="T:System.Type" /> of the interface that the provider serves to consumers.</span></span></param>
        <param name="controlType"><span data-ttu-id="811a1-193">Объект <see cref="T:System.Type" /> элемента управления поставщика, с которым сопоставлена точка подключения поставщика.</span><span class="sxs-lookup"><span data-stu-id="811a1-193">The <see cref="T:System.Type" /> of the provider control with which the provider connection point is associated.</span></span></param>
        <param name="displayName"><span data-ttu-id="811a1-194">Понятное отображаемое имя для точки подключения поставщика, которое видят пользователи в пользовательском интерфейсе подключения.</span><span class="sxs-lookup"><span data-stu-id="811a1-194">A friendly display name for the provider connection point that appears to users in the connection user interface (UI).</span></span></param>
        <param name="id"><span data-ttu-id="811a1-195">Уникальный идентификатор для точки подключения поставщика.</span><span class="sxs-lookup"><span data-stu-id="811a1-195">A unique identifier for the provider connection point.</span></span></param>
        <param name="allowsMultipleConnections"><span data-ttu-id="811a1-196">Логическое значение, указывающее может ли точка подключения поставщика иметь несколько одновременных подключений с потребителями.</span><span class="sxs-lookup"><span data-stu-id="811a1-196">A Boolean value indicating whether the provider connection point can have multiple simultaneous connections with consumers.</span></span></param>
        <summary><span data-ttu-id="811a1-197">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />.</span><span class="sxs-lookup"><span data-stu-id="811a1-197">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="811a1-198"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.%23ctor%2A> Конструктор для <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> класс просто вызывает базовый конструктор, передавая ему различные параметры и инициализации базового класса.</span><span class="sxs-lookup"><span data-stu-id="811a1-198">The <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.%23ctor%2A> constructor for the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> class simply calls the base constructor, passing to it the various parameters and initializing the base class.</span></span>  
  
 <span data-ttu-id="811a1-199">Конструктор базового класса проверяет число параметров для точки подключения и может создать несколько исключений.</span><span class="sxs-lookup"><span data-stu-id="811a1-199">The base class constructor checks a number of the parameters for a connection point and can throw several exceptions.</span></span> <span data-ttu-id="811a1-200">Список возможных исключений см. раздел "исключения".</span><span class="sxs-lookup"><span data-stu-id="811a1-200">For a list of possible exceptions, see the Exceptions section.</span></span>  
  
 <span data-ttu-id="811a1-201">Можно вызвать <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.%23ctor%2A> конструктор для создания собственного экземпляра <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> класса.</span><span class="sxs-lookup"><span data-stu-id="811a1-201">You can call the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.%23ctor%2A> constructor to create your own instance of the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> class.</span></span> <span data-ttu-id="811a1-202">Однако в случаях, когда вы просто установления соединения и не расширения класса, должен вызывать <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> метод для возврата существующего объекта точки подключения поставщика.</span><span class="sxs-lookup"><span data-stu-id="811a1-202">However, in cases where you are simply establishing a connection and not extending the class, you should call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> method to return an existing connection point object from a provider.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="811a1-203">В следующем примере кода показано, как выполнять наследование <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> класса для создания точки подключения пользовательского поставщика.</span><span class="sxs-lookup"><span data-stu-id="811a1-203">The following code example demonstrates how to derive from the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> class to create a custom provider connection point.</span></span>  
  
 <span data-ttu-id="811a1-204">В примере кода состоит из трех частей:</span><span class="sxs-lookup"><span data-stu-id="811a1-204">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="811a1-205">Исходный файл, который содержит провайдер <xref:System.Web.UI.WebControls.WebParts.WebPart> управления, объект-получатель <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления, а пользовательский <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> объекта.</span><span class="sxs-lookup"><span data-stu-id="811a1-205">A source file that contains a provider <xref:System.Web.UI.WebControls.WebParts.WebPart> control, a consumer <xref:System.Web.UI.WebControls.WebParts.WebPart> control, and a custom <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object.</span></span>  
  
-   <span data-ttu-id="811a1-206">Веб-страницы, содержащей элемент управления в статическом подключении.</span><span class="sxs-lookup"><span data-stu-id="811a1-206">A Web page that hosts the controls in a static connection.</span></span>  
  
-   <span data-ttu-id="811a1-207">Объяснение того, как запустить пример кода.</span><span class="sxs-lookup"><span data-stu-id="811a1-207">An explanation of how to run the example code.</span></span>  
  
 <span data-ttu-id="811a1-208">Первая часть примера кода является источником для поставщика и потребителя <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления, а пользовательский <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> класс с именем `TableProviderConnectionPoint`.</span><span class="sxs-lookup"><span data-stu-id="811a1-208">The first part of the code example is the source for the provider and consumer <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> class, named `TableProviderConnectionPoint`.</span></span> <span data-ttu-id="811a1-209">Обратите внимание, что конструктор `TableProviderConnectionPoint` класс вызывает базовый конструктор, передавая ему необходимые параметры, как указано в разделе "Параметры".</span><span class="sxs-lookup"><span data-stu-id="811a1-209">Note that the constructor of the `TableProviderConnectionPoint` class calls the base constructor, passing it the required parameters as indicated in the Parameters section.</span></span> <span data-ttu-id="811a1-210">Также Обратите внимание, что в `TableProviderWebPart` класс, `GetConnectionInterface` метод указывается в качестве метода обратного вызова для подключений и `ConnectionProvider` атрибут объявляет пользовательский `TableProviderConnectionPoint` как параметр.</span><span class="sxs-lookup"><span data-stu-id="811a1-210">Also note that in the `TableProviderWebPart` class, the `GetConnectionInterface` method is specified as the callback method for connections, and the `ConnectionProvider` attribute declares the custom `TableProviderConnectionPoint` as a parameter.</span></span> <span data-ttu-id="811a1-211">Это демонстрируется создание точки подключения пользовательского поставщика, а затем свяжите ее с элементом управления поставщика.</span><span class="sxs-lookup"><span data-stu-id="811a1-211">This demonstrates how to create a custom provider connection point and then associate it with a provider control.</span></span> <span data-ttu-id="811a1-212">В этом примере предполагается, что исходный код компилируется динамически, так что следует поместить файл исходного кода в подпапку App_Code веб-приложения.</span><span class="sxs-lookup"><span data-stu-id="811a1-212">This example assumes that the source code is dynamically compiled, so you should place the source code file in an App_Code subfolder of your Web application.</span></span>  
  
 [!code-csharp[UI.WebControls.WebParts.ProviderConnectionPoint#1](~/samples/snippets/csharp/VS_Snippets_WebNet/UI.WebControls.WebParts.ProviderConnectionPoint/CS/connectionControls.cs#1)]  
  
 <span data-ttu-id="811a1-213">Вторая часть примера кода — веб-страницы, на котором размещены пользовательские элементы управления в статическом подключении веб-частей.</span><span class="sxs-lookup"><span data-stu-id="811a1-213">The second part of the code example is the Web page that hosts the custom controls in a static Web Parts connection.</span></span> <span data-ttu-id="811a1-214">В верхней части страницы находится `Register` директива для объявления префикса и пространства имен для пользовательских элементов управления.</span><span class="sxs-lookup"><span data-stu-id="811a1-214">At the top of the page is a `Register` directive to declare a prefix and the namespace for the custom controls.</span></span> <span data-ttu-id="811a1-215">Соединение объявлено с помощью `<asp:webpartconnection>` управления элемент и поставщика и получателя, объявляются в `<asp:webpartzone>` элемент.</span><span class="sxs-lookup"><span data-stu-id="811a1-215">The connection is declared by using an `<asp:webpartconnection>` element, and the provider and consumer controls are declared within an `<asp:webpartzone>` element.</span></span>  
  
 [!code-aspx-csharp[UI.WebControls.WebParts.ProviderConnectionPoint#3](~/samples/snippets/csharp/VS_Snippets_WebNet/UI.WebControls.WebParts.ProviderConnectionPoint/CS/defaultcs.aspx#3)]  
  
 <span data-ttu-id="811a1-216">Загрузите страницу в браузере.</span><span class="sxs-lookup"><span data-stu-id="811a1-216">Load the page in a browser.</span></span> <span data-ttu-id="811a1-217">Подключение между элементами управления уже существует, а потребитель отображает данные от поставщика, так как подключение было объявлено как статическое подключение на странице.</span><span class="sxs-lookup"><span data-stu-id="811a1-217">The connection between the controls already exists, and the consumer displays the data from the provider, because the connection was declared as a static connection in the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="811a1-218"><paramref name="callbackMethod" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="811a1-218"><paramref name="callbackMethod" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="811a1-219">-или-</span><span class="sxs-lookup"><span data-stu-id="811a1-219">-or-</span></span> 
 <span data-ttu-id="811a1-220"><paramref name="interfaceType" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="811a1-220"><paramref name="interfaceType" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="811a1-221">-или-</span><span class="sxs-lookup"><span data-stu-id="811a1-221">-or-</span></span> 
 <span data-ttu-id="811a1-222"><paramref name="controlType" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="811a1-222"><paramref name="controlType" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="811a1-223">-или-</span><span class="sxs-lookup"><span data-stu-id="811a1-223">-or-</span></span> 
 <span data-ttu-id="811a1-224">Параметр <paramref name="displayName" /> имеет значение <see langword="null" /> или равен пустой строке ("").</span><span class="sxs-lookup"><span data-stu-id="811a1-224"><paramref name="displayName" /> is <see langword="null" /> or an empty string ("").</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="811a1-225">Параметр <paramref name="controlType" /> имеет тип, отличный от типа элемента управления поставщика (или производного от него допустимого класса).</span><span class="sxs-lookup"><span data-stu-id="811a1-225"><paramref name="controlType" /> is not the same type as the provider control (or a valid class derived from it).</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="811a1-226">Веб-частей ASP.NET элементов управления</span><span class="sxs-lookup"><span data-stu-id="811a1-226">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : System.Web.UI.Control -&gt; obj&#xA;override this.GetObject : System.Web.UI.Control -&gt; obj" Usage="providerConnectionPoint.GetObject control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="811a1-227">Элемент управления, действующий как поставщик в связи веб-частей.</span><span class="sxs-lookup"><span data-stu-id="811a1-227">The control acting as the provider in a Web Parts connection.</span></span></param>
        <summary><span data-ttu-id="811a1-228">Вызывает метод обратного вызова в элементе управления поставщика, который получает экземпляр интерфейса для возвращения потребителям.</span><span class="sxs-lookup"><span data-stu-id="811a1-228">Invokes the callback method in a provider control that gets an interface instance to return to consumers.</span></span></summary>
        <returns><span data-ttu-id="811a1-229">Объект <see cref="T:System.Object" />, являющийся экземпляром интерфейса, который поставщик возвращает потребителям для установления подключения.</span><span class="sxs-lookup"><span data-stu-id="811a1-229">An <see cref="T:System.Object" /> that is an instance of the interface a provider returns to consumers to establish a connection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="811a1-230">Этот метод возвращает объект из элемента управления поставщика, являющийся экземпляром интерфейса, используемого для установления соединения.</span><span class="sxs-lookup"><span data-stu-id="811a1-230">This method returns an object from the provider control that is an instance of the interface used to establish a connection.</span></span> <span data-ttu-id="811a1-231">Тип объекта будет использоваться реализованного интерфейса.</span><span class="sxs-lookup"><span data-stu-id="811a1-231">The type of the object will be the type of the implemented interface.</span></span> <span data-ttu-id="811a1-232">Например, два интерфейса, которые реализуются для подключений веб-частей являются <xref:System.Web.UI.WebControls.WebParts.IWebPartField> и <xref:System.Web.UI.WebControls.WebParts.IWebPartRow>.</span><span class="sxs-lookup"><span data-stu-id="811a1-232">For example, two interfaces that are implemented for connections in the Web Parts control set are <xref:System.Web.UI.WebControls.WebParts.IWebPartField> and <xref:System.Web.UI.WebControls.WebParts.IWebPartRow>.</span></span> <span data-ttu-id="811a1-233">Когда <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A> вызывается метод <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> объекта, если соответствующий поставщик реализует один из этих интерфейсов, возвращаемый объект будет иметь тот же тип.</span><span class="sxs-lookup"><span data-stu-id="811a1-233">When the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A> method is called on a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object, if the associated provider implements one of these interfaces, the returned object will be of the same type.</span></span>  
  
 <span data-ttu-id="811a1-234"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A> Вызывается метод <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> объектов, когда подключение активируется.</span><span class="sxs-lookup"><span data-stu-id="811a1-234">The <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A> method is called by <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> objects when a connection is being activated.</span></span> <span data-ttu-id="811a1-235">Это важный шаг, который фактически инициирует подключение и начинает процесс, который позволяет двум элементам управления совместно использовать данные.</span><span class="sxs-lookup"><span data-stu-id="811a1-235">This is a critical step that actually initiates a connection and begins the process that enables two controls to share data.</span></span>  
  
 <span data-ttu-id="811a1-236">Элемента управления получателя в подключении должен быть могут работать с тем же типом интерфейса, как поставщик.</span><span class="sxs-lookup"><span data-stu-id="811a1-236">The consumer control in a connection must be able to work with the same type of interface as the provider.</span></span> <span data-ttu-id="811a1-237">Если этого не произошло, элементы управления несовместимы и <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> объект должен использоваться для установления соединения.</span><span class="sxs-lookup"><span data-stu-id="811a1-237">If it does not, the controls are incompatible and a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object must be used to establish a connection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="811a1-238"><paramref name="control" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="811a1-238"><paramref name="control" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecondaryInterfaces">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection GetSecondaryInterfaces (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection GetSecondaryInterfaces(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::ConnectionInterfaceCollection ^ GetSecondaryInterfaces(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member GetSecondaryInterfaces : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection&#xA;override this.GetSecondaryInterfaces : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" Usage="providerConnectionPoint.GetSecondaryInterfaces control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="811a1-239">Элемент управления, действующий как поставщик в связи веб-частей.</span><span class="sxs-lookup"><span data-stu-id="811a1-239">The control acting as the provider in a Web Parts connection.</span></span></param>
        <summary><span data-ttu-id="811a1-240">Получает дополнительную коллекцию дополнительных интерфейсов, которые могут поддерживаться точкой подключения поставщика.</span><span class="sxs-lookup"><span data-stu-id="811a1-240">Gets an optional collection of secondary interfaces that can be supported by a provider connection point.</span></span></summary>
        <returns><span data-ttu-id="811a1-241">Объект <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /> дополнительных интерфейсов, предоставленных элементом управления, действующим как поставщик.</span><span class="sxs-lookup"><span data-stu-id="811a1-241">A <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /> of additional interfaces provided by the control acting as a provider.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="811a1-242">Объект точки подключения поставщика всегда имеет интерфейс по умолчанию, который используется для установления соединения с потребителями.</span><span class="sxs-lookup"><span data-stu-id="811a1-242">A provider connection point object always has a default interface that is used to establish a connection with consumers.</span></span> <span data-ttu-id="811a1-243">Экземпляр интерфейса по умолчанию получается путем вызова <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A> метод <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> объекта.</span><span class="sxs-lookup"><span data-stu-id="811a1-243">An instance of the default interface is retrieved by calling the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A> method on a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object.</span></span>  
  
 <span data-ttu-id="811a1-244">Тем не менее некоторые элементы управления поставщика будут реализовывать несколько интерфейсов для предоставления клиентам как часть соединения.</span><span class="sxs-lookup"><span data-stu-id="811a1-244">However, some provider controls will implement multiple interfaces to provide to consumers as part of a connection.</span></span> <span data-ttu-id="811a1-245">Эти интерфейсы, которые не используются по умолчанию, которые используются для установления соединения, называются дополнительных интерфейсов.</span><span class="sxs-lookup"><span data-stu-id="811a1-245">These interfaces, which are not the default ones used to establish a connection, are called secondary interfaces.</span></span> <span data-ttu-id="811a1-246"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces%2A> Метод предоставляет способ для возврата коллекции ссылок на дополнительных интерфейсов, так же, как <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A> метод возвращает ссылку на интерфейс по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="811a1-246">The <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces%2A> method provides a way to return a collection of references to the secondary interfaces, just as the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A> method returns a reference to the default interface.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="811a1-247"><see cref="M:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces(System.Web.UI.Control)" /> Метод в <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> класс содержит без реализации; он возвращает пустую коллекцию дополнительных интерфейсов.</span><span class="sxs-lookup"><span data-stu-id="811a1-247">The <see cref="M:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces(System.Web.UI.Control)" /> method in the <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> class contains no implementation; it returns an empty collection of secondary interfaces.</span></span> <span data-ttu-id="811a1-248">Для реализации этого метода необходимо наследование от <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> класса и переопределить этот метод, возврат из него ряд дополнительных интерфейсов.</span><span class="sxs-lookup"><span data-stu-id="811a1-248">To implement this method, you must inherit from the <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> class, and override this method, returning from it a specific set of secondary interfaces.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>