<Type Name="ConsumerConnectionPoint" FullName="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="29624fae597644e3fae1c16dd4d9a165a85e3f15" /><Meta Name="ms.sourcegitcommit" Value="2982b8c4cce02c2542285fcaf172f7544d6b80bc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/09/2019" /><Meta Name="ms.locfileid" Value="59349187" /></Metadata><TypeSignature Language="C#" Value="public class ConsumerConnectionPoint : System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ConsumerConnectionPoint extends System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public Class ConsumerConnectionPoint&#xA;Inherits ConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConsumerConnectionPoint : System::Web::UI::WebControls::WebParts::ConnectionPoint" />
  <TypeSignature Language="F#" Value="type ConsumerConnectionPoint = class&#xA;    inherit ConnectionPoint" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ConnectionPoint</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="965d2-101">Определяет объект точки подключения, который позволяет серверному элементу управления выполнять роль получателя для установки подключения к поставщику.</span><span class="sxs-lookup"><span data-stu-id="965d2-101">Defines a connection point object that enables a server control acting as a consumer to form a connection with a provider.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="965d2-102">В каждое соединение веб-частей между двумя серверными элементами управления, каждый элемент управления должен иметь (помимо прочих требований) связанный объект точки подключения, включает его для подключения к другому элементу управления, а также для предоставления или получения данных, в зависимости от того, следует ли элемент управления используется в качестве поставщика или потребителя соединения.</span><span class="sxs-lookup"><span data-stu-id="965d2-102">In every Web Parts connection between two server controls, each control must have (among other requirements) an associated connection point object that enables it to connect to the other control and to either provide or consume data, depending on whether the control is designated as the provider or consumer for the connection.</span></span> <span data-ttu-id="965d2-103">Объект <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> объект содержит сведения о том, как элемент управления может подключаться к другому элементу управления и тип данных, он может публиковать.</span><span class="sxs-lookup"><span data-stu-id="965d2-103">A <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> object in general contains the details for how a control can connect to another control and the type of data it can share.</span></span> <span data-ttu-id="965d2-104">Для управления, который выполняет роль получателя в подключении, его точка соединения должна быть <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> объекта.</span><span class="sxs-lookup"><span data-stu-id="965d2-104">For a control acting as the consumer in a connection, its connection point must be a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span> <span data-ttu-id="965d2-105">Сведения о подключениях веб-частей и точки подключения см. в разделах, перечисленных в разделе также см. в разделе ниже.</span><span class="sxs-lookup"><span data-stu-id="965d2-105">For details on Web Parts connections and connection points, read the topics listed in the See Also section below.</span></span>  
  
 <span data-ttu-id="965d2-106">Для создания <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> объекта, требуются несколько шагов:</span><span class="sxs-lookup"><span data-stu-id="965d2-106">To create a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object, several steps are required:</span></span>  
  
1.  <span data-ttu-id="965d2-107">Включение управления получателя, для ссылки на экземпляр интерфейса.</span><span class="sxs-lookup"><span data-stu-id="965d2-107">Enable a consumer control to reference an interface instance.</span></span> <span data-ttu-id="965d2-108">Объект <xref:System.Web.UI.WebControls.WebParts.WebPart> или другого серверного элемента управления (любого типа серверного элемента управления, который будет добавлен к <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> зоны можно использовать) должен иметь возможность получать данные из экземпляра определенного интерфейса.</span><span class="sxs-lookup"><span data-stu-id="965d2-108">A <xref:System.Web.UI.WebControls.WebParts.WebPart> or other server control (any type of server control that will be added to a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone can be used) must be able to consume data from a specific interface instance.</span></span> <span data-ttu-id="965d2-109">Элемент управления не должны реализовывать интерфейс; только поставщик должен реализовывать его.</span><span class="sxs-lookup"><span data-stu-id="965d2-109">The control need not implement the interface; only the provider must implement it.</span></span> <span data-ttu-id="965d2-110">Потребитель может работать либо с типом интерфейса, предоставляемым поставщиком или, если это не так, <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> объект используется для преобразования данных из типа интерфейса поставщика для типа, понятные потребителю.</span><span class="sxs-lookup"><span data-stu-id="965d2-110">The consumer can either work with the exact interface type served by a provider or, if it does not, a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object can be used to transform data from a provider's interface type to a type understood by the consumer.</span></span> <span data-ttu-id="965d2-111">Типичный способ включить объект-получатель является объявить частное поле для размещения ссылки на тип требуемого интерфейса.</span><span class="sxs-lookup"><span data-stu-id="965d2-111">A typical way to enable a consumer is to declare a private field to contain a reference to the desired interface type.</span></span>  
  
2.  <span data-ttu-id="965d2-112">Определите метод обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="965d2-112">Identify a callback method.</span></span> <span data-ttu-id="965d2-113">Метод в объекте-получателе должно быть идентифицировано как метод обратного вызова для установления соединения с поставщиком.</span><span class="sxs-lookup"><span data-stu-id="965d2-113">A method in the consumer must be identified as the callback method to establish a connection with the provider.</span></span> <span data-ttu-id="965d2-114">Этот метод получает экземпляр интерфейса, что поставщик реализует и назначает его (например) закрытого поля создан на первом шаге.</span><span class="sxs-lookup"><span data-stu-id="965d2-114">This method retrieves an instance of the interface that the provider implements, and assigns it to (for example) the private field created in the first step.</span></span> <span data-ttu-id="965d2-115">Подход веб-частей для идентификации метода обратного вызова в объекте-получателе заключается в добавлении `ConnectionConsumer` атрибут метаданных (определяется <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> класс) методу, который получает экземпляр интерфейса.</span><span class="sxs-lookup"><span data-stu-id="965d2-115">The Web Parts approach for identifying a callback method in the consumer is to add a `ConnectionConsumer` metadata attribute (defined by the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> class) to the method that receives the interface instance.</span></span> <span data-ttu-id="965d2-116">При добавлении атрибута Единственным обязательным параметром такое отображаемое имя для точки подключения потребителя.</span><span class="sxs-lookup"><span data-stu-id="965d2-116">When the attribute is added, the only required parameter is a display name to use for the consumer connection point.</span></span> <span data-ttu-id="965d2-117">Необязательные параметры можно также добавить, такие как идентификатор.</span><span class="sxs-lookup"><span data-stu-id="965d2-117">Optional parameters can also be added, such as an ID.</span></span>  
  
3.  <span data-ttu-id="965d2-118">Процесс и вывода данных из экземпляра интерфейса.</span><span class="sxs-lookup"><span data-stu-id="965d2-118">Process and output the data from the interface instance.</span></span> <span data-ttu-id="965d2-119">Выполнять внутреннюю обработку данных, а затем обычно элемент управления получателя будут отображаться данные на страницу.</span><span class="sxs-lookup"><span data-stu-id="965d2-119">Perform any internal processing as needed on the data, and then typically a consumer control will render the data to the page.</span></span> <span data-ttu-id="965d2-120">Обычно это является переопределение элемента управления <xref:System.Web.UI.Control.OnPreRender%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="965d2-120">A common way of doing this is to override the control's <xref:System.Web.UI.Control.OnPreRender%2A> method.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="965d2-121">Во время синхронного запроса объекта-получателя следует запросить данные непосредственно из поставщика во время или сразу после <xref:System.Web.UI.Control.PreRender> событий.</span><span class="sxs-lookup"><span data-stu-id="965d2-121">During a synchronous request, a consumer should request data directly from the provider during or immediately after the <xref:System.Web.UI.Control.PreRender> event.</span></span> <span data-ttu-id="965d2-122">Во время асинхронного запроса Если метод обратного вызова поставщика не вызывается в любой момент во время отрисовки, разработчик может предположить, что данные не были переданы объекту-получателю.</span><span class="sxs-lookup"><span data-stu-id="965d2-122">During an asynchronous request, if the provider's callback method is not called at any point during rendering, the developer can assume that no data was sent to the consumer.</span></span>  
  
 <span data-ttu-id="965d2-123">После элемента управления начнет действовать как получатель, элемент управления может участвовать в соединениях, (при условии, что элемент управления поставщика также оборудован).</span><span class="sxs-lookup"><span data-stu-id="965d2-123">After a control has been equipped to act as a consumer, the control can participate in connections (assuming that a provider control is also equipped and available).</span></span> <span data-ttu-id="965d2-124">Чтобы создать статическое, декларативный подключение в разметке веб-страницы, разработчики могут использовать `<asp:webpartconnection>` элемент.</span><span class="sxs-lookup"><span data-stu-id="965d2-124">To create a static, declarative connection in the markup of a Web page, developers can use the `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="965d2-125">Если `ConnectionConsumer` атрибут в исходном коде потребителя, который определяет метод обратного вызова указывает идентификатор для точки подключения, а затем это значение должны быть назначены `ConsumerConnectionPointID` атрибут в `<asp:webpartconnection>` элемент на странице.</span><span class="sxs-lookup"><span data-stu-id="965d2-125">If the `ConnectionConsumer` attribute in the consumer source code that identifies the callback method specifies an ID for the connection point, then that value must be assigned to the `ConsumerConnectionPointID` attribute in the `<asp:webpartconnection>` element on a page.</span></span> <span data-ttu-id="965d2-126">Причина, что разработчик может указать идентификатор для точки подключения получателя, существует несколько точек подключения, определенные в элементе управления получателя.</span><span class="sxs-lookup"><span data-stu-id="965d2-126">A reason that a developer might specify an ID for a consumer connection point is if there are multiple connection points defined in the consumer control.</span></span> <span data-ttu-id="965d2-127">Если идентификатор не указан для точки подключения потребителя в элементе управления получателя, значение не назначаться `ConsumerConnectionPointID` атрибут на странице, так как подключение будет создано с использованием значения по умолчанию, полученный из <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> поле.</span><span class="sxs-lookup"><span data-stu-id="965d2-127">If an ID is not specified for the consumer connection point in the consumer control, a value does not have to be assigned to the `ConsumerConnectionPointID` attribute in the page either, because the connection will be created using a default value obtained from the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> field.</span></span>  
  
 <span data-ttu-id="965d2-128">Для создания подключения в коде, разработчикам необходимо создать новый <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> путем вызова метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> метод и передавая ему идентификатор элемента управления получателя, а также идентификатор или индекс объекта определенного <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> объекта в элементе управления получателя.</span><span class="sxs-lookup"><span data-stu-id="965d2-128">To create a connection in code, developers must create a new <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> method and passing to it the ID of the consumer control, along with the ID or index of the defined <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object in the consumer control.</span></span> <span data-ttu-id="965d2-129">Возвращенный <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> , вместе со ссылкой элемента управления получателя, ссылка на объект для элемента управления поставщика и соответствующий <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> , являются все передаваемые <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> метод для создания нового <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> объекта.</span><span class="sxs-lookup"><span data-stu-id="965d2-129">The returned <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object, along with a reference to the consumer control, a reference to the provider control, and a corresponding <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object, are all passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method to create a new <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span>  
  
 <span data-ttu-id="965d2-130">Несмотря на то, что разработчики могут использовать точки подключения получателя как часть установки подключений декларативно или программно, пользователи также могут взаимодействовать с точки подключения получателя для установки соединения через пользовательский интерфейс (UI).</span><span class="sxs-lookup"><span data-stu-id="965d2-130">Although developers can use consumer connection points as part of establishing connections either declaratively or programmatically, users can also interact with consumer connection points to establish connections through the user interface (UI).</span></span> <span data-ttu-id="965d2-131">Если разработчики объявляют <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> элемента управления на веб-странице, он предоставляет пользовательский Интерфейс времени выполнения для создания подключений.</span><span class="sxs-lookup"><span data-stu-id="965d2-131">If developers declare a <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control on a Web page, it provides a run-time UI for users to create connections.</span></span> <span data-ttu-id="965d2-132">Если в качестве отправной точки для установления соединения, нажав кнопку пользователи выбрали управления поставщика его команду подключения (они могут выбрать потребитель, нет никакой разницы в установленное подключение), в пользовательском Интерфейсе, они будут видеть элемент управления с раскрывающимся списком с отображаемые имена доступных потребителем подключение точка (или точек, если их несколько), поставщик может отправлять данные.</span><span class="sxs-lookup"><span data-stu-id="965d2-132">If users choose the provider control as the starting point for establishing the connection by clicking its connect verb (they could also choose the consumer; there is no difference in the resulting connection), in the UI they will see a drop-down list control with the display names of the available consumer connection point (or points if there are multiple ones) that the provider can send the data to.</span></span> <span data-ttu-id="965d2-133">Пользователи должны выбрать точку подключения получателя для установления соединения.</span><span class="sxs-lookup"><span data-stu-id="965d2-133">Users must select a consumer connection point to establish a connection.</span></span>  
  
 <span data-ttu-id="965d2-134">Объект <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> связывает непосредственно с элементом управления получателя, определенного объекта и сохраняет сведения о подключении в свойствах, он наследует от базового <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> класса.</span><span class="sxs-lookup"><span data-stu-id="965d2-134">A <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object associates directly with a specific consumer control, and stores details about a connection in the properties it inherits from the base <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class.</span></span> <span data-ttu-id="965d2-135">Например, в унаследованный <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> свойство, точка подключения получателя сохраняет тип интерфейса, он использует.</span><span class="sxs-lookup"><span data-stu-id="965d2-135">For example, in the inherited <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property, a consumer connection point keeps the type of interface it uses.</span></span> <span data-ttu-id="965d2-136">Если поставщика и получателя в подключении как понять, тип интерфейса, элементы управления являются совместимыми и могут создавать прямое подключение.</span><span class="sxs-lookup"><span data-stu-id="965d2-136">If the provider and consumer in a connection both understand the interface type, the controls are compatible and capable of forming a direct connection.</span></span> <span data-ttu-id="965d2-137">Если поставщика и потребителя не может работать с тем же типом интерфейса, они несовместимы и необходимо использовать <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> объекта для преобразования точки подключения поставщика <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> свойство в тип, который потребитель может работать с.</span><span class="sxs-lookup"><span data-stu-id="965d2-137">If the provider and consumer cannot work with the same interface type, they are incompatible and must use a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object to translate the provider connection point's <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property into a type that the consumer can work with.</span></span> <span data-ttu-id="965d2-138">Является другим важным свойством <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> при создании подключений, выберите пункт Свойства, которое предоставляет понятное имя для отображения в пользовательском Интерфейсе, пользователи могут выбрать подключения получателя.</span><span class="sxs-lookup"><span data-stu-id="965d2-138">Another important inherited property is the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property, which provides a friendly name to display in the UI for users to choose a consumer connection point when creating connections.</span></span> <span data-ttu-id="965d2-139">Отображаемое имя — это обязательный параметр при добавлении разработчиками `ConnectionConsumer` атрибут в метод обратного вызова в элементе управления получателя.</span><span class="sxs-lookup"><span data-stu-id="965d2-139">The display name is the required parameter when developers add a `ConnectionConsumer` attribute to the callback method in a consumer control.</span></span> <span data-ttu-id="965d2-140">Унаследованный <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> свойство полезно также, как указано выше, так как он предоставляет уникальный идентификатор для точки подключения получателя в случае, если объект-получатель имеет несколько точек подключения.</span><span class="sxs-lookup"><span data-stu-id="965d2-140">The inherited <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> property is also useful, as indicated above, because it provides a unique identifier for a consumer connection point in the event that a consumer has multiple connection points.</span></span> <span data-ttu-id="965d2-141">Объект-получатель может иметь несколько <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> объекты, определенные в нем и в этом случае при добавлении разработчиками `ConnectionConsumer` атрибут к методу, следует указать значение идентификатора для различения каждой точки подключения.</span><span class="sxs-lookup"><span data-stu-id="965d2-141">A consumer can have multiple <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects defined in it, and in this case, when developers add the `ConnectionConsumer` attribute to a method, they should specify an ID value to distinguish each connection point.</span></span> <span data-ttu-id="965d2-142">Один другие важные является свойством <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> свойство, которое указывает, что точка подключения получателя может одновременно подключаться к нескольких поставщиков.</span><span class="sxs-lookup"><span data-stu-id="965d2-142">One other notable inherited property is the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property, which indicates whether a consumer connection point can connect simultaneously to multiple providers.</span></span> <span data-ttu-id="965d2-143">Это свойство имеет значение `false` по умолчанию для точки подключения получателя (в то время как по умолчанию используется `true` для точки подключения поставщика).</span><span class="sxs-lookup"><span data-stu-id="965d2-143">This property value is `false` by default for consumer connection points (whereas it defaults to `true` for provider connection points).</span></span>  
  
 <span data-ttu-id="965d2-144"><xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> Класс добавляет несколько уникальных методов к членам, он наследует от <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> класса.</span><span class="sxs-lookup"><span data-stu-id="965d2-144">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> class adds several unique methods to the members it inherits from the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class.</span></span> <span data-ttu-id="965d2-145"><xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject%2A> Метод вызывает метод обратного вызова потребителя собственные определенные для получения экземпляра интерфейса от поставщика.</span><span class="sxs-lookup"><span data-stu-id="965d2-145">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject%2A> method invokes the consumer's own defined callback method to retrieve the interface instance from the provider.</span></span> <span data-ttu-id="965d2-146"><xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A> Метод возвращает логическое значение, указывающее, способен ли точка подключения для установления соединения, на основании текущего состояния элемента управления связанного получателя.</span><span class="sxs-lookup"><span data-stu-id="965d2-146">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A> method returns a Boolean value that indicates whether the connection point is able to establish connections, based on the current state of the associated consumer control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="965d2-147">В следующем примере кода показаны простые способы создания подключения декларативно, программно или через пользовательский Интерфейс каждого варианта предоставления доступа, используйте точки подключения потребителя.</span><span class="sxs-lookup"><span data-stu-id="965d2-147">The following code example shows simple ways to create a connection declaratively, programmatically, or through the UI, in each case making use of a consumer connection point.</span></span>  
  
 <span data-ttu-id="965d2-148">Пример состоит из четырех частей.</span><span class="sxs-lookup"><span data-stu-id="965d2-148">The example has four parts:</span></span>  
  
-   <span data-ttu-id="965d2-149">Режим отображения пользовательского элемента управления, позволяющий изменить веб-частей на странице.</span><span class="sxs-lookup"><span data-stu-id="965d2-149">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="965d2-150">Исходный код для интерфейса, а также два <xref:System.Web.UI.WebControls.WebParts.WebPart> управляет действующего в качестве поставщика и потребителя для подключения.</span><span class="sxs-lookup"><span data-stu-id="965d2-150">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="965d2-151">Веб-страница для размещения всех элементов управления и выполнение примера кода.</span><span class="sxs-lookup"><span data-stu-id="965d2-151">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="965d2-152">Объяснение того, как запустить пример страницы.</span><span class="sxs-lookup"><span data-stu-id="965d2-152">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="965d2-153">Первая часть этого примера кода — пользовательский элемент управления, позволяющий пользователю изменять режим отображения на веб-страницы.</span><span class="sxs-lookup"><span data-stu-id="965d2-153">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="965d2-154">Сохраните следующий исходный код в файле ASCX, задав для него имя файла, который назначен `Src` атрибут `Register` директив для этого пользовательского элемента управления, который находится в верхней размещения веб-страницы.</span><span class="sxs-lookup"><span data-stu-id="965d2-154">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="965d2-155">Сведения о режимах отображения и описание исходного кода в этом элементе управления, см. в разделе [Пошаговое руководство: Изменение режимов отображения на веб-частей страницы](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span><span class="sxs-lookup"><span data-stu-id="965d2-155">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="965d2-156">Вторая часть в примере кода приведен исходный код для интерфейса и элементов управления.</span><span class="sxs-lookup"><span data-stu-id="965d2-156">The second part of the code example is the source code for the interface and controls.</span></span> <span data-ttu-id="965d2-157">Исходный файл содержит простой интерфейс с именем `IZipCode`.</span><span class="sxs-lookup"><span data-stu-id="965d2-157">The source file contains a simple interface named `IZipCode`.</span></span> <span data-ttu-id="965d2-158">Имеется также <xref:System.Web.UI.WebControls.WebParts.WebPart> класс с именем `ZipCodeWebPart` , реализующий интерфейс и выступает в качестве элемента управления поставщика.</span><span class="sxs-lookup"><span data-stu-id="965d2-158">There is also a <xref:System.Web.UI.WebControls.WebParts.WebPart> class named `ZipCodeWebPart` that implements the interface and acts as the provider control.</span></span> <span data-ttu-id="965d2-159">Другой <xref:System.Web.UI.WebControls.WebParts.WebPart> класс называется `WeatherWebPart`, и он выступает в роли потребителя для соединения.</span><span class="sxs-lookup"><span data-stu-id="965d2-159">The other <xref:System.Web.UI.WebControls.WebParts.WebPart> class is named `WeatherWebPart`, and it acts as the consumer for the connection.</span></span> <span data-ttu-id="965d2-160">Этот класс содержит метод с именем `GetZipCode` , возвращает экземпляр `IZipCode` интерфейса из элемента управления поставщика.</span><span class="sxs-lookup"><span data-stu-id="965d2-160">This class has a method named `GetZipCode` that gets an instance of the `IZipCode` interface from the provider control.</span></span> <span data-ttu-id="965d2-161">Обратите внимание, что этот метод помечен как метод точки подключения потребителя с `ConnectionConsumer` в метаданных атрибутом.</span><span class="sxs-lookup"><span data-stu-id="965d2-161">Note that this method is marked as the consumer's connection point method with a `ConnectionConsumer` attribute in its metadata.</span></span> <span data-ttu-id="965d2-162">Это механизм идентификации метода точки подключения в элементе управления получателя.</span><span class="sxs-lookup"><span data-stu-id="965d2-162">This is the mechanism for identifying the connection point method in the consumer control.</span></span>  
  
 <span data-ttu-id="965d2-163">Для выполнения примера кода необходимо скомпилировать этот исходный код.</span><span class="sxs-lookup"><span data-stu-id="965d2-163">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="965d2-164">Можно выполнить явную компиляцию и разместить сборку в папку Bin веб сайта или в глобальном кэше сборок.</span><span class="sxs-lookup"><span data-stu-id="965d2-164">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="965d2-165">Кроме того можно поместить исходный код в папку App_Code веб сайта, где он будет компилироваться динамически во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="965d2-165">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="965d2-166">Данный пример кода использует динамической компиляции.</span><span class="sxs-lookup"><span data-stu-id="965d2-166">This code example uses dynamic compilation.</span></span> <span data-ttu-id="965d2-167">Пошаговое руководство по компиляции, см. в разделе [Пошаговое руководство: Разработка и использование пользовательского веб-серверного элемента управления](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span><span class="sxs-lookup"><span data-stu-id="965d2-167">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="965d2-168">В третьей части в примере кода — это веб-страницы.</span><span class="sxs-lookup"><span data-stu-id="965d2-168">The third part of the code example is the Web page.</span></span> <span data-ttu-id="965d2-169">В верхней, `Register` директивы для регистрации пользовательских элементов управления, которые образуют связь и пользовательский элемент управления, позволяющий пользователю изменять режимы отображения на странице.</span><span class="sxs-lookup"><span data-stu-id="965d2-169">Near the top are `Register` directives to register the custom controls that form the connection, and the user control that enables users to change display modes on the page.</span></span> <span data-ttu-id="965d2-170">Само соединение создается декларативно в `<staticconnections>` элемента на странице.</span><span class="sxs-lookup"><span data-stu-id="965d2-170">The connection itself is created declaratively within the `<staticconnections>` element on the page.</span></span> <span data-ttu-id="965d2-171">Этот пример демонстрирует один из способов создания подключения--Примечание `ConsumerConnectionPointID` атрибут в `<asp:webpartconnection>` элемент.</span><span class="sxs-lookup"><span data-stu-id="965d2-171">This demonstrates one way of creating a connection--note the `ConsumerConnectionPointID` attribute in the `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="965d2-172">Можно также создать соединения программным образом. код для выполнения, который находится в `Button1_Click` метод.</span><span class="sxs-lookup"><span data-stu-id="965d2-172">You can also create the connection programmatically; the code for doing that is in the `Button1_Click` method.</span></span> <span data-ttu-id="965d2-173">В этом случае <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> объект создается и передается в метод, который создает фактическое подключение.</span><span class="sxs-lookup"><span data-stu-id="965d2-173">In this case, a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object is created and then passed to a method that creates the actual connection.</span></span> <span data-ttu-id="965d2-174">Следует ли создать подключение, декларативно или программно, точки подключения всегда необходимо указать для поставщика и потребителя.</span><span class="sxs-lookup"><span data-stu-id="965d2-174">Whether the connection is created declaratively or programmatically, connection points must always be specified for both the provider and the consumer.</span></span> <span data-ttu-id="965d2-175">`Button2_Click` Метод обращается к <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> объектов для поставщика и потребителя, а также записывает некоторые значения свойств метку в странице.</span><span class="sxs-lookup"><span data-stu-id="965d2-175">The `Button2_Click` method accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objects for both the provider and the consumer, and writes some of their property values to a label in the page.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 <span data-ttu-id="965d2-176">После загрузки страницы в браузере, щелкните **сведения о точках подключения** кнопки.</span><span class="sxs-lookup"><span data-stu-id="965d2-176">After you load the page in a browser, click the **Connection Point Details** button.</span></span> <span data-ttu-id="965d2-177">Появятся сведения о точках подключения поставщика и потребителя, установленных в декларативной связи.</span><span class="sxs-lookup"><span data-stu-id="965d2-177">Information about the provider and consumer connection points established in the declarative connection appears.</span></span> <span data-ttu-id="965d2-178">Затем используйте **режим отображения** раскрывающийся элемент управления для переключения страницы в режим подключения.</span><span class="sxs-lookup"><span data-stu-id="965d2-178">Next, use the **Display Mode** drop-down control to switch the page into connect mode.</span></span> <span data-ttu-id="965d2-179">В меню команд **ZIP Code Provider** <xref:System.Web.UI.WebControls.WebParts.WebPart> управления (представленное стрелкой вниз в строке заголовка), щелкните команду подключения.</span><span class="sxs-lookup"><span data-stu-id="965d2-179">On the verbs menu of the **ZIP Code Provider**<xref:System.Web.UI.WebControls.WebParts.WebPart> control (represented by a downward arrow in the title bar), click the connect verb.</span></span> <span data-ttu-id="965d2-180">Автоматически создать подключение, отображается пользовательский Интерфейс, `<asp:connectionszone>` элемента управления, объявленные в странице.</span><span class="sxs-lookup"><span data-stu-id="965d2-180">The connection UI appears, created automatically by the `<asp:connectionszone>` control declared in the page.</span></span> <span data-ttu-id="965d2-181">Это еще один способ создания подключения (через пользовательский Интерфейс), а также декларативные и программные методы, описанные ранее.</span><span class="sxs-lookup"><span data-stu-id="965d2-181">This is another way of creating a connection (through the UI), along with the declarative and programmatic methods discussed earlier.</span></span> <span data-ttu-id="965d2-182">Нажмите кнопку **Disconnect** кнопку, чтобы завершить существующие статическое подключение.</span><span class="sxs-lookup"><span data-stu-id="965d2-182">Click the **Disconnect** button to terminate the existing static connection.</span></span> <span data-ttu-id="965d2-183">Нажмите кнопку **создать соединение с потребителем** ссылку.</span><span class="sxs-lookup"><span data-stu-id="965d2-183">Click the **Create a Connection to a Consumer** link.</span></span> <span data-ttu-id="965d2-184">Теперь пользовательский Интерфейс отображает элемент управления раскрывающегося списка, который перечисляет отображаемого имени точки подключения потребителя.</span><span class="sxs-lookup"><span data-stu-id="965d2-184">The UI now displays a drop-down control that lists the consumer connection point display name.</span></span> <span data-ttu-id="965d2-185">Выберите точку подключения в раскрывающемся списке и нажмите кнопку **Connect** для завершения подключения.</span><span class="sxs-lookup"><span data-stu-id="965d2-185">Select the connection point in the drop-down list, and then click **Connect** to complete the connection.</span></span> <span data-ttu-id="965d2-186">Затем щелкните **Disconnect** еще раз.</span><span class="sxs-lookup"><span data-stu-id="965d2-186">Next, click **Disconnect** again.</span></span> <span data-ttu-id="965d2-187">Нажмите кнопку **динамическое подключение** кнопку, чтобы создать подключение программными средствами.</span><span class="sxs-lookup"><span data-stu-id="965d2-187">Click the **Dynamic Connection** button to create a connection programmatically.</span></span> <span data-ttu-id="965d2-188">Используйте **режим отображения** элемента управления, чтобы вернуться в режим просмотра.</span><span class="sxs-lookup"><span data-stu-id="965d2-188">Use the **Display Mode** control to return the page to browse mode.</span></span> <span data-ttu-id="965d2-189">Нажмите кнопку **сведения о пункте подключения** кнопку, чтобы указать сведения о объект точки подключения потребителя один раз больше.</span><span class="sxs-lookup"><span data-stu-id="965d2-189">Click the **Connection Point Details** button again, to indicate details about the consumer connection point object once more.</span></span>  
  
 <span data-ttu-id="965d2-190">В этом примере демонстрируется создание подключения и с помощью точки подключения тремя способами: статическое подключение, объявленные в разметке веб-страницы; соединение, созданное на код, который используется <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> объект и подключения, созданного пользователем через пользовательский Интерфейс подключения.</span><span class="sxs-lookup"><span data-stu-id="965d2-190">The example has demonstrated establishing a connection and using a consumer connection point in three ways: a static connection declared in the Web page markup; a connection created in code that used a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object; and a connection created by a user through the connection UI.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="965d2-191">Веб-частей ASP.NET элементов управления</span><span class="sxs-lookup"><span data-stu-id="965d2-191">ASP.NET Web Parts Controls</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)"><span data-ttu-id="965d2-192">Обзор подключений веб-частей</span><span class="sxs-lookup"><span data-stu-id="965d2-192">Web Parts Connections Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsumerConnectionPoint (System.Reflection.MethodInfo callbackMethod, Type interfaceType, Type controlType, string displayName, string id, bool allowsMultipleConnections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MethodInfo callbackMethod, class System.Type interfaceType, class System.Type controlType, string displayName, string id, bool allowsMultipleConnections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackMethod As MethodInfo, interfaceType As Type, controlType As Type, displayName As String, id As String, allowsMultipleConnections As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsumerConnectionPoint(System::Reflection::MethodInfo ^ callbackMethod, Type ^ interfaceType, Type ^ controlType, System::String ^ displayName, System::String ^ id, bool allowsMultipleConnections);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint : System.Reflection.MethodInfo * Type * Type * string * string * bool -&gt; System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" Usage="new System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint (callbackMethod, interfaceType, controlType, displayName, id, allowsMultipleConnections)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callbackMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="interfaceType" Type="System.Type" />
        <Parameter Name="controlType" Type="System.Type" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="allowsMultipleConnections" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="callbackMethod"><span data-ttu-id="965d2-193">Метод в элементе управления получателя, который возвращает экземпляр интерфейса получателям для создания подключения.</span><span class="sxs-lookup"><span data-stu-id="965d2-193">The method in the consumer control that returns an interface instance to consumers to establish a connection.</span></span></param>
        <param name="interfaceType"><span data-ttu-id="965d2-194">Тип <see cref="T:System.Type" /> интерфейса, который получатель принимает от поставщика.</span><span class="sxs-lookup"><span data-stu-id="965d2-194">The <see cref="T:System.Type" /> of the interface that the consumer receives from a provider.</span></span></param>
        <param name="controlType"><span data-ttu-id="965d2-195">Тип <see cref="T:System.Type" /> элемента управления получателя, с которым связана точка подключения получателя.</span><span class="sxs-lookup"><span data-stu-id="965d2-195">The <see cref="T:System.Type" /> of the consumer control with which the consumer connection point is associated.</span></span></param>
        <param name="displayName"><span data-ttu-id="965d2-196">Понятное отображаемое имя для точки подключения получателя, которая отображается для пользователей в пользовательском интерфейсе подключения.</span><span class="sxs-lookup"><span data-stu-id="965d2-196">A friendly display name for the consumer connection point that appears to users in the connection user interface (UI).</span></span></param>
        <param name="id"><span data-ttu-id="965d2-197">Уникальный идентификатор точки подключения получателя.</span><span class="sxs-lookup"><span data-stu-id="965d2-197">A unique identifier for the consumer connection point.</span></span></param>
        <param name="allowsMultipleConnections"><span data-ttu-id="965d2-198">Логическое значение, указывающее, может ли точка подключения получателя иметь несколько одновременных подключений с поставщиками.</span><span class="sxs-lookup"><span data-stu-id="965d2-198">A Boolean value indicating whether the consumer connection point can have multiple simultaneous connections with providers.</span></span></param>
        <summary><span data-ttu-id="965d2-199">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />.</span><span class="sxs-lookup"><span data-stu-id="965d2-199">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="965d2-200"><xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.%23ctor%2A> Конструктор для <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> класс просто вызывает базовый конструктор, передавая ему различные параметры и инициализации базового класса.</span><span class="sxs-lookup"><span data-stu-id="965d2-200">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.%23ctor%2A> constructor for the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> class simply calls the base constructor, passing to it the various parameters and initializing the base class.</span></span>  
  
 <span data-ttu-id="965d2-201">Конструктор базового класса проверяет число параметров для точки подключения и может создать несколько исключений.</span><span class="sxs-lookup"><span data-stu-id="965d2-201">The base class constructor checks a number of the parameters for a connection point and can throw several exceptions.</span></span> <span data-ttu-id="965d2-202">Список возможных исключений см. раздел "исключения".</span><span class="sxs-lookup"><span data-stu-id="965d2-202">For a list of possible exceptions, see the Exceptions section.</span></span>  
  
 <span data-ttu-id="965d2-203">Можно вызвать <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.%23ctor%2A> конструктор для создания собственного экземпляра <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> класса.</span><span class="sxs-lookup"><span data-stu-id="965d2-203">You can call the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.%23ctor%2A> constructor to create your own instance of the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> class.</span></span> <span data-ttu-id="965d2-204">Однако в случаях, когда вы просто установления соединения и не расширения класса, должен вызывать <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> метод вернет объект точки подключения поставщика.</span><span class="sxs-lookup"><span data-stu-id="965d2-204">However, in cases where you are simply establishing a connection and not extending the class, you should call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> method to return a connection point object from a provider.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="965d2-205">В следующем примере кода показано, как выполнять наследование <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> класса для создания точки подключения пользовательского поставщика.</span><span class="sxs-lookup"><span data-stu-id="965d2-205">The following code example demonstrates how to derive from the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> class to create a custom provider connection point.</span></span>  
  
 <span data-ttu-id="965d2-206">В примере кода состоит из трех частей:</span><span class="sxs-lookup"><span data-stu-id="965d2-206">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="965d2-207">Исходный файл, который содержит провайдер <xref:System.Web.UI.WebControls.WebParts.WebPart> управления, объект-получатель <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления, а пользовательский <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> объекта.</span><span class="sxs-lookup"><span data-stu-id="965d2-207">A source file that contains a provider <xref:System.Web.UI.WebControls.WebParts.WebPart> control, a consumer <xref:System.Web.UI.WebControls.WebParts.WebPart> control, and a custom <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span>  
  
-   <span data-ttu-id="965d2-208">Веб-страницы, содержащей элемент управления в статическом подключении.</span><span class="sxs-lookup"><span data-stu-id="965d2-208">A Web page that hosts the controls in a static connection.</span></span>  
  
-   <span data-ttu-id="965d2-209">Объяснение того, как запустить пример кода.</span><span class="sxs-lookup"><span data-stu-id="965d2-209">An explanation of how to run the example code.</span></span>  
  
 <span data-ttu-id="965d2-210">Первая часть примера кода является источником для поставщика и потребителя <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления, а пользовательский <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> класс с именем `TableConsumerConnectionPoint`.</span><span class="sxs-lookup"><span data-stu-id="965d2-210">The first part of the code example is the source for the provider and consumer <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> class, named `TableConsumerConnectionPoint`.</span></span> <span data-ttu-id="965d2-211">Обратите внимание, что конструктор `TableConsumerConnectionPoint` класс вызывает базовый конструктор, передавая ему необходимые параметры, как указано в разделе "Параметры".</span><span class="sxs-lookup"><span data-stu-id="965d2-211">Note that the constructor of the `TableConsumerConnectionPoint` class calls the base constructor, passing it the required parameters as indicated in the Parameters section.</span></span> <span data-ttu-id="965d2-212">Также Обратите внимание, что в `TableConsumer` класс, `SetConnectionInterface` метод указывается в качестве метода обратного вызова для подключений и `ConnectionConsumer` атрибут объявляет пользовательский `TableConsumerConnectionPoint` как параметр.</span><span class="sxs-lookup"><span data-stu-id="965d2-212">Also note that in the `TableConsumer` class, the `SetConnectionInterface` method is specified as the callback method for connections, and the `ConnectionConsumer` attribute declares the custom `TableConsumerConnectionPoint` as a parameter.</span></span> <span data-ttu-id="965d2-213">Это показано, как создать пользовательскую точку подключения получателя, а затем свяжите ее с элементом управления получателя.</span><span class="sxs-lookup"><span data-stu-id="965d2-213">This demonstrates how to create a custom consumer connection point and then associate it with a consumer control.</span></span> <span data-ttu-id="965d2-214">В этом примере предполагается, что исходный код компилируется динамически, так что следует поместить файл исходного кода в подпапку App_Code веб-приложения.</span><span class="sxs-lookup"><span data-stu-id="965d2-214">This example assumes that the source code is dynamically compiled, so you should place the source code file in an App_Code subfolder of your Web application.</span></span>  
  
 [!code-csharp[UI.WebControls.WebParts.ProviderConnectionPoint#1](~/samples/snippets/csharp/VS_Snippets_WebNet/UI.WebControls.WebParts.ProviderConnectionPoint/CS/connectionControls.cs#1)]  
  
 <span data-ttu-id="965d2-215">Вторая часть примера кода — веб-страницы, на котором размещена пользовательских элементов управления в статических подключении веб-частей.</span><span class="sxs-lookup"><span data-stu-id="965d2-215">The second part of the code example is the Web page that hosts the custom controls in a static Web parts connection.</span></span> <span data-ttu-id="965d2-216">В верхней части страницы находится `Register` директива для объявления префикса и пространства имен для пользовательских элементов управления.</span><span class="sxs-lookup"><span data-stu-id="965d2-216">At the top of the page is a `Register` directive to declare a prefix and the namespace for the custom controls.</span></span> <span data-ttu-id="965d2-217">Соединение объявлено с помощью `<asp:webpartconnection>` управления элемент и поставщика и получателя, объявляются в `<asp:webpartzone>` элемент.</span><span class="sxs-lookup"><span data-stu-id="965d2-217">The connection is declared by using an `<asp:webpartconnection>` element, and the provider and consumer controls are declared within an `<asp:webpartzone>` element.</span></span>  
  
 [!code-aspx-csharp[UI.WebControls.WebParts.ProviderConnectionPoint#3](~/samples/snippets/csharp/VS_Snippets_WebNet/UI.WebControls.WebParts.ProviderConnectionPoint/CS/defaultcs.aspx#3)]  
  
 <span data-ttu-id="965d2-218">Загрузите страницу в браузере.</span><span class="sxs-lookup"><span data-stu-id="965d2-218">Load the page in a browser.</span></span> <span data-ttu-id="965d2-219">Подключение между элементами управления уже существует, а потребитель отображает данные от поставщика, так как подключение было объявлено как статическое подключение на странице.</span><span class="sxs-lookup"><span data-stu-id="965d2-219">The connection between the controls already exists, and the consumer displays the data from the provider, because the connection was declared as a static connection in the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="callbackMethod" /> <span data-ttu-id="965d2-220">— <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="965d2-220">is <see langword="null" />.</span></span>  
  
<span data-ttu-id="965d2-221">-или-</span><span class="sxs-lookup"><span data-stu-id="965d2-221">-or-</span></span> 
 <paramref name="interfaceType" /> <span data-ttu-id="965d2-222">— <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="965d2-222">is <see langword="null" />.</span></span>  
  
<span data-ttu-id="965d2-223">-или-</span><span class="sxs-lookup"><span data-stu-id="965d2-223">-or-</span></span> 
 <paramref name="controlType" /> <span data-ttu-id="965d2-224">— <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="965d2-224">is <see langword="null" />.</span></span>  
  
<span data-ttu-id="965d2-225">-или-</span><span class="sxs-lookup"><span data-stu-id="965d2-225">-or-</span></span> 
 <paramref name="displayName" /> <span data-ttu-id="965d2-226">имеет значение <see langword="null" /> или является пустой строкой ("").</span><span class="sxs-lookup"><span data-stu-id="965d2-226">is <see langword="null" /> or an empty string ("").</span></span></exception>
        <exception cref="T:System.ArgumentException"><paramref name="controlType" /> <span data-ttu-id="965d2-227">не является тем же типом, что и тип элемента управления получателя (или допустимого производного класса).</span><span class="sxs-lookup"><span data-stu-id="965d2-227">is not the same type as the consumer control (or a valid class derived from it).</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="965d2-228">Веб-частей ASP.NET элементов управления</span><span class="sxs-lookup"><span data-stu-id="965d2-228">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetObject">
      <MemberSignature Language="C#" Value="public virtual void SetObject (System.Web.UI.Control control, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetObject(class System.Web.UI.Control control, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetObject(System::Web::UI::Control ^ control, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetObject : System.Web.UI.Control * obj -&gt; unit&#xA;override this.SetObject : System.Web.UI.Control * obj -&gt; unit" Usage="consumerConnectionPoint.SetObject (control, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="965d2-229">Элемент управления получателя, с которым связана точка подключения получателя.</span><span class="sxs-lookup"><span data-stu-id="965d2-229">The consumer control associated with a consumer connection point.</span></span></param>
        <param name="data"><span data-ttu-id="965d2-230">Экземпляр интерфейса, возвращенного из элемента управления поставщика.</span><span class="sxs-lookup"><span data-stu-id="965d2-230">The interface instance returned from a provider control.</span></span></param>
        <summary><span data-ttu-id="965d2-231">Вызывает метод обратного вызова в элементе управления получателя и получает экземпляр интерфейса из элемента управления поставщика.</span><span class="sxs-lookup"><span data-stu-id="965d2-231">Invokes the callback method in a consumer control and retrieves the interface instance from a provider control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="965d2-232">Этот метод получает экземпляр интерфейса от поставщика, который содержит данные для элемента управления получателя.</span><span class="sxs-lookup"><span data-stu-id="965d2-232">This method receives an interface instance from a provider that contains data for the consumer control.</span></span>  
  
 <span data-ttu-id="965d2-233"><xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject%2A> Вызывается метод <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> объектов, когда подключение активируется.</span><span class="sxs-lookup"><span data-stu-id="965d2-233">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject%2A> method is called by <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> objects when a connection is being activated.</span></span> <span data-ttu-id="965d2-234">Это важный шаг, который является частью инициализации подключения и включение двух элементов управления для обмена данными.</span><span class="sxs-lookup"><span data-stu-id="965d2-234">This is a critical step that is part of initiating a connection and enabling two controls to share data.</span></span>  
  
 <span data-ttu-id="965d2-235">Элемента управления получателя в подключении должен быть могут работать с тем же типом интерфейса, как поставщик.</span><span class="sxs-lookup"><span data-stu-id="965d2-235">The consumer control in a connection must be able to work with the same type of interface as the provider.</span></span> <span data-ttu-id="965d2-236">Если этого не произошло, элементы управления несовместимы и <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> объект должен использоваться для установления соединения.</span><span class="sxs-lookup"><span data-stu-id="965d2-236">If it does not, the controls are incompatible and a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object must be used to establish a connection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> <span data-ttu-id="965d2-237">— <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="965d2-237">is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsConnection">
      <MemberSignature Language="C#" Value="public virtual bool SupportsConnection (System.Web.UI.Control control, System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection secondaryInterfaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportsConnection(class System.Web.UI.Control control, class System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection secondaryInterfaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SupportsConnection(System::Web::UI::Control ^ control, System::Web::UI::WebControls::WebParts::ConnectionInterfaceCollection ^ secondaryInterfaces);" />
      <MemberSignature Language="F#" Value="abstract member SupportsConnection : System.Web.UI.Control * System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection -&gt; bool&#xA;override this.SupportsConnection : System.Web.UI.Control * System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection -&gt; bool" Usage="consumerConnectionPoint.SupportsConnection (control, secondaryInterfaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="secondaryInterfaces" Type="System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="965d2-238">Элемент управления получателя, связанный с точкой подключения <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />.</span><span class="sxs-lookup"><span data-stu-id="965d2-238">The consumer control associated with the <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />.</span></span></param>
        <param name="secondaryInterfaces"><span data-ttu-id="965d2-239">Коллекция <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /> любых дополнительных интерфейсов, участвующих в подключении.</span><span class="sxs-lookup"><span data-stu-id="965d2-239">A <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /> of any secondary interfaces that participate in a connection.</span></span></param>
        <summary><span data-ttu-id="965d2-240">Определяет, может ли точка подключения получателя в настоящий момент устанавливать подключение.</span><span class="sxs-lookup"><span data-stu-id="965d2-240">Determines whether a consumer connection point is currently capable of establishing a connection.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="965d2-241">, если точка подключения в настоящий момент может создавать подключение; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="965d2-241">if a connection point can currently establish a connection; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="965d2-242">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="965d2-242">The default is <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="965d2-243"><xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A> Метод реализация всегда возвращает `true` во всех случаях для <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> класса.</span><span class="sxs-lookup"><span data-stu-id="965d2-243">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A> method as implemented always returns `true` in all cases for the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> class.</span></span> <span data-ttu-id="965d2-244">Цель для этого метода — это проверить состояние `control` и `secondaryInterfaces` в критических точках, определенных для определения ли <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> объект находится в настоящее время возможность создать подключение.</span><span class="sxs-lookup"><span data-stu-id="965d2-244">The intent for this method is to have it check on the state of `control` and `secondaryInterfaces` at certain critical points to determine whether a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object is presently able to create a connection.</span></span>  
  
 <span data-ttu-id="965d2-245">Может существовать сценарии где `control` находится в состоянии, это делает невозможным подключение, или где `secondaryInterfaces` должны существовать до подключения.</span><span class="sxs-lookup"><span data-stu-id="965d2-245">There can be scenarios where `control` is in a state that would make it impossible to form a connection, or where `secondaryInterfaces` must exist before a connection can be formed.</span></span> <span data-ttu-id="965d2-246">В таких случаях разработчики могут наследовать от <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> класса и переопределить <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A> метод, предоставляя пользовательскую реализацию, чтобы определить, когда точка подключения будет готов для поддержки соединений.</span><span class="sxs-lookup"><span data-stu-id="965d2-246">In such cases, developers can inherit from the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> class, and override the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A> method, providing a custom implementation to determine when the connection point is ready to support connections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>