<Type Name="FtpWebRequest" FullName="System.Net.FtpWebRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e179fcb3123ee5c133417a91ca70870c2f2c9a4f" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58716755" /></Metadata><TypeSignature Language="C#" Value="public sealed class FtpWebRequest : System.Net.WebRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FtpWebRequest extends System.Net.WebRequest" />
  <TypeSignature Language="DocId" Value="T:System.Net.FtpWebRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FtpWebRequest&#xA;Inherits WebRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class FtpWebRequest sealed : System::Net::WebRequest" />
  <TypeSignature Language="F#" Value="type FtpWebRequest = class&#xA;    inherit WebRequest" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebRequest</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cc36e-101">Реализует FTP-клиент.</span><span class="sxs-lookup"><span data-stu-id="cc36e-101">Implements a File Transfer Protocol (FTP) client.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

> [!IMPORTANT]
>  <span data-ttu-id="cc36e-102">Мы не рекомендуем использовать `FtpWebRequest` класса для разработки новых приложений.</span><span class="sxs-lookup"><span data-stu-id="cc36e-102">We don't recommend that you use the `FtpWebRequest` class for new development.</span></span> <span data-ttu-id="cc36e-103">Дополнительные сведения и альтернативные варианты `FtpWebRequest`, см. в разделе [WebRequest не должны использоваться](https://github.com/dotnet/platform-compat/blob/master/docs/DE0003.md) на сайте GitHub.</span><span class="sxs-lookup"><span data-stu-id="cc36e-103">For more information and alternatives to `FtpWebRequest`, see [WebRequest shouldn't be used](https://github.com/dotnet/platform-compat/blob/master/docs/DE0003.md) on GitHub.</span></span>

 <span data-ttu-id="cc36e-104">Чтобы получить экземпляр <xref:System.Net.FtpWebRequest>, используйте <xref:System.Net.WebRequest.Create%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="cc36e-104">To obtain an instance of <xref:System.Net.FtpWebRequest>, use the <xref:System.Net.WebRequest.Create%2A> method.</span></span> <span data-ttu-id="cc36e-105">Можно также использовать <xref:System.Net.WebClient> класс отправлять и загружать данные из FTP-сервера.</span><span class="sxs-lookup"><span data-stu-id="cc36e-105">You can also use the <xref:System.Net.WebClient> class to upload and download information from an FTP server.</span></span> <span data-ttu-id="cc36e-106">С помощью любого из этих подходов, при указании сетевой ресурс, который использует схему FTP (например, `"ftp://contoso.com"`) <xref:System.Net.FtpWebRequest> предоставляет возможность программно взаимодействовать с FTP-серверами.</span><span class="sxs-lookup"><span data-stu-id="cc36e-106">Using either of these approaches, when you specify a network resource that uses the FTP scheme (for example, `"ftp://contoso.com"`) the <xref:System.Net.FtpWebRequest> class provides the ability to programmatically interact with FTP servers.</span></span>  
  
 <span data-ttu-id="cc36e-107">URI может быть относительным или абсолютным.</span><span class="sxs-lookup"><span data-stu-id="cc36e-107">The URI may be relative or absolute.</span></span> <span data-ttu-id="cc36e-108">Если URI имеет вид `"ftp://contoso.com/%2fpath"` (% 2f — это косая «/»), затем URI является абсолютным адресом и указан текущий каталог `/path`.</span><span class="sxs-lookup"><span data-stu-id="cc36e-108">If the URI is of the form `"ftp://contoso.com/%2fpath"` (%2f is an escaped '/'), then the URI is absolute, and the current directory is `/path`.</span></span> <span data-ttu-id="cc36e-109">Если, однако, URI имеет вид `"ftp://contoso.com/path"`, сначала .NET Framework выполняет вход в FTP-сервера (с помощью имени пользователя и пароля задаются <xref:System.Net.FtpWebRequest.Credentials%2A> свойство), то текущий каталог будет присвоено `<UserLoginDirectory>/path`.</span><span class="sxs-lookup"><span data-stu-id="cc36e-109">If, however, the URI is of the form `"ftp://contoso.com/path"`, first the .NET Framework logs into the FTP server (using the user name and password set by the <xref:System.Net.FtpWebRequest.Credentials%2A> property), then the current directory is set to `<UserLoginDirectory>/path`.</span></span>  
  
 <span data-ttu-id="cc36e-110">Необходимо иметь допустимое имя пользователя и пароль для сервера или сервера необходимо разрешить анонимный вход.</span><span class="sxs-lookup"><span data-stu-id="cc36e-110">You must have a valid user name and password for the server or the server must allow anonymous logon.</span></span> <span data-ttu-id="cc36e-111">Можно указать учетные данные, используемые для подключения к серверу, задав <xref:System.Net.FtpWebRequest.Credentials%2A> свойство или включить их в <xref:System.Uri.UserInfo%2A> часть URI, передаваемый <xref:System.Net.WebRequest.Create%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="cc36e-111">You can specify the credentials used to connect to the server by setting the <xref:System.Net.FtpWebRequest.Credentials%2A> property or you can include them in the <xref:System.Uri.UserInfo%2A> portion of the URI passed to the <xref:System.Net.WebRequest.Create%2A> method.</span></span> <span data-ttu-id="cc36e-112">При включении <xref:System.Uri.UserInfo%2A> сведения в URI, <xref:System.Net.FtpWebRequest.Credentials%2A> свойству новые учетные данные сети данными имя и пароль указанного пользователя.</span><span class="sxs-lookup"><span data-stu-id="cc36e-112">If you include <xref:System.Uri.UserInfo%2A> information in the URI, the <xref:System.Net.FtpWebRequest.Credentials%2A> property is set to a new network credential with the specified user name and password information.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cc36e-113">Если не <xref:System.Net.FtpWebRequest.EnableSsl%2A> свойство `true`, все данные и команд, включая имя и пароль, сведения о пользователе, отправляются на сервер в виде открытого текста.</span><span class="sxs-lookup"><span data-stu-id="cc36e-113">Unless the <xref:System.Net.FtpWebRequest.EnableSsl%2A> property is `true`, all data and commands, including your user name and password information, are sent to the server in clear text.</span></span> <span data-ttu-id="cc36e-114">Любой пользователь мониторинга сетевого трафика можно просмотреть учетные данные и использовать их для подключения к серверу.</span><span class="sxs-lookup"><span data-stu-id="cc36e-114">Anyone monitoring network traffic can view your credentials and use them to connect to the server.</span></span> <span data-ttu-id="cc36e-115">Если вы подключаетесь к серверу FTP, который требует учетные данные и поддерживает Secure Sockets Layer (SSL), следует задать <xref:System.Net.FtpWebRequest.EnableSsl%2A> для `true`.</span><span class="sxs-lookup"><span data-stu-id="cc36e-115">If you are connecting to an FTP server that requires credentials and supports Secure Sockets Layer (SSL), you should set <xref:System.Net.FtpWebRequest.EnableSsl%2A> to `true`.</span></span>  
  
 <span data-ttu-id="cc36e-116">Необходимо иметь <xref:System.Net.WebPermission> для доступа к FTP-ресурса; в противном случае <xref:System.Security.SecurityException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="cc36e-116">You must have <xref:System.Net.WebPermission> to access the FTP resource; otherwise, a <xref:System.Security.SecurityException> exception is thrown.</span></span>  
  
 <span data-ttu-id="cc36e-117">Укажите команду FTP для отправки на сервер, установив <xref:System.Net.FtpWebRequest.Method%2A> свойства со значением, определенные в <xref:System.Net.WebRequestMethods.Ftp> структуры.</span><span class="sxs-lookup"><span data-stu-id="cc36e-117">Specify the FTP command to send to the server by setting the <xref:System.Net.FtpWebRequest.Method%2A> property to a value defined in the <xref:System.Net.WebRequestMethods.Ftp> structure.</span></span> <span data-ttu-id="cc36e-118">Для передачи текстовых данных, изменить <xref:System.Net.FtpWebRequest.UseBinary%2A> свойство со значением по умолчанию (`true`) для `false`.</span><span class="sxs-lookup"><span data-stu-id="cc36e-118">To transmit text data, change the <xref:System.Net.FtpWebRequest.UseBinary%2A> property from its default value (`true`) to `false`.</span></span> <span data-ttu-id="cc36e-119">Дополнительные сведения и ограничения, см. в разделе <xref:System.Net.FtpWebRequest.Method%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc36e-119">For details and restrictions, see <xref:System.Net.FtpWebRequest.Method%2A>.</span></span>  
  
 <span data-ttu-id="cc36e-120">При использовании <xref:System.Net.FtpWebRequest> объект для отправки файла на сервере, необходимо написать содержимое файла в поток запроса, полученного путем вызова <xref:System.Net.FtpWebRequest.GetRequestStream%2A> метода или его асинхронной аналоги, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> и <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="cc36e-120">When using an <xref:System.Net.FtpWebRequest> object to upload a file to a server, you must write the file content to the request stream obtained by calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method or its asynchronous counterparts, the <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> and <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> methods.</span></span> <span data-ttu-id="cc36e-121">Необходимо записать в поток и закрыть поток перед отправкой запроса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-121">You must write to the stream and close the stream before sending the request.</span></span>  
  
 <span data-ttu-id="cc36e-122">Запросы отправляются на сервер, вызвав <xref:System.Net.FtpWebRequest.GetResponse%2A> метода или его асинхронной аналоги, <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> и <xref:System.Net.FtpWebRequest.EndGetResponse%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="cc36e-122">Requests are sent to the server by calling the <xref:System.Net.FtpWebRequest.GetResponse%2A> method or its asynchronous counterparts, the <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> and <xref:System.Net.FtpWebRequest.EndGetResponse%2A> methods.</span></span> <span data-ttu-id="cc36e-123">После завершения запрошенной операции <xref:System.Net.FtpWebResponse> возвращается объект.</span><span class="sxs-lookup"><span data-stu-id="cc36e-123">When the requested operation completes, an <xref:System.Net.FtpWebResponse> object is returned.</span></span> <span data-ttu-id="cc36e-124"><xref:System.Net.FtpWebResponse> Объект предоставляет сведения о состоянии операции, а также любые данные, загружаемые с сервера.</span><span class="sxs-lookup"><span data-stu-id="cc36e-124">The <xref:System.Net.FtpWebResponse> object provides the status of the operation and any data downloaded from the server.</span></span>  
  
 <span data-ttu-id="cc36e-125">Можно задать значение времени ожидания для чтения или записи к серверу с помощью <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="cc36e-125">You can set a time-out value for reading or writing to the server by using the <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> property.</span></span> <span data-ttu-id="cc36e-126">Если превышено время ожидания, вызывающего метод вызывает <xref:System.Net.WebException> с <xref:System.Net.WebExceptionStatus> присвоено <xref:System.Net.WebExceptionStatus.Timeout>.</span><span class="sxs-lookup"><span data-stu-id="cc36e-126">If the time-out period is exceeded, the calling method throws a <xref:System.Net.WebException> with <xref:System.Net.WebExceptionStatus> set to <xref:System.Net.WebExceptionStatus.Timeout>.</span></span>  
  
 <span data-ttu-id="cc36e-127">При загрузке файла с FTP-сервера, если команда выполнена успешно, содержимое файла запрошенного доступны в потоке объект ответа.</span><span class="sxs-lookup"><span data-stu-id="cc36e-127">When downloading a file from an FTP server, if the command was successful, the contents of the requested file are available in the response object's stream.</span></span> <span data-ttu-id="cc36e-128">Можно получить доступ к этого потока путем вызова <xref:System.Net.FtpWebResponse.GetResponseStream%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="cc36e-128">You can access this stream by calling the <xref:System.Net.FtpWebResponse.GetResponseStream%2A> method.</span></span> <span data-ttu-id="cc36e-129">Дополнительные сведения см. в разделе <xref:System.Net.FtpWebResponse>.</span><span class="sxs-lookup"><span data-stu-id="cc36e-129">For more information, see <xref:System.Net.FtpWebResponse>.</span></span>  
  
 <span data-ttu-id="cc36e-130">Если <xref:System.Net.FtpWebRequest.Proxy%2A> свойство имеет значение, либо непосредственно или в файле конфигурации, обмен данными с FTP-сервера, поставляющего указанного прокси-сервера.</span><span class="sxs-lookup"><span data-stu-id="cc36e-130">If the <xref:System.Net.FtpWebRequest.Proxy%2A> property is set, either directly or in a configuration file, communications with the FTP server are made through the specified proxy.</span></span> <span data-ttu-id="cc36e-131">Если указанный прокси-сервер — это HTTP-прокси, только <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, и <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> команды поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="cc36e-131">If the specified proxy is an HTTP proxy, only the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, and <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> commands are supported.</span></span>  
  
 <span data-ttu-id="cc36e-132">Кэшируется только для загрузки двоичного содержимого; то есть содержимое, полученных с помощью <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> с <xref:System.Net.FtpWebRequest.UseBinary%2A> свойство значение `true`.</span><span class="sxs-lookup"><span data-stu-id="cc36e-132">Only downloaded binary content is cached; that is, content received using the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> command with the <xref:System.Net.FtpWebRequest.UseBinary%2A> property set to `true`.</span></span>  
  
 <span data-ttu-id="cc36e-133">Несколько <xref:System.Net.FtpWebRequest>s, повторно используют существующие подключения, если это возможно.</span><span class="sxs-lookup"><span data-stu-id="cc36e-133">Multiple <xref:System.Net.FtpWebRequest>s reuse existing connections, if possible.</span></span>  
  
 <span data-ttu-id="cc36e-134">Дополнительные сведения о протоколе FTP см. в разделе [RFC 959: File Transfer Protocol](https://www.ietf.org/rfc/rfc959.txt).</span><span class="sxs-lookup"><span data-stu-id="cc36e-134">For more information about the FTP protocol, see [RFC 959: File Transfer Protocol](https://www.ietf.org/rfc/rfc959.txt).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc36e-135">В следующем примере кода демонстрируется удаление файла с FTP-сервера.</span><span class="sxs-lookup"><span data-stu-id="cc36e-135">The following code example demonstrates deleting a file from an FTP server.</span></span>  
  
 [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]
 [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  
  
 <span data-ttu-id="cc36e-136">В следующем примере кода демонстрируется загрузки файла с FTP-сервера с помощью <xref:System.Net.WebClient> класса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-136">The following code example demonstrates downloading a file from an FTP server by using the <xref:System.Net.WebClient> class.</span></span>  
  
 [!code-cpp[NCLFtpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#5)]
 [!code-csharp[NCLFtpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#5)]  
  
 <span data-ttu-id="cc36e-137">В следующем примере кода демонстрируется использование асинхронных операций для отправки файла на FTP-сервер.</span><span class="sxs-lookup"><span data-stu-id="cc36e-137">The following code example demonstrates using asynchronous operations to upload a file to an FTP server.</span></span>  
  
 [!code-cpp[NCLFtpAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#1)]
 [!code-csharp[NCLFtpAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission"><span data-ttu-id="cc36e-138">для доступа к ресурсу, который ссылается этот запрос.</span><span class="sxs-lookup"><span data-stu-id="cc36e-138">for accessing the resource referenced by this request.</span></span> <span data-ttu-id="cc36e-139">Связанное перечисление: <see cref="F:System.Net.NetworkAccess.Connect" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-139">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Connect" />.</span></span></permission>
    <altmember cref="T:System.Net.FtpWebResponse" />
    <altmember cref="T:System.Net.FtpStatusCode" />
    <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
    <altmember cref="T:System.Net.WebRequest" />
    <altmember cref="T:System.Net.WebResponse" />
    <altmember cref="T:System.Net.WebClient" />
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="ftpWebRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc36e-140">Прерывает асинхронную FTP-операцию.</span><span class="sxs-lookup"><span data-stu-id="cc36e-140">Terminates an asynchronous FTP operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-141">Если операция не выполняется, этот метод не выполняет никаких действий.</span><span class="sxs-lookup"><span data-stu-id="cc36e-141">If there is no operation in progress, this method does nothing.</span></span> <span data-ttu-id="cc36e-142">Если передача файла не выполняется, этот метод завершает передачу.</span><span class="sxs-lookup"><span data-stu-id="cc36e-142">If a file transfer is in progress, this method terminates the transfer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc36e-143">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="cc36e-143">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="cc36e-144">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="cc36e-144">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc36e-145">В следующем примере кода показано, как пользователь может прервать асинхронной операции выгрузки файла из локального каталога к серверу.</span><span class="sxs-lookup"><span data-stu-id="cc36e-145">The following code example demonstrates how the user can terminate an asynchronous upload of a file from the local directory to the server.</span></span>  
  
 [!code-cpp[NCLFtpClient#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#10)]
 [!code-csharp[NCLFtpClient#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult" Usage="ftpWebRequest.BeginGetRequestStream (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="cc36e-146">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="cc36e-146">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="cc36e-147">Пользовательский объект, содержащий сведения об операции.</span><span class="sxs-lookup"><span data-stu-id="cc36e-147">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="cc36e-148">Этот объект передается делегату <paramref name="callback" /> после завершения операции.</span><span class="sxs-lookup"><span data-stu-id="cc36e-148">This object is passed to the <paramref name="callback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="cc36e-149">Начинает асинхронное открытие потока с содержимым запроса для записи.</span><span class="sxs-lookup"><span data-stu-id="cc36e-149">Begins asynchronously opening a request's content stream for writing.</span></span></summary>
        <returns><span data-ttu-id="cc36e-150">Экземпляр <see cref="T:System.IAsyncResult" />, представляющий состояние операции.</span><span class="sxs-lookup"><span data-stu-id="cc36e-150">An <see cref="T:System.IAsyncResult" /> instance that indicates the status of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-151">Необходимо завершить асинхронную операцию путем вызова <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="cc36e-151">You must complete the asynchronous operation by calling the <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> method.</span></span> <span data-ttu-id="cc36e-152">Как правило <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> вызывается метод, который ссылается `callback`.</span><span class="sxs-lookup"><span data-stu-id="cc36e-152">Typically, <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> is called by the method referenced by `callback`.</span></span> <span data-ttu-id="cc36e-153">Чтобы определить состояние операции, проверьте свойства <xref:System.IAsyncResult> объекта, возвращаемого этим методом.</span><span class="sxs-lookup"><span data-stu-id="cc36e-153">To determine the state of the operation, check the properties in the <xref:System.IAsyncResult> object returned by this method.</span></span>  
  
 <span data-ttu-id="cc36e-154">Этот метод не блокируется во время ожидания для потока.</span><span class="sxs-lookup"><span data-stu-id="cc36e-154">This method does not block while waiting for the stream.</span></span> <span data-ttu-id="cc36e-155">Чтобы заблокировать, вызовите <xref:System.Net.FtpWebRequest.GetRequestStream%2A> вместо этого метода.</span><span class="sxs-lookup"><span data-stu-id="cc36e-155">To block, call <xref:System.Net.FtpWebRequest.GetRequestStream%2A> in place of this method.</span></span>  
  
 <span data-ttu-id="cc36e-156">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="cc36e-156">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc36e-157">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="cc36e-157">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="cc36e-158">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="cc36e-158">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc36e-159">В следующем примере кода показано начало асинхронной операции для получения потока запроса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-159">The following code example demonstrates beginning an asynchronous operation to get a request's stream.</span></span> <span data-ttu-id="cc36e-160">Данный пример кода является частью большего примера для <xref:System.Net.FtpWebRequest> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="cc36e-160">This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.</span></span>  
  
 [!code-cpp[NCLFtpAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#4)]
 [!code-csharp[NCLFtpAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc36e-161">Предыдущий вызов этого метода или потока <see cref="M:System.Net.FtpWebRequest.GetRequestStream" /> еще не был завершен.</span><span class="sxs-lookup"><span data-stu-id="cc36e-161">A previous call to this method or <see cref="M:System.Net.FtpWebRequest.GetRequestStream" /> has not yet completed.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="cc36e-162">Не удается установить подключение к FTP-серверу.</span><span class="sxs-lookup"><span data-stu-id="cc36e-162">A connection to the FTP server could not be established.</span></span></exception>
        <exception cref="T:System.Net.ProtocolViolationException"><span data-ttu-id="cc36e-163">Свойству <see cref="P:System.Net.FtpWebRequest.Method" /> невозможно присвоить значение <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-163">The <see cref="P:System.Net.FtpWebRequest.Method" /> property is not set to <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cc36e-164">Этот метод создает сетевой трафик.</span><span class="sxs-lookup"><span data-stu-id="cc36e-164">This method generates network traffic.</span></span></para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult" Usage="ftpWebRequest.BeginGetResponse (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="cc36e-165">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="cc36e-165">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="cc36e-166">Пользовательский объект, содержащий сведения об операции.</span><span class="sxs-lookup"><span data-stu-id="cc36e-166">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="cc36e-167">Этот объект передается делегату <paramref name="callback" /> после завершения операции.</span><span class="sxs-lookup"><span data-stu-id="cc36e-167">This object is passed to the <paramref name="callback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="cc36e-168">Начинает асинхронно отправлять запрос и получать ответ с FTP-сервера.</span><span class="sxs-lookup"><span data-stu-id="cc36e-168">Begins sending a request and receiving a response from an FTP server asynchronously.</span></span></summary>
        <returns><span data-ttu-id="cc36e-169">Экземпляр <see cref="T:System.IAsyncResult" />, представляющий состояние операции.</span><span class="sxs-lookup"><span data-stu-id="cc36e-169">An <see cref="T:System.IAsyncResult" /> instance that indicates the status of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-170">Необходимо завершить асинхронную операцию путем вызова <xref:System.Net.FtpWebRequest.EndGetResponse%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="cc36e-170">You must complete the asynchronous operation by calling the <xref:System.Net.FtpWebRequest.EndGetResponse%2A> method.</span></span> <span data-ttu-id="cc36e-171">Как правило <xref:System.Net.FtpWebRequest.EndGetResponse%2A> вызывается метод, который ссылается `callback`.</span><span class="sxs-lookup"><span data-stu-id="cc36e-171">Typically, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> is called by the method referenced by `callback`.</span></span> <span data-ttu-id="cc36e-172">Чтобы определить состояние операции, проверьте свойства <xref:System.IAsyncResult> объект, возвращаемый <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="cc36e-172">To determine the state of the operation, check the properties in the <xref:System.IAsyncResult> object returned by the <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method.</span></span>  
  
 <span data-ttu-id="cc36e-173">Если <xref:System.Net.FtpWebRequest.Proxy%2A> свойство имеет значение, либо непосредственно или в файле конфигурации, обмен данными с FTP-сервера, поставляющего указанного прокси-сервера.</span><span class="sxs-lookup"><span data-stu-id="cc36e-173">If the <xref:System.Net.FtpWebRequest.Proxy%2A> property is set, either directly or in a configuration file, communications with the FTP server are made through the specified proxy.</span></span>  
  
 <span data-ttu-id="cc36e-174"><xref:System.Net.FtpWebRequest.BeginGetResponse%2A> не приводит к блокировке при ожидании ответа от сервера.</span><span class="sxs-lookup"><span data-stu-id="cc36e-174"><xref:System.Net.FtpWebRequest.BeginGetResponse%2A> does not block while waiting for the response from the server.</span></span> <span data-ttu-id="cc36e-175">Чтобы заблокировать, вызовите <xref:System.Net.FtpWebRequest.GetResponse%2A> метод вместо <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc36e-175">To block, call the <xref:System.Net.FtpWebRequest.GetResponse%2A> method in place of <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>.</span></span>  
  
 <span data-ttu-id="cc36e-176">Дополнительные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="cc36e-176">For more information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 <span data-ttu-id="cc36e-177">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="cc36e-177">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="cc36e-178">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="cc36e-178">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc36e-179">Если <xref:System.Net.WebException> является исключение, используйте <xref:System.Net.WebException.Response%2A> и <xref:System.Net.WebException.Status%2A> свойств исключения, чтобы определить ответ от сервера.</span><span class="sxs-lookup"><span data-stu-id="cc36e-179">If a <xref:System.Net.WebException> is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc36e-180">В следующем примере кода показано завершение асинхронной операции для получения потока запроса, а затем запустить запрос на получение ответа.</span><span class="sxs-lookup"><span data-stu-id="cc36e-180">The following code example demonstrates ending an asynchronous operation to get a request's stream, and then starting a request to get the response.</span></span> <span data-ttu-id="cc36e-181">Данный пример кода является частью большего примера для <xref:System.Net.FtpWebRequest> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="cc36e-181">This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.</span></span>  
  
 [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]
 [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc36e-182"><see cref="M:System.Net.FtpWebRequest.GetResponse" /> или <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> уже был вызван для этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="cc36e-182"><see cref="M:System.Net.FtpWebRequest.GetResponse" /> or <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> has already been called for this instance.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cc36e-183">Этот метод создает сетевой трафик.</span><span class="sxs-lookup"><span data-stu-id="cc36e-183">This method generates network traffic.</span></span></para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); void set(System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection with get, set" Usage="System.Net.FtpWebRequest.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-184">Возвращает или задает сертификаты, используемые для установки и шифрования подключения к FTP-серверу.</span><span class="sxs-lookup"><span data-stu-id="cc36e-184">Gets or sets the certificates used for establishing an encrypted connection to the FTP server.</span></span></summary>
        <value><span data-ttu-id="cc36e-185">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />, который содержит сертификаты клиента.</span><span class="sxs-lookup"><span data-stu-id="cc36e-185">An <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> object that contains the client certificates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-186">Сертификаты клиента используются для проверки подлинности клиента во время начального согласования подключения SSL.</span><span class="sxs-lookup"><span data-stu-id="cc36e-186">Client certificates are used to authenticate the client during the initial SSL connection negotiation.</span></span> <span data-ttu-id="cc36e-187">Дополнительные сведения см. в разделе <xref:System.Net.FtpWebRequest.EnableSsl%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc36e-187">For more information, see <xref:System.Net.FtpWebRequest.EnableSsl%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc36e-188">Платформа .NET Framework кэширует сеансы SSL, так как они создаются и пытается повторно использовать кэшированный сеанс для нового запроса, если это возможно.</span><span class="sxs-lookup"><span data-stu-id="cc36e-188">The .NET Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="cc36e-189">При попытке повторно использовать сеанс SSL, платформа .NET Framework использует первый элемент <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (если есть), или производится попытка повторного использования анонимными пользователями, если <xref:System.Net.HttpWebRequest.ClientCertificates%2A> пуст.</span><span class="sxs-lookup"><span data-stu-id="cc36e-189">When attempting to reuse an SSL session, the .NET Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous session if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc36e-190">Для операции задания указано значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-190">The value specified for a set operation is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public override string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Net.FtpWebRequest.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-191">Возвращает или задает имя группы подключения, которая содержит точка обслуживания, используемую для отправки текущего запроса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-191">Gets or sets the name of the connection group that contains the service point used to send the current request.</span></span></summary>
        <value><span data-ttu-id="cc36e-192">Значение <see cref="T:System.String" />, которое содержит имя группы подключения.</span><span class="sxs-lookup"><span data-stu-id="cc36e-192">A <see cref="T:System.String" /> value that contains a connection group name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-193">Группы соединений связать набор запросов с определенным подключением или набор подключений.</span><span class="sxs-lookup"><span data-stu-id="cc36e-193">Connection groups associate a set of requests with a particular connection or set of connections.</span></span> <span data-ttu-id="cc36e-194">Подключений в группе соединений могут быть использованы только запросы, созданные в одном домене приложения, когда совпадают учетные данные для запроса и запрос указывает имя группы подключений.</span><span class="sxs-lookup"><span data-stu-id="cc36e-194">The connections in a connection group can be reused only by requests originating in the same application domain, when the credentials on the request are the same and the request specifies the connection group name.</span></span> <span data-ttu-id="cc36e-195">При запросе не указано имя группы подключения, можно использовать любое существующее подключение на запрашиваемый сервер, не связанного с группой подключения.</span><span class="sxs-lookup"><span data-stu-id="cc36e-195">When a request does not specify a connection group name, any existing connection to the requested server that is not associated with a connection group can be used.</span></span> <span data-ttu-id="cc36e-196">Если учетные данные не совпадают, существующее подключение закрывается, и новый запрос должен пройти повторную проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="cc36e-196">When the credentials are not the same, the existing connection is closed and the new request must be reauthenticated.</span></span>  
  
 <span data-ttu-id="cc36e-197">С помощью групп соединений может повысить производительность, так как при этом все запросы, которые пользователь может повторно использовать подключение с проверкой подлинности с учетными данными пользователя.</span><span class="sxs-lookup"><span data-stu-id="cc36e-197">Using connection groups can improve performance because this allows all of the requests for a user to reuse the connection authenticated with the user's credentials.</span></span>  
  
 <span data-ttu-id="cc36e-198">Изменение <xref:System.Net.FtpWebRequest.ConnectionGroupName%2A> свойство после вызова метода <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, или <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> метода заставляет <xref:System.InvalidOperationException> исключение.</span><span class="sxs-lookup"><span data-stu-id="cc36e-198">Changing the <xref:System.Net.FtpWebRequest.ConnectionGroupName%2A> property after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc36e-199">В следующем примере кода извлекает значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="cc36e-199">The following code example retrieves the value of this property.</span></span>  
  
 [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]
 [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc36e-200">Для этого свойства задано новое значение для уже выполняющегося запроса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-200">A new value was specified for this property for a request that is already in progress.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <related type="Article" href="~/docs/framework/network-programming/managing-connections.md"><span data-ttu-id="cc36e-201">Управление подключениями</span><span class="sxs-lookup"><span data-stu-id="cc36e-201">Managing Connections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public override long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int64 with get, set" Usage="System.Net.FtpWebRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-202">Возвращает или задает значение, игнорируемое классом <see cref="T:System.Net.FtpWebRequest" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-202">Gets or sets a value that is ignored by the <see cref="T:System.Net.FtpWebRequest" /> class.</span></span></summary>
        <value><span data-ttu-id="cc36e-203">Значение <see cref="T:System.Int64" />, которое следует игнорировать.</span><span class="sxs-lookup"><span data-stu-id="cc36e-203">An <see cref="T:System.Int64" /> value that should be ignored.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-204"><xref:System.Net.FtpWebRequest.ContentLength%2A> Свойство предназначено только для совместимости с другими реализациями <xref:System.Net.WebRequest> и <xref:System.Net.WebResponse> классы.</span><span class="sxs-lookup"><span data-stu-id="cc36e-204">The <xref:System.Net.FtpWebRequest.ContentLength%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes.</span></span> <span data-ttu-id="cc36e-205">Нет причин для использования <xref:System.Net.FtpWebRequest.ContentLength%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc36e-205">There is no reason to use <xref:System.Net.FtpWebRequest.ContentLength%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentOffset">
      <MemberSignature Language="C#" Value="public long ContentOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentOffset" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentOffset As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentOffset { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentOffset : int64 with get, set" Usage="System.Net.FtpWebRequest.ContentOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-206">Возвращает или задает смещение в байтах для файла, загружаемого через этот запрос.</span><span class="sxs-lookup"><span data-stu-id="cc36e-206">Gets or sets a byte offset into the file being downloaded by this request.</span></span></summary>
        <value><span data-ttu-id="cc36e-207">Экземпляр <see cref="T:System.Int64" />, указывающий смещение файла в байтах.</span><span class="sxs-lookup"><span data-stu-id="cc36e-207">An <see cref="T:System.Int64" /> instance that specifies the file offset, in bytes.</span></span> <span data-ttu-id="cc36e-208">Значение по умолчанию равно нулю.</span><span class="sxs-lookup"><span data-stu-id="cc36e-208">The default value is zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-209">Задать <xref:System.Net.FtpWebRequest.ContentOffset%2A> свойства при загрузке файла с FTP-сервера.</span><span class="sxs-lookup"><span data-stu-id="cc36e-209">Set the <xref:System.Net.FtpWebRequest.ContentOffset%2A> property when downloading a file from an FTP server.</span></span> <span data-ttu-id="cc36e-210">Это смещение указывает позицию в файле сервера, отмечающий начало данных для загрузки.</span><span class="sxs-lookup"><span data-stu-id="cc36e-210">This offset indicates the position in the server's file that marks the start of the data to be downloaded.</span></span> <span data-ttu-id="cc36e-211">Смещение указано в виде числа байтов в начале файла; смещение первого байта равно нулю.</span><span class="sxs-lookup"><span data-stu-id="cc36e-211">The offset is specified as the number of bytes from the start of the file; the offset of the first byte is zero.</span></span>  
  
 <span data-ttu-id="cc36e-212">Установка <xref:System.Net.FtpWebRequest.ContentOffset%2A> вызывает <xref:System.Net.FtpWebRequest> для отправки перезапуск (`REST`) команды на сервер.</span><span class="sxs-lookup"><span data-stu-id="cc36e-212">Setting <xref:System.Net.FtpWebRequest.ContentOffset%2A> causes the <xref:System.Net.FtpWebRequest> to send a restart (`REST`) command to the server.</span></span> <span data-ttu-id="cc36e-213">Эта команда пропускается большинство реализаций FTP-сервера при отправке данных на сервер.</span><span class="sxs-lookup"><span data-stu-id="cc36e-213">This command is ignored by most FTP server implementations if you are uploading data to the server.</span></span>  
  
 <span data-ttu-id="cc36e-214">Изменение <xref:System.Net.FtpWebRequest.ContentOffset%2A> после вызова метода <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, или <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> метода заставляет <xref:System.InvalidOperationException> исключение.</span><span class="sxs-lookup"><span data-stu-id="cc36e-214">Changing <xref:System.Net.FtpWebRequest.ContentOffset%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc36e-215">В следующем примере кода демонстрируется загрузка части файла с сервера, а также присоединение загруженных данных в локальный файл.</span><span class="sxs-lookup"><span data-stu-id="cc36e-215">The following code example demonstrates downloading part of a file from a server and appending the downloaded data to a local file.</span></span>  
  
 [!code-cpp[NclFtpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#7)]
 [!code-csharp[NclFtpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc36e-216">Для этого свойства задано новое значение для уже выполняющегося запроса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-216">A new value was specified for this property for a request that is already in progress.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc36e-217">Заданное для этого свойства значение меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="cc36e-217">The value specified for this property is less than zero.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public override string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Net.FtpWebRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-218">Всегда создает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-218">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="cc36e-219">Всегда создает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-219">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-220"><xref:System.Net.FtpWebRequest.ContentType%2A> Свойство предназначено только для совместимости с другими реализациями <xref:System.Net.WebRequest> и <xref:System.Net.WebResponse> классы.</span><span class="sxs-lookup"><span data-stu-id="cc36e-220">The <xref:System.Net.FtpWebRequest.ContentType%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes.</span></span> <span data-ttu-id="cc36e-221">Нет причин для использования <xref:System.Net.FtpWebRequest.ContentType%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc36e-221">There is no reason to use <xref:System.Net.FtpWebRequest.ContentType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc36e-222">Сведения о типе содержимого не поддерживается для FTP.</span><span class="sxs-lookup"><span data-stu-id="cc36e-222">Content type information is not supported for FTP.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.FtpWebRequest.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-223">Возвращает или задает учетные данные, используемые для связи с FTP-сервером.</span><span class="sxs-lookup"><span data-stu-id="cc36e-223">Gets or sets the credentials used to communicate with the FTP server.</span></span></summary>
        <value><span data-ttu-id="cc36e-224">Экземпляр <see cref="T:System.Net.ICredentials" />; в противном случае — <see langword="null" />, если свойство не было задано.</span><span class="sxs-lookup"><span data-stu-id="cc36e-224">An <see cref="T:System.Net.ICredentials" /> instance; otherwise, <see langword="null" /> if the property has not been set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-225">Вы не обязаны указать учетные данные при подключении с использованием анонимный вход.</span><span class="sxs-lookup"><span data-stu-id="cc36e-225">You are not required to specify credentials when connecting using anonymous logon.</span></span> <span data-ttu-id="cc36e-226">Необходимо задать <xref:System.Net.FtpWebRequest.Credentials%2A> свойства с помощью учетных данных типа <xref:System.Net.NetworkCredential>; это гарантирует, что имя пользователя и пароль можно прочитать и отправляются на сервер.</span><span class="sxs-lookup"><span data-stu-id="cc36e-226">You must set the <xref:System.Net.FtpWebRequest.Credentials%2A> property by using a credential of type <xref:System.Net.NetworkCredential>; this ensures that the user name and password can be read and sent to the server.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cc36e-227">Учетные данные не шифруются при передаче на сервер, если не <xref:System.Net.FtpWebRequest.EnableSsl%2A> свойству `true`.</span><span class="sxs-lookup"><span data-stu-id="cc36e-227">Credentials information is not encrypted when transmitted to the server unless the <xref:System.Net.FtpWebRequest.EnableSsl%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="cc36e-228">Изменение <xref:System.Net.FtpWebRequest.Credentials%2A> после вызова метода <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, или <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> метода заставляет <xref:System.InvalidOperationException> исключение.</span><span class="sxs-lookup"><span data-stu-id="cc36e-228">Changing <xref:System.Net.FtpWebRequest.Credentials%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc36e-229">В следующем примере кода извлекает значение этого свойства и использует его для отображения имени пользователя.</span><span class="sxs-lookup"><span data-stu-id="cc36e-229">The following code example retrieves the value of this property and uses it to display the user name.</span></span>  
  
 [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]
 [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc36e-230">Для операции задания указано значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-230">The value specified for a set operation is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc36e-231">Для операции присвоения был указан тип <see cref="T:System.Net.ICredentials" />, отличный от <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-231">An <see cref="T:System.Net.ICredentials" /> of a type other than <see cref="T:System.Net.NetworkCredential" /> was specified for a set operation.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc36e-232">Для этого свойства задано новое значение для уже выполняющегося запроса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-232">A new value was specified for this property for a request that is already in progress.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.FtpWebRequest.DefaultCachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-233">Определяет политику кэширования по умолчанию для всех FTP-запросов.</span><span class="sxs-lookup"><span data-stu-id="cc36e-233">Defines the default cache policy for all FTP requests.</span></span></summary>
        <value><span data-ttu-id="cc36e-234"><see cref="T:System.Net.Cache.RequestCachePolicy" />, который определяет политику кэширования для FTP-запросов.</span><span class="sxs-lookup"><span data-stu-id="cc36e-234">A <see cref="T:System.Net.Cache.RequestCachePolicy" /> that defines the cache policy for FTP requests.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-235">Только содержимое, полученных с помощью <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> команда кэшируется.</span><span class="sxs-lookup"><span data-stu-id="cc36e-235">Only content received using the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> command is cached.</span></span>  
  
 <span data-ttu-id="cc36e-236">В следующей таблице описаны последствия FTP, политики кэширования на <xref:System.Net.FtpWebRequest>.</span><span class="sxs-lookup"><span data-stu-id="cc36e-236">The following table describes the effects of FTP caching policies on <xref:System.Net.FtpWebRequest>.</span></span>  
  
|<span data-ttu-id="cc36e-237">Политика</span><span class="sxs-lookup"><span data-stu-id="cc36e-237">Policy</span></span>|<span data-ttu-id="cc36e-238">Действие</span><span class="sxs-lookup"><span data-stu-id="cc36e-238">Effect</span></span>|  
|------------|------------|  
|<xref:System.Net.Cache.RequestCacheLevel.Default>|<span data-ttu-id="cc36e-239">Возвращает кэшированный ресурс, если ресурс является новым, длина содержимого точна и присутствуют атрибуты content-length, модификации и истечения срока действия.</span><span class="sxs-lookup"><span data-stu-id="cc36e-239">Returns the cached resource if the resource is fresh, the content length is accurate, and the expiration, modification, and content length attributes are present.</span></span>|  
|<xref:System.Net.Cache.RequestCacheLevel.BypassCache>|<span data-ttu-id="cc36e-240">Возвращает ресурс с сервера.</span><span class="sxs-lookup"><span data-stu-id="cc36e-240">Returns the resource from the server.</span></span>|  
|<xref:System.Net.Cache.RequestCacheLevel.CacheOnly>|<span data-ttu-id="cc36e-241">Возвращает кэшированный ресурс, если длина содержимого присутствует и соответствует размеру записи; в противном случае создает <xref:System.Net.WebException>.</span><span class="sxs-lookup"><span data-stu-id="cc36e-241">Returns the cached resource if the content length is present and matches the entry size; otherwise, throws a <xref:System.Net.WebException>.</span></span>|  
|<xref:System.Net.Cache.RequestCacheLevel.CacheIfAvailable>|<span data-ttu-id="cc36e-242">Возвращает кэшированный ресурс, если длина содержимого и соответствует размеру записи; в противном случае ресурс загружается с сервера и возвращается вызывающему объекту.</span><span class="sxs-lookup"><span data-stu-id="cc36e-242">Returns the cached resource if the content length is provided and matches the entry size; otherwise, the resource is downloaded from the server and is returned to the caller.</span></span>|  
|<xref:System.Net.Cache.RequestCacheLevel.Revalidate>|<span data-ttu-id="cc36e-243">Возвращает кэшированный ресурс, если метка времени используется кэшированный ресурс так же, как метка времени ресурса на сервере; в противном случае ресурс загружается с сервера, сохраняется в кэше и возвращается вызывающей стороне.</span><span class="sxs-lookup"><span data-stu-id="cc36e-243">Returns the cached resource if the timestamp of the cached resource is the same as the time stamp of the resource on the server; otherwise, the resource is downloaded from the server, stored in the cache, and returned to the caller.</span></span>|  
|<xref:System.Net.Cache.RequestCacheLevel.Reload>|<span data-ttu-id="cc36e-244">Загружает ресурс с сервера, сохраняется в кэше и возвращает ресурс вызывающему объекту.</span><span class="sxs-lookup"><span data-stu-id="cc36e-244">Downloads the resource from the server, stores it in the cache, and returns the resource to the caller.</span></span>|  
|<xref:System.Net.Cache.RequestCacheLevel.NoCacheNoStore>|<span data-ttu-id="cc36e-245">Если кэшируемый ресурс существует, она удаляется.</span><span class="sxs-lookup"><span data-stu-id="cc36e-245">If a cached resource exists, it is deleted.</span></span> <span data-ttu-id="cc36e-246">Ресурс загружается с сервера и возвращается вызывающему объекту.</span><span class="sxs-lookup"><span data-stu-id="cc36e-246">The resource is downloaded from the server and is returned to the caller.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="cc36e-247">Параметр <xref:System.Net.FtpWebRequest.DefaultCachePolicy%2A> переопределяет все параметры конфигурации.</span><span class="sxs-lookup"><span data-stu-id="cc36e-247">Setting <xref:System.Net.FtpWebRequest.DefaultCachePolicy%2A> overrides any configuration setting.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc36e-248">Вызывающий объект пытался установить значение этого свойства, равное <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-248">The caller tried to set this property to <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/0eb0c5cb-dd97-484d-8614-785e88877abb"><span data-ttu-id="cc36e-249">defaultFtpCachePolicy (параметры сети)</span><span class="sxs-lookup"><span data-stu-id="cc36e-249">defaultFtpCachePolicy (Network Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSsl : bool with get, set" Usage="System.Net.FtpWebRequest.EnableSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-250">Возвращает или задает объект <see cref="T:System.Boolean" />, который указывает, что необходимо использовать SSL-подключение.</span><span class="sxs-lookup"><span data-stu-id="cc36e-250">Gets or sets a <see cref="T:System.Boolean" /> that specifies that an SSL connection should be used.</span></span></summary>
        <value><span data-ttu-id="cc36e-251">Значение <see langword="true" />, если передачи управления и данных шифруются; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-251"><see langword="true" /> if control and data transmissions are encrypted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="cc36e-252">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-252">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="cc36e-253">Если не <xref:System.Net.FtpWebRequest.EnableSsl%2A> свойство `true`, все данные и команд, включая имя и пароль, сведения о пользователе, отправляются на сервер в виде открытого текста.</span><span class="sxs-lookup"><span data-stu-id="cc36e-253">Unless the <xref:System.Net.FtpWebRequest.EnableSsl%2A> property is `true`, all data and commands, including your user name and password information, are sent to the server in clear text.</span></span> <span data-ttu-id="cc36e-254">Любой пользователь мониторинга сетевого трафика можно просмотреть учетные данные и использовать их для подключения к серверу.</span><span class="sxs-lookup"><span data-stu-id="cc36e-254">Anyone monitoring network traffic can view your credentials and use them to connect to the server.</span></span> <span data-ttu-id="cc36e-255">При подключении к серверу FTP, который требует учетные данные и поддерживает SSL, необходимо установить <xref:System.Net.FtpWebRequest.EnableSsl%2A> для `true`.</span><span class="sxs-lookup"><span data-stu-id="cc36e-255">If you are connecting to an FTP server that requires credentials and supports SSL, you should set <xref:System.Net.FtpWebRequest.EnableSsl%2A> to `true`.</span></span>  
  
 <span data-ttu-id="cc36e-256">`"AUTH TLS"` Команда отправляется на сервер для запроса зашифрованных сеансов.</span><span class="sxs-lookup"><span data-stu-id="cc36e-256">The `"AUTH TLS"` command is sent to the server to request an encrypted session.</span></span> <span data-ttu-id="cc36e-257">Если сервер не распознает эту команду, вы получите <xref:System.Net.WebException> исключение.</span><span class="sxs-lookup"><span data-stu-id="cc36e-257">If the server does not recognize this command, you receive a <xref:System.Net.WebException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc36e-258">В следующем примере кода используется зашифрованное подключение для загрузки списка каталогов с FTP-сервера.</span><span class="sxs-lookup"><span data-stu-id="cc36e-258">The following code example uses an encrypted connection to download the directory listing from an FTP server.</span></span>  
  
 [!code-cpp[NCLFtpClient#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#8)]
 [!code-csharp[NCLFtpClient#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc36e-259">Подключение к FTP-серверу уже было установлено.</span><span class="sxs-lookup"><span data-stu-id="cc36e-259">The connection to the FTP server has already been established.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream" Usage="ftpWebRequest.EndGetRequestStream asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="cc36e-260">Объект <see cref="T:System.IAsyncResult" />, который был возвращен при начале операции.</span><span class="sxs-lookup"><span data-stu-id="cc36e-260">The <see cref="T:System.IAsyncResult" /> object that was returned when the operation started.</span></span></param>
        <summary><span data-ttu-id="cc36e-261">Завершает асинхронную операцию в очереди, начинавшуюся с <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-261">Ends a pending asynchronous operation started with <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="cc36e-262">Доступный для записи экземпляр <see cref="T:System.IO.Stream" />, который связан с этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="cc36e-262">A writable <see cref="T:System.IO.Stream" /> instance associated with this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-263">Если операция не завершена, <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="cc36e-263">If the operation has not completed, the <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> method blocks until the operation completes.</span></span> <span data-ttu-id="cc36e-264">Чтобы определить, завершена ли операция, проверьте <xref:System.IAsyncResult.IsCompleted%2A> свойство перед вызовом <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc36e-264">To determine whether the operation has completed, check the <xref:System.IAsyncResult.IsCompleted%2A> property before calling <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>.</span></span>  
  
 <span data-ttu-id="cc36e-265">Помимо исключений, описанных в «Исключения», <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> повторно порождает исключения, которые были созданы при открытии потока для записи.</span><span class="sxs-lookup"><span data-stu-id="cc36e-265">In addition to the exceptions noted in "Exceptions," <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> rethrows exceptions that were thrown while opening the stream for writing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc36e-266">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="cc36e-266">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="cc36e-267">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="cc36e-267">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc36e-268">В следующем примере кода показано завершение асинхронной операции для получения потока запроса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-268">The following code example demonstrates ending an asynchronous operation to get a request's stream.</span></span> <span data-ttu-id="cc36e-269">Данный пример кода является частью большего примера для <xref:System.Net.FtpWebRequest> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="cc36e-269">This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.</span></span>  
  
 [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]
 [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc36e-270"><paramref name="asyncResult" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-270"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc36e-271">Параметр <paramref name="asyncResult" /> не был получен путем вызова <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-271"><paramref name="asyncResult" /> was not obtained by calling <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc36e-272">Этот метод уже был вызван для операции, указанной в параметре <paramref name="asyncResult" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-272">This method was already called for the operation identified by <paramref name="asyncResult" />.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse" Usage="ftpWebRequest.EndGetResponse asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="cc36e-273">Объект <see cref="T:System.IAsyncResult" />, который был возвращен при начале операции.</span><span class="sxs-lookup"><span data-stu-id="cc36e-273">The <see cref="T:System.IAsyncResult" /> that was returned when the operation started.</span></span></param>
        <summary><span data-ttu-id="cc36e-274">Завершает асинхронную операцию в очереди, начинавшуюся с <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-274">Ends a pending asynchronous operation started with <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="cc36e-275">Ссылка <see cref="T:System.Net.WebResponse" />, которая содержит экземпляр <see cref="T:System.Net.FtpWebResponse" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-275">A <see cref="T:System.Net.WebResponse" /> reference that contains an <see cref="T:System.Net.FtpWebResponse" /> instance.</span></span> <span data-ttu-id="cc36e-276">Этот объект содержит ответ FTP-сервера на запрос.</span><span class="sxs-lookup"><span data-stu-id="cc36e-276">This object contains the FTP server's response to the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-277">Если операция не была завершена во время <xref:System.Net.FtpWebRequest.EndGetResponse%2A> вызывается метод, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="cc36e-277">If the operation has not completed at the time the <xref:System.Net.FtpWebRequest.EndGetResponse%2A> method is called, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> blocks until the operation completes.</span></span> <span data-ttu-id="cc36e-278">Чтобы предотвратить блокировку, проверьте <xref:System.IAsyncResult.IsCompleted%2A> свойство перед вызовом <xref:System.Net.FtpWebRequest.EndGetResponse%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc36e-278">To prevent blocking, check the <xref:System.IAsyncResult.IsCompleted%2A> property before calling <xref:System.Net.FtpWebRequest.EndGetResponse%2A>.</span></span>  
  
 <span data-ttu-id="cc36e-279">Помимо исключений, описанных в «Исключения», <xref:System.Net.FtpWebRequest.EndGetResponse%2A> повторно порождает исключения, которые были созданы при обмене данными с сервером.</span><span class="sxs-lookup"><span data-stu-id="cc36e-279">In addition to the exceptions noted in "Exceptions," <xref:System.Net.FtpWebRequest.EndGetResponse%2A> rethrows exceptions that were thrown while communicating with the server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc36e-280">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="cc36e-280">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="cc36e-281">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="cc36e-281">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc36e-282">В следующем примере кода показано завершение асинхронной операции для получения ответа.</span><span class="sxs-lookup"><span data-stu-id="cc36e-282">The following code example demonstrates ending an asynchronous operation to get a response.</span></span> <span data-ttu-id="cc36e-283">Данный пример кода является частью большего примера для <xref:System.Net.FtpWebRequest> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="cc36e-283">This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.</span></span>  
  
 [!code-cpp[NCLFtpAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#6)]
 [!code-csharp[NCLFtpAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc36e-284"><paramref name="asyncResult" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-284"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc36e-285">Параметр <paramref name="asyncResult" /> не был получен путем вызова <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-285"><paramref name="asyncResult" /> was not obtained by calling <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc36e-286">Этот метод уже был вызван для операции, указанной в параметре <paramref name="asyncResult" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-286">This method was already called for the operation identified by <paramref name="asyncResult" />.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="cc36e-287">Произошла ошибка при использовании прокси-сервера HTTP.</span><span class="sxs-lookup"><span data-stu-id="cc36e-287">An error occurred using an HTTP proxy.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cc36e-288">Этот метод создает сетевой трафик.</span><span class="sxs-lookup"><span data-stu-id="cc36e-288">This method generates network traffic.</span></span></para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <altmember cref="M:System.Net.FtpWebRequest.GetResponse" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetRequestStream();" />
      <MemberSignature Language="F#" Value="override this.GetRequestStream : unit -&gt; System.IO.Stream" Usage="ftpWebRequest.GetRequestStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc36e-289">Получает поток, используемый для выгрузки данных на FTP-сервер.</span><span class="sxs-lookup"><span data-stu-id="cc36e-289">Retrieves the stream used to upload data to an FTP server.</span></span></summary>
        <returns><span data-ttu-id="cc36e-290">Доступный для записи экземпляр <see cref="T:System.IO.Stream" />, используемый для хранения данных, отправляемых на сервер текущим запросом.</span><span class="sxs-lookup"><span data-stu-id="cc36e-290">A writable <see cref="T:System.IO.Stream" /> instance used to store data to be sent to the server by the current request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-291">Задать свойства запроса перед вызовом <xref:System.Net.FtpWebRequest.GetRequestStream%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="cc36e-291">Set the request properties before calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method.</span></span> <span data-ttu-id="cc36e-292">После записи данных в поток, необходимо закрыть поток перед отправкой запроса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-292">After writing the data to the stream, you must close the stream prior to sending the request.</span></span>  
  
 <span data-ttu-id="cc36e-293">Если вы не задали <xref:System.Net.FtpWebRequest.Method%2A> свойства <xref:System.Net.WebRequestMethods.Ftp.UploadFile> или <xref:System.Net.WebRequestMethods.Ftp.AppendFile>, невозможно получить поток.</span><span class="sxs-lookup"><span data-stu-id="cc36e-293">If you have not set the <xref:System.Net.FtpWebRequest.Method%2A> property to <xref:System.Net.WebRequestMethods.Ftp.UploadFile> or <xref:System.Net.WebRequestMethods.Ftp.AppendFile>, you cannot get the stream.</span></span>  
  
 <span data-ttu-id="cc36e-294"><xref:System.Net.FtpWebRequest.GetRequestStream%2A> блоки во время ожидания для потока.</span><span class="sxs-lookup"><span data-stu-id="cc36e-294"><xref:System.Net.FtpWebRequest.GetRequestStream%2A> blocks while waiting for the stream.</span></span> <span data-ttu-id="cc36e-295">Чтобы избежать этого, вызовите <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> метод вместо <xref:System.Net.FtpWebRequest.GetRequestStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc36e-295">To prevent this, call the <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> method in place of <xref:System.Net.FtpWebRequest.GetRequestStream%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc36e-296">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="cc36e-296">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="cc36e-297">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="cc36e-297">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc36e-298">В следующем примере кода показано копирование файла в поток данных запроса и отправка запроса к серверу для передачи данных и добавляет их в файл.</span><span class="sxs-lookup"><span data-stu-id="cc36e-298">The following code example demonstrates copying a file to a request's data stream and sending a request to the server to upload the data and append it to a file.</span></span>  
  
 [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]
 [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc36e-299">Метод <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> был вызван, но не был завершен.</span><span class="sxs-lookup"><span data-stu-id="cc36e-299"><see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> has been called and has not completed.</span></span>  
  
<span data-ttu-id="cc36e-300">-или-</span><span class="sxs-lookup"><span data-stu-id="cc36e-300">-or-</span></span> 
<span data-ttu-id="cc36e-301">Прокси-сервер HTTP включен, и была предпринята попытка использования FTP-команды, отличной от <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" /> или <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-301">An HTTP proxy is enabled, and you attempted to use an FTP command other than <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" />, or <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="cc36e-302">Не удается установить подключение к FTP-серверу.</span><span class="sxs-lookup"><span data-stu-id="cc36e-302">A connection to the FTP server could not be established.</span></span></exception>
        <exception cref="T:System.Net.ProtocolViolationException"><span data-ttu-id="cc36e-303">Свойству <see cref="P:System.Net.FtpWebRequest.Method" /> не присвоено значение <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> или <see cref="F:System.Net.WebRequestMethods.Ftp.AppendFile" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-303">The <see cref="P:System.Net.FtpWebRequest.Method" /> property is not set to <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> or <see cref="F:System.Net.WebRequestMethods.Ftp.AppendFile" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cc36e-304">Этот метод создает сетевой трафик.</span><span class="sxs-lookup"><span data-stu-id="cc36e-304">This method generates network traffic.</span></span></para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ GetResponse();" />
      <MemberSignature Language="F#" Value="override this.GetResponse : unit -&gt; System.Net.WebResponse" Usage="ftpWebRequest.GetResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc36e-305">Возвращает ответ FTP-сервера.</span><span class="sxs-lookup"><span data-stu-id="cc36e-305">Returns the FTP server response.</span></span></summary>
        <returns><span data-ttu-id="cc36e-306">Ссылка <see cref="T:System.Net.WebResponse" />, которая содержит экземпляр <see cref="T:System.Net.FtpWebResponse" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-306">A <see cref="T:System.Net.WebResponse" /> reference that contains an <see cref="T:System.Net.FtpWebResponse" /> instance.</span></span> <span data-ttu-id="cc36e-307">Этот объект содержит ответ FTP-сервера на запрос.</span><span class="sxs-lookup"><span data-stu-id="cc36e-307">This object contains the FTP server's response to the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-308">Для доступа к свойствам протокола FTP, необходимо привести <xref:System.Net.WebResponse> объекта, возвращаемого этим методом для <xref:System.Net.FtpWebResponse>.</span><span class="sxs-lookup"><span data-stu-id="cc36e-308">To access the FTP-specific properties, you must cast the <xref:System.Net.WebResponse> object returned by this method to <xref:System.Net.FtpWebResponse>.</span></span>  
  
 <span data-ttu-id="cc36e-309"><xref:System.Net.FtpWebRequest.GetResponse%2A> Заставляет элемент управления подключения, а также может создавать подключения к данным.</span><span class="sxs-lookup"><span data-stu-id="cc36e-309"><xref:System.Net.FtpWebRequest.GetResponse%2A> causes a control connection to be established, and might also create a data connection.</span></span> <span data-ttu-id="cc36e-310"><xref:System.Net.FtpWebRequest.GetResponse%2A> блокируется до получения ответа.</span><span class="sxs-lookup"><span data-stu-id="cc36e-310"><xref:System.Net.FtpWebRequest.GetResponse%2A> blocks until the response is received.</span></span> <span data-ttu-id="cc36e-311">Чтобы избежать этого, можно выполнить этой операции асинхронно путем вызова <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> и <xref:System.Net.FtpWebRequest.EndGetResponse%2A> методы вместо <xref:System.Net.FtpWebRequest.GetResponse%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc36e-311">To prevent this, you can perform this operation asynchronously by calling the <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> and <xref:System.Net.FtpWebRequest.EndGetResponse%2A> methods in place of <xref:System.Net.FtpWebRequest.GetResponse%2A>.</span></span>  
  
 <span data-ttu-id="cc36e-312">Если <xref:System.Net.FtpWebRequest.Proxy%2A> свойство имеет значение, либо непосредственно или в файле конфигурации, обмен данными с FTP-сервера выполняются через прокси-сервер.</span><span class="sxs-lookup"><span data-stu-id="cc36e-312">If the <xref:System.Net.FtpWebRequest.Proxy%2A> property is set, either directly or in a configuration file, communications with the FTP server are made through the proxy.</span></span>  
  
 <span data-ttu-id="cc36e-313">Если <xref:System.Net.WebException> является исключение, используйте <xref:System.Net.WebException.Response%2A> и <xref:System.Net.WebException.Status%2A> свойств исключения, чтобы определить ответ от сервера.</span><span class="sxs-lookup"><span data-stu-id="cc36e-313">If a <xref:System.Net.WebException> is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.</span></span>  
  
 <span data-ttu-id="cc36e-314">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="cc36e-314">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="cc36e-315">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="cc36e-315">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc36e-316">Несколько вызовов <xref:System.Net.FtpWebRequest.GetResponse%2A> возвращен объект ответа; запрос не выполняется повторно.</span><span class="sxs-lookup"><span data-stu-id="cc36e-316">Multiple calls to <xref:System.Net.FtpWebRequest.GetResponse%2A> return the same response object; the request is not reissued.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc36e-317">В следующем примере кода показано копирование файла в поток данных запроса и отправка запроса для добавления данных в файл на сервер.</span><span class="sxs-lookup"><span data-stu-id="cc36e-317">The following code example demonstrates copying a file to a request's data stream and sending a request to append data to a file to the server.</span></span> <span data-ttu-id="cc36e-318">В примере вызывается <xref:System.Net.FtpWebRequest.GetResponse%2A> для отправки запроса и блокировки, пока не будет возвращен ответ с сервера.</span><span class="sxs-lookup"><span data-stu-id="cc36e-318">The example calls <xref:System.Net.FtpWebRequest.GetResponse%2A> to send the request and block until the response is returned by the server.</span></span>  
  
 [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]
 [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc36e-319"><see cref="M:System.Net.FtpWebRequest.GetResponse" /> или <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> уже был вызван для этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="cc36e-319"><see cref="M:System.Net.FtpWebRequest.GetResponse" /> or <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> has already been called for this instance.</span></span>  
  
<span data-ttu-id="cc36e-320">-или-</span><span class="sxs-lookup"><span data-stu-id="cc36e-320">-or-</span></span> 
<span data-ttu-id="cc36e-321">Прокси-сервер HTTP включен, и была предпринята попытка использования FTP-команды, отличной от <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" /> или <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-321">An HTTP proxy is enabled, and you attempted to use an FTP command other than <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" />, or <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="cc36e-322">Значение свойства <see cref="P:System.Net.FtpWebRequest.EnableSsl" /> равно <see langword="true" />, однако сервер не поддерживает эту функциональную возможность.</span><span class="sxs-lookup"><span data-stu-id="cc36e-322"><see cref="P:System.Net.FtpWebRequest.EnableSsl" /> is set to <see langword="true" />, but the server does not support this feature.</span></span>  
  
<span data-ttu-id="cc36e-323">-или-</span><span class="sxs-lookup"><span data-stu-id="cc36e-323">-or-</span></span> 
<span data-ttu-id="cc36e-324">Срок ожидания <see cref="P:System.Net.FtpWebRequest.Timeout" /> был указан и истек.</span><span class="sxs-lookup"><span data-stu-id="cc36e-324">A <see cref="P:System.Net.FtpWebRequest.Timeout" /> was specified and the timeout has expired.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cc36e-325">Этот метод создает сетевой трафик.</span><span class="sxs-lookup"><span data-stu-id="cc36e-325">This method generates network traffic.</span></span></para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public override System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.FtpWebRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-326">Возвращает пустой объект <see cref="T:System.Net.WebHeaderCollection" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-326">Gets an empty <see cref="T:System.Net.WebHeaderCollection" /> object.</span></span></summary>
        <value><span data-ttu-id="cc36e-327">Пустой объект <see cref="T:System.Net.WebHeaderCollection" /></span><span class="sxs-lookup"><span data-stu-id="cc36e-327">An empty <see cref="T:System.Net.WebHeaderCollection" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-328"><xref:System.Net.FtpWebRequest.Headers%2A> Свойство предназначено только для совместимости с другими реализациями <xref:System.Net.WebRequest> и <xref:System.Net.WebResponse> классы.</span><span class="sxs-lookup"><span data-stu-id="cc36e-328">The <xref:System.Net.FtpWebRequest.Headers%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes.</span></span> <span data-ttu-id="cc36e-329">Нет причин для использования <xref:System.Net.FtpWebRequest.Headers%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc36e-329">There is no reason to use <xref:System.Net.FtpWebRequest.Headers%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool with get, set" Usage="System.Net.FtpWebRequest.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("We don't support KeepAlive = true")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-330">Возвращает или задает значение <see cref="T:System.Boolean" />, которое указывает, следует ли закрывать управляющее подключение к FTP-серверу после завершения запроса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-330">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the control connection to the FTP server is closed after the request completes.</span></span></summary>
        <value><span data-ttu-id="cc36e-331">Значение <see langword="true" />, если подключение к серверу не должно быть уничтожено; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-331"><see langword="true" /> if the connection to the server should not be destroyed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="cc36e-332">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-332">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-333">Когда <xref:System.Net.FtpWebRequest.KeepAlive%2A> свойству `false`, управляющее подключение закрывается при вызове <xref:System.Net.FtpWebResponse.Close%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="cc36e-333">When the <xref:System.Net.FtpWebRequest.KeepAlive%2A> property is set to `false`, the control connection is closed when you call the <xref:System.Net.FtpWebResponse.Close%2A> method.</span></span>  
  
 <span data-ttu-id="cc36e-334">Изменение <xref:System.Net.FtpWebRequest.KeepAlive%2A> после вызова метода <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, или <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> метода заставляет <xref:System.InvalidOperationException> исключение.</span><span class="sxs-lookup"><span data-stu-id="cc36e-334">Changing <xref:System.Net.FtpWebRequest.KeepAlive%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc36e-335">В следующем примере кода извлекает и отображает значения свойств для указанного <xref:System.Net.FtpWebRequest> объекта.</span><span class="sxs-lookup"><span data-stu-id="cc36e-335">The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.</span></span>  
  
 [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]
 [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc36e-336">Для этого свойства задано новое значение для уже выполняющегося запроса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-336">A new value was specified for this property for a request that is already in progress.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public override string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Net.FtpWebRequest.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-337">Возвращает или задает команду, которая будет отправлена на FTP-сервер.</span><span class="sxs-lookup"><span data-stu-id="cc36e-337">Gets or sets the command to send to the FTP server.</span></span></summary>
        <value><span data-ttu-id="cc36e-338">Значение <see cref="T:System.String" />, содержащее FTP-команду для отправки на сервер.</span><span class="sxs-lookup"><span data-stu-id="cc36e-338">A <see cref="T:System.String" /> value that contains the FTP command to send to the server.</span></span> <span data-ttu-id="cc36e-339">Значение по умолчанию — <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-339">The default value is <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-340"><xref:System.Net.FtpWebRequest.Method%2A> Свойство определяет, какая команда отправляется на сервер.</span><span class="sxs-lookup"><span data-stu-id="cc36e-340">The <xref:System.Net.FtpWebRequest.Method%2A> property determines which command is sent to the server.</span></span> <span data-ttu-id="cc36e-341">Можно задать <xref:System.Net.FtpWebRequest.Method%2A> с помощью строки, определенные в открытое поле членами <xref:System.Net.WebRequestMethods.Ftp> класса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-341">You set the <xref:System.Net.FtpWebRequest.Method%2A> by using the strings defined in the public field members of the <xref:System.Net.WebRequestMethods.Ftp> class.</span></span> <span data-ttu-id="cc36e-342">Обратите внимание, что строки определенный в <xref:System.Net.WebRequestMethods.Ftp> класса являются единственными параметрами, поддерживаемых для <xref:System.Net.FtpWebRequest.Method%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="cc36e-342">Note that the strings defined in the <xref:System.Net.WebRequestMethods.Ftp> class are the only supported options for the <xref:System.Net.FtpWebRequest.Method%2A> property.</span></span> <span data-ttu-id="cc36e-343">Установка <xref:System.Net.FtpWebRequest.Method%2A> свойство на любое другое значение приведет к <xref:System.ArgumentException> исключения.</span><span class="sxs-lookup"><span data-stu-id="cc36e-343">Setting the <xref:System.Net.FtpWebRequest.Method%2A> property to any other value will result in an <xref:System.ArgumentException> exception.</span></span>  
  
 <span data-ttu-id="cc36e-344">При задании <xref:System.Net.FtpWebRequest.Method%2A> для <xref:System.Net.WebRequestMethods.Ftp.UploadFile>, это необходимо сделать до вызова метода <xref:System.Net.FtpWebRequest.GetRequestStream%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="cc36e-344">When setting <xref:System.Net.FtpWebRequest.Method%2A> to <xref:System.Net.WebRequestMethods.Ftp.UploadFile>, you must do so before calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method.</span></span> <span data-ttu-id="cc36e-345">Сбой вызова этих членов в правильном порядке вызывает <xref:System.Net.ProtocolViolationException> возникло исключение при попытке получить поток запроса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-345">Failure to call these members in the correct order causes a <xref:System.Net.ProtocolViolationException> exception when you attempt to get the request stream.</span></span>  
  
 <span data-ttu-id="cc36e-346">Учетные данные для <xref:System.Net.FtpWebRequest> объект должен иметь разрешение на выполнение указанного метода.</span><span class="sxs-lookup"><span data-stu-id="cc36e-346">The credentials supplied for the <xref:System.Net.FtpWebRequest> object must have permission to perform the specified method.</span></span> <span data-ttu-id="cc36e-347">В противном случае происходит сбой команды FTP.</span><span class="sxs-lookup"><span data-stu-id="cc36e-347">If not, the FTP command fails.</span></span>  
  
 <span data-ttu-id="cc36e-348">Чтобы определить успешность выполнения команды, проверьте <xref:System.Net.FtpWebResponse.StatusCode%2A> и <xref:System.Net.FtpWebResponse.StatusDescription%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="cc36e-348">To determine the success or failure of a command, check the <xref:System.Net.FtpWebResponse.StatusCode%2A> and <xref:System.Net.FtpWebResponse.StatusDescription%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc36e-349">В следующем примере кода этому свойству присваивается <xref:System.Net.WebRequestMethods.Ftp.DeleteFile>.</span><span class="sxs-lookup"><span data-stu-id="cc36e-349">The following code example sets this property to <xref:System.Net.WebRequestMethods.Ftp.DeleteFile>.</span></span>  
  
 [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]
 [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc36e-350">Для этого свойства задано новое значение для уже выполняющегося запроса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-350">A new value was specified for this property for a request that is already in progress.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc36e-351">Метод является недопустимым.</span><span class="sxs-lookup"><span data-stu-id="cc36e-351">The method is invalid.</span></span>  
  
<span data-ttu-id="cc36e-352">-или-</span><span class="sxs-lookup"><span data-stu-id="cc36e-352">-or-</span></span> 
<span data-ttu-id="cc36e-353">Метод не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="cc36e-353">The method is not supported.</span></span>  
  
<span data-ttu-id="cc36e-354">-или-</span><span class="sxs-lookup"><span data-stu-id="cc36e-354">-or-</span></span> 
<span data-ttu-id="cc36e-355">Было указано несколько методов.</span><span class="sxs-lookup"><span data-stu-id="cc36e-355">Multiple methods were specified.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public override bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.FtpWebRequest.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-356">Всегда создает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-356">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="cc36e-357">Всегда создает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-357">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-358"><xref:System.Net.FtpWebRequest.PreAuthenticate%2A> Свойство предназначено только для совместимости с другими реализациями <xref:System.Net.WebRequest> и <xref:System.Net.WebResponse> классы.</span><span class="sxs-lookup"><span data-stu-id="cc36e-358">The <xref:System.Net.FtpWebRequest.PreAuthenticate%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc36e-359">Предварительная проверка подлинности для FTP не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="cc36e-359">Preauthentication is not supported for FTP.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public override System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.FtpWebRequest.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-360">Возвращает или задает прокси-сервер, используемый для связи с FTP-сервером.</span><span class="sxs-lookup"><span data-stu-id="cc36e-360">Gets or sets the proxy used to communicate with the FTP server.</span></span></summary>
        <value><span data-ttu-id="cc36e-361">Экземпляр <see cref="T:System.Net.IWebProxy" />, ответственный за связь с FTP-сервером.</span><span class="sxs-lookup"><span data-stu-id="cc36e-361">An <see cref="T:System.Net.IWebProxy" /> instance responsible for communicating with the FTP server.</span></span> <span data-ttu-id="cc36e-362">В .NET Core, его значение равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-362">On .NET Core, its value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

### <a name="on-net-framework"></a><span data-ttu-id="cc36e-363">На платформе .NET Framework</span><span class="sxs-lookup"><span data-stu-id="cc36e-363">On .NET Framework</span></span>

 <span data-ttu-id="cc36e-364"><xref:System.Net.FtpWebRequest.Proxy%2A> Свойство идентифицирует <xref:System.Net.IWebProxy> экземпляр, который обменивается данными с FTP-сервера.</span><span class="sxs-lookup"><span data-stu-id="cc36e-364">The <xref:System.Net.FtpWebRequest.Proxy%2A> property identifies the <xref:System.Net.IWebProxy> instance that communicates with the FTP server.</span></span> <span data-ttu-id="cc36e-365">Прокси-сервер задается системой с помощью файлов конфигурации и параметров локальной сети Internet Explorer.</span><span class="sxs-lookup"><span data-stu-id="cc36e-365">The proxy is set by the system by using configuration files and the Internet Explorer Local Area Network settings.</span></span> <span data-ttu-id="cc36e-366">Чтобы указать, что следует использовать прокси-сервера, задайте <xref:System.Net.FtpWebRequest.Proxy%2A> к экземпляру прокси-сервера, возвращенный <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="cc36e-366">To specify that no proxy should be used, set <xref:System.Net.FtpWebRequest.Proxy%2A> to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cc36e-367">Дополнительные сведения об обнаружении автоматического прокси-сервера см. в разделе [автоматическое обнаружение прокси-сервера](~/docs/framework/network-programming/automatic-proxy-detection.md).</span><span class="sxs-lookup"><span data-stu-id="cc36e-367">For more information about automatic proxy detection, see [Automatic Proxy Detection](~/docs/framework/network-programming/automatic-proxy-detection.md).</span></span>  
  
 <span data-ttu-id="cc36e-368">Необходимо задать <xref:System.Net.FtpWebRequest.Proxy%2A> до записи данных в поток запроса или получении ответа.</span><span class="sxs-lookup"><span data-stu-id="cc36e-368">You must set <xref:System.Net.FtpWebRequest.Proxy%2A> before writing data to the request's stream or getting the response.</span></span> <span data-ttu-id="cc36e-369">Изменение <xref:System.Net.FtpWebRequest.Proxy%2A> после вызова метода <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, или <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> метода заставляет <xref:System.InvalidOperationException> исключение.</span><span class="sxs-lookup"><span data-stu-id="cc36e-369">Changing <xref:System.Net.FtpWebRequest.Proxy%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="cc36e-370"><xref:System.Net.FtpWebRequest> Класс поддерживает HTTP и Клиент межсетевого экрана ISA-прокси.</span><span class="sxs-lookup"><span data-stu-id="cc36e-370">The <xref:System.Net.FtpWebRequest> class supports HTTP and ISA Firewall Client proxies.</span></span>  
  
 <span data-ttu-id="cc36e-371">Если указанный прокси-сервер — это HTTP-прокси, только <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, и <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> команды поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="cc36e-371">If the specified proxy is an HTTP proxy, only the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, and <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> commands are supported.</span></span>  
  
### <a name="on-net-core"></a><span data-ttu-id="cc36e-372">В .NET Core</span><span class="sxs-lookup"><span data-stu-id="cc36e-372">On .NET Core</span></span>   

<span data-ttu-id="cc36e-373">`FtpWebRequest.Proxy` Свойство не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="cc36e-373">The `FtpWebRequest.Proxy` property is not supported.</span></span> <span data-ttu-id="cc36e-374">Задание свойства не оказывает влияния.</span><span class="sxs-lookup"><span data-stu-id="cc36e-374">Setting the property has no effect.</span></span> <span data-ttu-id="cc36e-375">Получение свойства значение возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="cc36e-375">Getting the property value returns `null`.</span></span> 


## Examples  
 <span data-ttu-id="cc36e-376">В следующем примере кода отображает значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="cc36e-376">The following code example displays this property value.</span></span>  
  
 [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]
 [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc36e-377">Значением этого свойства не может быть <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-377">This property cannot be set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc36e-378">Для этого свойства задано новое значение для уже выполняющегося запроса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-378">A new value was specified for this property for a request that is already in progress.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <altmember cref="T:System.Net.WebProxy" />
        <altmember cref="T:System.Net.GlobalProxySelection" />
      </Docs>
    </Member>
    <Member MemberName="ReadWriteTimeout">
      <MemberSignature Language="C#" Value="public int ReadWriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadWriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ReadWriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadWriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadWriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadWriteTimeout : int with get, set" Usage="System.Net.FtpWebRequest.ReadWriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-379">Возвращает или задает время ожидания при записи в поток или при чтении из него.</span><span class="sxs-lookup"><span data-stu-id="cc36e-379">Gets or sets a time-out when reading from or writing to a stream.</span></span></summary>
        <value><span data-ttu-id="cc36e-380">Количество миллисекунд до истечения срока действия записи или чтения. По умолчанию установлено значение 300 000 миллисекунд (5 минут).</span><span class="sxs-lookup"><span data-stu-id="cc36e-380">The number of milliseconds before the reading or writing times out. The default value is 300,000 milliseconds (5 minutes).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-381"><xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> Используется при записи в поток, возвращенный <xref:System.Net.FtpWebRequest.GetRequestStream%2A> метода или чтение из потока, возвращаемый <xref:System.Net.FtpWebResponse.GetResponseStream%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="cc36e-381">The <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> is used when writing to the stream returned by the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method or reading from the stream returned by the <xref:System.Net.FtpWebResponse.GetResponseStream%2A> method.</span></span>  
  
 <span data-ttu-id="cc36e-382">В частности <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> свойство определяет время ожидания для <xref:System.IO.Stream.Read%2A> метод, который используется для чтения поток, возвращенный <xref:System.Net.FtpWebResponse.GetResponseStream%2A> метода, а также для <xref:System.IO.Stream.Write%2A> метод, который используется для записи в поток, возвращенный <xref:System.Net.FtpWebRequest.GetRequestStream%2A>метод.</span><span class="sxs-lookup"><span data-stu-id="cc36e-382">Specifically, the <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> property controls the time-out for the <xref:System.IO.Stream.Read%2A> method, which is used to read the stream returned by the <xref:System.Net.FtpWebResponse.GetResponseStream%2A> method, and for the <xref:System.IO.Stream.Write%2A> method, which is used to write to the stream returned by the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method.</span></span> <span data-ttu-id="cc36e-383">Если превышено время ожидания, вызывающего метод вызывает <xref:System.Net.WebException> с <xref:System.Net.WebExceptionStatus> присвоено <xref:System.Net.WebExceptionStatus.Timeout>.</span><span class="sxs-lookup"><span data-stu-id="cc36e-383">If the time-out period is exceeded, the calling method throws a <xref:System.Net.WebException> with <xref:System.Net.WebExceptionStatus> set to <xref:System.Net.WebExceptionStatus.Timeout>.</span></span>  
  
 <span data-ttu-id="cc36e-384">Чтобы указать время ожидания завершения запроса, используйте <xref:System.Net.FtpWebRequest.Timeout%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="cc36e-384">To specify the amount of time to wait for the request to complete, use the <xref:System.Net.FtpWebRequest.Timeout%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc36e-385">Запрос уже был отправлен.</span><span class="sxs-lookup"><span data-stu-id="cc36e-385">The request has already been sent.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc36e-386">Указанное значение для операции присвоения меньше или равно нулю и не равно <see cref="F:System.Threading.Timeout.Infinite" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-386">The value specified for a set operation is less than or equal to zero and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RenameTo">
      <MemberSignature Language="C#" Value="public string RenameTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RenameTo" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.RenameTo" />
      <MemberSignature Language="VB.NET" Value="Public Property RenameTo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RenameTo { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RenameTo : string with get, set" Usage="System.Net.FtpWebRequest.RenameTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-387">Возвращает или задает новое имя переименовываемого файла.</span><span class="sxs-lookup"><span data-stu-id="cc36e-387">Gets or sets the new name of a file being renamed.</span></span></summary>
        <value><span data-ttu-id="cc36e-388">Новая имя переименовываемого файла.</span><span class="sxs-lookup"><span data-stu-id="cc36e-388">The new name of the file being renamed.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc36e-389">Значение, указанное для операции Set, равно <see langword="null" /> или пустой строке.</span><span class="sxs-lookup"><span data-stu-id="cc36e-389">The value specified for a set operation is <see langword="null" /> or an empty string.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc36e-390">Для этого свойства задано новое значение для уже выполняющегося запроса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-390">A new value was specified for this property for a request that is already in progress.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public override Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestUri : Uri" Usage="System.Net.FtpWebRequest.RequestUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-391">Возвращает URI, запрошенный этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="cc36e-391">Gets the URI requested by this instance.</span></span></summary>
        <value><span data-ttu-id="cc36e-392">Экземпляр <see cref="T:System.Uri" />, который идентифицирует ресурс, доступ к которому предоставляется посредством FTP.</span><span class="sxs-lookup"><span data-stu-id="cc36e-392">A <see cref="T:System.Uri" /> instance that identifies a resource that is accessed using the File Transfer Protocol.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-393">Значение <xref:System.Net.FtpWebRequest.RequestUri%2A> свойство — это URI, указанный при <xref:System.Net.WebRequest.Create%2A> был вызван метод для извлечения данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="cc36e-393">The value of the <xref:System.Net.FtpWebRequest.RequestUri%2A> property is the URI specified when the <xref:System.Net.WebRequest.Create%2A> method was called to obtain this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc36e-394">В следующем примере кода отображает значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="cc36e-394">The following code example displays this property value.</span></span>  
  
 [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]
 [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicePoint : System.Net.ServicePoint" Usage="System.Net.FtpWebRequest.ServicePoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-395">Возвращает объект <see cref="T:System.Net.ServicePoint" />, используемый для подключения к FTP-серверу.</span><span class="sxs-lookup"><span data-stu-id="cc36e-395">Gets the <see cref="T:System.Net.ServicePoint" /> object used to connect to the FTP server.</span></span></summary>
        <value><span data-ttu-id="cc36e-396">Объект <see cref="T:System.Net.ServicePoint" /> может использоваться для настройки поведения при подключении.</span><span class="sxs-lookup"><span data-stu-id="cc36e-396">A <see cref="T:System.Net.ServicePoint" /> object that can be used to customize connection behavior.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-397">Если нет <xref:System.Net.ServicePoint> объект существует, он будет создан, для FTP-сервера.</span><span class="sxs-lookup"><span data-stu-id="cc36e-397">If no <xref:System.Net.ServicePoint> object exists, one is created for the FTP server.</span></span> <span data-ttu-id="cc36e-398">Чтобы задать максимальное число подключений, которые могут быть открыты для FTP-сервера, установите <xref:System.Net.ServicePoint.ConnectionLimit%2A> свойство <xref:System.Net.ServicePoint> экземпляр, возвращаемый этим свойством.</span><span class="sxs-lookup"><span data-stu-id="cc36e-398">To set the maximum number of connections that can be open for an FTP server, set the <xref:System.Net.ServicePoint.ConnectionLimit%2A> property of the <xref:System.Net.ServicePoint> instance returned by this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc36e-399">В следующем примере кода получается точка обслуживания из запроса и задает максимальное число подключений к одному.</span><span class="sxs-lookup"><span data-stu-id="cc36e-399">The following code example retrieves the service point from a request and sets the maximum number of connections to one.</span></span>  
  
 [!code-cpp[NCLFtpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#1)]
 [!code-csharp[NCLFtpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.FtpWebRequest.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-400">Возвращает или задает количество миллисекунд для ожидания запроса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-400">Gets or sets the number of milliseconds to wait for a request.</span></span></summary>
        <value><span data-ttu-id="cc36e-401">Значение <see cref="T:System.Int32" />, которое содержит количество миллисекунд для ожидания перед завершением срока действия запроса. Значение по умолчанию — <see cref="F:System.Threading.Timeout.Infinite" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-401">An <see cref="T:System.Int32" /> value that contains the number of milliseconds to wait before a request times out. The default value is <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-402">Чтобы задать бесконечное значение, присвойте <xref:System.Net.FtpWebRequest.Timeout%2A> свойства <xref:System.Threading.Timeout.Infinite> (-1).</span><span class="sxs-lookup"><span data-stu-id="cc36e-402">To specify an infinite value, set the <xref:System.Net.FtpWebRequest.Timeout%2A> property to <xref:System.Threading.Timeout.Infinite> (-1).</span></span> <span data-ttu-id="cc36e-403">Это значение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="cc36e-403">This is the default value.</span></span>  
  
 <span data-ttu-id="cc36e-404"><xref:System.Net.FtpWebRequest.Timeout%2A> число миллисекунд, синхронный запрос, созданный с помощью <xref:System.Net.FtpWebRequest.GetResponse%2A> метод ожидает ответа и что <xref:System.Net.FtpWebRequest.GetRequestStream%2A> метод ожидает поток.</span><span class="sxs-lookup"><span data-stu-id="cc36e-404"><xref:System.Net.FtpWebRequest.Timeout%2A> is the number of milliseconds that a synchronous request made with the <xref:System.Net.FtpWebRequest.GetResponse%2A> method waits for a response and that the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method waits for a stream.</span></span> <span data-ttu-id="cc36e-405">Если ресурс не отвечает в течение времени ожидания, запрос создает исключение <xref:System.Net.WebException> с <xref:System.Net.WebException.Status%2A> свойство значение <xref:System.Net.WebExceptionStatus.Timeout>.</span><span class="sxs-lookup"><span data-stu-id="cc36e-405">If a resource does not respond within the time-out period, the request throws a <xref:System.Net.WebException> with the <xref:System.Net.WebException.Status%2A> property set to <xref:System.Net.WebExceptionStatus.Timeout>.</span></span>  
  
 <span data-ttu-id="cc36e-406">Изменение <xref:System.Net.FtpWebRequest.Timeout%2A> после вызова метода <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, или <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> метода заставляет <xref:System.InvalidOperationException> исключение.</span><span class="sxs-lookup"><span data-stu-id="cc36e-406">Changing <xref:System.Net.FtpWebRequest.Timeout%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="cc36e-407">Запрос доменных имен (DNS) может занять до 15 секунд для возврата или истечения времени ожидания. Если запрос содержит имя узла, которое требуется разрешение, а <xref:System.Net.FtpWebRequest.Timeout%2A> значение не более 15 секунд может занять 15 секунд или больше, прежде чем <xref:System.Net.WebException> указывающее тайм-аута запроса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-407">A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set <xref:System.Net.FtpWebRequest.Timeout%2A> to a value less than 15 seconds, it may take 15 seconds or more before a <xref:System.Net.WebException> is thrown to indicate a time-out on your request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc36e-408">В следующем примере кода этому свойству.</span><span class="sxs-lookup"><span data-stu-id="cc36e-408">The following code example sets this property.</span></span>  
  
 [!code-cpp[NCLFtpClient#23](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#23)]
 [!code-csharp[NCLFtpClient#23](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc36e-409">Указанное значение меньше нуля и не равно <see cref="F:System.Threading.Timeout.Infinite" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-409">The value specified is less than zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc36e-410">Для этого свойства задано новое значение для уже выполняющегося запроса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-410">A new value was specified for this property for a request that is already in progress.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="UseBinary">
      <MemberSignature Language="C#" Value="public bool UseBinary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseBinary" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UseBinary" />
      <MemberSignature Language="VB.NET" Value="Public Property UseBinary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseBinary { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseBinary : bool with get, set" Usage="System.Net.FtpWebRequest.UseBinary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-411">Возвращает или задает значение <see cref="T:System.Boolean" />, которое указывает тип данных для передачи файлов.</span><span class="sxs-lookup"><span data-stu-id="cc36e-411">Gets or sets a <see cref="T:System.Boolean" /> value that specifies the data type for file transfers.</span></span></summary>
        <value><span data-ttu-id="cc36e-412">Значение <see langword="true" />, чтобы указать серверу, что передаваемые данные являются двоичными; значение <see langword="false" />, чтобы указать передачу текстовых данных.</span><span class="sxs-lookup"><span data-stu-id="cc36e-412"><see langword="true" /> to indicate to the server that the data to be transferred is binary; <see langword="false" /> to indicate that the data is text.</span></span> <span data-ttu-id="cc36e-413">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-413">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-414">При отправке двоичных данных, таких как изображения, присвойте этому свойству значение `true`.</span><span class="sxs-lookup"><span data-stu-id="cc36e-414">If you are sending binary data, such as an image, set this property to `true`.</span></span> <span data-ttu-id="cc36e-415">При отправке текста, присвойте свойству `false`.</span><span class="sxs-lookup"><span data-stu-id="cc36e-415">If you are sending text, set the property to `false`.</span></span> <span data-ttu-id="cc36e-416">Указание `true` вызывает <xref:System.Net.FtpWebRequest> для отправки `"TYPE I"` команды на сервер.</span><span class="sxs-lookup"><span data-stu-id="cc36e-416">Specifying `true` causes the <xref:System.Net.FtpWebRequest> to send a `"TYPE I"` command to the server.</span></span> <span data-ttu-id="cc36e-417">Указание `false` вызывает <xref:System.Net.FtpWebRequest> для отправки `"Type A"` команды на сервер.</span><span class="sxs-lookup"><span data-stu-id="cc36e-417">Specifying `false` causes the <xref:System.Net.FtpWebRequest> to send a `"Type A"` command to the server.</span></span> <span data-ttu-id="cc36e-418">FTP-серверы могут игнорировать эти команды.</span><span class="sxs-lookup"><span data-stu-id="cc36e-418">FTP servers can ignore these commands.</span></span>  
  
 <span data-ttu-id="cc36e-419">Изменение <xref:System.Net.FtpWebRequest.UseBinary%2A> после вызова метода <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, или <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> метода заставляет <xref:System.InvalidOperationException> исключение.</span><span class="sxs-lookup"><span data-stu-id="cc36e-419">Changing <xref:System.Net.FtpWebRequest.UseBinary%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc36e-420">В следующем примере кода извлекает и отображает значения свойств для указанного <xref:System.Net.FtpWebRequest> объекта.</span><span class="sxs-lookup"><span data-stu-id="cc36e-420">The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.</span></span>  
  
 [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]
 [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc36e-421">Для этого свойства задано новое значение для уже выполняющегося запроса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-421">A new value was specified for this property for a request that is already in progress.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public override bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.FtpWebRequest.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-422">Всегда создает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-422">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="cc36e-423">Всегда создает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-423">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-424"><xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A> Свойство предназначено только для совместимости с другими реализациями <xref:System.Net.WebRequest> и <xref:System.Net.WebResponse> классы.</span><span class="sxs-lookup"><span data-stu-id="cc36e-424">The <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes.</span></span> <span data-ttu-id="cc36e-425">Нет причин для использования <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc36e-425">There is no reason to use <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc36e-426">Учетные данные по умолчанию для FTP не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="cc36e-426">Default credentials are not supported for FTP.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UsePassive">
      <MemberSignature Language="C#" Value="public bool UsePassive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePassive" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UsePassive" />
      <MemberSignature Language="VB.NET" Value="Public Property UsePassive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsePassive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsePassive : bool with get, set" Usage="System.Net.FtpWebRequest.UsePassive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc36e-427">Возвращает или задает поведение процесса передачи данных в клиентском приложении.</span><span class="sxs-lookup"><span data-stu-id="cc36e-427">Gets or sets the behavior of a client application's data transfer process.</span></span></summary>
        <value><span data-ttu-id="cc36e-428">Значение <see langword="false" />, если процесс передачи данных в клиентском приложении прослушивает подключение на порту данных; в противном случае — <see langword="true" />, если клиент должен начать подключение по порту данных.</span><span class="sxs-lookup"><span data-stu-id="cc36e-428"><see langword="false" /> if the client application's data transfer process listens for a connection on the data port; otherwise, <see langword="true" /> if the client should initiate a connection on the data port.</span></span> <span data-ttu-id="cc36e-429">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="cc36e-429">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc36e-430">Установка <xref:System.Net.FtpWebRequest.UsePassive%2A> свойства `true` отправляет "`PASV"` команды на сервер.</span><span class="sxs-lookup"><span data-stu-id="cc36e-430">Setting the <xref:System.Net.FtpWebRequest.UsePassive%2A> property to `true` sends the "`PASV"` command to the server.</span></span> <span data-ttu-id="cc36e-431">Эта команда запрашивает сервер для прослушивания порта данных, а также для ожидания соединения, а не после получения команды на передачу данных.</span><span class="sxs-lookup"><span data-stu-id="cc36e-431">This command requests the server to listen on a data port and to wait for a connection rather than initiate one upon receipt of a transfer command.</span></span>  
  
 <span data-ttu-id="cc36e-432">Описание поведения, которые указываются с помощью <xref:System.Net.FtpWebRequest.UsePassive%2A>, см. в разделе [RFC 959: «Протокол», раздел 3.2: «При установлении подключения к данным» и разделе 4.1.2: «Перенести параметр команды»](https://www.ietf.org/rfc/rfc959.txt).</span><span class="sxs-lookup"><span data-stu-id="cc36e-432">For a description of the behaviors that are specified using <xref:System.Net.FtpWebRequest.UsePassive%2A>, see [RFC 959: "File Transfer Protocol", Section 3.2: "Establishing Data Connections" and Section 4.1.2: "Transfer Parameter Commands"](https://www.ietf.org/rfc/rfc959.txt).</span></span>  
  
 <span data-ttu-id="cc36e-433">Изменение <xref:System.Net.FtpWebRequest.UsePassive%2A> после вызова метода <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, или <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> метода заставляет <xref:System.InvalidOperationException> исключение.</span><span class="sxs-lookup"><span data-stu-id="cc36e-433">Changing <xref:System.Net.FtpWebRequest.UsePassive%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="cc36e-434">Если <xref:System.Net.FtpWebRequest.UsePassive%2A> присваивается `true`, FTP-сервера может не отправлять размером файла и ход выполнения скачивания всегда может быть равным нулю.</span><span class="sxs-lookup"><span data-stu-id="cc36e-434">If <xref:System.Net.FtpWebRequest.UsePassive%2A> is set to `true`, the FTP server may not send the size of the file, and download progress can always be zero.</span></span> <span data-ttu-id="cc36e-435">Если <xref:System.Net.FtpWebRequest.UsePassive%2A> присваивается `false`, брандмауэр может отображать оповещение и блокировать скачивание файлов.</span><span class="sxs-lookup"><span data-stu-id="cc36e-435">If <xref:System.Net.FtpWebRequest.UsePassive%2A> is set to `false`, a firewall can raise an alert and block the file download.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc36e-436">В следующем примере кода извлекает и отображает значения свойств для указанного <xref:System.Net.FtpWebRequest> объекта.</span><span class="sxs-lookup"><span data-stu-id="cc36e-436">The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.</span></span>  
  
 [!code-cpp[NCLFtpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#6)]
 [!code-csharp[NCLFtpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc36e-437">Для этого свойства задано новое значение для уже выполняющегося запроса.</span><span class="sxs-lookup"><span data-stu-id="cc36e-437">A new value was specified for this property for a request that is already in progress.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
  </Members>
</Type>