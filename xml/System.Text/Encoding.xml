<Type Name="Encoding" FullName="System.Text.Encoding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e2bd3ed7476f011ca8d38fc08aa2c397d44fe0d2" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56366170" /></Metadata><TypeSignature Language="C#" Value="public abstract class Encoding : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Encoding extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Text.Encoding" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Encoding&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Encoding abstract : ICloneable" />
  <TypeSignature Language="F#" Value="type Encoding = class&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6407e-101">Представляет кодировку символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-101">Represents a character encoding.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-102">Кодирование - это процесс преобразования набора символов Юникода в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="6407e-103">В отличие от этого декодирование — это процесс преобразования последовательность закодированных байтов в набор символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="6407e-103">In contrast, decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span> <span data-ttu-id="6407e-104">Сведения о Юникоде преобразование форматов (форматах UTF) и другие кодировки, поддерживаемые <xref:System.Text.Encoding>, см. в разделе [кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="6407e-104">For information about the Unicode Transformation Formats (UTFs) and other encodings supported by <xref:System.Text.Encoding>, see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="6407e-105">Обратите внимание, что <xref:System.Text.Encoding> предназначен для работы с символами Юникода, а не произвольных двоичных данных, таких как массивы байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-105">Note that <xref:System.Text.Encoding> is intended to operate on Unicode characters instead of arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="6407e-106">Если необходимо закодировать произвольные двоичные данные в текст, следует использовать протокол, например uuencode, который реализуется методами, такими как <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6407e-106">If you must encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6407e-107">Платформа .NET предоставляет следующие реализации <xref:System.Text.Encoding> класс для поддержки текущей кодировки Юникод и другие кодировки:</span><span class="sxs-lookup"><span data-stu-id="6407e-107">.NET provides the following implementations of the <xref:System.Text.Encoding> class to support current Unicode encodings and other encodings:</span></span>  
  
-   <span data-ttu-id="6407e-108"><xref:System.Text.ASCIIEncoding> Кодирует символы Юникода как один 7-разрядных символов ASCII.</span><span class="sxs-lookup"><span data-stu-id="6407e-108"><xref:System.Text.ASCIIEncoding> encodes Unicode characters as single 7-bit ASCII characters.</span></span> <span data-ttu-id="6407e-109">В этом кодировка поддерживает только значения символов от U + 0000 и U + 007F.</span><span class="sxs-lookup"><span data-stu-id="6407e-109">This encoding only supports character values between U+0000 and U+007F.</span></span> <span data-ttu-id="6407e-110">Кодовая страница 20127.</span><span class="sxs-lookup"><span data-stu-id="6407e-110">Code page 20127.</span></span> <span data-ttu-id="6407e-111">Также доступно в центре <xref:System.Text.Encoding.ASCII%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="6407e-111">Also available through the <xref:System.Text.Encoding.ASCII%2A> property.</span></span>  
  
-   <span data-ttu-id="6407e-112"><xref:System.Text.UTF7Encoding> Кодирует символы Юникода, используя кодировку UTF-7.</span><span class="sxs-lookup"><span data-stu-id="6407e-112"><xref:System.Text.UTF7Encoding> encodes Unicode characters using the UTF-7 encoding.</span></span> <span data-ttu-id="6407e-113">Эта кодировка поддерживает все символы Юникода.</span><span class="sxs-lookup"><span data-stu-id="6407e-113">This encoding supports all Unicode character values.</span></span> <span data-ttu-id="6407e-114">Кодовая страница 65000.</span><span class="sxs-lookup"><span data-stu-id="6407e-114">Code page 65000.</span></span> <span data-ttu-id="6407e-115">Также доступно в центре <xref:System.Text.Encoding.UTF7%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="6407e-115">Also available through the <xref:System.Text.Encoding.UTF7%2A> property.</span></span>  
  
-   <span data-ttu-id="6407e-116"><xref:System.Text.UTF8Encoding> Кодирует символы Юникода, используя кодировку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="6407e-116"><xref:System.Text.UTF8Encoding> encodes Unicode characters using the UTF-8 encoding.</span></span> <span data-ttu-id="6407e-117">Эта кодировка поддерживает все символы Юникода.</span><span class="sxs-lookup"><span data-stu-id="6407e-117">This encoding supports all Unicode character values.</span></span> <span data-ttu-id="6407e-118">Кодовая страница 65001.</span><span class="sxs-lookup"><span data-stu-id="6407e-118">Code page 65001.</span></span> <span data-ttu-id="6407e-119">Также доступно в центре <xref:System.Text.Encoding.UTF8%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="6407e-119">Also available through the <xref:System.Text.Encoding.UTF8%2A> property.</span></span>  
  
-   <span data-ttu-id="6407e-120"><xref:System.Text.UnicodeEncoding> Кодирует символы Юникода, используя кодировку UTF-16.</span><span class="sxs-lookup"><span data-stu-id="6407e-120"><xref:System.Text.UnicodeEncoding> encodes Unicode characters using the UTF-16 encoding.</span></span> <span data-ttu-id="6407e-121">Поддерживаются оба порядка мало обратный порядок байтов и больших порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-121">Both little endian and big endian byte orders are supported.</span></span> <span data-ttu-id="6407e-122">Также доступно в центре <xref:System.Text.Encoding.Unicode%2A> свойство и <xref:System.Text.Encoding.BigEndianUnicode%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="6407e-122">Also available through the <xref:System.Text.Encoding.Unicode%2A> property and the <xref:System.Text.Encoding.BigEndianUnicode%2A> property.</span></span>  
  
-   <span data-ttu-id="6407e-123"><xref:System.Text.UTF32Encoding> Кодирует символы Юникода, используя кодировку UTF-32.</span><span class="sxs-lookup"><span data-stu-id="6407e-123"><xref:System.Text.UTF32Encoding> encodes Unicode characters using the UTF-32 encoding.</span></span> <span data-ttu-id="6407e-124">Мало порядок байтов (кодовая страница 12000) и с обратным порядком байтов (кодовая страница 12001) байтов поддерживаются порядка.</span><span class="sxs-lookup"><span data-stu-id="6407e-124">Both little endian (code page 12000) and big endian (code page 12001) byte orders are supported.</span></span> <span data-ttu-id="6407e-125">Также доступно в центре <xref:System.Text.Encoding.UTF32%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="6407e-125">Also available through the <xref:System.Text.Encoding.UTF32%2A> property.</span></span>  
  
 <span data-ttu-id="6407e-126"><xref:System.Text.Encoding> Класс в основном предназначен для преобразования между разными кодировками и Юникодом.</span><span class="sxs-lookup"><span data-stu-id="6407e-126">The <xref:System.Text.Encoding> class is primarily intended to convert between different encodings and Unicode.</span></span> <span data-ttu-id="6407e-127">Часто один из производных классов Юникод является правильным выбором для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="6407e-127">Often one of the derived Unicode classes is the correct choice for your app.</span></span>  
  
 <span data-ttu-id="6407e-128">Используйте <xref:System.Text.Encoding.GetEncoding%2A> метод, чтобы получить другие кодировки и вызовите <xref:System.Text.Encoding.GetEncodings%2A> метод для получения списка всех кодировок.</span><span class="sxs-lookup"><span data-stu-id="6407e-128">Use the <xref:System.Text.Encoding.GetEncoding%2A> method to obtain other encodings, and call the <xref:System.Text.Encoding.GetEncodings%2A> method to get a list of all encodings.</span></span>  
  
 <span data-ttu-id="6407e-129">В следующей таблице перечислены кодировках, поддерживаемых .NET Framework и .NET Core.</span><span class="sxs-lookup"><span data-stu-id="6407e-129">The following table lists the encodings supported by .NET Framework and .NET Core.</span></span> <span data-ttu-id="6407e-130">В ней перечислены каждой кодировки номер кодовой страницы и значения кодировки <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> и <xref:System.Text.EncodingInfo.DisplayName%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="6407e-130">It lists each encoding's code page number and the values of the encoding's <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> and <xref:System.Text.EncodingInfo.DisplayName%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="6407e-131">Флажок в **поддержки .NET Framework** и **поддержки .NET Core** столбцов показывает, что кодовая страница поддерживается такой реализацией .NET вне зависимости от базовой платформы.</span><span class="sxs-lookup"><span data-stu-id="6407e-131">A check mark in the **.NET Framework support** and **.NET Core support** columns indicates that the code page is natively supported by that .NET implementation, regardless of the underlying platform.</span></span> <span data-ttu-id="6407e-132">Для .NET Framework доступность других кодировок, перечисленные в таблице, зависит от операционной системы.</span><span class="sxs-lookup"><span data-stu-id="6407e-132">For .NET Framework, the availability of other encodings listed in the table depends on the operating system.</span></span> <span data-ttu-id="6407e-133">Для .NET Core, другие кодировки доступны с помощью <xref:System.Text.CodePagesEncodingProvider?displayProperty=nameWithType> класса или путем создания производного класса от <xref:System.Text.EncodingProvider?displayProperty=nameWithType> класса.</span><span class="sxs-lookup"><span data-stu-id="6407e-133">For .NET Core, other encodings are available by using the <xref:System.Text.CodePagesEncodingProvider?displayProperty=nameWithType> class or by deriving from the <xref:System.Text.EncodingProvider?displayProperty=nameWithType> class.</span></span>  

> [!NOTE]
> <span data-ttu-id="6407e-134">Кодовые страницы, <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> свойство соответствует международному стандарту не обязательно соответствуют полностью с помощью этого стандарта.</span><span class="sxs-lookup"><span data-stu-id="6407e-134">Code pages whose <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> property corresponds to an international standard do not necessarily comply in full with that standard.</span></span> 

|<span data-ttu-id="6407e-135">Кодовая страница</span><span class="sxs-lookup"><span data-stu-id="6407e-135">Code page</span></span>|<span data-ttu-id="6407e-136">name</span><span class="sxs-lookup"><span data-stu-id="6407e-136">Name</span></span>|<span data-ttu-id="6407e-137">Отображаемое имя</span><span class="sxs-lookup"><span data-stu-id="6407e-137">Display name</span></span>|<span data-ttu-id="6407e-138">Поддержка .NET framework</span><span class="sxs-lookup"><span data-stu-id="6407e-138">.NET Framework support</span></span>| <span data-ttu-id="6407e-139">Поддержка .NET Core</span><span class="sxs-lookup"><span data-stu-id="6407e-139">.NET Core support</span></span> | 
|---------|----|------------|----------------------|-------------------|    
|<span data-ttu-id="6407e-140">37</span><span class="sxs-lookup"><span data-stu-id="6407e-140">37</span></span>|<span data-ttu-id="6407e-141">IBM037</span><span class="sxs-lookup"><span data-stu-id="6407e-141">IBM037</span></span>|<span data-ttu-id="6407e-142">IBM EBCDIC (США Канада)</span><span class="sxs-lookup"><span data-stu-id="6407e-142">IBM EBCDIC (US-Canada)</span></span>|||  
|<span data-ttu-id="6407e-143">437</span><span class="sxs-lookup"><span data-stu-id="6407e-143">437</span></span>|<span data-ttu-id="6407e-144">IBM437</span><span class="sxs-lookup"><span data-stu-id="6407e-144">IBM437</span></span>|<span data-ttu-id="6407e-145">OEM-USA</span><span class="sxs-lookup"><span data-stu-id="6407e-145">OEM United States</span></span>|||  
|<span data-ttu-id="6407e-146">500</span><span class="sxs-lookup"><span data-stu-id="6407e-146">500</span></span>|<span data-ttu-id="6407e-147">IBM500</span><span class="sxs-lookup"><span data-stu-id="6407e-147">IBM500</span></span>|<span data-ttu-id="6407e-148">IBM EBCDIC (международная)</span><span class="sxs-lookup"><span data-stu-id="6407e-148">IBM EBCDIC (International)</span></span>|||  
|<span data-ttu-id="6407e-149">708</span><span class="sxs-lookup"><span data-stu-id="6407e-149">708</span></span>|<span data-ttu-id="6407e-150">ASMO-708</span><span class="sxs-lookup"><span data-stu-id="6407e-150">ASMO-708</span></span>|<span data-ttu-id="6407e-151">Арабская (ASMO 708)</span><span class="sxs-lookup"><span data-stu-id="6407e-151">Arabic (ASMO 708)</span></span>|||  
|<span data-ttu-id="6407e-152">720</span><span class="sxs-lookup"><span data-stu-id="6407e-152">720</span></span>|<span data-ttu-id="6407e-153">DOS-720</span><span class="sxs-lookup"><span data-stu-id="6407e-153">DOS-720</span></span>|<span data-ttu-id="6407e-154">Арабская (DOS)</span><span class="sxs-lookup"><span data-stu-id="6407e-154">Arabic (DOS)</span></span>|||  
|<span data-ttu-id="6407e-155">737</span><span class="sxs-lookup"><span data-stu-id="6407e-155">737</span></span>|<span data-ttu-id="6407e-156">ibm737</span><span class="sxs-lookup"><span data-stu-id="6407e-156">ibm737</span></span>|<span data-ttu-id="6407e-157">Řečtina (DOS)</span><span class="sxs-lookup"><span data-stu-id="6407e-157">Greek (DOS)</span></span>|||  
|<span data-ttu-id="6407e-158">775</span><span class="sxs-lookup"><span data-stu-id="6407e-158">775</span></span>|<span data-ttu-id="6407e-159">ibm775</span><span class="sxs-lookup"><span data-stu-id="6407e-159">ibm775</span></span>|<span data-ttu-id="6407e-160">Балтийская (DOS)</span><span class="sxs-lookup"><span data-stu-id="6407e-160">Baltic (DOS)</span></span>|||  
|<span data-ttu-id="6407e-161">850</span><span class="sxs-lookup"><span data-stu-id="6407e-161">850</span></span>|<span data-ttu-id="6407e-162">ibm850</span><span class="sxs-lookup"><span data-stu-id="6407e-162">ibm850</span></span>|<span data-ttu-id="6407e-163">Западно-европейская (DOS)</span><span class="sxs-lookup"><span data-stu-id="6407e-163">Western European (DOS)</span></span>|||  
|<span data-ttu-id="6407e-164">852</span><span class="sxs-lookup"><span data-stu-id="6407e-164">852</span></span>|<span data-ttu-id="6407e-165">ibm852</span><span class="sxs-lookup"><span data-stu-id="6407e-165">ibm852</span></span>|<span data-ttu-id="6407e-166">Центрально-европейская (DOS)</span><span class="sxs-lookup"><span data-stu-id="6407e-166">Central European (DOS)</span></span>|||  
|<span data-ttu-id="6407e-167">855</span><span class="sxs-lookup"><span data-stu-id="6407e-167">855</span></span>|<span data-ttu-id="6407e-168">IBM855</span><span class="sxs-lookup"><span data-stu-id="6407e-168">IBM855</span></span>|<span data-ttu-id="6407e-169">OEM-кириллица</span><span class="sxs-lookup"><span data-stu-id="6407e-169">OEM Cyrillic</span></span>|||  
|<span data-ttu-id="6407e-170">857</span><span class="sxs-lookup"><span data-stu-id="6407e-170">857</span></span>|<span data-ttu-id="6407e-171">ibm857</span><span class="sxs-lookup"><span data-stu-id="6407e-171">ibm857</span></span>|<span data-ttu-id="6407e-172">Turečtina (DOS)</span><span class="sxs-lookup"><span data-stu-id="6407e-172">Turkish (DOS)</span></span>|||  
|<span data-ttu-id="6407e-173">858</span><span class="sxs-lookup"><span data-stu-id="6407e-173">858</span></span>|<span data-ttu-id="6407e-174">IBM00858</span><span class="sxs-lookup"><span data-stu-id="6407e-174">IBM00858</span></span>|<span data-ttu-id="6407e-175">OEM-многоязычная латиница I</span><span class="sxs-lookup"><span data-stu-id="6407e-175">OEM Multilingual Latin I</span></span>|||  
|<span data-ttu-id="6407e-176">860</span><span class="sxs-lookup"><span data-stu-id="6407e-176">860</span></span>|<span data-ttu-id="6407e-177">IBM860</span><span class="sxs-lookup"><span data-stu-id="6407e-177">IBM860</span></span>|<span data-ttu-id="6407e-178">Portugalština (DOS)</span><span class="sxs-lookup"><span data-stu-id="6407e-178">Portuguese (DOS)</span></span>|||  
|<span data-ttu-id="6407e-179">861</span><span class="sxs-lookup"><span data-stu-id="6407e-179">861</span></span>|<span data-ttu-id="6407e-180">ibm861</span><span class="sxs-lookup"><span data-stu-id="6407e-180">ibm861</span></span>|<span data-ttu-id="6407e-181">Islandština (DOS)</span><span class="sxs-lookup"><span data-stu-id="6407e-181">Icelandic (DOS)</span></span>|||  
|<span data-ttu-id="6407e-182">862</span><span class="sxs-lookup"><span data-stu-id="6407e-182">862</span></span>|<span data-ttu-id="6407e-183">DOS-862</span><span class="sxs-lookup"><span data-stu-id="6407e-183">DOS-862</span></span>|<span data-ttu-id="6407e-184">Hebrejština (DOS)</span><span class="sxs-lookup"><span data-stu-id="6407e-184">Hebrew (DOS)</span></span>|||  
|<span data-ttu-id="6407e-185">863</span><span class="sxs-lookup"><span data-stu-id="6407e-185">863</span></span>|<span data-ttu-id="6407e-186">IBM863</span><span class="sxs-lookup"><span data-stu-id="6407e-186">IBM863</span></span>|<span data-ttu-id="6407e-187">Французская канадская (DOS)</span><span class="sxs-lookup"><span data-stu-id="6407e-187">French Canadian (DOS)</span></span>|||  
|<span data-ttu-id="6407e-188">864</span><span class="sxs-lookup"><span data-stu-id="6407e-188">864</span></span>|<span data-ttu-id="6407e-189">IBM864</span><span class="sxs-lookup"><span data-stu-id="6407e-189">IBM864</span></span>|<span data-ttu-id="6407e-190">Арабский (864)</span><span class="sxs-lookup"><span data-stu-id="6407e-190">Arabic (864)</span></span>|||  
|<span data-ttu-id="6407e-191">865</span><span class="sxs-lookup"><span data-stu-id="6407e-191">865</span></span>|<span data-ttu-id="6407e-192">IBM865</span><span class="sxs-lookup"><span data-stu-id="6407e-192">IBM865</span></span>|<span data-ttu-id="6407e-193">Скандинавская (DOS)</span><span class="sxs-lookup"><span data-stu-id="6407e-193">Nordic (DOS)</span></span>|||  
|<span data-ttu-id="6407e-194">866</span><span class="sxs-lookup"><span data-stu-id="6407e-194">866</span></span>|<span data-ttu-id="6407e-195">cp866</span><span class="sxs-lookup"><span data-stu-id="6407e-195">cp866</span></span>|<span data-ttu-id="6407e-196">Cyrilice (DOS)</span><span class="sxs-lookup"><span data-stu-id="6407e-196">Cyrillic (DOS)</span></span>|||  
|<span data-ttu-id="6407e-197">869</span><span class="sxs-lookup"><span data-stu-id="6407e-197">869</span></span>|<span data-ttu-id="6407e-198">ibm869</span><span class="sxs-lookup"><span data-stu-id="6407e-198">ibm869</span></span>|<span data-ttu-id="6407e-199">Греческая, современная (DOS)</span><span class="sxs-lookup"><span data-stu-id="6407e-199">Greek, Modern (DOS)</span></span>|||  
|<span data-ttu-id="6407e-200">870</span><span class="sxs-lookup"><span data-stu-id="6407e-200">870</span></span>|<span data-ttu-id="6407e-201">IBM870</span><span class="sxs-lookup"><span data-stu-id="6407e-201">IBM870</span></span>|<span data-ttu-id="6407e-202">IBM EBCDIC (многоязыкового латиница-2)</span><span class="sxs-lookup"><span data-stu-id="6407e-202">IBM EBCDIC (Multilingual Latin-2)</span></span>|||  
|<span data-ttu-id="6407e-203">874</span><span class="sxs-lookup"><span data-stu-id="6407e-203">874</span></span>|<span data-ttu-id="6407e-204">Windows-874</span><span class="sxs-lookup"><span data-stu-id="6407e-204">windows-874</span></span>|<span data-ttu-id="6407e-205">Тайский (Windows)</span><span class="sxs-lookup"><span data-stu-id="6407e-205">Thai (Windows)</span></span>|||  
|<span data-ttu-id="6407e-206">875</span><span class="sxs-lookup"><span data-stu-id="6407e-206">875</span></span>|<span data-ttu-id="6407e-207">cp875</span><span class="sxs-lookup"><span data-stu-id="6407e-207">cp875</span></span>|<span data-ttu-id="6407e-208">IBM EBCDIC (греческая, Совр.)</span><span class="sxs-lookup"><span data-stu-id="6407e-208">IBM EBCDIC (Greek Modern)</span></span>|||  
|<span data-ttu-id="6407e-209">932</span><span class="sxs-lookup"><span data-stu-id="6407e-209">932</span></span>|<span data-ttu-id="6407e-210">shift_jis</span><span class="sxs-lookup"><span data-stu-id="6407e-210">shift_jis</span></span>|<span data-ttu-id="6407e-211">Japonština (Shift-JIS)</span><span class="sxs-lookup"><span data-stu-id="6407e-211">Japanese (Shift-JIS)</span></span>|||  
|<span data-ttu-id="6407e-212">936</span><span class="sxs-lookup"><span data-stu-id="6407e-212">936</span></span>|<span data-ttu-id="6407e-213">GB2312</span><span class="sxs-lookup"><span data-stu-id="6407e-213">gb2312</span></span>|<span data-ttu-id="6407e-214">Китайский, упрощенное письмо (GB2312)</span><span class="sxs-lookup"><span data-stu-id="6407e-214">Chinese Simplified (GB2312)</span></span>|<span data-ttu-id="6407e-215">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-215">✓</span></span>||  
|<span data-ttu-id="6407e-216">949</span><span class="sxs-lookup"><span data-stu-id="6407e-216">949</span></span>|<span data-ttu-id="6407e-217">ks_c_5601-1987</span><span class="sxs-lookup"><span data-stu-id="6407e-217">ks_c_5601-1987</span></span>|<span data-ttu-id="6407e-218">Корейский</span><span class="sxs-lookup"><span data-stu-id="6407e-218">Korean</span></span>|||  
|<span data-ttu-id="6407e-219">950</span><span class="sxs-lookup"><span data-stu-id="6407e-219">950</span></span>|<span data-ttu-id="6407e-220">Big5</span><span class="sxs-lookup"><span data-stu-id="6407e-220">big5</span></span>|<span data-ttu-id="6407e-221">Китайская традиционная (Big5)</span><span class="sxs-lookup"><span data-stu-id="6407e-221">Chinese Traditional (Big5)</span></span>|||  
|<span data-ttu-id="6407e-222">1026</span><span class="sxs-lookup"><span data-stu-id="6407e-222">1026</span></span>|<span data-ttu-id="6407e-223">IBM1026</span><span class="sxs-lookup"><span data-stu-id="6407e-223">IBM1026</span></span>|<span data-ttu-id="6407e-224">IBM EBCDIC (Turečtina-Latin 5)</span><span class="sxs-lookup"><span data-stu-id="6407e-224">IBM EBCDIC (Turkish Latin-5)</span></span>|||  
|<span data-ttu-id="6407e-225">1047</span><span class="sxs-lookup"><span data-stu-id="6407e-225">1047</span></span>|<span data-ttu-id="6407e-226">IBM01047</span><span class="sxs-lookup"><span data-stu-id="6407e-226">IBM01047</span></span>|<span data-ttu-id="6407e-227">IBM Latin 1</span><span class="sxs-lookup"><span data-stu-id="6407e-227">IBM Latin-1</span></span>|||  
|<span data-ttu-id="6407e-228">1140</span><span class="sxs-lookup"><span data-stu-id="6407e-228">1140</span></span>|<span data-ttu-id="6407e-229">IBM01140</span><span class="sxs-lookup"><span data-stu-id="6407e-229">IBM01140</span></span>|<span data-ttu-id="6407e-230">IBM EBCDIC (США Канада Европа)</span><span class="sxs-lookup"><span data-stu-id="6407e-230">IBM EBCDIC (US-Canada-Euro)</span></span>|||  
|<span data-ttu-id="6407e-231">1141</span><span class="sxs-lookup"><span data-stu-id="6407e-231">1141</span></span>|<span data-ttu-id="6407e-232">IBM01141</span><span class="sxs-lookup"><span data-stu-id="6407e-232">IBM01141</span></span>|<span data-ttu-id="6407e-233">IBM EBCDIC (Německo Euro)</span><span class="sxs-lookup"><span data-stu-id="6407e-233">IBM EBCDIC (Germany-Euro)</span></span>|||  
|<span data-ttu-id="6407e-234">1142</span><span class="sxs-lookup"><span data-stu-id="6407e-234">1142</span></span>|<span data-ttu-id="6407e-235">IBM01142</span><span class="sxs-lookup"><span data-stu-id="6407e-235">IBM01142</span></span>|<span data-ttu-id="6407e-236">IBM EBCDIC (Дания Норвегия Европа)</span><span class="sxs-lookup"><span data-stu-id="6407e-236">IBM EBCDIC (Denmark-Norway-Euro)</span></span>|||  
|<span data-ttu-id="6407e-237">1143</span><span class="sxs-lookup"><span data-stu-id="6407e-237">1143</span></span>|<span data-ttu-id="6407e-238">IBM01143</span><span class="sxs-lookup"><span data-stu-id="6407e-238">IBM01143</span></span>|<span data-ttu-id="6407e-239">IBM EBCDIC (Финляндия Швеция Европа)</span><span class="sxs-lookup"><span data-stu-id="6407e-239">IBM EBCDIC (Finland-Sweden-Euro)</span></span>|||  
|<span data-ttu-id="6407e-240">1144</span><span class="sxs-lookup"><span data-stu-id="6407e-240">1144</span></span>|<span data-ttu-id="6407e-241">IBM01144</span><span class="sxs-lookup"><span data-stu-id="6407e-241">IBM01144</span></span>|<span data-ttu-id="6407e-242">IBM EBCDIC (Италия Европа)</span><span class="sxs-lookup"><span data-stu-id="6407e-242">IBM EBCDIC (Italy-Euro)</span></span>|||  
|<span data-ttu-id="6407e-243">1145</span><span class="sxs-lookup"><span data-stu-id="6407e-243">1145</span></span>|<span data-ttu-id="6407e-244">IBM01145</span><span class="sxs-lookup"><span data-stu-id="6407e-244">IBM01145</span></span>|<span data-ttu-id="6407e-245">IBM EBCDIC (Španělsko Euro)</span><span class="sxs-lookup"><span data-stu-id="6407e-245">IBM EBCDIC (Spain-Euro)</span></span>|||  
|<span data-ttu-id="6407e-246">1146</span><span class="sxs-lookup"><span data-stu-id="6407e-246">1146</span></span>|<span data-ttu-id="6407e-247">IBM01146</span><span class="sxs-lookup"><span data-stu-id="6407e-247">IBM01146</span></span>|<span data-ttu-id="6407e-248">IBM EBCDIC (Великобритания Европа)</span><span class="sxs-lookup"><span data-stu-id="6407e-248">IBM EBCDIC (UK-Euro)</span></span>|||  
|<span data-ttu-id="6407e-249">1147</span><span class="sxs-lookup"><span data-stu-id="6407e-249">1147</span></span>|<span data-ttu-id="6407e-250">IBM01147</span><span class="sxs-lookup"><span data-stu-id="6407e-250">IBM01147</span></span>|<span data-ttu-id="6407e-251">IBM EBCDIC (Francie Euro)</span><span class="sxs-lookup"><span data-stu-id="6407e-251">IBM EBCDIC (France-Euro)</span></span>|||  
|<span data-ttu-id="6407e-252">1148</span><span class="sxs-lookup"><span data-stu-id="6407e-252">1148</span></span>|<span data-ttu-id="6407e-253">IBM01148</span><span class="sxs-lookup"><span data-stu-id="6407e-253">IBM01148</span></span>|<span data-ttu-id="6407e-254">IBM EBCDIC (международная Европа)</span><span class="sxs-lookup"><span data-stu-id="6407e-254">IBM EBCDIC (International-Euro)</span></span>|||  
|<span data-ttu-id="6407e-255">1149</span><span class="sxs-lookup"><span data-stu-id="6407e-255">1149</span></span>|<span data-ttu-id="6407e-256">IBM01149</span><span class="sxs-lookup"><span data-stu-id="6407e-256">IBM01149</span></span>|<span data-ttu-id="6407e-257">IBM EBCDIC (Island Euro)</span><span class="sxs-lookup"><span data-stu-id="6407e-257">IBM EBCDIC (Icelandic-Euro)</span></span>|||  
|<span data-ttu-id="6407e-258">1200</span><span class="sxs-lookup"><span data-stu-id="6407e-258">1200</span></span>|<span data-ttu-id="6407e-259">UTF-16</span><span class="sxs-lookup"><span data-stu-id="6407e-259">utf-16</span></span>|<span data-ttu-id="6407e-260">Юникод</span><span class="sxs-lookup"><span data-stu-id="6407e-260">Unicode</span></span>|<span data-ttu-id="6407e-261">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-261">✓</span></span>|<span data-ttu-id="6407e-262">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-262">✓</span></span>|  
|<span data-ttu-id="6407e-263">1201</span><span class="sxs-lookup"><span data-stu-id="6407e-263">1201</span></span>|<span data-ttu-id="6407e-264">unicodeFFFE</span><span class="sxs-lookup"><span data-stu-id="6407e-264">unicodeFFFE</span></span>|<span data-ttu-id="6407e-265">Юникод (Big endian)</span><span class="sxs-lookup"><span data-stu-id="6407e-265">Unicode (Big endian)</span></span>|<span data-ttu-id="6407e-266">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-266">✓</span></span>|<span data-ttu-id="6407e-267">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-267">✓</span></span>|  
|<span data-ttu-id="6407e-268">1250</span><span class="sxs-lookup"><span data-stu-id="6407e-268">1250</span></span>|<span data-ttu-id="6407e-269">Windows-1250</span><span class="sxs-lookup"><span data-stu-id="6407e-269">windows-1250</span></span>|<span data-ttu-id="6407e-270">Центрально-европейская (Windows)</span><span class="sxs-lookup"><span data-stu-id="6407e-270">Central European (Windows)</span></span>|||  
|<span data-ttu-id="6407e-271">1251</span><span class="sxs-lookup"><span data-stu-id="6407e-271">1251</span></span>|<span data-ttu-id="6407e-272">Windows 1251</span><span class="sxs-lookup"><span data-stu-id="6407e-272">windows-1251</span></span>|<span data-ttu-id="6407e-273">Кириллица (Windows)</span><span class="sxs-lookup"><span data-stu-id="6407e-273">Cyrillic (Windows)</span></span>|||  
|<span data-ttu-id="6407e-274">1252</span><span class="sxs-lookup"><span data-stu-id="6407e-274">1252</span></span>|<span data-ttu-id="6407e-275">Windows-1252</span><span class="sxs-lookup"><span data-stu-id="6407e-275">Windows-1252</span></span>|<span data-ttu-id="6407e-276">Западно-европейская (Windows)</span><span class="sxs-lookup"><span data-stu-id="6407e-276">Western European (Windows)</span></span>|<span data-ttu-id="6407e-277">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-277">✓</span></span>||  
|<span data-ttu-id="6407e-278">1253</span><span class="sxs-lookup"><span data-stu-id="6407e-278">1253</span></span>|<span data-ttu-id="6407e-279">Windows-1253</span><span class="sxs-lookup"><span data-stu-id="6407e-279">windows-1253</span></span>|<span data-ttu-id="6407e-280">Греческий (Windows)</span><span class="sxs-lookup"><span data-stu-id="6407e-280">Greek (Windows)</span></span>|||  
|<span data-ttu-id="6407e-281">1254</span><span class="sxs-lookup"><span data-stu-id="6407e-281">1254</span></span>|<span data-ttu-id="6407e-282">Windows-1254</span><span class="sxs-lookup"><span data-stu-id="6407e-282">windows-1254</span></span>|<span data-ttu-id="6407e-283">Турецкий (Windows)</span><span class="sxs-lookup"><span data-stu-id="6407e-283">Turkish (Windows)</span></span>|||  
|<span data-ttu-id="6407e-284">1255</span><span class="sxs-lookup"><span data-stu-id="6407e-284">1255</span></span>|<span data-ttu-id="6407e-285">Windows-1255</span><span class="sxs-lookup"><span data-stu-id="6407e-285">windows-1255</span></span>|<span data-ttu-id="6407e-286">Иврит (Windows)</span><span class="sxs-lookup"><span data-stu-id="6407e-286">Hebrew (Windows)</span></span>|||  
|<span data-ttu-id="6407e-287">1256</span><span class="sxs-lookup"><span data-stu-id="6407e-287">1256</span></span>|<span data-ttu-id="6407e-288">Windows-1256</span><span class="sxs-lookup"><span data-stu-id="6407e-288">windows-1256</span></span>|<span data-ttu-id="6407e-289">Арабский (Windows)</span><span class="sxs-lookup"><span data-stu-id="6407e-289">Arabic (Windows)</span></span>|||  
|<span data-ttu-id="6407e-290">1257</span><span class="sxs-lookup"><span data-stu-id="6407e-290">1257</span></span>|<span data-ttu-id="6407e-291">Windows 1257</span><span class="sxs-lookup"><span data-stu-id="6407e-291">windows-1257</span></span>|<span data-ttu-id="6407e-292">Балтийская (Windows)</span><span class="sxs-lookup"><span data-stu-id="6407e-292">Baltic (Windows)</span></span>|||  
|<span data-ttu-id="6407e-293">1258</span><span class="sxs-lookup"><span data-stu-id="6407e-293">1258</span></span>|<span data-ttu-id="6407e-294">Windows-1258</span><span class="sxs-lookup"><span data-stu-id="6407e-294">windows-1258</span></span>|<span data-ttu-id="6407e-295">Вьетнамский (Windows)</span><span class="sxs-lookup"><span data-stu-id="6407e-295">Vietnamese (Windows)</span></span>|||  
|<span data-ttu-id="6407e-296">1361</span><span class="sxs-lookup"><span data-stu-id="6407e-296">1361</span></span>|<span data-ttu-id="6407e-297">Джохаб</span><span class="sxs-lookup"><span data-stu-id="6407e-297">Johab</span></span>|<span data-ttu-id="6407e-298">Korejština (Johab)</span><span class="sxs-lookup"><span data-stu-id="6407e-298">Korean (Johab)</span></span>|||  
|<span data-ttu-id="6407e-299">10000</span><span class="sxs-lookup"><span data-stu-id="6407e-299">10000</span></span>|<span data-ttu-id="6407e-300">Macintosh</span><span class="sxs-lookup"><span data-stu-id="6407e-300">macintosh</span></span>|<span data-ttu-id="6407e-301">Западно-европейская (Mac)</span><span class="sxs-lookup"><span data-stu-id="6407e-301">Western European (Mac)</span></span>|||  
|<span data-ttu-id="6407e-302">10001</span><span class="sxs-lookup"><span data-stu-id="6407e-302">10001</span></span>|<span data-ttu-id="6407e-303">x — mac — японский</span><span class="sxs-lookup"><span data-stu-id="6407e-303">x-mac-japanese</span></span>|<span data-ttu-id="6407e-304">Japonština (Mac)</span><span class="sxs-lookup"><span data-stu-id="6407e-304">Japanese (Mac)</span></span>|||  
|<span data-ttu-id="6407e-305">10002</span><span class="sxs-lookup"><span data-stu-id="6407e-305">10002</span></span>|<span data-ttu-id="6407e-306">x-mac-chinesetrad</span><span class="sxs-lookup"><span data-stu-id="6407e-306">x-mac-chinesetrad</span></span>|<span data-ttu-id="6407e-307">Китайская, традиционное письмо (Mac)</span><span class="sxs-lookup"><span data-stu-id="6407e-307">Chinese Traditional (Mac)</span></span>|||  
|<span data-ttu-id="6407e-308">10003</span><span class="sxs-lookup"><span data-stu-id="6407e-308">10003</span></span>|<span data-ttu-id="6407e-309">x — mac — корейский</span><span class="sxs-lookup"><span data-stu-id="6407e-309">x-mac-korean</span></span>|<span data-ttu-id="6407e-310">Корейская (Mac)</span><span class="sxs-lookup"><span data-stu-id="6407e-310">Korean (Mac)</span></span>|<span data-ttu-id="6407e-311">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-311">✓</span></span>||  
|<span data-ttu-id="6407e-312">10004</span><span class="sxs-lookup"><span data-stu-id="6407e-312">10004</span></span>|<span data-ttu-id="6407e-313">x-mac — арабский</span><span class="sxs-lookup"><span data-stu-id="6407e-313">x-mac-arabic</span></span>|<span data-ttu-id="6407e-314">Arabština (Mac)</span><span class="sxs-lookup"><span data-stu-id="6407e-314">Arabic (Mac)</span></span>|||  
|<span data-ttu-id="6407e-315">10005</span><span class="sxs-lookup"><span data-stu-id="6407e-315">10005</span></span>|<span data-ttu-id="6407e-316">x-mac иврит</span><span class="sxs-lookup"><span data-stu-id="6407e-316">x-mac-hebrew</span></span>|<span data-ttu-id="6407e-317">Hebrejština (Mac)</span><span class="sxs-lookup"><span data-stu-id="6407e-317">Hebrew (Mac)</span></span>|||  
|<span data-ttu-id="6407e-318">10006</span><span class="sxs-lookup"><span data-stu-id="6407e-318">10006</span></span>|<span data-ttu-id="6407e-319">x-mac греческая</span><span class="sxs-lookup"><span data-stu-id="6407e-319">x-mac-greek</span></span>|<span data-ttu-id="6407e-320">Řečtina (Mac)</span><span class="sxs-lookup"><span data-stu-id="6407e-320">Greek (Mac)</span></span>|||  
|<span data-ttu-id="6407e-321">10007</span><span class="sxs-lookup"><span data-stu-id="6407e-321">10007</span></span>|<span data-ttu-id="6407e-322">x-mac кириллица</span><span class="sxs-lookup"><span data-stu-id="6407e-322">x-mac-cyrillic</span></span>|<span data-ttu-id="6407e-323">Cyrilice (Mac)</span><span class="sxs-lookup"><span data-stu-id="6407e-323">Cyrillic (Mac)</span></span>|||  
|<span data-ttu-id="6407e-324">10008</span><span class="sxs-lookup"><span data-stu-id="6407e-324">10008</span></span>|<span data-ttu-id="6407e-325">x-mac-chinesesimp</span><span class="sxs-lookup"><span data-stu-id="6407e-325">x-mac-chinesesimp</span></span>|<span data-ttu-id="6407e-326">Китайский, упрощенное письмо (Mac)</span><span class="sxs-lookup"><span data-stu-id="6407e-326">Chinese Simplified (Mac)</span></span>|<span data-ttu-id="6407e-327">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-327">✓</span></span>||  
|<span data-ttu-id="6407e-328">10010</span><span class="sxs-lookup"><span data-stu-id="6407e-328">10010</span></span>|<span data-ttu-id="6407e-329">x-mac румынский</span><span class="sxs-lookup"><span data-stu-id="6407e-329">x-mac-romanian</span></span>|<span data-ttu-id="6407e-330">Rumunština (Mac)</span><span class="sxs-lookup"><span data-stu-id="6407e-330">Romanian (Mac)</span></span>|||  
|<span data-ttu-id="6407e-331">10017</span><span class="sxs-lookup"><span data-stu-id="6407e-331">10017</span></span>|<span data-ttu-id="6407e-332">x-mac украинский</span><span class="sxs-lookup"><span data-stu-id="6407e-332">x-mac-ukrainian</span></span>|<span data-ttu-id="6407e-333">Ukrajinština (Mac)</span><span class="sxs-lookup"><span data-stu-id="6407e-333">Ukrainian (Mac)</span></span>|||  
|<span data-ttu-id="6407e-334">10021</span><span class="sxs-lookup"><span data-stu-id="6407e-334">10021</span></span>|<span data-ttu-id="6407e-335">x-mac тайская</span><span class="sxs-lookup"><span data-stu-id="6407e-335">x-mac-thai</span></span>|<span data-ttu-id="6407e-336">Thajština (Mac)</span><span class="sxs-lookup"><span data-stu-id="6407e-336">Thai (Mac)</span></span>|||  
|<span data-ttu-id="6407e-337">10029</span><span class="sxs-lookup"><span data-stu-id="6407e-337">10029</span></span>|<span data-ttu-id="6407e-338">x-mac-ce</span><span class="sxs-lookup"><span data-stu-id="6407e-338">x-mac-ce</span></span>|<span data-ttu-id="6407e-339">Центрально-европейская (Mac)</span><span class="sxs-lookup"><span data-stu-id="6407e-339">Central European (Mac)</span></span>|||  
|<span data-ttu-id="6407e-340">10079</span><span class="sxs-lookup"><span data-stu-id="6407e-340">10079</span></span>|<span data-ttu-id="6407e-341">x-mac исландская</span><span class="sxs-lookup"><span data-stu-id="6407e-341">x-mac-icelandic</span></span>|<span data-ttu-id="6407e-342">Islandština (Mac)</span><span class="sxs-lookup"><span data-stu-id="6407e-342">Icelandic (Mac)</span></span>|||  
|<span data-ttu-id="6407e-343">10081</span><span class="sxs-lookup"><span data-stu-id="6407e-343">10081</span></span>|<span data-ttu-id="6407e-344">x-mac — турецкий</span><span class="sxs-lookup"><span data-stu-id="6407e-344">x-mac-turkish</span></span>|<span data-ttu-id="6407e-345">Turečtina (Mac)</span><span class="sxs-lookup"><span data-stu-id="6407e-345">Turkish (Mac)</span></span>|||  
|<span data-ttu-id="6407e-346">10082</span><span class="sxs-lookup"><span data-stu-id="6407e-346">10082</span></span>|<span data-ttu-id="6407e-347">x — mac Хорватский</span><span class="sxs-lookup"><span data-stu-id="6407e-347">x-mac-croatian</span></span>|<span data-ttu-id="6407e-348">Хорватский (Mac)</span><span class="sxs-lookup"><span data-stu-id="6407e-348">Croatian (Mac)</span></span>|||  
|<span data-ttu-id="6407e-349">12000</span><span class="sxs-lookup"><span data-stu-id="6407e-349">12000</span></span>|<span data-ttu-id="6407e-350">UTF-32</span><span class="sxs-lookup"><span data-stu-id="6407e-350">utf-32</span></span>|<span data-ttu-id="6407e-351">Юникод (UTF-32)</span><span class="sxs-lookup"><span data-stu-id="6407e-351">Unicode (UTF-32)</span></span>|<span data-ttu-id="6407e-352">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-352">✓</span></span>|<span data-ttu-id="6407e-353">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-353">✓</span></span>|  
|<span data-ttu-id="6407e-354">12001</span><span class="sxs-lookup"><span data-stu-id="6407e-354">12001</span></span>|<span data-ttu-id="6407e-355">utf-32BE</span><span class="sxs-lookup"><span data-stu-id="6407e-355">utf-32BE</span></span>|<span data-ttu-id="6407e-356">Юникод (UTF-32 Big endian)</span><span class="sxs-lookup"><span data-stu-id="6407e-356">Unicode (UTF-32 Big endian)</span></span>|<span data-ttu-id="6407e-357">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-357">✓</span></span>|<span data-ttu-id="6407e-358">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-358">✓</span></span>|  
|<span data-ttu-id="6407e-359">20000</span><span class="sxs-lookup"><span data-stu-id="6407e-359">20000</span></span>|<span data-ttu-id="6407e-360">x китайский CNS</span><span class="sxs-lookup"><span data-stu-id="6407e-360">x-Chinese-CNS</span></span>|<span data-ttu-id="6407e-361">Китайская, традиционное письмо (CNS)</span><span class="sxs-lookup"><span data-stu-id="6407e-361">Chinese Traditional (CNS)</span></span>|||  
|<span data-ttu-id="6407e-362">20001</span><span class="sxs-lookup"><span data-stu-id="6407e-362">20001</span></span>|<span data-ttu-id="6407e-363">x-cp20001</span><span class="sxs-lookup"><span data-stu-id="6407e-363">x-cp20001</span></span>|<span data-ttu-id="6407e-364">TCA Taiwan</span><span class="sxs-lookup"><span data-stu-id="6407e-364">TCA Taiwan</span></span>|||  
|<span data-ttu-id="6407e-365">20002</span><span class="sxs-lookup"><span data-stu-id="6407e-365">20002</span></span>|<span data-ttu-id="6407e-366">Китайский x-Eten</span><span class="sxs-lookup"><span data-stu-id="6407e-366">x-Chinese-Eten</span></span>|<span data-ttu-id="6407e-367">Китайский традиционный (письмо Eten)</span><span class="sxs-lookup"><span data-stu-id="6407e-367">Chinese Traditional (Eten)</span></span>|||  
|<span data-ttu-id="6407e-368">20003</span><span class="sxs-lookup"><span data-stu-id="6407e-368">20003</span></span>|<span data-ttu-id="6407e-369">x-cp20003</span><span class="sxs-lookup"><span data-stu-id="6407e-369">x-cp20003</span></span>|<span data-ttu-id="6407e-370">Тайвань IBM5550</span><span class="sxs-lookup"><span data-stu-id="6407e-370">IBM5550 Taiwan</span></span>|||  
|<span data-ttu-id="6407e-371">20004</span><span class="sxs-lookup"><span data-stu-id="6407e-371">20004</span></span>|<span data-ttu-id="6407e-372">x-cp20004</span><span class="sxs-lookup"><span data-stu-id="6407e-372">x-cp20004</span></span>|<span data-ttu-id="6407e-373">Тайвань телетекста</span><span class="sxs-lookup"><span data-stu-id="6407e-373">TeleText Taiwan</span></span>|||  
|<span data-ttu-id="6407e-374">20005</span><span class="sxs-lookup"><span data-stu-id="6407e-374">20005</span></span>|<span data-ttu-id="6407e-375">x-cp20005</span><span class="sxs-lookup"><span data-stu-id="6407e-375">x-cp20005</span></span>|<span data-ttu-id="6407e-376">Tchaj-WAN</span><span class="sxs-lookup"><span data-stu-id="6407e-376">Wang Taiwan</span></span>|||  
|<span data-ttu-id="6407e-377">20105</span><span class="sxs-lookup"><span data-stu-id="6407e-377">20105</span></span>|<span data-ttu-id="6407e-378">x-IA5</span><span class="sxs-lookup"><span data-stu-id="6407e-378">x-IA5</span></span>|<span data-ttu-id="6407e-379">Западно-европейская (IA5)</span><span class="sxs-lookup"><span data-stu-id="6407e-379">Western European (IA5)</span></span>|||  
|<span data-ttu-id="6407e-380">20106</span><span class="sxs-lookup"><span data-stu-id="6407e-380">20106</span></span>|<span data-ttu-id="6407e-381">x — IA5 — немецкий</span><span class="sxs-lookup"><span data-stu-id="6407e-381">x-IA5-German</span></span>|<span data-ttu-id="6407e-382">Němčina (IA5)</span><span class="sxs-lookup"><span data-stu-id="6407e-382">German (IA5)</span></span>|||  
|<span data-ttu-id="6407e-383">20107</span><span class="sxs-lookup"><span data-stu-id="6407e-383">20107</span></span>|<span data-ttu-id="6407e-384">x-IA5 — шведский</span><span class="sxs-lookup"><span data-stu-id="6407e-384">x-IA5-Swedish</span></span>|<span data-ttu-id="6407e-385">Шведская (IA5)</span><span class="sxs-lookup"><span data-stu-id="6407e-385">Swedish (IA5)</span></span>|||  
|<span data-ttu-id="6407e-386">20108</span><span class="sxs-lookup"><span data-stu-id="6407e-386">20108</span></span>|<span data-ttu-id="6407e-387">x-IA5 — норвежский</span><span class="sxs-lookup"><span data-stu-id="6407e-387">x-IA5-Norwegian</span></span>|<span data-ttu-id="6407e-388">Norština (IA5)</span><span class="sxs-lookup"><span data-stu-id="6407e-388">Norwegian (IA5)</span></span>|||  
|<span data-ttu-id="6407e-389">20127</span><span class="sxs-lookup"><span data-stu-id="6407e-389">20127</span></span>|<span data-ttu-id="6407e-390">us-ascii</span><span class="sxs-lookup"><span data-stu-id="6407e-390">us-ascii</span></span>|<span data-ttu-id="6407e-391">US-ASCII</span><span class="sxs-lookup"><span data-stu-id="6407e-391">US-ASCII</span></span>|<span data-ttu-id="6407e-392">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-392">✓</span></span>|<span data-ttu-id="6407e-393">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-393">✓</span></span>|  
|<span data-ttu-id="6407e-394">20261</span><span class="sxs-lookup"><span data-stu-id="6407e-394">20261</span></span>|<span data-ttu-id="6407e-395">x-cp20261</span><span class="sxs-lookup"><span data-stu-id="6407e-395">x-cp20261</span></span>|<span data-ttu-id="6407e-396">T.61</span><span class="sxs-lookup"><span data-stu-id="6407e-396">T.61</span></span>|||  
|<span data-ttu-id="6407e-397">20269</span><span class="sxs-lookup"><span data-stu-id="6407e-397">20269</span></span>|<span data-ttu-id="6407e-398">x-cp20269</span><span class="sxs-lookup"><span data-stu-id="6407e-398">x-cp20269</span></span>|<span data-ttu-id="6407e-399">ISO-6937</span><span class="sxs-lookup"><span data-stu-id="6407e-399">ISO-6937</span></span>|||  
|<span data-ttu-id="6407e-400">20273</span><span class="sxs-lookup"><span data-stu-id="6407e-400">20273</span></span>|<span data-ttu-id="6407e-401">IBM273</span><span class="sxs-lookup"><span data-stu-id="6407e-401">IBM273</span></span>|<span data-ttu-id="6407e-402">IBM EBCDIC (Германия)</span><span class="sxs-lookup"><span data-stu-id="6407e-402">IBM EBCDIC (Germany)</span></span>|||  
|<span data-ttu-id="6407e-403">20277</span><span class="sxs-lookup"><span data-stu-id="6407e-403">20277</span></span>|<span data-ttu-id="6407e-404">IBM277</span><span class="sxs-lookup"><span data-stu-id="6407e-404">IBM277</span></span>|<span data-ttu-id="6407e-405">IBM EBCDIC (Дания Норвегия)</span><span class="sxs-lookup"><span data-stu-id="6407e-405">IBM EBCDIC (Denmark-Norway)</span></span>|||  
|<span data-ttu-id="6407e-406">20278</span><span class="sxs-lookup"><span data-stu-id="6407e-406">20278</span></span>|<span data-ttu-id="6407e-407">IBM278</span><span class="sxs-lookup"><span data-stu-id="6407e-407">IBM278</span></span>|<span data-ttu-id="6407e-408">IBM EBCDIC (Финляндия Швеция)</span><span class="sxs-lookup"><span data-stu-id="6407e-408">IBM EBCDIC (Finland-Sweden)</span></span>|||  
|<span data-ttu-id="6407e-409">20280</span><span class="sxs-lookup"><span data-stu-id="6407e-409">20280</span></span>|<span data-ttu-id="6407e-410">IBM280</span><span class="sxs-lookup"><span data-stu-id="6407e-410">IBM280</span></span>|<span data-ttu-id="6407e-411">IBM EBCDIC (Италия)</span><span class="sxs-lookup"><span data-stu-id="6407e-411">IBM EBCDIC (Italy)</span></span>|||  
|<span data-ttu-id="6407e-412">20284</span><span class="sxs-lookup"><span data-stu-id="6407e-412">20284</span></span>|<span data-ttu-id="6407e-413">IBM284</span><span class="sxs-lookup"><span data-stu-id="6407e-413">IBM284</span></span>|<span data-ttu-id="6407e-414">IBM EBCDIC (Španělsko)</span><span class="sxs-lookup"><span data-stu-id="6407e-414">IBM EBCDIC (Spain)</span></span>|||  
|<span data-ttu-id="6407e-415">20285</span><span class="sxs-lookup"><span data-stu-id="6407e-415">20285</span></span>|<span data-ttu-id="6407e-416">IBM285</span><span class="sxs-lookup"><span data-stu-id="6407e-416">IBM285</span></span>|<span data-ttu-id="6407e-417">IBM EBCDIC (ВЕЛИКОБРИТАНИЯ)</span><span class="sxs-lookup"><span data-stu-id="6407e-417">IBM EBCDIC (UK)</span></span>|||  
|<span data-ttu-id="6407e-418">20290</span><span class="sxs-lookup"><span data-stu-id="6407e-418">20290</span></span>|<span data-ttu-id="6407e-419">IBM290</span><span class="sxs-lookup"><span data-stu-id="6407e-419">IBM290</span></span>|<span data-ttu-id="6407e-420">IBM EBCDIC (Japonsko-katakana)</span><span class="sxs-lookup"><span data-stu-id="6407e-420">IBM EBCDIC (Japanese katakana)</span></span>|||  
|<span data-ttu-id="6407e-421">20297</span><span class="sxs-lookup"><span data-stu-id="6407e-421">20297</span></span>|<span data-ttu-id="6407e-422">IBM297</span><span class="sxs-lookup"><span data-stu-id="6407e-422">IBM297</span></span>|<span data-ttu-id="6407e-423">IBM EBCDIC (Francie)</span><span class="sxs-lookup"><span data-stu-id="6407e-423">IBM EBCDIC (France)</span></span>|||  
|<span data-ttu-id="6407e-424">20420</span><span class="sxs-lookup"><span data-stu-id="6407e-424">20420</span></span>|<span data-ttu-id="6407e-425">IBM420</span><span class="sxs-lookup"><span data-stu-id="6407e-425">IBM420</span></span>|<span data-ttu-id="6407e-426">IBM EBCDIC (арабская)</span><span class="sxs-lookup"><span data-stu-id="6407e-426">IBM EBCDIC (Arabic)</span></span>|||  
|<span data-ttu-id="6407e-427">20423</span><span class="sxs-lookup"><span data-stu-id="6407e-427">20423</span></span>|<span data-ttu-id="6407e-428">IBM423</span><span class="sxs-lookup"><span data-stu-id="6407e-428">IBM423</span></span>|<span data-ttu-id="6407e-429">IBM EBCDIC (Řečtina)</span><span class="sxs-lookup"><span data-stu-id="6407e-429">IBM EBCDIC (Greek)</span></span>|||  
|<span data-ttu-id="6407e-430">20424</span><span class="sxs-lookup"><span data-stu-id="6407e-430">20424</span></span>|<span data-ttu-id="6407e-431">IBM424</span><span class="sxs-lookup"><span data-stu-id="6407e-431">IBM424</span></span>|<span data-ttu-id="6407e-432">IBM EBCDIC (Hebrejština)</span><span class="sxs-lookup"><span data-stu-id="6407e-432">IBM EBCDIC (Hebrew)</span></span>|||  
|<span data-ttu-id="6407e-433">20833</span><span class="sxs-lookup"><span data-stu-id="6407e-433">20833</span></span>|<span data-ttu-id="6407e-434">x-EBCDIC-KoreanExtended</span><span class="sxs-lookup"><span data-stu-id="6407e-434">x-EBCDIC-KoreanExtended</span></span>|<span data-ttu-id="6407e-435">IBM EBCDIC (корейская, расширенное письмо)</span><span class="sxs-lookup"><span data-stu-id="6407e-435">IBM EBCDIC (Korean Extended)</span></span>|||  
|<span data-ttu-id="6407e-436">20838</span><span class="sxs-lookup"><span data-stu-id="6407e-436">20838</span></span>|<span data-ttu-id="6407e-437">Тайский IBM</span><span class="sxs-lookup"><span data-stu-id="6407e-437">IBM-Thai</span></span>|<span data-ttu-id="6407e-438">IBM EBCDIC (Thajština)</span><span class="sxs-lookup"><span data-stu-id="6407e-438">IBM EBCDIC (Thai)</span></span>|||  
|<span data-ttu-id="6407e-439">20866</span><span class="sxs-lookup"><span data-stu-id="6407e-439">20866</span></span>|<span data-ttu-id="6407e-440">KOI8-r</span><span class="sxs-lookup"><span data-stu-id="6407e-440">koi8-r</span></span>|<span data-ttu-id="6407e-441">Кириллица (KOI8-R)</span><span class="sxs-lookup"><span data-stu-id="6407e-441">Cyrillic (KOI8-R)</span></span>|||  
|<span data-ttu-id="6407e-442">20871</span><span class="sxs-lookup"><span data-stu-id="6407e-442">20871</span></span>|<span data-ttu-id="6407e-443">IBM871</span><span class="sxs-lookup"><span data-stu-id="6407e-443">IBM871</span></span>|<span data-ttu-id="6407e-444">IBM EBCDIC (Islandština)</span><span class="sxs-lookup"><span data-stu-id="6407e-444">IBM EBCDIC (Icelandic)</span></span>|||  
|<span data-ttu-id="6407e-445">20880</span><span class="sxs-lookup"><span data-stu-id="6407e-445">20880</span></span>|<span data-ttu-id="6407e-446">IBM880</span><span class="sxs-lookup"><span data-stu-id="6407e-446">IBM880</span></span>|<span data-ttu-id="6407e-447">IBM EBCDIC (кириллица, русский)</span><span class="sxs-lookup"><span data-stu-id="6407e-447">IBM EBCDIC (Cyrillic Russian)</span></span>|||  
|<span data-ttu-id="6407e-448">20905</span><span class="sxs-lookup"><span data-stu-id="6407e-448">20905</span></span>|<span data-ttu-id="6407e-449">IBM905</span><span class="sxs-lookup"><span data-stu-id="6407e-449">IBM905</span></span>|<span data-ttu-id="6407e-450">IBM EBCDIC (Turečtina)</span><span class="sxs-lookup"><span data-stu-id="6407e-450">IBM EBCDIC (Turkish)</span></span>|||  
|<span data-ttu-id="6407e-451">20924</span><span class="sxs-lookup"><span data-stu-id="6407e-451">20924</span></span>|<span data-ttu-id="6407e-452">IBM00924</span><span class="sxs-lookup"><span data-stu-id="6407e-452">IBM00924</span></span>|<span data-ttu-id="6407e-453">IBM Latin 1</span><span class="sxs-lookup"><span data-stu-id="6407e-453">IBM Latin-1</span></span>|||  
|<span data-ttu-id="6407e-454">20932</span><span class="sxs-lookup"><span data-stu-id="6407e-454">20932</span></span>|<span data-ttu-id="6407e-455">EUC-JP</span><span class="sxs-lookup"><span data-stu-id="6407e-455">EUC-JP</span></span>|<span data-ttu-id="6407e-456">Японская (JIS 0208-1990 и 0212-1990)</span><span class="sxs-lookup"><span data-stu-id="6407e-456">Japanese (JIS 0208-1990 and 0212-1990)</span></span>|||  
|<span data-ttu-id="6407e-457">20936</span><span class="sxs-lookup"><span data-stu-id="6407e-457">20936</span></span>|<span data-ttu-id="6407e-458">x-cp20936</span><span class="sxs-lookup"><span data-stu-id="6407e-458">x-cp20936</span></span>|<span data-ttu-id="6407e-459">Китайский, упрощенное письмо (GB2312-80)</span><span class="sxs-lookup"><span data-stu-id="6407e-459">Chinese Simplified (GB2312-80)</span></span>|<span data-ttu-id="6407e-460">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-460">✓</span></span>||  
|<span data-ttu-id="6407e-461">20949</span><span class="sxs-lookup"><span data-stu-id="6407e-461">20949</span></span>|<span data-ttu-id="6407e-462">x-cp20949</span><span class="sxs-lookup"><span data-stu-id="6407e-462">x-cp20949</span></span>|<span data-ttu-id="6407e-463">Корейская, вансун</span><span class="sxs-lookup"><span data-stu-id="6407e-463">Korean Wansung</span></span>|<span data-ttu-id="6407e-464">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-464">✓</span></span>||  
|<span data-ttu-id="6407e-465">21025</span><span class="sxs-lookup"><span data-stu-id="6407e-465">21025</span></span>|<span data-ttu-id="6407e-466">cp1025</span><span class="sxs-lookup"><span data-stu-id="6407e-466">cp1025</span></span>|<span data-ttu-id="6407e-467">IBM EBCDIC (кириллица, сербский, болгарский)</span><span class="sxs-lookup"><span data-stu-id="6407e-467">IBM EBCDIC (Cyrillic Serbian-Bulgarian)</span></span>|||  
|<span data-ttu-id="6407e-468">21866</span><span class="sxs-lookup"><span data-stu-id="6407e-468">21866</span></span>|<span data-ttu-id="6407e-469">KOI8-u</span><span class="sxs-lookup"><span data-stu-id="6407e-469">koi8-u</span></span>|<span data-ttu-id="6407e-470">Кириллица (КОИ8 U)</span><span class="sxs-lookup"><span data-stu-id="6407e-470">Cyrillic (KOI8-U)</span></span>|||  
|<span data-ttu-id="6407e-471">28591</span><span class="sxs-lookup"><span data-stu-id="6407e-471">28591</span></span>|<span data-ttu-id="6407e-472">ISO-8859-1</span><span class="sxs-lookup"><span data-stu-id="6407e-472">iso-8859-1</span></span>|<span data-ttu-id="6407e-473">Западно-европейская (ISO)</span><span class="sxs-lookup"><span data-stu-id="6407e-473">Western European (ISO)</span></span>|<span data-ttu-id="6407e-474">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-474">✓</span></span>|<span data-ttu-id="6407e-475">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-475">✓</span></span>|  
|<span data-ttu-id="6407e-476">28592</span><span class="sxs-lookup"><span data-stu-id="6407e-476">28592</span></span>|<span data-ttu-id="6407e-477">ISO-8859-2</span><span class="sxs-lookup"><span data-stu-id="6407e-477">iso-8859-2</span></span>|<span data-ttu-id="6407e-478">Центрально-европейская (ISO)</span><span class="sxs-lookup"><span data-stu-id="6407e-478">Central European (ISO)</span></span>|||  
|<span data-ttu-id="6407e-479">28593</span><span class="sxs-lookup"><span data-stu-id="6407e-479">28593</span></span>|<span data-ttu-id="6407e-480">ISO-8859-3</span><span class="sxs-lookup"><span data-stu-id="6407e-480">iso-8859-3</span></span>|<span data-ttu-id="6407e-481">Латиница-3 (ISO)</span><span class="sxs-lookup"><span data-stu-id="6407e-481">Latin 3 (ISO)</span></span>|||  
|<span data-ttu-id="6407e-482">28594</span><span class="sxs-lookup"><span data-stu-id="6407e-482">28594</span></span>|<span data-ttu-id="6407e-483">ISO-8859-4</span><span class="sxs-lookup"><span data-stu-id="6407e-483">iso-8859-4</span></span>|<span data-ttu-id="6407e-484">Балтийская (ISO)</span><span class="sxs-lookup"><span data-stu-id="6407e-484">Baltic (ISO)</span></span>|||  
|<span data-ttu-id="6407e-485">28595</span><span class="sxs-lookup"><span data-stu-id="6407e-485">28595</span></span>|<span data-ttu-id="6407e-486">ISO-8859-5</span><span class="sxs-lookup"><span data-stu-id="6407e-486">iso-8859-5</span></span>|<span data-ttu-id="6407e-487">Cyrilice (ISO)</span><span class="sxs-lookup"><span data-stu-id="6407e-487">Cyrillic (ISO)</span></span>|||  
|<span data-ttu-id="6407e-488">28596</span><span class="sxs-lookup"><span data-stu-id="6407e-488">28596</span></span>|<span data-ttu-id="6407e-489">ISO-8859-6</span><span class="sxs-lookup"><span data-stu-id="6407e-489">iso-8859-6</span></span>|<span data-ttu-id="6407e-490">Arabština (ISO)</span><span class="sxs-lookup"><span data-stu-id="6407e-490">Arabic (ISO)</span></span>|||  
|<span data-ttu-id="6407e-491">28597</span><span class="sxs-lookup"><span data-stu-id="6407e-491">28597</span></span>|<span data-ttu-id="6407e-492">ISO-8859-7</span><span class="sxs-lookup"><span data-stu-id="6407e-492">iso-8859-7</span></span>|<span data-ttu-id="6407e-493">Řečtina (ISO)</span><span class="sxs-lookup"><span data-stu-id="6407e-493">Greek (ISO)</span></span>|||  
|<span data-ttu-id="6407e-494">28598</span><span class="sxs-lookup"><span data-stu-id="6407e-494">28598</span></span>|<span data-ttu-id="6407e-495">ISO-8859-8</span><span class="sxs-lookup"><span data-stu-id="6407e-495">iso-8859-8</span></span>|<span data-ttu-id="6407e-496">Иврит (ISO-Visual)</span><span class="sxs-lookup"><span data-stu-id="6407e-496">Hebrew (ISO-Visual)</span></span>|<span data-ttu-id="6407e-497">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-497">✓</span></span>||  
|<span data-ttu-id="6407e-498">28599</span><span class="sxs-lookup"><span data-stu-id="6407e-498">28599</span></span>|<span data-ttu-id="6407e-499">ISO-8859-9</span><span class="sxs-lookup"><span data-stu-id="6407e-499">iso-8859-9</span></span>|<span data-ttu-id="6407e-500">Turečtina (ISO)</span><span class="sxs-lookup"><span data-stu-id="6407e-500">Turkish (ISO)</span></span>|||  
|<span data-ttu-id="6407e-501">28603</span><span class="sxs-lookup"><span data-stu-id="6407e-501">28603</span></span>|<span data-ttu-id="6407e-502">ISO-8859-13</span><span class="sxs-lookup"><span data-stu-id="6407e-502">iso-8859-13</span></span>|<span data-ttu-id="6407e-503">Estonština (ISO)</span><span class="sxs-lookup"><span data-stu-id="6407e-503">Estonian (ISO)</span></span>|||  
|<span data-ttu-id="6407e-504">28605</span><span class="sxs-lookup"><span data-stu-id="6407e-504">28605</span></span>|<span data-ttu-id="6407e-505">ISO-8859-15</span><span class="sxs-lookup"><span data-stu-id="6407e-505">iso-8859-15</span></span>|<span data-ttu-id="6407e-506">Латиница 9 (ISO)</span><span class="sxs-lookup"><span data-stu-id="6407e-506">Latin 9 (ISO)</span></span>|||  
|<span data-ttu-id="6407e-507">29001</span><span class="sxs-lookup"><span data-stu-id="6407e-507">29001</span></span>|<span data-ttu-id="6407e-508">x-Europa</span><span class="sxs-lookup"><span data-stu-id="6407e-508">x-Europa</span></span>|<span data-ttu-id="6407e-509">Европа</span><span class="sxs-lookup"><span data-stu-id="6407e-509">Europa</span></span>|||  
|<span data-ttu-id="6407e-510">38598</span><span class="sxs-lookup"><span data-stu-id="6407e-510">38598</span></span>|<span data-ttu-id="6407e-511">ISO-8859-8-i</span><span class="sxs-lookup"><span data-stu-id="6407e-511">iso-8859-8-i</span></span>|<span data-ttu-id="6407e-512">Иврит (ISO-Logical)</span><span class="sxs-lookup"><span data-stu-id="6407e-512">Hebrew (ISO-Logical)</span></span>|<span data-ttu-id="6407e-513">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-513">✓</span></span>||  
|<span data-ttu-id="6407e-514">50220</span><span class="sxs-lookup"><span data-stu-id="6407e-514">50220</span></span>|<span data-ttu-id="6407e-515">ISO-2022-jp</span><span class="sxs-lookup"><span data-stu-id="6407e-515">iso-2022-jp</span></span>|<span data-ttu-id="6407e-516">Японская (JIS)</span><span class="sxs-lookup"><span data-stu-id="6407e-516">Japanese (JIS)</span></span>|<span data-ttu-id="6407e-517">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-517">✓</span></span>||  
|<span data-ttu-id="6407e-518">50221</span><span class="sxs-lookup"><span data-stu-id="6407e-518">50221</span></span>|<span data-ttu-id="6407e-519">csISO2022JP</span><span class="sxs-lookup"><span data-stu-id="6407e-519">csISO2022JP</span></span>|<span data-ttu-id="6407e-520">Японская (JIS-Povolen 1 bajt Kana)</span><span class="sxs-lookup"><span data-stu-id="6407e-520">Japanese (JIS-Allow 1 byte Kana)</span></span>|<span data-ttu-id="6407e-521">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-521">✓</span></span>||  
|<span data-ttu-id="6407e-522">50222</span><span class="sxs-lookup"><span data-stu-id="6407e-522">50222</span></span>|<span data-ttu-id="6407e-523">ISO-2022-jp</span><span class="sxs-lookup"><span data-stu-id="6407e-523">iso-2022-jp</span></span>|<span data-ttu-id="6407e-524">Японская (JIS-Povolen 1 bajt Kana - поэтому / SI)</span><span class="sxs-lookup"><span data-stu-id="6407e-524">Japanese (JIS-Allow 1 byte Kana - SO/SI)</span></span>|<span data-ttu-id="6407e-525">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-525">✓</span></span>||  
|<span data-ttu-id="6407e-526">50225</span><span class="sxs-lookup"><span data-stu-id="6407e-526">50225</span></span>|<span data-ttu-id="6407e-527">ISO-2022-kr</span><span class="sxs-lookup"><span data-stu-id="6407e-527">iso-2022-kr</span></span>|<span data-ttu-id="6407e-528">Корейская (ISO)</span><span class="sxs-lookup"><span data-stu-id="6407e-528">Korean (ISO)</span></span>|<span data-ttu-id="6407e-529">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-529">✓</span></span>||  
|<span data-ttu-id="6407e-530">50227</span><span class="sxs-lookup"><span data-stu-id="6407e-530">50227</span></span>|<span data-ttu-id="6407e-531">x-cp50227</span><span class="sxs-lookup"><span data-stu-id="6407e-531">x-cp50227</span></span>|<span data-ttu-id="6407e-532">Китайский, упрощенное письмо (ISO-2022)</span><span class="sxs-lookup"><span data-stu-id="6407e-532">Chinese Simplified (ISO-2022)</span></span>|<span data-ttu-id="6407e-533">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-533">✓</span></span>||  
|<span data-ttu-id="6407e-534">51932</span><span class="sxs-lookup"><span data-stu-id="6407e-534">51932</span></span>|<span data-ttu-id="6407e-535">euc-jp</span><span class="sxs-lookup"><span data-stu-id="6407e-535">euc-jp</span></span>|<span data-ttu-id="6407e-536">Japonština (EUC)</span><span class="sxs-lookup"><span data-stu-id="6407e-536">Japanese (EUC)</span></span>|<span data-ttu-id="6407e-537">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-537">✓</span></span>||  
|<span data-ttu-id="6407e-538">51936</span><span class="sxs-lookup"><span data-stu-id="6407e-538">51936</span></span>|<span data-ttu-id="6407e-539">EUC-CN</span><span class="sxs-lookup"><span data-stu-id="6407e-539">EUC-CN</span></span>|<span data-ttu-id="6407e-540">Китайский, упрощенное письмо (EUC)</span><span class="sxs-lookup"><span data-stu-id="6407e-540">Chinese Simplified (EUC)</span></span>|<span data-ttu-id="6407e-541">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-541">✓</span></span>||  
|<span data-ttu-id="6407e-542">51949</span><span class="sxs-lookup"><span data-stu-id="6407e-542">51949</span></span>|<span data-ttu-id="6407e-543">EUC-kr</span><span class="sxs-lookup"><span data-stu-id="6407e-543">euc-kr</span></span>|<span data-ttu-id="6407e-544">Korejština (EUC)</span><span class="sxs-lookup"><span data-stu-id="6407e-544">Korean (EUC)</span></span>|<span data-ttu-id="6407e-545">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-545">✓</span></span>||  
|<span data-ttu-id="6407e-546">52936</span><span class="sxs-lookup"><span data-stu-id="6407e-546">52936</span></span>|<span data-ttu-id="6407e-547">Гц gb-2312</span><span class="sxs-lookup"><span data-stu-id="6407e-547">hz-gb-2312</span></span>|<span data-ttu-id="6407e-548">Китайский, упрощенное письмо (HZ)</span><span class="sxs-lookup"><span data-stu-id="6407e-548">Chinese Simplified (HZ)</span></span>|<span data-ttu-id="6407e-549">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-549">✓</span></span>||  
|<span data-ttu-id="6407e-550">54936</span><span class="sxs-lookup"><span data-stu-id="6407e-550">54936</span></span>|<span data-ttu-id="6407e-551">GB18030</span><span class="sxs-lookup"><span data-stu-id="6407e-551">GB18030</span></span>|<span data-ttu-id="6407e-552">Китайская упрощенная (GB18030)</span><span class="sxs-lookup"><span data-stu-id="6407e-552">Chinese Simplified (GB18030)</span></span>|<span data-ttu-id="6407e-553">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-553">✓</span></span>||  
|<span data-ttu-id="6407e-554">57002</span><span class="sxs-lookup"><span data-stu-id="6407e-554">57002</span></span>|<span data-ttu-id="6407e-555">x-iscii-de</span><span class="sxs-lookup"><span data-stu-id="6407e-555">x-iscii-de</span></span>|<span data-ttu-id="6407e-556">ISCII девангари</span><span class="sxs-lookup"><span data-stu-id="6407e-556">ISCII Devanagari</span></span>|<span data-ttu-id="6407e-557">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-557">✓</span></span>||  
|<span data-ttu-id="6407e-558">57003</span><span class="sxs-lookup"><span data-stu-id="6407e-558">57003</span></span>|<span data-ttu-id="6407e-559">x-iscii-be</span><span class="sxs-lookup"><span data-stu-id="6407e-559">x-iscii-be</span></span>|<span data-ttu-id="6407e-560">ISCII Бенгальский</span><span class="sxs-lookup"><span data-stu-id="6407e-560">ISCII Bengali</span></span>|<span data-ttu-id="6407e-561">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-561">✓</span></span>||  
|<span data-ttu-id="6407e-562">57004</span><span class="sxs-lookup"><span data-stu-id="6407e-562">57004</span></span>|<span data-ttu-id="6407e-563">x-iscii-ta</span><span class="sxs-lookup"><span data-stu-id="6407e-563">x-iscii-ta</span></span>|<span data-ttu-id="6407e-564">ISCII-Tamilština</span><span class="sxs-lookup"><span data-stu-id="6407e-564">ISCII Tamil</span></span>|<span data-ttu-id="6407e-565">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-565">✓</span></span>||  
|<span data-ttu-id="6407e-566">57005</span><span class="sxs-lookup"><span data-stu-id="6407e-566">57005</span></span>|<span data-ttu-id="6407e-567">x-iscii-te</span><span class="sxs-lookup"><span data-stu-id="6407e-567">x-iscii-te</span></span>|<span data-ttu-id="6407e-568">ISCII-Telugština</span><span class="sxs-lookup"><span data-stu-id="6407e-568">ISCII Telugu</span></span>|<span data-ttu-id="6407e-569">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-569">✓</span></span>||  
|<span data-ttu-id="6407e-570">57006</span><span class="sxs-lookup"><span data-stu-id="6407e-570">57006</span></span>|<span data-ttu-id="6407e-571">x-iscii-as</span><span class="sxs-lookup"><span data-stu-id="6407e-571">x-iscii-as</span></span>|<span data-ttu-id="6407e-572">ISCII ассамская</span><span class="sxs-lookup"><span data-stu-id="6407e-572">ISCII Assamese</span></span>|<span data-ttu-id="6407e-573">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-573">✓</span></span>||  
|<span data-ttu-id="6407e-574">57007</span><span class="sxs-lookup"><span data-stu-id="6407e-574">57007</span></span>|<span data-ttu-id="6407e-575">или x iscii</span><span class="sxs-lookup"><span data-stu-id="6407e-575">x-iscii-or</span></span>|<span data-ttu-id="6407e-576">ISCII-Urijština</span><span class="sxs-lookup"><span data-stu-id="6407e-576">ISCII Oriya</span></span>|<span data-ttu-id="6407e-577">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-577">✓</span></span>||  
|<span data-ttu-id="6407e-578">57008</span><span class="sxs-lookup"><span data-stu-id="6407e-578">57008</span></span>|<span data-ttu-id="6407e-579">iscii-x ка</span><span class="sxs-lookup"><span data-stu-id="6407e-579">x-iscii-ka</span></span>|<span data-ttu-id="6407e-580">ISCII-Kannadština</span><span class="sxs-lookup"><span data-stu-id="6407e-580">ISCII Kannada</span></span>|<span data-ttu-id="6407e-581">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-581">✓</span></span>||  
|<span data-ttu-id="6407e-582">57009</span><span class="sxs-lookup"><span data-stu-id="6407e-582">57009</span></span>|<span data-ttu-id="6407e-583">iscii-x-ma</span><span class="sxs-lookup"><span data-stu-id="6407e-583">x-iscii-ma</span></span>|<span data-ttu-id="6407e-584">ISCII Малайалам</span><span class="sxs-lookup"><span data-stu-id="6407e-584">ISCII Malayalam</span></span>|<span data-ttu-id="6407e-585">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-585">✓</span></span>||  
|<span data-ttu-id="6407e-586">57010</span><span class="sxs-lookup"><span data-stu-id="6407e-586">57010</span></span>|<span data-ttu-id="6407e-587">iscii-x-gu</span><span class="sxs-lookup"><span data-stu-id="6407e-587">x-iscii-gu</span></span>|<span data-ttu-id="6407e-588">ISCII Гухарати</span><span class="sxs-lookup"><span data-stu-id="6407e-588">ISCII Gujarati</span></span>|<span data-ttu-id="6407e-589">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-589">✓</span></span>||  
|<span data-ttu-id="6407e-590">57011</span><span class="sxs-lookup"><span data-stu-id="6407e-590">57011</span></span>|<span data-ttu-id="6407e-591">x-iscii-pa</span><span class="sxs-lookup"><span data-stu-id="6407e-591">x-iscii-pa</span></span>|<span data-ttu-id="6407e-592">ISCII Пунджаби</span><span class="sxs-lookup"><span data-stu-id="6407e-592">ISCII Punjabi</span></span>|<span data-ttu-id="6407e-593">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-593">✓</span></span>||  
|<span data-ttu-id="6407e-594">65000</span><span class="sxs-lookup"><span data-stu-id="6407e-594">65000</span></span>|<span data-ttu-id="6407e-595">utf-7</span><span class="sxs-lookup"><span data-stu-id="6407e-595">utf-7</span></span>|<span data-ttu-id="6407e-596">Юникод (UTF-7)</span><span class="sxs-lookup"><span data-stu-id="6407e-596">Unicode (UTF-7)</span></span>|<span data-ttu-id="6407e-597">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-597">✓</span></span>|<span data-ttu-id="6407e-598">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-598">✓</span></span>|  
|<span data-ttu-id="6407e-599">65001</span><span class="sxs-lookup"><span data-stu-id="6407e-599">65001</span></span>|<span data-ttu-id="6407e-600">utf-8</span><span class="sxs-lookup"><span data-stu-id="6407e-600">utf-8</span></span>|<span data-ttu-id="6407e-601">Юникод (UTF-8)</span><span class="sxs-lookup"><span data-stu-id="6407e-601">Unicode (UTF-8)</span></span>|<span data-ttu-id="6407e-602">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-602">✓</span></span>|<span data-ttu-id="6407e-603">✓</span><span class="sxs-lookup"><span data-stu-id="6407e-603">✓</span></span>|  
  
 <span data-ttu-id="6407e-604">В следующем примере вызывается <xref:System.Text.Encoding.GetEncoding%28System.Int32%29> и <xref:System.Text.Encoding.GetEncoding%28System.String%29> методы получения греческий (Windows) кода страницы кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-604">The following example calls the <xref:System.Text.Encoding.GetEncoding%28System.Int32%29> and <xref:System.Text.Encoding.GetEncoding%28System.String%29> methods to get the Greek (Windows) code page encoding.</span></span> <span data-ttu-id="6407e-605">Он сравнивает <xref:System.Text.Encoding> объектов, возвращенных вызовы методов, чтобы показать, что они равны, и затем отображает карты кодовая точка Юникода и значение соответствующей кодовой страницы для каждого символа в греческого алфавита.</span><span class="sxs-lookup"><span data-stu-id="6407e-605">It compares the <xref:System.Text.Encoding> objects returned by the method calls to show that they are equal, and then maps displays the Unicode code point and the corresponding code page value for each character in the Greek alphabet.</span></span>  
  
 [!code-csharp[System.Text.Encoding#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding/cs/getencoding1.cs#1)]
 [!code-vb[System.Text.Encoding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding/vb/getencoding1.vb#1)]  
  
 <span data-ttu-id="6407e-606">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных слишком велико, что ему следует разделить на небольшие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.Encoding.GetDecoder%2A> метод или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="6407e-606">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="6407e-607">UTF-16 и UTF-32 кодировщикам, которые можно использовать обратный порядок байтов (самый старший байт первого) или прямой порядок байтов (младший байт первый).</span><span class="sxs-lookup"><span data-stu-id="6407e-607">The UTF-16 and the UTF-32 encoders can use the big endian byte order (most significant byte first) or the little endian byte order (least significant byte first).</span></span> <span data-ttu-id="6407e-608">Например прописная латинская буква (U + 0041) сериализуется как следующим образом (в шестнадцатеричном формате):</span><span class="sxs-lookup"><span data-stu-id="6407e-608">For example, the Latin Capital Letter A (U+0041) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="6407e-609">UTF-16 обратный порядок байтов: 00 41</span><span class="sxs-lookup"><span data-stu-id="6407e-609">UTF-16 big endian byte order: 00 41</span></span>  
  
-   <span data-ttu-id="6407e-610">Прямой порядок байтов UTF-16: 41 00</span><span class="sxs-lookup"><span data-stu-id="6407e-610">UTF-16 little endian byte order: 41 00</span></span>  
  
-   <span data-ttu-id="6407e-611">UTF-32 обратный порядок байтов: 00 00 00 41</span><span class="sxs-lookup"><span data-stu-id="6407e-611">UTF-32 big endian byte order: 00 00 00 41</span></span>  
  
-   <span data-ttu-id="6407e-612">Прямой порядок байтов UTF-32: 41 00 00 00</span><span class="sxs-lookup"><span data-stu-id="6407e-612">UTF-32 little endian byte order: 41 00 00 00</span></span>  
  
 <span data-ttu-id="6407e-613">Он обычно более эффективен для хранения символов Юникода, с помощью собственного порядка байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-613">It is generally more efficient to store Unicode characters using the native byte order.</span></span> <span data-ttu-id="6407e-614">Например лучше использовать прямой порядок байтов на платформах с прямым порядком, таких как компьютеры Intel.</span><span class="sxs-lookup"><span data-stu-id="6407e-614">For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</span></span>  
  
 <span data-ttu-id="6407e-615"><xref:System.Text.Encoding.GetPreamble%2A> Метод получает массив байтов, который включает в себя отметки порядка байтов (BOM).</span><span class="sxs-lookup"><span data-stu-id="6407e-615">The <xref:System.Text.Encoding.GetPreamble%2A> method retrieves an array of bytes that includes the byte order mark (BOM).</span></span> <span data-ttu-id="6407e-616">Если этот массив байтов, отмеченную в поток с кодировкой, декодер для идентификации используемый формат кодирования.</span><span class="sxs-lookup"><span data-stu-id="6407e-616">If this byte array is prefixed to an encoded stream, it helps the decoder to identify the encoding format used.</span></span>  
  
 <span data-ttu-id="6407e-617">Дополнительные сведения о порядке байтов и отметки порядка байтов, см. в разделе стандарта Юникод на [домашней странице Юникода](https://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="6407e-617">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](https://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
 <span data-ttu-id="6407e-618">Обратите внимание, что классы кодировок допускают ошибки:</span><span class="sxs-lookup"><span data-stu-id="6407e-618">Note that the encoding classes allow errors to:</span></span>  
  
-   <span data-ttu-id="6407e-619">Без предупреждения изменять для «?» символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-619">Silently change to a "?" character.</span></span>  
  
-   <span data-ttu-id="6407e-620">Используйте символ «best fit».</span><span class="sxs-lookup"><span data-stu-id="6407e-620">Use a "best fit" character.</span></span>  
  
-   <span data-ttu-id="6407e-621">Изменить на поведение конкретного приложения с помощью <xref:System.Text.EncoderFallback> и <xref:System.Text.DecoderFallback> классы с замещающий символ U + FFFD Юникода.</span><span class="sxs-lookup"><span data-stu-id="6407e-621">Change to an application-specific behavior through use of the <xref:System.Text.EncoderFallback> and <xref:System.Text.DecoderFallback> classes with the U+FFFD Unicode replacement character.</span></span>  
  
 <span data-ttu-id="6407e-622">Должен создавать исключение в случае любой ошибки потока данных.</span><span class="sxs-lookup"><span data-stu-id="6407e-622">You should throw an exception on any data stream error.</span></span> <span data-ttu-id="6407e-623">Приложение использует флаг «throwonerror», если это применимо, или использует <xref:System.Text.EncoderExceptionFallback> и <xref:System.Text.DecoderExceptionFallback> классы.</span><span class="sxs-lookup"><span data-stu-id="6407e-623">An app either uses a "throwonerror" flag when applicable or uses the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.DecoderExceptionFallback> classes.</span></span> <span data-ttu-id="6407e-624">Наиболее подходящая fallback часто не рекомендуется, поскольку он может привести к потере данных или путаницу и выполняется медленнее, чем обычная замена символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-624">Best fit fallback is often not recommended because it can cause data loss or confusion and is slower than simple character replacements.</span></span> <span data-ttu-id="6407e-625">Для кодировки ANSI рекомендуется применять эту стратегию по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="6407e-625">For ANSI encodings, the best fit behavior is the default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-626">Следующий пример преобразует строку из одной кодировки в другую.</span><span class="sxs-lookup"><span data-stu-id="6407e-626">The following example converts a string from one encoding to another.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6407e-627">Массив byte [] является единственным типом в этом примере, который содержит закодированные данные.</span><span class="sxs-lookup"><span data-stu-id="6407e-627">The byte[] array is the only type in this example that contains the encoded data.</span></span> <span data-ttu-id="6407e-628">Типы .NET Char и String, сами Юникода, поэтому <xref:System.Text.Encoding.GetChars%2A> вызов декодирует данные в формат Юникод.</span><span class="sxs-lookup"><span data-stu-id="6407e-628">The .NET Char and String types are themselves Unicode, so the <xref:System.Text.Encoding.GetChars%2A> call decodes the data back to Unicode.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="6407e-629">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="6407e-629">Understanding Encodings</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6407e-630">Инициализирует новый экземпляр класса <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-630">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6407e-631">Инициализирует новый экземпляр класса <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-631">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-632">Производные классы переопределяют этот конструктор.</span><span class="sxs-lookup"><span data-stu-id="6407e-632">Derived classes override this constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoding (int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (codePage As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoding(int codePage);" />
      <MemberSignature Language="F#" Value="new System.Text.Encoding : int -&gt; System.Text.Encoding" Usage="new System.Text.Encoding codePage" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePage"><span data-ttu-id="6407e-633">Идентификатор кодовой страницы предпочтительной кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-633">The code page identifier of the preferred encoding.</span></span>  
  
<span data-ttu-id="6407e-634">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-634">-or-</span></span> 
<span data-ttu-id="6407e-635">0, если требуется использовать кодировку по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="6407e-635">0, to use the default encoding.</span></span></param>
        <summary><span data-ttu-id="6407e-636">Инициализирует новый экземпляр класса <see cref="T:System.Text.Encoding" />, соответствующий заданной кодовой странице.</span><span class="sxs-lookup"><span data-stu-id="6407e-636">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class that corresponds to the specified code page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-637">Производные классы переопределяют этот конструктор.</span><span class="sxs-lookup"><span data-stu-id="6407e-637">Derived classes override this constructor.</span></span>  
  
 <span data-ttu-id="6407e-638">Создать как этот конструктор производного класса <xref:System.Text.Encoding> объект, который использует резервную стратегию наилучшего для кодирования и декодирования операции.</span><span class="sxs-lookup"><span data-stu-id="6407e-638">Calls to this constructor from a derived class create an <xref:System.Text.Encoding> object that uses best-fit fallback for both encoding and decoding operations.</span></span> <span data-ttu-id="6407e-639">Как <xref:System.Text.Encoding.DecoderFallback%2A> и <xref:System.Text.Encoding.EncoderFallback%2A> свойства доступны только для чтения и не может быть изменен.</span><span class="sxs-lookup"><span data-stu-id="6407e-639">Both the <xref:System.Text.Encoding.DecoderFallback%2A> and <xref:System.Text.Encoding.EncoderFallback%2A> properties are read-only and cannot be modified.</span></span> <span data-ttu-id="6407e-640">Для управления резервной стратегии для класса, производного от <xref:System.Text.Encoding>, вызовите <xref:System.Text.Encoding.%23ctor%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="6407e-640">To control the fallback strategy for a class derived from <xref:System.Text.Encoding>, call the <xref:System.Text.Encoding.%23ctor%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6407e-641">Значение параметра <paramref name="codePage" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="6407e-641"><paramref name="codePage" /> is less than zero.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoding (int codePage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 codePage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.#ctor(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoding(int codePage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="new System.Text.Encoding : int * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="new System.Text.Encoding (codePage, encoderFallback, decoderFallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codePage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codePage"><span data-ttu-id="6407e-642">Идентификатор кодовой страницы кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-642">The encoding code page identifier.</span></span></param>
        <param name="encoderFallback"><span data-ttu-id="6407e-643">Объект, предоставляющий процедуру обработки ошибок, когда символ не может быть закодирован с использованием текущей кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-643">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span></span></param>
        <param name="decoderFallback"><span data-ttu-id="6407e-644">Объект, предоставляющий процедуру обработки ошибок, когда последовательность байтов не может быть декодирована с использованием текущей кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-644">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span></span></param>
        <summary><span data-ttu-id="6407e-645">Инициализирует новый экземпляр класса <see cref="T:System.Text.Encoding" />, соответствующий заданной кодовой странице, с использованием указанных стратегий резервирования кодировщика и декодера.</span><span class="sxs-lookup"><span data-stu-id="6407e-645">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class that corresponds to the specified code page with the specified encoder and decoder fallback strategies.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-646">Этот конструктор является `protected`; производные классы переопределяют его.</span><span class="sxs-lookup"><span data-stu-id="6407e-646">This constructor is `protected`; derived classes override it.</span></span>  
  
 <span data-ttu-id="6407e-647">Вызовите этот конструктор производного класса для управления в резервном кодирования и декодирования стратегии.</span><span class="sxs-lookup"><span data-stu-id="6407e-647">You call this constructor from a derived class to control the fallback encoding and decoding strategies.</span></span> <span data-ttu-id="6407e-648"><xref:System.Text.Encoding> Конструкторов классов создать только для чтения объектам кодировок, которые не позволяют кодировщика или резерва декодера, устанавливаемое после создания объекта.</span><span class="sxs-lookup"><span data-stu-id="6407e-648">The <xref:System.Text.Encoding> class constructors create read-only encoding objects that don't allow encoder or decoder fallback to be set after the object is created.</span></span>  
  
 <span data-ttu-id="6407e-649">Если параметр `encoderFallback` или `decoderFallback` имеет значение null, наилучшего используется в качестве соответствующего резервной стратегии.</span><span class="sxs-lookup"><span data-stu-id="6407e-649">If either `encoderFallback` or `decoderFallback` is null, best-fit fallback is used as the corresponding fallback strategy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6407e-650">Значение параметра <paramref name="codePage" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="6407e-650"><paramref name="codePage" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ASCII">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding ASCII { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding ASCII" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.ASCII" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ASCII As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ ASCII { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ASCII : System.Text.Encoding" Usage="System.Text.Encoding.ASCII" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-651">Получает кодировку для набора символов ASCII (7-разрядных).</span><span class="sxs-lookup"><span data-stu-id="6407e-651">Gets an encoding for the ASCII (7-bit) character set.</span></span></summary>
        <value><span data-ttu-id="6407e-652">Кодировка набора символов ASCII (7-разрядных).</span><span class="sxs-lookup"><span data-stu-id="6407e-652">An  encoding for the ASCII (7-bit) character set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-653">Символы ASCII ограничены наименьшее 128 символов Юникода, от U + 0000 до U + 007F.</span><span class="sxs-lookup"><span data-stu-id="6407e-653">ASCII characters are limited to the lowest 128 Unicode characters, from U+0000 to U+007F.</span></span>  
  
 <span data-ttu-id="6407e-654">При выборе кодировки ASCII для вашего приложения, учитывайте следующее:</span><span class="sxs-lookup"><span data-stu-id="6407e-654">When selecting the ASCII encoding for your app, consider the following:</span></span>  
  
-   <span data-ttu-id="6407e-655">Кодировка ASCII обычно подходит для протоколов, требующих ASCII.</span><span class="sxs-lookup"><span data-stu-id="6407e-655">The ASCII encoding is usually appropriate for protocols that require ASCII.</span></span>  
  
-   <span data-ttu-id="6407e-656">Если вам требуется 8-разрядная кодировка (которую иногда ошибочно называют «ASCII»), кодировка UTF-8 предпочтительнее ASCII кодировка.</span><span class="sxs-lookup"><span data-stu-id="6407e-656">If you requires 8-bit encoding (which is sometimes incorrectly referred to as "ASCII"), the UTF-8 encoding is recommended over the ASCII encoding.</span></span> <span data-ttu-id="6407e-657">Наличие символов 0-7F результаты идентичны, но использование UTF-8 позволяет избежать потери данных благодаря возможности представления всех символов Юникода, которые можно представить.</span><span class="sxs-lookup"><span data-stu-id="6407e-657">For the characters 0-7F, the results are identical, but use of UTF-8 avoids data loss by allowing representation of all Unicode characters that are representable.</span></span> <span data-ttu-id="6407e-658">Обратите внимание, что кодировка ASCII 8-й бит неоднозначность, можно разрешить вредоносное использование, но кодировку UTF-8 устраняет неоднозначность о 8-й бит.</span><span class="sxs-lookup"><span data-stu-id="6407e-658">Note that the ASCII encoding has an 8th bit ambiguity that can allow malicious use, but the UTF-8 encoding removes ambiguity about the 8th bit.</span></span>  
  
-   <span data-ttu-id="6407e-659">В версиях .NET Framework версии 2.0 платформы .NET Framework разрешен спуфинг, игнорируя 8-й бит.</span><span class="sxs-lookup"><span data-stu-id="6407e-659">Prior to the .NET Framework version 2.0, the .NET Framework allowed spoofing by ignoring the 8th bit.</span></span> <span data-ttu-id="6407e-660">Начиная с .NET Framework 2.0, отличные от ASCII кодовые точки переключиться во время декодирования.</span><span class="sxs-lookup"><span data-stu-id="6407e-660">Beginning with the .NET Framework 2.0, non-ASCII code points fall back during decoding.</span></span>  
  
 <span data-ttu-id="6407e-661"><xref:System.Text.ASCIIEncoding> Возвращаемый этим свойством объект может иметь необходимого поведения для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="6407e-661">The <xref:System.Text.ASCIIEncoding> object that is returned by this property might not have the appropriate behavior for your app.</span></span> <span data-ttu-id="6407e-662">Он использует резервную стратегию замены для замены каждой строки, он не может закодировать и каждый байт, он не может декодировать с вопросительным знаком ("?») символ.</span><span class="sxs-lookup"><span data-stu-id="6407e-662">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with a question mark ("?") character.</span></span> <span data-ttu-id="6407e-663">Вместо этого можно вызвать <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> метод для создания экземпляра <xref:System.Text.ASCIIEncoding> которого резервный метод, либо объект <xref:System.Text.EncoderFallbackException> или <xref:System.Text.DecoderFallbackException>, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="6407e-663">Instead, you can call the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> method to instantiate an <xref:System.Text.ASCIIEncoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.ASCII#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.ascii/cs/encoding.ascii2.cs#1)]
 [!code-vb[System.Text.Encoding.ASCII#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.ascii/vb/encoding.ascii2.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="6407e-664">В следующем примере показано влияние кодировки ASCII на символы, которые находятся за пределами диапазона ASCII.</span><span class="sxs-lookup"><span data-stu-id="6407e-664">The following example demonstrates the effect of the ASCII encoding on characters that are outside the ASCII range.</span></span>  
  
 [!code-cpp[System.Text.Encoding.ASCII Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.ASCII Example/CPP/ascii.cpp#1)]
 [!code-csharp[System.Text.Encoding.ASCII Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.ASCII Example/CS/ascii.cs#1)]
 [!code-vb[System.Text.Encoding.ASCII Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.ASCII Example/VB/ascii.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.ASCIIEncoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <altmember cref="P:System.Text.Encoding.UTF8" />
        <altmember cref="P:System.Text.Encoding.Unicode" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="6407e-665">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="6407e-665">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BigEndianUnicode">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding BigEndianUnicode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding BigEndianUnicode" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.BigEndianUnicode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BigEndianUnicode As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ BigEndianUnicode { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BigEndianUnicode : System.Text.Encoding" Usage="System.Text.Encoding.BigEndianUnicode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-666">Получает кодировку для формата UTF-16 с обратным порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-666">Gets an encoding for the UTF-16 format that uses the big endian byte order.</span></span></summary>
        <value><span data-ttu-id="6407e-667">Объект кодировки для формата UTF-16 с обратным порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-667">An encoding object for the UTF-16 format that uses the big endian byte order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-668"><xref:System.Text.UnicodeEncoding> Возвращаемый этим свойством объект может иметь необходимого поведения для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="6407e-668">The <xref:System.Text.UnicodeEncoding> object that is returned by this property may not have the appropriate behavior for your app.</span></span> <span data-ttu-id="6407e-669">Он использует резервную стратегию замены для замены каждой строки, он не может закодировать и каждый байт, он не может декодировать с вопросительным знаком ("?») символ.</span><span class="sxs-lookup"><span data-stu-id="6407e-669">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with a question mark ("?") character.</span></span> <span data-ttu-id="6407e-670">Вместо этого можно вызвать <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> конструктор для создания экземпляра с обратным порядком байтов <xref:System.Text.UnicodeEncoding> которого резервный метод, либо объект <xref:System.Text.EncoderFallbackException> или <xref:System.Text.DecoderFallbackException>, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="6407e-670">Instead, you can call the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a big endian <xref:System.Text.UnicodeEncoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.BigEndianUnicode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/CS/bigendianunicode1.cs#2)]
 [!code-vb[System.Text.Encoding.BigEndianUnicode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/VB/bigendianunicode1.vb#2)]  
  
 <span data-ttu-id="6407e-671">Возвращенный <xref:System.Text.UnicodeEncoding> объект имеет <xref:System.Text.Encoding.BodyName%2A>, <xref:System.Text.Encoding.HeaderName%2A>, и <xref:System.Text.Encoding.WebName%2A> свойства, позволяющие найти имя «unicodeFFFE».</span><span class="sxs-lookup"><span data-stu-id="6407e-671">The returned <xref:System.Text.UnicodeEncoding> object has <xref:System.Text.Encoding.BodyName%2A>, <xref:System.Text.Encoding.HeaderName%2A>, and <xref:System.Text.Encoding.WebName%2A> properties, which yield the name "unicodeFFFE".</span></span> <span data-ttu-id="6407e-672">Несмотря на то, что порядка следования обратным порядком байтов в кодировке UTF-16 — шестнадцатеричное число FEFF, имя «unicodeFFFE» был выбран, так как метка порядка байтов отображается как шестнадцатеричное число FFFE на прямым порядком байтов компьютерах Windows.</span><span class="sxs-lookup"><span data-stu-id="6407e-672">Although the UTF-16 big endian byte order mark is hexadecimal FEFF, the name "unicodeFFFE" was chosen because the byte order mark appears as hexadecimal FFFE on little endian Windows computers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-673">В следующем примере считываются в текстовый файл с кодировкой UTF-16, с помощью обратный порядок байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-673">The following example reads a text file with a UTF-16 encoding using the big endian byte order.</span></span>  
  
 [!code-cpp[System.Text.Encoding.BigEndianUnicode#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/CPP/bigendianunicode.cpp#1)]
 [!code-csharp[System.Text.Encoding.BigEndianUnicode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/CS/bigendianunicode.cs#1)]
 [!code-vb[System.Text.Encoding.BigEndianUnicode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/VB/bigendianunicode.vb#1)]  
  
 <span data-ttu-id="6407e-674">Следующий пример определяет число байтов, необходимых для кодирования массива символов и кодирует символы отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="6407e-674">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UnicodeEncoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <altmember cref="P:System.Text.Encoding.Unicode" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="6407e-675">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="6407e-675">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BodyName">
      <MemberSignature Language="C#" Value="public virtual string BodyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BodyName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.BodyName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BodyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BodyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BodyName : string" Usage="System.Text.Encoding.BodyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-676">При переопределении в производном классе получает имя текущей кодировки, которое может использоваться с тегами текста сообщения почтового агента.</span><span class="sxs-lookup"><span data-stu-id="6407e-676">When overridden in a derived class, gets a name for the current encoding that can be used with mail agent body tags.</span></span></summary>
        <value><span data-ttu-id="6407e-677">Имя текущего объекта <see cref="T:System.Text.Encoding" />, которое может использоваться с тегами текста сообщения почтового агента.</span><span class="sxs-lookup"><span data-stu-id="6407e-677">A name for the current <see cref="T:System.Text.Encoding" /> that can be used with mail agent body tags.</span></span>  
  
<span data-ttu-id="6407e-678">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-678">-or-</span></span> 
<span data-ttu-id="6407e-679">Пустая строка (""), если текущий объект <see cref="T:System.Text.Encoding" /> не может использоваться.</span><span class="sxs-lookup"><span data-stu-id="6407e-679">An empty string (""), if the current <see cref="T:System.Text.Encoding" /> cannot be used.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-680">Если вам нужна кодировка для текста имя, необходимо вызвать <xref:System.Text.Encoding.GetEncoding%2A> с <xref:System.Text.Encoding.BodyName%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="6407e-680">If you need an encoding for a body name, you should call <xref:System.Text.Encoding.GetEncoding%2A> with the <xref:System.Text.Encoding.BodyName%2A> property.</span></span> <span data-ttu-id="6407e-681">Этот метод часто извлекает другую кодировку из тестовой кодировки, которой он вызывается.</span><span class="sxs-lookup"><span data-stu-id="6407e-681">Often the method retrieves a different encoding from the test encoding furnished in the call.</span></span> <span data-ttu-id="6407e-682">Обычно только почтовые приложения необходимо получить такое кодирование; Большинство других приложений, которые необходимо описать кодировку следует использовать его <xref:System.Text.Encoding.WebName%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-682">Generally only email applications need to retrieve such an encoding; most other applications that need to describe an encoding should use its <xref:System.Text.Encoding.WebName%2A>.</span></span>  
  
 <span data-ttu-id="6407e-683">В некоторых случаях значение <xref:System.Text.Encoding.BodyName%2A> свойство соответствует международный стандарт, определяющий эту кодировку.</span><span class="sxs-lookup"><span data-stu-id="6407e-683">In some cases, the value of the <xref:System.Text.Encoding.BodyName%2A> property corresponds to the international standard that defines that encoding.</span></span> <span data-ttu-id="6407e-684">Это не значит, что реализация соответствует в полном объеме с этого стандарта.</span><span class="sxs-lookup"><span data-stu-id="6407e-684">This doesn't mean that the implementation complies in full with that standard.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-685">В следующем примере извлекаются разные имена для каждой кодировки и отображаются кодировки, имеющие одно или несколько имен, которые отличаются от <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6407e-685">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6407e-686">Он отображает <xref:System.Text.Encoding.EncodingName%2A> , но не выполняет сравнение на ее основе.</span><span class="sxs-lookup"><span data-stu-id="6407e-686">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.Name" />
        <altmember cref="P:System.Text.Encoding.EncodingName" />
        <altmember cref="P:System.Text.Encoding.HeaderName" />
        <altmember cref="P:System.Text.Encoding.WebName" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="encoding.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6407e-687">При переопределении в производном классе создается неполная копия текущего объекта <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-687">When overridden in a derived class, creates a shallow copy of the current <see cref="T:System.Text.Encoding" /> object.</span></span></summary>
        <returns><span data-ttu-id="6407e-688">Копия текущего объекта <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-688">A copy of the current <see cref="T:System.Text.Encoding" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-689">Клон доступен для записи даже в том случае, если исходный <xref:System.Text.Encoding> объект доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="6407e-689">The clone is writable even if the original <xref:System.Text.Encoding> object is read-only.</span></span> <span data-ttu-id="6407e-690">Таким образом можно изменить свойства копии.</span><span class="sxs-lookup"><span data-stu-id="6407e-690">Therefore, the properties of the clone can be modified.</span></span>  
  
 <span data-ttu-id="6407e-691">Неполная копия объекта является копией только данного объекта.</span><span class="sxs-lookup"><span data-stu-id="6407e-691">A shallow copy of an object is a copy of the object only.</span></span> <span data-ttu-id="6407e-692">Если объект содержит ссылки на другие объекты, неполная копия не приводит к созданию копии объектов, который указывает ссылка.</span><span class="sxs-lookup"><span data-stu-id="6407e-692">If the object contains references to other objects, the shallow copy does not create copies of the referred objects.</span></span> <span data-ttu-id="6407e-693">Он ссылается на исходные объекты вместо этого.</span><span class="sxs-lookup"><span data-stu-id="6407e-693">It refers to the original objects instead.</span></span> <span data-ttu-id="6407e-694">Напротив глубокую копию объекта создает копию объекта и копию всего содержимого, прямо или косвенно ссылается этот объект.</span><span class="sxs-lookup"><span data-stu-id="6407e-694">In contrast, a deep copy of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePage">
      <MemberSignature Language="C#" Value="public virtual int CodePage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CodePage" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.CodePage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CodePage { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CodePage : int" Usage="System.Text.Encoding.CodePage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-695">При переопределении в производном классе получает идентификатор кодовой страницы текущего объекта <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-695">When overridden in a derived class, gets the code page identifier of the current <see cref="T:System.Text.Encoding" />.</span></span></summary>
        <value><span data-ttu-id="6407e-696">Идентификатор кодовой страницы текущего объекта <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-696">The code page identifier of the current <see cref="T:System.Text.Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6407e-697">В следующем примере извлекаются разные имена для каждой кодировки и отображаются кодировки, имеющие одно или несколько имен, которые отличаются от <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6407e-697">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6407e-698">Он отображает <xref:System.Text.Encoding.EncodingName%2A> , но не выполняет сравнение на ее основе.</span><span class="sxs-lookup"><span data-stu-id="6407e-698">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.CodePage" />
        <altmember cref="P:System.Text.Encoding.WindowsCodePage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6407e-699">Преобразует массив байтов из одной кодировки в другую.</span><span class="sxs-lookup"><span data-stu-id="6407e-699">Converts a byte array from one encoding to another.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public static byte[] Convert (System.Text.Encoding srcEncoding, System.Text.Encoding dstEncoding, byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Convert(class System.Text.Encoding srcEncoding, class System.Text.Encoding dstEncoding, unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Convert (srcEncoding As Encoding, dstEncoding As Encoding, bytes As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Convert(System::Text::Encoding ^ srcEncoding, System::Text::Encoding ^ dstEncoding, cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="static member Convert : System.Text.Encoding * System.Text.Encoding * byte[] -&gt; byte[]" Usage="System.Text.Encoding.Convert (srcEncoding, dstEncoding, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srcEncoding" Type="System.Text.Encoding" />
        <Parameter Name="dstEncoding" Type="System.Text.Encoding" />
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="srcEncoding"><span data-ttu-id="6407e-700">Формат кодировки параметра <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-700">The encoding format of <paramref name="bytes" />.</span></span></param>
        <param name="dstEncoding"><span data-ttu-id="6407e-701">Целевой формат кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-701">The target encoding format.</span></span></param>
        <param name="bytes"><span data-ttu-id="6407e-702">Преобразуемые байты.</span><span class="sxs-lookup"><span data-stu-id="6407e-702">The bytes to convert.</span></span></param>
        <summary><span data-ttu-id="6407e-703">Преобразует весь массив байтов из одной кодировки в другую.</span><span class="sxs-lookup"><span data-stu-id="6407e-703">Converts an entire byte array from one encoding to another.</span></span></summary>
        <returns><span data-ttu-id="6407e-704">Массив типа <see cref="T:System.Byte" />, содержащий результаты преобразования <paramref name="bytes" /> из <paramref name="srcEncoding" /> в <paramref name="dstEncoding" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-704">An array of type <see cref="T:System.Byte" /> containing the results of converting <paramref name="bytes" /> from <paramref name="srcEncoding" /> to <paramref name="dstEncoding" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6407e-705">Следующий пример преобразует строку в кодировке Юникод в строку в формате ASCII.</span><span class="sxs-lookup"><span data-stu-id="6407e-705">The following example converts a Unicode-encoded string to an ASCII-encoded string.</span></span> <span data-ttu-id="6407e-706">Так как объект кодировки ASCII, возвращаемый методом <xref:System.Text.Encoding.ASCII%2A> свойство использует резервную стратегию замены и Pi символ не является частью набора символов ASCII, Pi символ заменяется вопросительным знаком, как видно в результатах показано в примере.</span><span class="sxs-lookup"><span data-stu-id="6407e-706">Because the ASCII encoding object returned by the <xref:System.Text.Encoding.ASCII%2A> property uses replacement fallback and the Pi character is not part of the ASCII character set, the Pi character is replaced with a question mark, as the output from the example shows.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-707"><paramref name="srcEncoding" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-707"><paramref name="srcEncoding" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6407e-708">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-708">-or-</span></span> 
 <span data-ttu-id="6407e-709"><paramref name="dstEncoding" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-709"><paramref name="dstEncoding" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6407e-710">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-710">-or-</span></span> 
 <span data-ttu-id="6407e-711"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-711"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="6407e-712">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-712">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-713">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-713">-and-</span></span> 
 <span data-ttu-id="6407e-714">**srcEncoding.**</span><span class="sxs-lookup"><span data-stu-id="6407e-714">**srcEncoding.**</span></span> <span data-ttu-id="6407e-715">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-715"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="6407e-716">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-716">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-717">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-717">-and-</span></span> 
 <span data-ttu-id="6407e-718">**dstEncoding.**</span><span class="sxs-lookup"><span data-stu-id="6407e-718">**dstEncoding.**</span></span> <span data-ttu-id="6407e-719">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-719"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public static byte[] Convert (System.Text.Encoding srcEncoding, System.Text.Encoding dstEncoding, byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Convert(class System.Text.Encoding srcEncoding, class System.Text.Encoding dstEncoding, unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Convert (srcEncoding As Encoding, dstEncoding As Encoding, bytes As Byte(), index As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Convert(System::Text::Encoding ^ srcEncoding, System::Text::Encoding ^ dstEncoding, cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="static member Convert : System.Text.Encoding * System.Text.Encoding * byte[] * int * int -&gt; byte[]" Usage="System.Text.Encoding.Convert (srcEncoding, dstEncoding, bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srcEncoding" Type="System.Text.Encoding" />
        <Parameter Name="dstEncoding" Type="System.Text.Encoding" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="srcEncoding"><span data-ttu-id="6407e-720">Кодировка исходного массива, <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-720">The encoding of the source array, <paramref name="bytes" />.</span></span></param>
        <param name="dstEncoding"><span data-ttu-id="6407e-721">Кодировка выходного массива.</span><span class="sxs-lookup"><span data-stu-id="6407e-721">The encoding of the output array.</span></span></param>
        <param name="bytes"><span data-ttu-id="6407e-722">Преобразуемый массив байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-722">The array of bytes to convert.</span></span></param>
        <param name="index"><span data-ttu-id="6407e-723">Индекс первого элемента преобразуемого массива байтов <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-723">The index of the first element of <paramref name="bytes" /> to convert.</span></span></param>
        <param name="count"><span data-ttu-id="6407e-724">Число байтов, которые требуется преобразовать.</span><span class="sxs-lookup"><span data-stu-id="6407e-724">The number of bytes to convert.</span></span></param>
        <summary><span data-ttu-id="6407e-725">Преобразует диапазон байтов в массиве байтов из одной кодировки в другую.</span><span class="sxs-lookup"><span data-stu-id="6407e-725">Converts a range of bytes in a byte array from one encoding to another.</span></span></summary>
        <returns><span data-ttu-id="6407e-726">Массив типа <see cref="T:System.Byte" />, содержащий результат преобразования диапазона байтов из массива <paramref name="bytes" /> из <paramref name="srcEncoding" /> в <paramref name="dstEncoding" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-726">An array of type <see cref="T:System.Byte" /> containing the result of converting a range of bytes in <paramref name="bytes" /> from <paramref name="srcEncoding" /> to <paramref name="dstEncoding" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-727"><paramref name="srcEncoding" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-727"><paramref name="srcEncoding" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6407e-728">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-728">-or-</span></span> 
 <span data-ttu-id="6407e-729"><paramref name="dstEncoding" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-729"><paramref name="dstEncoding" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6407e-730">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-730">-or-</span></span> 
 <span data-ttu-id="6407e-731"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-731"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6407e-732"><paramref name="index" /> и <paramref name="count" /> не определяют допустимый диапазон в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-732"><paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the byte array.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="6407e-733">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-733">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-734">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-734">-and-</span></span> 
 <span data-ttu-id="6407e-735">**srcEncoding.**</span><span class="sxs-lookup"><span data-stu-id="6407e-735">**srcEncoding.**</span></span> <span data-ttu-id="6407e-736">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-736"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="6407e-737">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-737">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-738">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-738">-and-</span></span> 
 <span data-ttu-id="6407e-739">**dstEncoding.**</span><span class="sxs-lookup"><span data-stu-id="6407e-739">**dstEncoding.**</span></span> <span data-ttu-id="6407e-740">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-740"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DecoderFallback">
      <MemberSignature Language="C#" Value="public System.Text.DecoderFallback DecoderFallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.DecoderFallback DecoderFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.DecoderFallback" />
      <MemberSignature Language="VB.NET" Value="Public Property DecoderFallback As DecoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::DecoderFallback ^ DecoderFallback { System::Text::DecoderFallback ^ get(); void set(System::Text::DecoderFallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DecoderFallback : System.Text.DecoderFallback with get, set" Usage="System.Text.Encoding.DecoderFallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.DecoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-741">Возвращает или задает объект <see cref="T:System.Text.DecoderFallback" /> для текущего объекта <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-741">Gets or sets the <see cref="T:System.Text.DecoderFallback" /> object for the current <see cref="T:System.Text.Encoding" /> object.</span></span></summary>
        <value><span data-ttu-id="6407e-742">Резервный объект декодера для текущего объекта <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-742">The decoder fallback object for the current <see cref="T:System.Text.Encoding" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-743"><xref:System.Text.DecoderFallback> Представляет обработчик ошибок, который вызывается при закодированную последовательность байтов не может быть декодирована в символ.</span><span class="sxs-lookup"><span data-stu-id="6407e-743">The <xref:System.Text.DecoderFallback> object represents an error handler that is invoked when an encoded byte sequence cannot be decoded into a character.</span></span> <span data-ttu-id="6407e-744">Поддерживается любой из следующие типы обработчиков:</span><span class="sxs-lookup"><span data-stu-id="6407e-744">Any one of the following handler types is supported:</span></span>  
  
-   <span data-ttu-id="6407e-745">Наилучшее резервному обработчику, который заменяет байтов, которые не может быть декодирована с каким либо знаком подходящие замены.</span><span class="sxs-lookup"><span data-stu-id="6407e-745">A best-fit fallback handler, which replaces bytes that cannot be decoded with some suitable replacement character.</span></span>  
  
-   <span data-ttu-id="6407e-746">Замена резервному обработчику, который заменяет байтов, которые не удается декодировать некоторые произвольные замещающий символ.</span><span class="sxs-lookup"><span data-stu-id="6407e-746">A replacement fallback handler, which replaces bytes that cannot be decoded with some arbitrary replacement character.</span></span> <span data-ttu-id="6407e-747">.NET включает в себя один резервному обработчику замены <xref:System.Text.DecoderFallback>, который по умолчанию заменяет байтов, которые не может быть декодирована с вопросительным знаком ("?») символ.</span><span class="sxs-lookup"><span data-stu-id="6407e-747">.NET includes one replacement fallback handler, <xref:System.Text.DecoderFallback>, which by default replaces bytes that cannot be decoded with a question mark ("?") character.</span></span>  
  
-   <span data-ttu-id="6407e-748">Резервный обработчик исключений, который создает исключение, когда байтов не может быть декодирована.</span><span class="sxs-lookup"><span data-stu-id="6407e-748">An exception fallback handler, which throws an exception when bytes cannot be decoded.</span></span> <span data-ttu-id="6407e-749">.NET включает в себя один резервный обработчик исключений, <xref:System.Text.DecoderExceptionFallback>, какие вызывает <xref:System.Text.DecoderFallbackException> при байтов не может быть декодирована.</span><span class="sxs-lookup"><span data-stu-id="6407e-749">.NET includes one exception fallback handler, <xref:System.Text.DecoderExceptionFallback>, which throws a <xref:System.Text.DecoderFallbackException> when bytes cannot be decoded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-750">В операции задания значением является <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-750">The value in a set operation is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6407e-751">Невозможно задать значение, поскольку текущий объект <see cref="T:System.Text.Encoding" /> предназначен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="6407e-751">A value cannot be assigned in a set operation because the current <see cref="T:System.Text.Encoding" /> object is read-only.</span></span></exception>
        <altmember cref="T:System.Text.DecoderFallback" />
        <altmember cref="T:System.Text.DecoderFallbackBuffer" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="6407e-752">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="6407e-752">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding Default" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ Default { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Text.Encoding" Usage="System.Text.Encoding.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-753">Возвращает кодировку по умолчанию для данной реализации .NET.</span><span class="sxs-lookup"><span data-stu-id="6407e-753">Gets the default encoding for this .NET implementation.</span></span></summary>
        <value><span data-ttu-id="6407e-754">Кодировка по умолчанию для данной реализации .NET.</span><span class="sxs-lookup"><span data-stu-id="6407e-754">The default encoding for this .NET implementation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="6407e-755">Разные компьютеры могут использовать различные кодировки по умолчанию, и кодировку по умолчанию можно изменить на одном компьютере.</span><span class="sxs-lookup"><span data-stu-id="6407e-755">Different computers can use different encodings as the default, and the default encoding can change on a single computer.</span></span> <span data-ttu-id="6407e-756">Если вы используете <xref:System.Text.Encoding.Default%2A> кодировку для кодирования и декодирования данных потоковый между компьютерами или получены в разное время на одном компьютере может преобразовать эти данные неправильно.</span><span class="sxs-lookup"><span data-stu-id="6407e-756">If you use the <xref:System.Text.Encoding.Default%2A> encoding to encode and decode data streamed between computers or retrieved at different times on the same computer, it may translate that data incorrectly.</span></span> <span data-ttu-id="6407e-757">Кроме того, кодировка возвращаемые <xref:System.Text.Encoding.Default%2A> свойство использует резервную стратегию наилучшего для сопоставления неподдерживаемые символы и символы, которые поддерживаются с помощью кодовой страницы.</span><span class="sxs-lookup"><span data-stu-id="6407e-757">In addition, the encoding returned by the <xref:System.Text.Encoding.Default%2A> property uses best-fit fallback to map unsupported characters to characters supported by the code page.</span></span> <span data-ttu-id="6407e-758">По этим причинам не рекомендуется использовать кодировку по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="6407e-758">For these reasons, using the default encoding is not recommended.</span></span> <span data-ttu-id="6407e-759">Чтобы обеспечить правильное декодирование закодированных байтов, следует использовать кодировку Юникод, такие как <xref:System.Text.UTF8Encoding> или <xref:System.Text.UnicodeEncoding>.</span><span class="sxs-lookup"><span data-stu-id="6407e-759">To ensure that encoded bytes are decoded properly, you should use a Unicode encoding, such as <xref:System.Text.UTF8Encoding> or <xref:System.Text.UnicodeEncoding>.</span></span> <span data-ttu-id="6407e-760">Чтобы убедиться, что тот же формат используется для кодирования и декодирования можно также использовать протокол более высокого уровня.</span><span class="sxs-lookup"><span data-stu-id="6407e-760">You could also use a higher-level protocol to ensure that the same format is used for encoding and decoding.</span></span>  

### <a name="the-default-property-in-the-net-framework"></a><span data-ttu-id="6407e-761">Свойство по умолчанию в .NET Framework</span><span class="sxs-lookup"><span data-stu-id="6407e-761">The Default property in the .NET Framework</span></span>

<span data-ttu-id="6407e-762">В .NET Framework на рабочем столе Windows <xref:System.Text.Encoding.Default%2A> свойство всегда возвращает активную кодовую страницу системы и создает <xref:System.Text.Encoding> объекта, который соответствует к нему.</span><span class="sxs-lookup"><span data-stu-id="6407e-762">In the .NET Framework on the Windows desktop, the <xref:System.Text.Encoding.Default%2A> property always gets the system's active code page and creates a <xref:System.Text.Encoding> object that corresponds to it.</span></span> <span data-ttu-id="6407e-763">Текущая кодовая страница может быть кодовая страница ANSI, включая кодировки ASCII и дополнительные символы, которые различаются по кодовой странице.</span><span class="sxs-lookup"><span data-stu-id="6407e-763">The active code page may be an ANSI code page, which includes the ASCII character set along with additional characters that vary by code page.</span></span> <span data-ttu-id="6407e-764">Так как все <xref:System.Text.Encoding.Default%2A> кодировки, кодовые страницы ANSI, потеря данных, рассмотрите возможность использования <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> вместо кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-764">Because all <xref:System.Text.Encoding.Default%2A> encodings based on ANSI code pages lose data, consider using the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> encoding instead.</span></span> <span data-ttu-id="6407e-765">UTF-8 идентична часто в U + 00 диапазона U + 7F, но позволяет кодировать символы вне диапазона ASCII, без потери.</span><span class="sxs-lookup"><span data-stu-id="6407e-765">UTF-8 is often identical in the U+00 to U+7F range, but can encode characters outside the ASCII range without loss.</span></span>

## <a name="the-default-property-on-net-core"></a><span data-ttu-id="6407e-766">Свойство по умолчанию в .NET Core</span><span class="sxs-lookup"><span data-stu-id="6407e-766">The Default property on .NET Core</span></span>

<span data-ttu-id="6407e-767">В .NET Core <xref:System.Text.Encoding.Default%2A> свойство всегда возвращает <xref:System.Text.UTF8Encoding>.</span><span class="sxs-lookup"><span data-stu-id="6407e-767">On .NET Core, the <xref:System.Text.Encoding.Default%2A> property always returns the <xref:System.Text.UTF8Encoding>.</span></span> <span data-ttu-id="6407e-768">UTF-8 поддерживается во всех операционных системах (Windows, Linux и Max OS X) на котором выполняются приложения .NET Core.</span><span class="sxs-lookup"><span data-stu-id="6407e-768">UTF-8 is supported on all the operating systems (Windows, Linux, and Max OS X) on which .NET Core applications run.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncoderFallback">
      <MemberSignature Language="C#" Value="public System.Text.EncoderFallback EncoderFallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.EncoderFallback EncoderFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.EncoderFallback" />
      <MemberSignature Language="VB.NET" Value="Public Property EncoderFallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::EncoderFallback ^ EncoderFallback { System::Text::EncoderFallback ^ get(); void set(System::Text::EncoderFallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncoderFallback : System.Text.EncoderFallback with get, set" Usage="System.Text.Encoding.EncoderFallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-769">Возвращает или задает объект <see cref="T:System.Text.EncoderFallback" /> для текущего объекта <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-769">Gets or sets the <see cref="T:System.Text.EncoderFallback" /> object for the current <see cref="T:System.Text.Encoding" /> object.</span></span></summary>
        <value><span data-ttu-id="6407e-770">Резервный объект кодировщика для текущего объекта <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-770">The encoder fallback object for the current <see cref="T:System.Text.Encoding" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-771"><xref:System.Text.EncoderFallback> Представляет обработчик ошибок, который вызывается, когда символ не может быть преобразован в закодированную последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-771">The <xref:System.Text.EncoderFallback> object represents an error handler that is invoked when a character cannot be converted into an encoded byte sequence.</span></span> <span data-ttu-id="6407e-772">Поддерживается любой из следующие типы обработчиков:</span><span class="sxs-lookup"><span data-stu-id="6407e-772">Any one of the following handler types is supported:</span></span>  
  
-   <span data-ttu-id="6407e-773">Наилучшее резервному обработчику, который заменяет символы, которые не может быть закодирован с каким либо знаком подходящие замены.</span><span class="sxs-lookup"><span data-stu-id="6407e-773">A best-fit fallback handler, which replaces characters that cannot be encoded with some suitable replacement character.</span></span>  
  
-   <span data-ttu-id="6407e-774">Замена резервному обработчику, который заменяет символы, которые не удается закодировать некоторые произвольные замещающий символ.</span><span class="sxs-lookup"><span data-stu-id="6407e-774">A replacement fallback handler, which replaces characters that cannot be encoded with some arbitrary replacement character.</span></span> <span data-ttu-id="6407e-775">.NET включает в себя один резервному обработчику замены <xref:System.Text.EncoderFallback>, который по умолчанию заменяет символы, которые не удается закодировать знак вопроса ("?») символ.</span><span class="sxs-lookup"><span data-stu-id="6407e-775">.NET includes one replacement fallback handler, <xref:System.Text.EncoderFallback>, which by default replaces characters that cannot be encoded with a question mark ("?") character.</span></span>  
  
-   <span data-ttu-id="6407e-776">Резервный обработчик исключений, который создает исключение, если символы не может быть закодирован.</span><span class="sxs-lookup"><span data-stu-id="6407e-776">An exception fallback handler, which throws an exception when characters cannot be encoded.</span></span> <span data-ttu-id="6407e-777">.NET включает в себя один резервный обработчик исключений, <xref:System.Text.EncoderExceptionFallback>, какие вызывает <xref:System.Text.EncoderFallbackException> при символов не может быть декодирована.</span><span class="sxs-lookup"><span data-stu-id="6407e-777">.NET includes one exception fallback handler, <xref:System.Text.EncoderExceptionFallback>, which throws an <xref:System.Text.EncoderFallbackException> when characters cannot be decoded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-778">В операции задания значением является <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-778">The value in a set operation is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6407e-779">Невозможно задать значение, поскольку текущий объект <see cref="T:System.Text.Encoding" /> предназначен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="6407e-779">A value cannot be assigned in a set operation because the current <see cref="T:System.Text.Encoding" /> object is read-only.</span></span></exception>
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallbackBuffer" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="6407e-780">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="6407e-780">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EncodingName">
      <MemberSignature Language="C#" Value="public virtual string EncodingName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncodingName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.EncodingName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EncodingName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EncodingName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EncodingName : string" Usage="System.Text.Encoding.EncodingName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-781">При переопределении в производном классе получает описание текущей кодировки, которое может быть прочитано пользователем.</span><span class="sxs-lookup"><span data-stu-id="6407e-781">When overridden in a derived class, gets the human-readable description of the current encoding.</span></span></summary>
        <value><span data-ttu-id="6407e-782">Описание текущего объекта <see cref="T:System.Text.Encoding" />, которое может быть прочитано пользователем.</span><span class="sxs-lookup"><span data-stu-id="6407e-782">The human-readable description of the current <see cref="T:System.Text.Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-783"><xref:System.Text.Encoding.EncodingName%2A> Свойство предназначено для отображения.</span><span class="sxs-lookup"><span data-stu-id="6407e-783">The <xref:System.Text.Encoding.EncodingName%2A> property is intended for display.</span></span> <span data-ttu-id="6407e-784">Чтобы найти имя, которое может быть передан <xref:System.Text.Encoding.GetEncoding%2A> используйте <xref:System.Text.Encoding.WebName%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="6407e-784">To find a name that can be passed to the <xref:System.Text.Encoding.GetEncoding%2A> method, use the <xref:System.Text.Encoding.WebName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-785">В следующем примере извлекаются разные имена для каждой кодировки и отображаются кодировки, имеющие одно или несколько имен, которые отличаются от <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6407e-785">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6407e-786">Он отображает <xref:System.Text.Encoding.EncodingName%2A> , но не выполняет сравнение на ее основе.</span><span class="sxs-lookup"><span data-stu-id="6407e-786">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.DisplayName" />
        <altmember cref="P:System.Text.Encoding.BodyName" />
        <altmember cref="P:System.Text.Encoding.HeaderName" />
        <altmember cref="P:System.Text.Encoding.WebName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="encoding.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="6407e-787"><see cref="T:System.Object" /> для сравнения с текущим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="6407e-787">The <see cref="T:System.Object" /> to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="6407e-788">Определяет, равен ли указанный объект <see cref="T:System.Object" /> текущему экземпляру.</span><span class="sxs-lookup"><span data-stu-id="6407e-788">Determines whether the specified <see cref="T:System.Object" /> is equal to the current instance.</span></span></summary>
        <returns><span data-ttu-id="6407e-789">Значение <see langword="true" />, если <paramref name="value" /> является экземпляром <see cref="T:System.Text.Encoding" />, равным текущему экземпляру; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-789"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.Encoding" /> and is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-790">Два экземпляра <xref:System.Text.Encoding> считаются равными, если они соответствуют ту же кодовую страницу и их `EncoderFallback` и `DecoderFallback` объекты равны.</span><span class="sxs-lookup"><span data-stu-id="6407e-790">Two instances of <xref:System.Text.Encoding> are considered equal if they correspond to the same code page and their `EncoderFallback` and `DecoderFallback` objects are equal.</span></span> <span data-ttu-id="6407e-791">В частности, все производные кодовые страницы имеют кодовую страницу 0 и их резервные варианты обычно `null` (`Nothing` в Visual Basic .NET).</span><span class="sxs-lookup"><span data-stu-id="6407e-791">In particular, derived code pages all have a code page of 0 and their fallbacks are normally `null` (`Nothing` in Visual Basic .NET).</span></span> <span data-ttu-id="6407e-792">Таким образом они считаются равными.</span><span class="sxs-lookup"><span data-stu-id="6407e-792">Thus they are all considered equal to one another.</span></span> <span data-ttu-id="6407e-793">Одним из недостатков является то, что при <xref:System.Text.Encoding.Equals%2A> используется для заполнения хэш-таблицу, все производные кодировки считаются равными и попадают в тот же слот хэш-таблице.</span><span class="sxs-lookup"><span data-stu-id="6407e-793">One consequence is that when <xref:System.Text.Encoding.Equals%2A> is used to populate a hash table, all derived encodings compare equal and fall into the same hash table slot.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-794">Следующий пример возвращает два экземпляра одной и той же кодировку (по одному по кодовой странице), а другой по имени и проверяют их равенство.</span><span class="sxs-lookup"><span data-stu-id="6407e-794">The following example gets two instances of the same encoding (one by codepage and another by name), and checks their equality.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Text.Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6407e-795">При переопределении в производном классе вычисляет количество байтов, полученных при кодировании набора символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-795">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char[] chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (chars As Char()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(cli::array &lt;char&gt; ^ chars);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : char[] -&gt; int&#xA;override this.GetByteCount : char[] -&gt; int" Usage="encoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="6407e-796">Массив символов, содержащий символы, которые требуется закодировать.</span><span class="sxs-lookup"><span data-stu-id="6407e-796">The character array containing the characters to encode.</span></span></param>
        <summary><span data-ttu-id="6407e-797">При переопределении в производном классе вычисляет количество байтов, полученных при кодировании всех символов из заданного массива символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-797">When overridden in a derived class, calculates the number of bytes produced by encoding all the characters in the specified character array.</span></span></summary>
        <returns><span data-ttu-id="6407e-798">Количество байтов, полученных при кодировании всех символов из указанного массива символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-798">The number of bytes produced by encoding all the characters in the specified character array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-799">Для вычисления размера точное массива, необходимого <xref:System.Text.Encoding.GetBytes%2A> для сохранения полученных байтов, вызвать <xref:System.Text.Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-799">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6407e-800">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-800">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6407e-801"><xref:System.Text.Encoding.GetByteCount%2A> Метод обычно позволяет выделения меньше памяти, хотя <xref:System.Text.Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="6407e-801">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6407e-802"><xref:System.Text.Encoding.GetByteCount%2A> Метод определяет, сколько байтов привести кодировании набора символов Юникода и <xref:System.Text.Encoding.GetBytes%2A> метод выполняет фактическое кодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-802">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="6407e-803"><xref:System.Text.Encoding.GetBytes%2A> Метод ожидает дискретных преобразований, отличается от <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> метод, который обрабатывает несколько преобразований на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-803">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-804">Несколько версий <xref:System.Text.Encoding.GetByteCount%2A> и <xref:System.Text.Encoding.GetBytes%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="6407e-804">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="6407e-805">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="6407e-805">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="6407e-806">Приложение может потребоваться закодировать множество входных символов в кодовую страницу и обработка символов, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="6407e-806">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="6407e-807">В этом случае, возможно, необходимо поддерживать состояние между вызовами, принимая во внимание состояние, которое сохраняется <xref:System.Text.Encoder> объект используется.</span><span class="sxs-lookup"><span data-stu-id="6407e-807">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="6407e-808">Если приложение обрабатывает входные строки, следует использовать строки версии <xref:System.Text.Encoding.GetBytes%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-808">If your app handles string inputs, you should use the string versions of the <xref:System.Text.Encoding.GetBytes%2A> method.</span></span>  
  
-   <span data-ttu-id="6407e-809">Версия буфера символов Юникода <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> позволяет некоторые быстрые способы, особенно при работе с несколькими вызовами с помощью <xref:System.Text.Encoder> объекта или вставить в существующих буферов.</span><span class="sxs-lookup"><span data-stu-id="6407e-809">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="6407e-810">Имейте в виду, что эта версия метода небезопасна, так как указатели являются обязательными.</span><span class="sxs-lookup"><span data-stu-id="6407e-810">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="6407e-811">Если приложение необходимо преобразовать большой объем данных, следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="6407e-811">If your app must convert a large amount of data, you should reuse the output buffer.</span></span> <span data-ttu-id="6407e-812">В этом случае <xref:System.Text.Encoding.GetBytes%2A> версию, которая поддерживает массивы байтов является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-812">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="6407e-813">Рассмотрите возможность использования <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-813">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="6407e-814">Метод преобразования преобразует можно столько данных и создания исключения, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="6407e-814">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="6407e-815">Для непрерывного кодирования потока, этот метод часто является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-815">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-816">Следующий пример определяет число байтов, необходимых для кодирования массива символов и кодирует символы отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="6407e-816">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-817"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-817"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="6407e-818">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-818">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-819">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-819">-and-</span></span> 
 <span data-ttu-id="6407e-820">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-820"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(valuetype System.ReadOnlySpan`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (chars As ReadOnlySpan(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : ReadOnlySpan&lt;char&gt; -&gt; int&#xA;override this.GetByteCount : ReadOnlySpan&lt;char&gt; -&gt; int" Usage="encoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : string -&gt; int&#xA;override this.GetByteCount : string -&gt; int" Usage="encoding.GetByteCount s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="6407e-821">Строка, содержащая набор символов для кодирования.</span><span class="sxs-lookup"><span data-stu-id="6407e-821">The string containing the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="6407e-822">При переопределении в производном классе вычисляет число байтов, полученных при кодировании символов в заданной строке.</span><span class="sxs-lookup"><span data-stu-id="6407e-822">When overridden in a derived class, calculates the number of bytes produced by encoding the characters in the specified string.</span></span></summary>
        <returns><span data-ttu-id="6407e-823">Число байтов, полученных при кодировании заданных символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-823">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-824">Для вычисления размера точное массива, необходимого <xref:System.Text.Encoding.GetBytes%2A> для сохранения полученных байтов, вызвать <xref:System.Text.Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-824">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6407e-825">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-825">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6407e-826"><xref:System.Text.Encoding.GetByteCount%2A> Метод обычно позволяет выделения меньше памяти, хотя <xref:System.Text.Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="6407e-826">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6407e-827"><xref:System.Text.Encoding.GetByteCount%2A> Метод определяет, сколько байтов привести кодировании набора символов Юникода и <xref:System.Text.Encoding.GetBytes%2A> метод выполняет фактическое кодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-827">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="6407e-828"><xref:System.Text.Encoding.GetBytes%2A> Метод ожидает дискретных преобразований, отличается от <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> метод, который обрабатывает несколько преобразований на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-828">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-829">Несколько версий <xref:System.Text.Encoding.GetByteCount%2A> и <xref:System.Text.Encoding.GetBytes%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="6407e-829">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="6407e-830">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="6407e-830">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="6407e-831">Приложение может потребоваться закодировать множество входных символов в кодовую страницу и обработка символов, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="6407e-831">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="6407e-832">В этом случае, возможно, необходимо поддерживать состояние между вызовами, принимая во внимание состояние, которое сохраняется <xref:System.Text.Encoder> объект используется.</span><span class="sxs-lookup"><span data-stu-id="6407e-832">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="6407e-833">Если приложение обрабатывает входные строки, строковую версию <xref:System.Text.Encoding.GetBytes%2A> рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="6407e-833">If your app handles string inputs, the string version of <xref:System.Text.Encoding.GetBytes%2A> is recommended.</span></span>  
  
-   <span data-ttu-id="6407e-834">Версия буфера символов Юникода <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> позволяет некоторые быстрые способы, особенно при работе с несколькими вызовами с помощью <xref:System.Text.Encoder> объекта или вставить в существующих буферов.</span><span class="sxs-lookup"><span data-stu-id="6407e-834">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="6407e-835">Имейте в виду, что эта версия метода небезопасна, так как указатели являются обязательными.</span><span class="sxs-lookup"><span data-stu-id="6407e-835">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="6407e-836">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="6407e-836">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="6407e-837">В этом случае <xref:System.Text.Encoding.GetBytes%2A> версию, которая поддерживает массивы байтов является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-837">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="6407e-838">Рассмотрите возможность использования <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-838">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="6407e-839">Метод преобразования преобразует можно столько данных и создания исключения, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="6407e-839">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="6407e-840">Для непрерывного кодирования потока, этот метод часто является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-840">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-841">Следующий пример определяет число байтов, необходимых для кодирования строки или диапазона в строке, кодирует символы и отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="6407e-841">The following example determines the number of bytes required to encode a string or a range in the string, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/VB/getbytes_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-842"><paramref name="s" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-842"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="6407e-843">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-843">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-844">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-844">-and-</span></span> 
 <span data-ttu-id="6407e-845">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-845"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : nativeptr&lt;char&gt; * int -&gt; int&#xA;override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="encoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="6407e-846">Указатель на первый кодируемый символ.</span><span class="sxs-lookup"><span data-stu-id="6407e-846">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="6407e-847">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-847">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="6407e-848">При переопределении в производном классе вычисляет количество байтов, полученных при кодировании набора символов, начиная с заданного указателя символа.</span><span class="sxs-lookup"><span data-stu-id="6407e-848">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="6407e-849">Число байтов, полученных при кодировании заданных символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-849">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-850">Для вычисления массиве точный размер, который <xref:System.Text.Encoding.GetBytes%2A> требуется для хранения полученных байтов, следует вызывать <xref:System.Text.Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-850">To calculate the exact array size that <xref:System.Text.Encoding.GetBytes%2A> requires to store the resulting bytes, you should call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6407e-851">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-851">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6407e-852"><xref:System.Text.Encoding.GetByteCount%2A> Метод обычно позволяет выделения меньше памяти, хотя <xref:System.Text.Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="6407e-852">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6407e-853"><xref:System.Text.Encoding.GetByteCount%28System.Char%2A%2CSystem.Int32%29> Метод определяет, сколько байтов привести кодировании набора символов Юникода и <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> метод выполняет фактическое кодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-853">The <xref:System.Text.Encoding.GetByteCount%28System.Char%2A%2CSystem.Int32%29> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> method performs the actual encoding.</span></span> <span data-ttu-id="6407e-854"><xref:System.Text.Encoding.GetBytes%2A> Метод ожидает дискретных преобразований, отличается от <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> метод, который обрабатывает несколько преобразований на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-854">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-855">Несколько версий <xref:System.Text.Encoding.GetByteCount%2A> и <xref:System.Text.Encoding.GetBytes%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="6407e-855">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="6407e-856">Ниже приведены некоторые рекомендации по использованию этих методов.</span><span class="sxs-lookup"><span data-stu-id="6407e-856">The following are some considerations for using these methods:</span></span>  
  
-   <span data-ttu-id="6407e-857">Приложение может потребоваться закодировать множество входных символов в кодовую страницу и обработка символов, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="6407e-857">Your app may need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="6407e-858">В этом случае, возможно, необходимо поддерживать состояние между вызовами, принимая во внимание состояние, которое сохраняется <xref:System.Text.Encoder> объект используется.</span><span class="sxs-lookup"><span data-stu-id="6407e-858">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="6407e-859">Если приложение обрабатывает входные строки, следует использовать строковую версию <xref:System.Text.Encoding.GetBytes%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-859">If your app handles string inputs, you should use the string version of the <xref:System.Text.Encoding.GetBytes%2A> method.</span></span>  
  
-   <span data-ttu-id="6407e-860">Версия буфера символов Юникода <xref:System.Text.Encoding.GetBytes%2A> позволяет некоторые быстрые способы, особенно при работе с несколькими вызовами с помощью <xref:System.Text.Encoder> объекта или вставить в существующих буферов.</span><span class="sxs-lookup"><span data-stu-id="6407e-860">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%2A> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="6407e-861">Имейте в виду, что эта версия метода небезопасна, так как указатели являются обязательными.</span><span class="sxs-lookup"><span data-stu-id="6407e-861">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="6407e-862">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="6407e-862">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="6407e-863">В этом случае <xref:System.Text.Encoding.GetBytes%2A> версию, которая поддерживает массивы байтов является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-863">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="6407e-864">Рассмотрите возможность использования <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-864">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="6407e-865">Метод преобразования преобразует можно столько данных и создания исключения, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="6407e-865">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="6407e-866">Для непрерывного кодирования потока, этот метод часто является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-866">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-867"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-867"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6407e-868">Значение параметра <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="6407e-868"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="6407e-869">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-869">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-870">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-870">-and-</span></span> 
 <span data-ttu-id="6407e-871">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-871"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="6407e-872">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="6407e-872">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="6407e-873">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="6407e-873">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public abstract int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : char[] * int * int -&gt; int" Usage="encoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="6407e-874">Массив символов, содержащий набор кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-874">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="6407e-875">Индекс первого кодируемого символа.</span><span class="sxs-lookup"><span data-stu-id="6407e-875">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="6407e-876">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-876">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="6407e-877">При переопределении в производном классе вычисляет количество байтов, полученных при кодировании набора символов из указанного массива символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-877">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span></summary>
        <returns><span data-ttu-id="6407e-878">Число байтов, полученных при кодировании заданных символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-878">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-879">Для вычисления размера точное массива, необходимого <xref:System.Text.Encoding.GetBytes%2A> для сохранения полученных байтов, вызвать <xref:System.Text.Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-879">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6407e-880">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-880">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6407e-881"><xref:System.Text.Encoding.GetByteCount%2A> Метод обычно позволяет выделения меньше памяти, хотя <xref:System.Text.Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="6407e-881">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6407e-882"><xref:System.Text.Encoding.GetByteCount%2A> Метод определяет, сколько байтов привести кодировании набора символов Юникода и <xref:System.Text.Encoding.GetBytes%2A> метод выполняет фактическое кодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-882">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="6407e-883"><xref:System.Text.Encoding.GetBytes%2A> Метод ожидает дискретных преобразований, отличается от <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> метод, который обрабатывает несколько преобразований на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-883">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-884">Несколько версий <xref:System.Text.Encoding.GetByteCount%2A> и <xref:System.Text.Encoding.GetBytes%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="6407e-884">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="6407e-885">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="6407e-885">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="6407e-886">Приложение может потребоваться закодировать множество входных символов в кодовую страницу и обработка символов, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="6407e-886">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="6407e-887">В этом случае, возможно, необходимо поддерживать состояние между вызовами, принимая во внимание состояние, которое сохраняется <xref:System.Text.Encoder> объект используется.</span><span class="sxs-lookup"><span data-stu-id="6407e-887">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="6407e-888">Если приложение обрабатывает входные строки, строковую версию <xref:System.Text.Encoding.GetBytes%2A> рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="6407e-888">If your app handles string inputs, the string version of <xref:System.Text.Encoding.GetBytes%2A> is recommended.</span></span>  
  
-   <span data-ttu-id="6407e-889">Версия буфера символов Юникода <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> позволяет некоторые быстрые способы, особенно при работе с несколькими вызовами с помощью <xref:System.Text.Encoder> объекта или вставить в существующих буферов.</span><span class="sxs-lookup"><span data-stu-id="6407e-889">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="6407e-890">Имейте в виду, что эта версия метода небезопасна, так как указатели являются обязательными.</span><span class="sxs-lookup"><span data-stu-id="6407e-890">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="6407e-891">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="6407e-891">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="6407e-892">В этом случае <xref:System.Text.Encoding.GetBytes%2A> версию, которая поддерживает массивы байтов является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-892">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="6407e-893">Рассмотрите возможность использования <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-893">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="6407e-894">Метод преобразования преобразует можно столько данных и создания исключения, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="6407e-894">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="6407e-895">Для непрерывного кодирования потока, этот метод часто является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-895">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-896">Следующий пример определяет число байтов, необходимых для кодирования трех символов из массива символов и кодирует символы отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="6407e-896">The following example determines the number of bytes required to encode three characters from a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CPP/getbytes_chararric.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CS/getbytes_chararric.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/VB/getbytes_chararric.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-897"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-897"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6407e-898">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="6407e-898"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="6407e-899">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-899">-or-</span></span> 
 <span data-ttu-id="6407e-900">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-900"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="6407e-901">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-901">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-902">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-902">-and-</span></span> 
 <span data-ttu-id="6407e-903">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-903"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public int GetByteCount (string s, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetByteCount(string s, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteCount (s As String, index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetByteCount(System::String ^ s, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetByteCount : string * int * int -&gt; int" Usage="encoding.GetByteCount (s, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="index">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6407e-904">При переопределении в производном классе кодирует набор символов в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-904">When overridden in a derived class, encodes a set of characters into a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetBytes (char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetBytes(char[] chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As Char()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetBytes(cli::array &lt;char&gt; ^ chars);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : char[] -&gt; byte[]&#xA;override this.GetBytes : char[] -&gt; byte[]" Usage="encoding.GetBytes chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="6407e-905">Массив символов, содержащий символы, которые требуется закодировать.</span><span class="sxs-lookup"><span data-stu-id="6407e-905">The character array containing the characters to encode.</span></span></param>
        <summary><span data-ttu-id="6407e-906">При переопределении в производном классе кодирует все символы из указанного массива символов в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-906">When overridden in a derived class, encodes all the characters in the specified character array into a sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="6407e-907">Массив байтов, содержащий результаты кодирования указанного набора символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-907">A byte array containing the results of encoding the specified set of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-908">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных слишком велико, что ему следует разделить на небольшие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.Encoding.GetDecoder%2A> метод или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="6407e-908">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="6407e-909"><xref:System.Text.Encoding.GetByteCount%2A> Метод определяет, сколько байтов привести кодировании набора символов Юникода и <xref:System.Text.Encoding.GetBytes%2A> метод выполняет фактическое кодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-909">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="6407e-910"><xref:System.Text.Encoding.GetBytes%2A> Метод ожидает дискретных преобразований, отличается от <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> метод, который обрабатывает несколько преобразований на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-910">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-911">Несколько версий <xref:System.Text.Encoding.GetByteCount%2A> и <xref:System.Text.Encoding.GetBytes%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="6407e-911">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="6407e-912">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="6407e-912">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="6407e-913">Приложение может потребоваться закодировать множество входных символов в кодовую страницу и обработка символов, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="6407e-913">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="6407e-914">В этом случае, возможно, необходимо поддерживать состояние между вызовами, принимая во внимание состояние, которое сохраняется <xref:System.Text.Encoder> объект используется.</span><span class="sxs-lookup"><span data-stu-id="6407e-914">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="6407e-915">(Например, последовательность символов, которая включает в себя суррогатные пары может заканчиваться старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="6407e-915">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="6407e-916"><xref:System.Text.Encoder> Запомнит старший символ-заместитель, таким образом, чтобы ее можно использовать совместно с младшим символом-заместителем в начале следующего вызова.</span><span class="sxs-lookup"><span data-stu-id="6407e-916">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="6407e-917"><xref:System.Text.Encoding> Невозможно использовать для поддержания состояния, поэтому будет отправлен символ <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="6407e-917"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="6407e-918">Если приложение обрабатывает входные строки, необходимо вызвать строковую версию <xref:System.Text.Encoding.GetBytes%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-918">If your app handles string inputs, you should call the string version of the <xref:System.Text.Encoding.GetBytes%2A> method.</span></span>  
  
-   <span data-ttu-id="6407e-919">Версия буфера символов Юникода <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> позволяет некоторые быстрые способы, особенно при работе с несколькими вызовами с помощью <xref:System.Text.Encoder> объекта или вставить в существующих буферов.</span><span class="sxs-lookup"><span data-stu-id="6407e-919">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="6407e-920">Имейте в виду, что эта версия метода небезопасна, так как указатели являются обязательными.</span><span class="sxs-lookup"><span data-stu-id="6407e-920">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="6407e-921">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="6407e-921">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="6407e-922">В этом случае <xref:System.Text.Encoding.GetBytes%2A> версию, которая поддерживает массивы байтов является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-922">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="6407e-923">Рассмотрите возможность использования <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-923">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="6407e-924">Метод преобразования преобразует можно столько данных и создания исключения, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="6407e-924">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="6407e-925">Для непрерывного кодирования потока, этот метод часто является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-925">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-926">Следующий пример определяет число байтов, необходимых для кодирования массива символов и кодирует символы отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="6407e-926">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-927"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-927"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="6407e-928">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-928">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-929">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-929">-and-</span></span> 
 <span data-ttu-id="6407e-930">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-930"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetBytes (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetBytes(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : string -&gt; byte[]&#xA;override this.GetBytes : string -&gt; byte[]" Usage="encoding.GetBytes s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="6407e-931">Строка, содержащая символы, которые требуется закодировать.</span><span class="sxs-lookup"><span data-stu-id="6407e-931">The string containing the characters to encode.</span></span></param>
        <summary><span data-ttu-id="6407e-932">При переопределении в производном классе кодирует все символы заданной строки в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-932">When overridden in a derived class, encodes all the characters in the specified string into a sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="6407e-933">Массив байтов, содержащий результаты кодирования указанного набора символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-933">A byte array containing the results of encoding the specified set of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-934">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных слишком велико, что ему следует разделить на небольшие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.Encoding.GetDecoder%2A> метод или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="6407e-934">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="6407e-935"><xref:System.Text.Encoding.GetByteCount%2A> Метод определяет, сколько байтов привести кодировании набора символов Юникода и <xref:System.Text.Encoding.GetBytes%2A> метод выполняет фактическое кодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-935">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="6407e-936"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> Метод ожидает дискретных преобразований, отличается от <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> метод, который обрабатывает несколько преобразований на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-936">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-937">Несколько версий <xref:System.Text.Encoding.GetByteCount%2A> и <xref:System.Text.Encoding.GetBytes%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="6407e-937">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="6407e-938">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="6407e-938">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="6407e-939">Приложение может потребоваться закодировать множество входных символов в кодовую страницу и обработка символов, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="6407e-939">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="6407e-940">В этом случае, возможно, необходимо поддерживать состояние между вызовами, принимая во внимание состояние, которое сохраняется <xref:System.Text.Encoder> объект используется.</span><span class="sxs-lookup"><span data-stu-id="6407e-940">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="6407e-941">(Например, последовательность символов, которая включает в себя суррогатные пары может заканчиваться старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="6407e-941">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="6407e-942"><xref:System.Text.Encoder> Запомнит старший символ-заместитель, таким образом, чтобы ее можно использовать совместно с младшим символом-заместителем в начале следующего вызова.</span><span class="sxs-lookup"><span data-stu-id="6407e-942">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="6407e-943"><xref:System.Text.Encoding> Невозможно использовать для поддержания состояния, поэтому будет отправлен символ <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="6407e-943"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="6407e-944">Если приложение обрабатывает входные строки, следует использовать строковую версию <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-944">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="6407e-945">Версия буфера символов Юникода <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> позволяет некоторые быстрые способы, особенно при работе с несколькими вызовами с помощью <xref:System.Text.Encoder> объекта или вставить в существующих буферов.</span><span class="sxs-lookup"><span data-stu-id="6407e-945">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="6407e-946">Имейте в виду, что эта версия метода небезопасна, так как указатели являются обязательными.</span><span class="sxs-lookup"><span data-stu-id="6407e-946">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="6407e-947">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="6407e-947">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="6407e-948">В этом случае <xref:System.Text.Encoding.GetBytes%2A> версию, которая поддерживает массивы байтов является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-948">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="6407e-949">Рассмотрите возможность использования <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-949">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="6407e-950">Метод преобразования преобразует можно столько данных и создания исключения, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="6407e-950">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="6407e-951">Для непрерывного кодирования потока, этот метод часто является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-951">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-952">Следующий пример определяет число байтов, необходимых для кодирования строки или диапазона в строке, кодирует символы и отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="6407e-952">The following example determines the number of bytes required to encode a string or a range in the string, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/VB/getbytes_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-953"><paramref name="s" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-953"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="6407e-954">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-954">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-955">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-955">-and-</span></span> 
 <span data-ttu-id="6407e-956">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-956"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; -&gt; int&#xA;override this.GetBytes : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; -&gt; int" Usage="encoding.GetBytes (chars, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetBytes (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetBytes(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As Char(), index As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetBytes(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : char[] * int * int -&gt; byte[]&#xA;override this.GetBytes : char[] * int * int -&gt; byte[]" Usage="encoding.GetBytes (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="6407e-957">Массив символов, содержащий набор кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-957">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="6407e-958">Индекс первого кодируемого символа.</span><span class="sxs-lookup"><span data-stu-id="6407e-958">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="6407e-959">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-959">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="6407e-960">При переопределении в производном классе кодирует набор символов из указанного массива символов в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-960">When overridden in a derived class, encodes a set of characters from the specified character array into a sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="6407e-961">Массив байтов, содержащий результаты кодирования указанного набора символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-961">A byte array containing the results of encoding the specified set of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-962">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных слишком велико, что ему следует разделить на небольшие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.Encoding.GetDecoder%2A> метод или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="6407e-962">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="6407e-963"><xref:System.Text.Encoding.GetByteCount%2A> Метод определяет, сколько байтов привести кодировании набора символов Юникода и <xref:System.Text.Encoding.GetBytes%2A> метод выполняет фактическое кодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-963">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="6407e-964"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> Метод ожидает дискретных преобразований, отличается от <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> метод, который обрабатывает несколько преобразований на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-964">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-965">Несколько версий <xref:System.Text.Encoding.GetByteCount%2A> и <xref:System.Text.Encoding.GetBytes%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="6407e-965">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="6407e-966">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="6407e-966">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="6407e-967">Приложение может потребоваться закодировать множество входных символов в кодовую страницу и обработка символов, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="6407e-967">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="6407e-968">В этом случае, возможно, необходимо поддерживать состояние между вызовами, принимая во внимание состояние, которое сохраняется <xref:System.Text.Encoder> объект используется.</span><span class="sxs-lookup"><span data-stu-id="6407e-968">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="6407e-969">(Например, последовательность символов, которая включает в себя суррогатные пары может заканчиваться старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="6407e-969">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="6407e-970"><xref:System.Text.Encoder> Запомнит старший символ-заместитель, таким образом, чтобы ее можно использовать совместно с младшим символом-заместителем в начале следующего вызова.</span><span class="sxs-lookup"><span data-stu-id="6407e-970">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="6407e-971"><xref:System.Text.Encoding> Невозможно использовать для поддержания состояния, поэтому будет отправлен символ <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="6407e-971"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="6407e-972">Если приложение обрабатывает входные строки, следует использовать строковую версию <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-972">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="6407e-973">Версия буфера символов Юникода <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> позволяет некоторые быстрые способы, особенно при работе с несколькими вызовами с помощью <xref:System.Text.Encoder> объекта или вставить в существующих буферов.</span><span class="sxs-lookup"><span data-stu-id="6407e-973">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="6407e-974">Имейте в виду, что эта версия метода небезопасна, так как указатели являются обязательными.</span><span class="sxs-lookup"><span data-stu-id="6407e-974">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="6407e-975">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="6407e-975">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="6407e-976">В этом случае <xref:System.Text.Encoding.GetBytes%2A> версию, которая поддерживает массивы байтов является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-976">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="6407e-977">Рассмотрите возможность использования <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-977">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="6407e-978">Метод преобразования преобразует можно столько данных и создания исключения, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="6407e-978">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="6407e-979">Для непрерывного кодирования потока, этот метод часто является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-979">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-980">Следующий пример определяет число байтов, необходимых для кодирования трех символов из массива символов и кодирует символы отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="6407e-980">The following example determines the number of bytes required to encode three characters from a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CPP/getbytes_chararric.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CS/getbytes_chararric.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/VB/getbytes_chararric.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-981"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-981"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6407e-982">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="6407e-982"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="6407e-983">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-983">-or-</span></span> 
 <span data-ttu-id="6407e-984">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-984"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="6407e-985">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-985">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-986">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-986">-and-</span></span> 
 <span data-ttu-id="6407e-987">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-987"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public byte[] GetBytes (string s, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetBytes(string s, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBytes (s As String, index As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetBytes : string * int * int -&gt; byte[]" Usage="encoding.GetBytes (s, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="index">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int&#xA;override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="encoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="6407e-988">Указатель на первый кодируемый символ.</span><span class="sxs-lookup"><span data-stu-id="6407e-988">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="6407e-989">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-989">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="6407e-990">Указатель на положение, с которого начинается запись результирующей последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-990">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="6407e-991">Максимальное число байтов для записи.</span><span class="sxs-lookup"><span data-stu-id="6407e-991">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="6407e-992">При переопределении в производном классе кодирует набор символов, начало которого задается указателем символа, в последовательность байтов, которые сохраняются, начиная с заданного указателя байта.</span><span class="sxs-lookup"><span data-stu-id="6407e-992">When overridden in a derived class, encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="6407e-993">Фактическое число байтов, записанных в местоположение, которое задано параметром <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-993">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-994">Для вычисления массиве точный размер, который <xref:System.Text.Encoding.GetBytes%2A> требуется для сохранения полученных байтов, вызвать <xref:System.Text.Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-994">To calculate the exact array size that <xref:System.Text.Encoding.GetBytes%2A> requires to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6407e-995">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-995">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6407e-996"><xref:System.Text.Encoding.GetByteCount%2A> Метод обычно позволяет выделения меньше памяти, хотя <xref:System.Text.Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="6407e-996">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6407e-997">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных настолько велик, что ему следует разделить на более мелкие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> объект, предоставляемый <xref:System.Text.Encoding.GetDecoder%2A>настроек или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="6407e-997">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.Encoding.GetDecoder%2A> or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="6407e-998"><xref:System.Text.Encoding.GetByteCount%2A> Метод определяет, сколько байтов привести кодировании набора символов Юникода и <xref:System.Text.Encoding.GetBytes%2A> метод выполняет фактическое кодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-998">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="6407e-999"><xref:System.Text.Encoding.GetBytes%2A> Метод ожидает дискретных преобразований, отличается от <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> метод, который обрабатывает несколько преобразований на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-999">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-1000">Несколько версий <xref:System.Text.Encoding.GetByteCount%2A> и <xref:System.Text.Encoding.GetBytes%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="6407e-1000">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="6407e-1001">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1001">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="6407e-1002">Приложение может потребоваться закодировать множество входных символов в кодовую страницу и обработка символов, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1002">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="6407e-1003">В этом случае, возможно, необходимо поддерживать состояние между вызовами, принимая во внимание состояние, которое сохраняется <xref:System.Text.Encoder> объект используется.</span><span class="sxs-lookup"><span data-stu-id="6407e-1003">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="6407e-1004">(Например, последовательность символов, которая включает в себя суррогатные пары может заканчиваться старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="6407e-1004">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="6407e-1005"><xref:System.Text.Encoder> Запомнит старший символ-заместитель, таким образом, чтобы ее можно использовать совместно с младшим символом-заместителем в начале следующего вызова.</span><span class="sxs-lookup"><span data-stu-id="6407e-1005">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="6407e-1006"><xref:System.Text.Encoding> Невозможно использовать для поддержания состояния, поэтому будет отправлен символ <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="6407e-1006"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="6407e-1007">Если приложение обрабатывает входные строки, следует использовать строковую версию <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1007">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="6407e-1008">Версия буфера символов Юникода <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> позволяет некоторые быстрые способы, особенно при работе с несколькими вызовами с помощью <xref:System.Text.Encoder> объекта или вставить в существующих буферов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1008">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="6407e-1009">Имейте в виду, что эта версия метода небезопасна, так как указатели являются обязательными.</span><span class="sxs-lookup"><span data-stu-id="6407e-1009">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="6407e-1010">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="6407e-1010">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="6407e-1011">В этом случае <xref:System.Text.Encoding.GetBytes%2A> версию, которая поддерживает массивы байтов является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-1011">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="6407e-1012">Рассмотрите возможность использования <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1012">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="6407e-1013">Метод преобразования преобразует можно столько данных и создания исключения, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="6407e-1013">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="6407e-1014">Для непрерывного кодирования потока, этот метод часто является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-1014">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-1015"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1015"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6407e-1016">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-1016">-or-</span></span> 
 <span data-ttu-id="6407e-1017"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1017"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6407e-1018">Значение параметра <paramref name="charCount" /> или <paramref name="byteCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="6407e-1018"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6407e-1019"><paramref name="byteCount" /> меньше результирующего числа байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1019"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="6407e-1020">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-1020">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-1021">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-1021">-and-</span></span> 
 <span data-ttu-id="6407e-1022">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1022"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="6407e-1023">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="6407e-1023">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="6407e-1024">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="6407e-1024">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public abstract int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="encoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="6407e-1025">Массив символов, содержащий набор кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1025">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="6407e-1026">Индекс первого кодируемого символа.</span><span class="sxs-lookup"><span data-stu-id="6407e-1026">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="6407e-1027">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1027">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="6407e-1028">Массив байтов, в который будет помещена результирующая последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1028">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="6407e-1029">Индекс, с которого начинается запись результирующей последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1029">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="6407e-1030">При переопределении в производном классе кодирует набор символов из указанного массива символов в указанный массив байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1030">When overridden in a derived class, encodes a set of characters from the specified character array into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="6407e-1031">Фактическое число байтов, записанных в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1031">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1032">Для вычисления размера точное массива, необходимого <xref:System.Text.Encoding.GetBytes%2A> для хранения полученных байтов, следует вызывать <xref:System.Text.Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1032">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, you should call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6407e-1033">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1033">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6407e-1034"><xref:System.Text.Encoding.GetByteCount%2A> Метод обычно позволяет выделения меньше памяти, хотя <xref:System.Text.Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="6407e-1034">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6407e-1035">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных слишком велико, что ему следует разделить на небольшие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.Encoding.GetDecoder%2A> метод или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="6407e-1035">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="6407e-1036"><xref:System.Text.Encoding.GetByteCount%2A> Метод определяет, сколько байтов привести кодировании набора символов Юникода и <xref:System.Text.Encoding.GetBytes%2A> метод выполняет фактическое кодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-1036">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="6407e-1037"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> Метод ожидает дискретных преобразований, отличается от <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> метод, который обрабатывает несколько преобразований на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-1037">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-1038">Несколько версий <xref:System.Text.Encoding.GetByteCount%2A> и <xref:System.Text.Encoding.GetBytes%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="6407e-1038">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="6407e-1039">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1039">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="6407e-1040">Приложение может потребоваться закодировать множество входных символов в кодовую страницу и обработка символов, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1040">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="6407e-1041">В этом случае, возможно, необходимо поддерживать состояние между вызовами, принимая во внимание состояние, которое сохраняется <xref:System.Text.Encoder> объект используется.</span><span class="sxs-lookup"><span data-stu-id="6407e-1041">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="6407e-1042">(Например, последовательность символов, которая включает в себя суррогатные пары может заканчиваться старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="6407e-1042">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="6407e-1043"><xref:System.Text.Encoder> Запомнит старший символ-заместитель, таким образом, чтобы ее можно использовать совместно с младшим символом-заместителем в начале следующего вызова.</span><span class="sxs-lookup"><span data-stu-id="6407e-1043">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="6407e-1044"><xref:System.Text.Encoding> Невозможно использовать для поддержания состояния, поэтому будет отправлен символ <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="6407e-1044"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="6407e-1045">Если приложение обрабатывает входные строки, следует использовать строковую версию <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1045">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="6407e-1046">Версия буфера символов Юникода <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> позволяет некоторые быстрые способы, особенно при работе с несколькими вызовами с помощью <xref:System.Text.Encoder> объекта или вставить в существующих буферов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1046">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="6407e-1047">Имейте в виду, что эта версия метода небезопасна, так как указатели являются обязательными.</span><span class="sxs-lookup"><span data-stu-id="6407e-1047">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="6407e-1048">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="6407e-1048">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="6407e-1049">В этом случае <xref:System.Text.Encoding.GetBytes%2A> версию, которая поддерживает массивы байтов является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-1049">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="6407e-1050">Рассмотрите возможность использования <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1050">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="6407e-1051">Метод преобразования преобразует можно столько данных и создания исключения, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="6407e-1051">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="6407e-1052">Для непрерывного кодирования потока, этот метод часто является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-1052">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1053">Следующий пример определяет число байтов, необходимых для кодирования трех символов из массива символов и кодирует символы отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="6407e-1053">The following example determines the number of bytes required to encode three characters from a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CPP/getbytes_chararric.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CS/getbytes_chararric.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/VB/getbytes_chararric.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-1054"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1054"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6407e-1055">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-1055">-or-</span></span> 
 <span data-ttu-id="6407e-1056"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1056"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6407e-1057">Значение параметра <paramref name="charIndex" />, <paramref name="charCount" /> или <paramref name="byteIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="6407e-1057"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="6407e-1058">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-1058">-or-</span></span> 
 <span data-ttu-id="6407e-1059">Параметры <paramref name="charIndex" /> и <paramref name="charCount" /> не указывают допустимый диапазон в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1059"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="6407e-1060">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-1060">-or-</span></span> 
 <span data-ttu-id="6407e-1061">Значение параметра <paramref name="byteIndex" /> не является допустимым индексом в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1061"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6407e-1062">Недостаточно емкости <paramref name="bytes" /> от <paramref name="byteIndex" /> до конца массива для размещения полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1062"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="6407e-1063">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-1063">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-1064">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-1064">-and-</span></span> 
 <span data-ttu-id="6407e-1065">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1065"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : string * int * int * byte[] * int -&gt; int&#xA;override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="encoding.GetBytes (s, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="6407e-1066">Строка, содержащая набор символов для кодирования.</span><span class="sxs-lookup"><span data-stu-id="6407e-1066">The string containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="6407e-1067">Индекс первого кодируемого символа.</span><span class="sxs-lookup"><span data-stu-id="6407e-1067">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="6407e-1068">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1068">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="6407e-1069">Массив байтов, в который будет помещена результирующая последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1069">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="6407e-1070">Индекс, с которого начинается запись результирующей последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1070">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="6407e-1071">При переопределении в производном классе кодирует набор символов из заданной строки в заданный массив байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1071">When overridden in a derived class, encodes a set of characters from the specified string into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="6407e-1072">Фактическое число байтов, записанных в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1072">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1073">Для вычисления размера точное массива, необходимого <xref:System.Text.Encoding.GetBytes%2A> для хранения полученных байтов, следует вызывать <xref:System.Text.Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1073">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, you should call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6407e-1074">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1074">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6407e-1075"><xref:System.Text.Encoding.GetByteCount%2A> Метод обычно позволяет выделения меньше памяти, хотя <xref:System.Text.Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="6407e-1075">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6407e-1076">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных слишком велико, что ему следует разделить на небольшие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.Encoding.GetDecoder%2A> метод или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="6407e-1076">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="6407e-1077"><xref:System.Text.Encoding.GetByteCount%2A> Метод определяет, сколько байтов привести кодировании набора символов Юникода и <xref:System.Text.Encoding.GetBytes%2A> метод выполняет фактическое кодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-1077">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="6407e-1078"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> Метод ожидает дискретных преобразований, отличается от <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> метод, который обрабатывает несколько преобразований на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-1078">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-1079">Несколько версий <xref:System.Text.Encoding.GetByteCount%2A> и <xref:System.Text.Encoding.GetBytes%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="6407e-1079">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="6407e-1080">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1080">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="6407e-1081">Приложение может потребоваться закодировать множество входных символов в кодовую страницу и обработка символов, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1081">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="6407e-1082">В этом случае, возможно, необходимо поддерживать состояние между вызовами, принимая во внимание состояние, которое сохраняется <xref:System.Text.Encoder> объект используется.</span><span class="sxs-lookup"><span data-stu-id="6407e-1082">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="6407e-1083">(Например, последовательность символов, которая включает в себя суррогатные пары может заканчиваться старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="6407e-1083">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="6407e-1084"><xref:System.Text.Encoder> Запомнит старший символ-заместитель, таким образом, чтобы ее можно использовать совместно с младшим символом-заместителем в начале следующего вызова.</span><span class="sxs-lookup"><span data-stu-id="6407e-1084">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="6407e-1085"><xref:System.Text.Encoding> Невозможно использовать для поддержания состояния, поэтому будет отправлен символ <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="6407e-1085"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="6407e-1086">Если приложение обрабатывает входные строки, следует использовать строковую версию <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1086">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="6407e-1087">Версия буфера символов Юникода <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> позволяет некоторые быстрые способы, особенно при работе с несколькими вызовами с помощью <xref:System.Text.Encoder> объекта или вставить в существующих буферов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1087">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="6407e-1088">Имейте в виду, что эта версия метода небезопасна, так как указатели являются обязательными.</span><span class="sxs-lookup"><span data-stu-id="6407e-1088">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="6407e-1089">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="6407e-1089">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="6407e-1090">В этом случае <xref:System.Text.Encoding.GetBytes%2A> версию, которая поддерживает массивы байтов является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-1090">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="6407e-1091">Рассмотрите возможность использования <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1091">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="6407e-1092">Метод преобразования преобразует можно столько данных и создания исключения, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="6407e-1092">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="6407e-1093">Для непрерывного кодирования потока, этот метод часто является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-1093">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1094">Следующий пример определяет число байтов, необходимых для кодирования строки или диапазона в строке, кодирует символы и отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="6407e-1094">The following example determines the number of bytes required to encode a string or a range in the string, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/VB/getbytes_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-1095"><paramref name="s" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1095"><paramref name="s" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6407e-1096">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-1096">-or-</span></span> 
 <span data-ttu-id="6407e-1097"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1097"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6407e-1098">Значение параметра <paramref name="charIndex" />, <paramref name="charCount" /> или <paramref name="byteIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="6407e-1098"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="6407e-1099">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-1099">-or-</span></span> 
 <span data-ttu-id="6407e-1100">Параметры <paramref name="charIndex" /> и <paramref name="charCount" /> не указывают допустимый диапазон в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1100"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="6407e-1101">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-1101">-or-</span></span> 
 <span data-ttu-id="6407e-1102">Значение параметра <paramref name="byteIndex" /> не является допустимым индексом в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1102"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6407e-1103">Недостаточно емкости <paramref name="bytes" /> от <paramref name="byteIndex" /> до конца массива для размещения полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1103"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="6407e-1104">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-1104">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-1105">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-1105">-and-</span></span> 
 <span data-ttu-id="6407e-1106">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1106"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6407e-1107">При переопределении в производном классе вычисляет количество символов, полученных при декодировании последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1107">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharCount (bytes As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : byte[] -&gt; int&#xA;override this.GetCharCount : byte[] -&gt; int" Usage="encoding.GetCharCount bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="6407e-1108">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="6407e-1108">The byte array containing the sequence of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="6407e-1109">При переопределении в производном классе вычисляет количество символов, полученных при декодировании всех байтов из заданного массива байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1109">When overridden in a derived class, calculates the number of characters produced by decoding all the bytes in the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="6407e-1110">Число символов, полученных при декодировании заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1110">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1111">Для вычисления размера точное массива, необходимого <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> для хранения полученных символов, следует использовать <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1111">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> method.</span></span> <span data-ttu-id="6407e-1112">Чтобы вычислить максимальный размер массива, следует использовать <xref:System.Text.Encoding.GetMaxCharCount%28System.Int32%29> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1112">To calculate the maximum array size, you should use the <xref:System.Text.Encoding.GetMaxCharCount%28System.Int32%29> method.</span></span> <span data-ttu-id="6407e-1113"><xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> Метод обычно позволяет выделения меньше памяти, хотя <xref:System.Text.Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="6407e-1113">The <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6407e-1114"><xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> Метод определяет, сколько символов привести декодировании последовательности байтов и <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> метод выполняет фактическое декодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-1114">The <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> method determines how many characters result in decoding a sequence of bytes, and the  <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> method performs the actual decoding.</span></span> <span data-ttu-id="6407e-1115"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Метод ожидает дискретных преобразований, отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> метод, который обрабатывает несколько проходов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-1115">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-1116">Несколько версий <xref:System.Text.Encoding.GetCharCount%2A> и <xref:System.Text.Encoding.GetChars%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="6407e-1116">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="6407e-1117">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1117">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="6407e-1118">Приложение может потребоваться декодировать множество входных байтов из кодовой страницы и обработать эти байты, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1118">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="6407e-1119">В этом случае, возможно, необходимо поддерживать состояние между вызовами.</span><span class="sxs-lookup"><span data-stu-id="6407e-1119">In this case, you probably need to maintain state between calls.</span></span>  
  
-   <span data-ttu-id="6407e-1120">Если приложение обрабатывает строки, следует использовать <xref:System.Text.Encoding.GetString%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1120">If your app handles string outputs, you should use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="6407e-1121">Так как этот метод должен проверить длину строки и выделить буфер, это немного медленнее, но полученный в результате <xref:System.String> типа является предпочтительным.</span><span class="sxs-lookup"><span data-stu-id="6407e-1121">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="6407e-1122">Версия байтов <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> позволяет некоторые быстрые способы, особенно при работе с несколькими вызовами в больших буферов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1122">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="6407e-1123">Имейте в виду, что эта версия метода небезопасна, так как указатели являются обязательными.</span><span class="sxs-lookup"><span data-stu-id="6407e-1123">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="6407e-1124">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="6407e-1124">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="6407e-1125">В этом случае [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > версии, что поддержка выходных символов буферы отлично подходит.</span><span class="sxs-lookup"><span data-stu-id="6407e-1125">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="6407e-1126">Рассмотрите возможность использования <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1126">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="6407e-1127">Метод преобразования преобразует можно столько данных и создает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="6407e-1127">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="6407e-1128">Для непрерывного декодирования потока, этот метод часто является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-1128">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1129">В следующем примере строка кодируется в массив байтов и затем декодирует байты в массив символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1129">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/VB/getchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-1130"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1130"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="6407e-1131">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-1131">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-1132">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-1132">-and-</span></span> 
 <span data-ttu-id="6407e-1133">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1133"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.Encoding.GetChars" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharCount (bytes As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : ReadOnlySpan&lt;byte&gt; -&gt; int&#xA;override this.GetCharCount : ReadOnlySpan&lt;byte&gt; -&gt; int" Usage="encoding.GetCharCount bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int&#xA;override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="encoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="6407e-1134">Указатель на первый декодируемый байт.</span><span class="sxs-lookup"><span data-stu-id="6407e-1134">A pointer to the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="6407e-1135">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="6407e-1135">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="6407e-1136">При переопределении в производном классе вычисляет количество символов, полученных при декодировании последовательности байтов, начало которой задается указателем байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1136">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="6407e-1137">Число символов, полученных при декодировании заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1137">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1138">Для вычисления массиве точный размер, который <xref:System.Text.Encoding.GetChars%2A> требуется для хранения полученных символов, следует использовать <xref:System.Text.Encoding.GetCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1138">To calculate the exact array size that <xref:System.Text.Encoding.GetChars%2A> requires to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="6407e-1139">Чтобы вычислить максимальный размер массива, используйте <xref:System.Text.Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1139">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="6407e-1140"><xref:System.Text.Encoding.GetCharCount%2A> Метод обычно позволяет выделения меньше памяти, хотя <xref:System.Text.Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="6407e-1140">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6407e-1141"><xref:System.Text.Encoding.GetCharCount%2A> Метод определяет, сколько символов привести декодировании последовательности байтов и <xref:System.Text.Encoding.GetChars%2A> метод выполняет фактическое декодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-1141">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="6407e-1142"><xref:System.Text.Encoding.GetChars%2A> Метод ожидает дискретных преобразований, отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> метод, который обрабатывает несколько проходов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-1142">The <xref:System.Text.Encoding.GetChars%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-1143">Несколько версий <xref:System.Text.Encoding.GetCharCount%2A> и <xref:System.Text.Encoding.GetChars%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="6407e-1143">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="6407e-1144">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1144">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="6407e-1145">Приложение может потребоваться декодировать множество входных байтов из кодовой страницы и обработать эти байты, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1145">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="6407e-1146">В этом случае, возможно, необходимо поддерживать состояние между вызовами.</span><span class="sxs-lookup"><span data-stu-id="6407e-1146">In this case, you probably need to maintain state between calls.</span></span>  
  
-   <span data-ttu-id="6407e-1147">Если приложение обрабатывает строки, рекомендуется использовать <xref:System.Text.Encoding.GetString%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1147">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="6407e-1148">Так как этот метод должен проверить длину строки и выделить буфер, это немного медленнее, но полученный в результате <xref:System.String> типа является предпочтительным.</span><span class="sxs-lookup"><span data-stu-id="6407e-1148">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="6407e-1149">Версия байтов <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> позволяет некоторые быстрые способы, особенно при работе с несколькими вызовами в больших буферов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1149">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="6407e-1150">Имейте в виду, что эта версия метода небезопасна, так как указатели являются обязательными.</span><span class="sxs-lookup"><span data-stu-id="6407e-1150">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="6407e-1151">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="6407e-1151">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="6407e-1152">В этом случае [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > версии, что поддержка выходных символов буферы отлично подходит.</span><span class="sxs-lookup"><span data-stu-id="6407e-1152">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="6407e-1153">Рассмотрите возможность использования <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1153">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="6407e-1154">Метод преобразования преобразует можно столько данных и создает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="6407e-1154">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="6407e-1155">Для непрерывного декодирования потока, этот метод часто является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-1155">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-1156"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1156"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6407e-1157">Значение параметра <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="6407e-1157"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="6407e-1158">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-1158">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-1159">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-1159">-and-</span></span> 
 <span data-ttu-id="6407e-1160">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1160"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="6407e-1161">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="6407e-1161">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="6407e-1162">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="6407e-1162">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Text.Encoding.GetChars" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public abstract int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : byte[] * int * int -&gt; int" Usage="encoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="6407e-1163">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="6407e-1163">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="6407e-1164">Индекс первого декодируемого байта.</span><span class="sxs-lookup"><span data-stu-id="6407e-1164">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="6407e-1165">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="6407e-1165">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="6407e-1166">При переопределении в производном классе вычисляет количество символов, полученных при декодировании последовательности байтов из заданного массива байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1166">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="6407e-1167">Число символов, полученных при декодировании заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1167">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1168">Для вычисления размера точное массива, необходимого <xref:System.Text.Encoding.GetChars%2A> для хранения полученных символов, следует использовать <xref:System.Text.Encoding.GetCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1168">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%2A> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="6407e-1169">Чтобы вычислить максимальный размер массива, используйте <xref:System.Text.Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1169">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="6407e-1170"><xref:System.Text.Encoding.GetCharCount%2A> Метод обычно позволяет выделения меньше памяти, хотя <xref:System.Text.Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="6407e-1170">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6407e-1171"><xref:System.Text.Encoding.GetCharCount%2A> Метод определяет, сколько символов привести декодировании последовательности байтов и <xref:System.Text.Encoding.GetChars%2A> метод выполняет фактическое декодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-1171">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="6407e-1172"><xref:System.Text.Encoding.GetChars%2A> Метод ожидает дискретных преобразований, отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> метод, который обрабатывает несколько проходов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-1172">The <xref:System.Text.Encoding.GetChars%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-1173">Несколько версий <xref:System.Text.Encoding.GetCharCount%2A> и <xref:System.Text.Encoding.GetChars%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="6407e-1173">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="6407e-1174">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1174">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="6407e-1175">Приложение может потребоваться декодировать множество входных байтов из кодовой страницы и обработать эти байты, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1175">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="6407e-1176">В этом случае, возможно, необходимо поддерживать состояние между вызовами.</span><span class="sxs-lookup"><span data-stu-id="6407e-1176">In this case, you probably need to maintain state between calls.</span></span>  
  
-   <span data-ttu-id="6407e-1177">Если приложение обрабатывает строки, рекомендуется использовать <xref:System.Text.Encoding.GetString%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1177">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="6407e-1178">Так как этот метод должен проверить длину строки и выделить буфер, это немного медленнее, но полученный в результате <xref:System.String> типа является предпочтительным.</span><span class="sxs-lookup"><span data-stu-id="6407e-1178">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="6407e-1179">Версия байтов <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> позволяет некоторые быстрые способы, особенно при работе с несколькими вызовами в больших буферов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1179">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="6407e-1180">Имейте в виду, что эта версия метода небезопасна, так как указатели являются обязательными.</span><span class="sxs-lookup"><span data-stu-id="6407e-1180">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="6407e-1181">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="6407e-1181">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="6407e-1182">В этом случае [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > версии, что поддержка выходных символов буферы отлично подходит.</span><span class="sxs-lookup"><span data-stu-id="6407e-1182">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="6407e-1183">Рассмотрите возможность использования <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1183">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="6407e-1184">Метод преобразования преобразует можно столько данных и создает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="6407e-1184">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="6407e-1185">Для непрерывного декодирования потока, этот метод часто является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-1185">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1186">Следующий пример преобразует строку из одной кодировки в другую.</span><span class="sxs-lookup"><span data-stu-id="6407e-1186">The following example converts a string from one encoding to another.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 <span data-ttu-id="6407e-1187">В следующем примере строка кодируется в массив байтов и затем Декодирует диапазон байтов в массив символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1187">The following example encodes a string into an array of bytes, and then decodes a range of the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CPP/getcharsic.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CS/getcharsic.cs#1)]
 [!code-vb[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/VB/getcharsic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-1188"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1188"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6407e-1189">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="6407e-1189"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="6407e-1190">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-1190">-or-</span></span> 
 <span data-ttu-id="6407e-1191">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1191"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="6407e-1192">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-1192">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-1193">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-1193">-and-</span></span> 
 <span data-ttu-id="6407e-1194">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1194"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.Encoding.GetChars" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6407e-1195">При переопределении в производном классе декодирует последовательность байтов в набор символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1195">When overridden in a derived class, decodes a sequence of bytes into a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual char[] GetChars (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char[] GetChars(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As Byte()) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;char&gt; ^ GetChars(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : byte[] -&gt; char[]&#xA;override this.GetChars : byte[] -&gt; char[]" Usage="encoding.GetChars bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="6407e-1196">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="6407e-1196">The byte array containing the sequence of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="6407e-1197">При переопределении в производном классе декодирует все байты из указанного массива байтов в набор символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1197">When overridden in a derived class, decodes all the bytes in the specified byte array into a set of characters.</span></span></summary>
        <returns><span data-ttu-id="6407e-1198">Массив символов, содержащий результаты декодирования указанной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1198">A character array containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1199"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Получает символы из входной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1199"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="6407e-1200"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> поскольку <xref:System.Text.Encoding> ожидает дискретных преобразования, хотя <xref:System.Text.Decoder> предназначен для нескольких этапов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-1200"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-1201">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных слишком велико, что ему следует разделить на небольшие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.Encoding.GetDecoder%2A> метод или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="6407e-1201">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="6407e-1202">**Примечание** этот метод предназначен для работы с символами Юникода, а не на произвольных двоичных данных, таких как массивы байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1202">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="6407e-1203">Если вам нужно закодировать произвольные двоичные данные в текст, следует использовать протокол, например uuencode, который реализуется методами, такими как <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1203">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6407e-1204"><xref:System.Text.Encoding.GetCharCount%2A> Метод определяет, сколько символов привести декодировании последовательности байтов и <xref:System.Text.Encoding.GetChars%2A> метод выполняет фактическое декодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-1204">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="6407e-1205"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Метод ожидает дискретных преобразований, отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> метод, который обрабатывает несколько проходов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-1205">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-1206">Несколько версий <xref:System.Text.Encoding.GetCharCount%2A> и <xref:System.Text.Encoding.GetChars%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="6407e-1206">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="6407e-1207">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1207">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="6407e-1208">Приложение может потребоваться декодировать множество входных байтов из кодовой страницы и обработать эти байты, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1208">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="6407e-1209">В этом случае, возможно, необходимо поддерживать состояние между вызовами, так как последовательности байтов может быть прервана, при обработке в пакетах.</span><span class="sxs-lookup"><span data-stu-id="6407e-1209">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="6407e-1210">(Например, один может оказаться часть последовательности shift ISO-2022 <xref:System.Text.Encoding.GetChars%2A> вызова и по-прежнему в начале следующего <xref:System.Text.Encoding.GetChars%2A> вызова.</span><span class="sxs-lookup"><span data-stu-id="6407e-1210">(For example, part of an ISO-2022 shift sequence may end one <xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next <xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="6407e-1211"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> будет вызывать резервный вариант для этих неполной последовательности, но <xref:System.Text.Decoder> запомнит эти последовательности для следующего звонка.)</span><span class="sxs-lookup"><span data-stu-id="6407e-1211"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="6407e-1212">Если приложение обрабатывает строки, рекомендуется использовать <xref:System.Text.Encoding.GetString%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1212">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="6407e-1213">Так как этот метод должен проверить длину строки и выделить буфер, это немного медленнее, но полученный в результате <xref:System.String> типа является предпочтительным.</span><span class="sxs-lookup"><span data-stu-id="6407e-1213">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="6407e-1214">Версия байтов <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> позволяет некоторые быстрые способы, особенно при работе с несколькими вызовами в больших буферов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1214">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="6407e-1215">Имейте в виду, что эта версия метода небезопасна, так как указатели являются обязательными.</span><span class="sxs-lookup"><span data-stu-id="6407e-1215">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="6407e-1216">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="6407e-1216">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="6407e-1217">В этом случае [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > версии, что поддержка выходных символов буферы отлично подходит.</span><span class="sxs-lookup"><span data-stu-id="6407e-1217">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="6407e-1218">Рассмотрите возможность использования <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1218">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="6407e-1219">Метод преобразования преобразует можно столько данных и создает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="6407e-1219">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="6407e-1220">Для непрерывного декодирования потока, этот метод часто является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-1220">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1221">В следующем примере строка кодируется в массив байтов и затем декодирует байты в массив символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1221">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/VB/getchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-1222"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1222"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="6407e-1223">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-1223">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-1224">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-1224">-and-</span></span> 
 <span data-ttu-id="6407e-1225">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1225"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(ReadOnlySpan&lt;System::Byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; -&gt; int&#xA;override this.GetChars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; -&gt; int" Usage="encoding.GetChars (bytes, chars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual char[] GetChars (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char[] GetChars(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As Byte(), index As Integer, count As Integer) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;char&gt; ^ GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : byte[] * int * int -&gt; char[]&#xA;override this.GetChars : byte[] * int * int -&gt; char[]" Usage="encoding.GetChars (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="6407e-1226">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="6407e-1226">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="6407e-1227">Индекс первого декодируемого байта.</span><span class="sxs-lookup"><span data-stu-id="6407e-1227">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="6407e-1228">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="6407e-1228">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="6407e-1229">При переопределении в производном классе декодирует последовательность байтов из указанного массива байтов в набор символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1229">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into a set of characters.</span></span></summary>
        <returns><span data-ttu-id="6407e-1230">Массив символов, содержащий результаты декодирования указанной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1230">A character array containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1231"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Получает символы из входной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1231"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="6407e-1232"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> поскольку <xref:System.Text.Encoding> ожидает дискретных преобразования, хотя <xref:System.Text.Decoder> предназначен для нескольких этапов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-1232"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-1233">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных слишком велико, что ему следует разделить на небольшие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.Encoding.GetDecoder%2A> метод или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="6407e-1233">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="6407e-1234">**Примечание** этот метод предназначен для работы с символами Юникода, а не на произвольных двоичных данных, таких как массивы байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1234">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="6407e-1235">Если вам нужно закодировать произвольные двоичные данные в текст, следует использовать протокол, например uuencode, который реализуется методами, такими как <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1235">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6407e-1236"><xref:System.Text.Encoding.GetCharCount%2A> Метод определяет, сколько символов привести декодировании последовательности байтов и <xref:System.Text.Encoding.GetChars%2A> метод выполняет фактическое декодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-1236">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="6407e-1237"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Метод ожидает дискретных преобразований, отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> метод, который обрабатывает несколько проходов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-1237">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-1238">Несколько версий <xref:System.Text.Encoding.GetCharCount%2A> и <xref:System.Text.Encoding.GetChars%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="6407e-1238">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="6407e-1239">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1239">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="6407e-1240">Приложение может потребоваться декодировать множество входных байтов из кодовой страницы и обработать эти байты, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1240">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="6407e-1241">В этом случае, возможно, необходимо поддерживать состояние между вызовами, так как последовательности байтов может быть прервана, при обработке в пакетах.</span><span class="sxs-lookup"><span data-stu-id="6407e-1241">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="6407e-1242">(Например, один может оказаться часть последовательности shift ISO-2022 <xref:System.Text.Encoding.GetChars%2A> вызова и по-прежнему в начале следующего <xref:System.Text.Encoding.GetChars%2A> вызова.</span><span class="sxs-lookup"><span data-stu-id="6407e-1242">(For example, part of an ISO-2022 shift sequence may end one <xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next <xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="6407e-1243"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> будет вызывать резервный вариант для этих неполной последовательности, но <xref:System.Text.Decoder> запомнит эти последовательности для следующего звонка.)</span><span class="sxs-lookup"><span data-stu-id="6407e-1243"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="6407e-1244">Если приложение обрабатывает строки, рекомендуется использовать <xref:System.Text.Encoding.GetString%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1244">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="6407e-1245">Так как этот метод должен проверить длину строки и выделить буфер, это немного медленнее, но полученный в результате <xref:System.String> типа является предпочтительным.</span><span class="sxs-lookup"><span data-stu-id="6407e-1245">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="6407e-1246">Версия байтов <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> позволяет некоторые быстрые способы, особенно при работе с несколькими вызовами в больших буферов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1246">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="6407e-1247">Имейте в виду, что эта версия метода небезопасна, так как указатели являются обязательными.</span><span class="sxs-lookup"><span data-stu-id="6407e-1247">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="6407e-1248">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="6407e-1248">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="6407e-1249">В этом случае [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > версии, что поддержка выходных символов буферы отлично подходит.</span><span class="sxs-lookup"><span data-stu-id="6407e-1249">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="6407e-1250">Рассмотрите возможность использования <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1250">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="6407e-1251">Метод преобразования преобразует можно столько данных и создает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="6407e-1251">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="6407e-1252">Для непрерывного декодирования потока, этот метод часто является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-1252">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1253">В следующем примере строка кодируется в массив байтов и затем Декодирует диапазон байтов в массив символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1253">The following example encodes a string into an array of bytes, and then decodes a range of the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CPP/getcharsic.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CS/getcharsic.cs#1)]
 [!code-vb[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/VB/getcharsic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-1254"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1254"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6407e-1255">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="6407e-1255"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="6407e-1256">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-1256">-or-</span></span> 
 <span data-ttu-id="6407e-1257">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1257"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="6407e-1258">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-1258">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-1259">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-1259">-and-</span></span> 
 <span data-ttu-id="6407e-1260">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1260"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int&#xA;override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="encoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="6407e-1261">Указатель на первый декодируемый байт.</span><span class="sxs-lookup"><span data-stu-id="6407e-1261">A pointer to the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="6407e-1262">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="6407e-1262">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="6407e-1263">Указатель на положение, с которого начинается запись результирующего набора символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1263">A pointer to the location at which to start writing the resulting set of characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="6407e-1264">Наибольшее количество символов для записи.</span><span class="sxs-lookup"><span data-stu-id="6407e-1264">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="6407e-1265">При переопределении в производном классе декодирует последовательность байтов, которая начинается с заданного указателя байта, в набор символов, которые сохраняются, начиная с заданного указателя символа.</span><span class="sxs-lookup"><span data-stu-id="6407e-1265">When overridden in a derived class, decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="6407e-1266">Фактическое число символов, записанных в местоположение, которое задано параметром <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1266">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1267">Для вычисления массиве точный размер, который <xref:System.Text.Encoding.GetChars%2A> требуется для хранения полученных символов, следует использовать <xref:System.Text.Encoding.GetCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1267">To calculate the exact array size that <xref:System.Text.Encoding.GetChars%2A> requires to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="6407e-1268">Чтобы вычислить максимальный размер массива, используйте <xref:System.Text.Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1268">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="6407e-1269"><xref:System.Text.Encoding.GetCharCount%2A> Метод обычно позволяет выделения меньше памяти, хотя <xref:System.Text.Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="6407e-1269">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6407e-1270"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Получает символы из входной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1270"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="6407e-1271"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> поскольку <xref:System.Text.Encoding> ожидает дискретных преобразования, хотя <xref:System.Text.Decoder> предназначен для нескольких этапов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-1271"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-1272">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных настолько велик, что ему следует разделить на более мелкие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> объект, предоставляемый <xref:System.Text.Encoding.GetDecoder%2A>настроек или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="6407e-1272">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.Encoding.GetDecoder%2A> or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="6407e-1273">**Примечание** этот метод предназначен для работы с символами Юникода, а не на произвольных двоичных данных, таких как массивы байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1273">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="6407e-1274">Если вам нужно закодировать произвольные двоичные данные в текст, следует использовать протокол, например uuencode, который реализуется методами, такими как <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1274">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6407e-1275"><xref:System.Text.Encoding.GetCharCount%2A> Метод определяет, сколько символов привести декодировании последовательности байтов и <xref:System.Text.Encoding.GetChars%2A> метод выполняет фактическое декодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-1275">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="6407e-1276"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Метод ожидает дискретных преобразований, отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> метод, который обрабатывает несколько проходов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-1276">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-1277">Несколько версий <xref:System.Text.Encoding.GetCharCount%2A> и <xref:System.Text.Encoding.GetChars%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="6407e-1277">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="6407e-1278">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1278">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="6407e-1279">Приложение может потребоваться декодировать множество входных байтов из кодовой страницы и обработать эти байты, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1279">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="6407e-1280">В этом случае, возможно, необходимо поддерживать состояние между вызовами, так как последовательности байтов может быть прервана, при обработке в пакетах.</span><span class="sxs-lookup"><span data-stu-id="6407e-1280">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="6407e-1281">(Например, один может оказаться часть последовательности shift ISO-2022 <xref:System.Text.Encoding.GetChars%2A> вызова и по-прежнему в начале следующего <xref:System.Text.Encoding.GetChars%2A> вызова.</span><span class="sxs-lookup"><span data-stu-id="6407e-1281">(For example, part of an ISO-2022 shift sequence may end one <xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next <xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="6407e-1282"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> будет вызывать резервный вариант для этих неполной последовательности, но <xref:System.Text.Decoder> запомнит эти последовательности для следующего звонка.)</span><span class="sxs-lookup"><span data-stu-id="6407e-1282"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="6407e-1283">Если приложение обрабатывает строки выходных данных, <xref:System.Text.Encoding.GetString%2A> рекомендуется использовать метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1283">If your app handles string outputs, the <xref:System.Text.Encoding.GetString%2A> method is recommended.</span></span> <span data-ttu-id="6407e-1284">Так как этот метод должен проверить длину строки и выделить буфер, это немного медленнее, но полученный в результате <xref:System.String> типа является предпочтительным.</span><span class="sxs-lookup"><span data-stu-id="6407e-1284">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="6407e-1285">Версия байтов <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> позволяет некоторые быстрые способы, особенно при работе с несколькими вызовами в больших буферов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1285">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="6407e-1286">Имейте в виду, что эта версия метода небезопасна, так как указатели являются обязательными.</span><span class="sxs-lookup"><span data-stu-id="6407e-1286">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="6407e-1287">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="6407e-1287">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="6407e-1288">В этом случае [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > версии, что поддержка выходных символов буферы отлично подходит.</span><span class="sxs-lookup"><span data-stu-id="6407e-1288">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="6407e-1289">Рассмотрите возможность использования <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1289">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="6407e-1290">Метод преобразования преобразует можно столько данных и создает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="6407e-1290">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="6407e-1291">Для непрерывного декодирования потока, этот метод часто является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-1291">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-1292"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1292"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6407e-1293">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-1293">-or-</span></span> 
 <span data-ttu-id="6407e-1294"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1294"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6407e-1295">Значение параметра <paramref name="byteCount" /> или <paramref name="charCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="6407e-1295"><paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6407e-1296"><paramref name="charCount" /> меньше результирующего числа символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1296"><paramref name="charCount" /> is less than the resulting number of characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="6407e-1297">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-1297">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-1298">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-1298">-and-</span></span> 
 <span data-ttu-id="6407e-1299">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1299"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="6407e-1300">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="6407e-1300">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="6407e-1301">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="6407e-1301">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public abstract int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="encoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="6407e-1302">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="6407e-1302">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="6407e-1303">Индекс первого декодируемого байта.</span><span class="sxs-lookup"><span data-stu-id="6407e-1303">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="6407e-1304">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="6407e-1304">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="6407e-1305">Массив символов, в который будет помещен результирующий набор символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1305">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="6407e-1306">Индекс, с которого начинается запись результирующего набора символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1306">The index at which to start writing the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="6407e-1307">При переопределении в производном классе декодирует последовательность байтов из указанного массива байтов в указанный массив символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1307">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into the specified character array.</span></span></summary>
        <returns><span data-ttu-id="6407e-1308">Фактическое число символов, записанных в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1308">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1309">Для вычисления размера точное массива, необходимого <xref:System.Text.Encoding.GetChars%2A> для хранения полученных символов, следует использовать <xref:System.Text.Encoding.GetCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1309">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%2A> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="6407e-1310">Чтобы вычислить максимальный размер массива, используйте <xref:System.Text.Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1310">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="6407e-1311"><xref:System.Text.Encoding.GetCharCount%2A> Метод обычно позволяет выделения меньше памяти, хотя <xref:System.Text.Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="6407e-1311">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6407e-1312">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType > возвращает символы из входной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1312">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="6407e-1313">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType > отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> поскольку <xref:System.Text.Encoding> ожидает дискретных преобразования, хотя <xref:System.Text.Decoder> предназначен для несколько проходов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-1313">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-1314">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных слишком велико, что ему следует разделить на небольшие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.Encoding.GetDecoder%2A> метод или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="6407e-1314">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="6407e-1315">**Примечание** этот метод предназначен для работы с символами Юникода, а не на произвольных двоичных данных, таких как массивы байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1315">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="6407e-1316">Если вам нужно закодировать произвольные двоичные данные в текст, следует использовать протокол, например uuencode, который реализуется методами, такими как <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1316">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6407e-1317"><xref:System.Text.Encoding.GetCharCount%2A> Метод определяет, сколько символов привести декодировании последовательности байтов и <xref:System.Text.Encoding.GetChars%2A> метод выполняет фактическое декодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-1317">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="6407e-1318"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Метод ожидает дискретных преобразований, отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> метод, который обрабатывает несколько проходов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="6407e-1318">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="6407e-1319">Несколько версий <xref:System.Text.Encoding.GetCharCount%2A> и <xref:System.Text.Encoding.GetChars%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="6407e-1319">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="6407e-1320">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1320">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="6407e-1321">Приложение может потребоваться декодировать множество входных байтов из кодовой страницы и обработать эти байты, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1321">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="6407e-1322">В этом случае, возможно, необходимо поддерживать состояние между вызовами, так как последовательности байтов может быть прервана, при обработке в пакетах.</span><span class="sxs-lookup"><span data-stu-id="6407e-1322">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="6407e-1323">(Например, один может оказаться часть последовательности shift ISO-2022 [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A > вызова и по-прежнему в начале следующего [\], Int32, Int32, Char\<xref : System.Text.Encoding.GetChars%2A > вызова.</span><span class="sxs-lookup"><span data-stu-id="6407e-1323">(For example, part of an ISO-2022 shift sequence may end one [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="6407e-1324">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType > будет вызывать резервный вариант для этих неполной последовательности, но <xref:System.Text.Decoder> запомнит эти последовательности для следующего звонка.)</span><span class="sxs-lookup"><span data-stu-id="6407e-1324">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="6407e-1325">Если приложение обрабатывает строки выходных данных, <xref:System.Text.Encoding.GetString%2A> рекомендуется использовать метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1325">If your app handles string outputs, the <xref:System.Text.Encoding.GetString%2A> method is recommended.</span></span> <span data-ttu-id="6407e-1326">Так как этот метод должен проверить длину строки и выделить буфер, это немного медленнее, но полученный в результате <xref:System.String> типа является предпочтительным.</span><span class="sxs-lookup"><span data-stu-id="6407e-1326">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="6407e-1327">Версия байтов <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> позволяет некоторые быстрые способы, особенно при работе с несколькими вызовами в больших буферов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1327">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="6407e-1328">Имейте в виду, что эта версия метода небезопасна, так как указатели являются обязательными.</span><span class="sxs-lookup"><span data-stu-id="6407e-1328">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="6407e-1329">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="6407e-1329">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="6407e-1330">В этом случае [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > версии, что поддержка выходных символов буферы отлично подходит.</span><span class="sxs-lookup"><span data-stu-id="6407e-1330">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="6407e-1331">Рассмотрите возможность использования <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1331">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="6407e-1332">Метод преобразования преобразует можно столько данных и создает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="6407e-1332">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="6407e-1333">Для непрерывного декодирования потока, этот метод часто является лучшим выбором.</span><span class="sxs-lookup"><span data-stu-id="6407e-1333">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1334">Следующий пример преобразует строку из одной кодировки в другую.</span><span class="sxs-lookup"><span data-stu-id="6407e-1334">The following example converts a string from one encoding to another.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 <span data-ttu-id="6407e-1335">В следующем примере строка кодируется в массив байтов и затем Декодирует диапазон байтов в массив символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1335">The following example encodes a string into an array of bytes, and then decodes a range of the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CPP/getcharsic.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CS/getcharsic.cs#1)]
 [!code-vb[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/VB/getcharsic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-1336"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1336"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6407e-1337">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-1337">-or-</span></span> 
 <span data-ttu-id="6407e-1338"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1338"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6407e-1339">Значение параметра <paramref name="byteIndex" />, <paramref name="byteCount" /> или <paramref name="charIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="6407e-1339"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="6407e-1340">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-1340">-or-</span></span> 
 <span data-ttu-id="6407e-1341">Параметры <paramref name="byteindex" /> и <paramref name="byteCount" /> не указывают допустимый диапазон в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1341"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="6407e-1342">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-1342">-or-</span></span> 
 <span data-ttu-id="6407e-1343">Значение параметра <paramref name="charIndex" /> не является допустимым индексом в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1343"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6407e-1344">Недостаточно емкости <paramref name="chars" /> от <paramref name="charIndex" /> до конца массива для размещения полученных символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1344"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="6407e-1345">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-1345">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-1346">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-1346">-and-</span></span> 
 <span data-ttu-id="6407e-1347">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1347"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public virtual System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="abstract member GetDecoder : unit -&gt; System.Text.Decoder&#xA;override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="encoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6407e-1348">При переопределении в производном классе получает декодер, который преобразует последовательность байтов в последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1348">When overridden in a derived class, obtains a decoder that converts an encoded sequence of bytes into a sequence of characters.</span></span></summary>
        <returns><span data-ttu-id="6407e-1349">Объект <see cref="T:System.Text.Decoder" />, преобразующий закодированную последовательность байтов в последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1349">A <see cref="T:System.Text.Decoder" /> that converts an encoded sequence of bytes into a sequence of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1350"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> Метод преобразует последовательные блоки байтов в последовательные блоки символов в так же, как <xref:System.Text.Encoding.GetChars%2A> метод этого класса.</span><span class="sxs-lookup"><span data-stu-id="6407e-1350">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.Encoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="6407e-1351">Тем не менее <xref:System.Text.Decoder> хранит сведения о состоянии между вызовами, что позволяет правильно декодировать последовательность байтов, охватывающие блоки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1351">However, a <xref:System.Text.Decoder> maintains state information between calls so it correctly decodes byte sequences that span blocks.</span></span> <span data-ttu-id="6407e-1352"><xref:System.Text.Decoder> Также сохраняет конечные байты в конце блоки данных и использует конечные байты при следующей операции декодирования.</span><span class="sxs-lookup"><span data-stu-id="6407e-1352">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="6407e-1353">Таким образом <xref:System.Text.Encoding.GetDecoder%2A> и <xref:System.Text.Encoding.GetEncoder%2A> полезны для передачи по сети и операции с файлами, так как эти операции часто работают с блоками данных вместо поток полного набора данных.</span><span class="sxs-lookup"><span data-stu-id="6407e-1353">Therefore, <xref:System.Text.Encoding.GetDecoder%2A> and <xref:System.Text.Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="6407e-1354">Реализация по умолчанию возвращает <see cref="T:System.Text.Decoder" /> , который вызывает <see cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" /> и <see cref="M:System.Text.Encoding.GetChars(System.Byte[])" /> методы текущего объекта <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1354">The default implementation returns a <see cref="T:System.Text.Decoder" /> that calls the <see cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" /> and <see cref="M:System.Text.Encoding.GetChars(System.Byte[])" /> methods of the current <see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="6407e-1355">Необходимо переопределить этот метод для возврата <see cref="T:System.Text.Decoder" /> , хранит свое состояние между вызовами.</span><span class="sxs-lookup"><span data-stu-id="6407e-1355">You must override this method to return a <see cref="T:System.Text.Decoder" /> that maintains its state between calls.</span></span></para></block>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="6407e-1356">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="6407e-1356">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="abstract member GetEncoder : unit -&gt; System.Text.Encoder&#xA;override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="encoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6407e-1357">При переопределении в производном классе получает кодировщик, который преобразует последовательность символов Юникода в закодированную последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1357">When overridden in a derived class, obtains an encoder that converts a sequence of Unicode characters into an encoded sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="6407e-1358">Объект <see cref="T:System.Text.Encoder" />, преобразующий последовательность символов Юникода в закодированную последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1358">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into an encoded sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1359"><xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> Метод преобразует последовательные блоки символов в последовательные блоки байтов в так же, как <xref:System.Text.Encoding.GetBytes%2A> метод этого класса.</span><span class="sxs-lookup"><span data-stu-id="6407e-1359">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.Encoding.GetBytes%2A> method of this class.</span></span> <span data-ttu-id="6407e-1360">Тем не менее <xref:System.Text.Encoder> хранит сведения о состоянии между вызовами, что позволяет правильно кодировать последовательности символов, охватывающие блоки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1360">However, a <xref:System.Text.Encoder> maintains state information between calls so it correctly encodes character sequences that span blocks.</span></span> <span data-ttu-id="6407e-1361"><xref:System.Text.Encoder> Также сохраняет замыкающие символы в конце блоки данных и использует замыкающие символы при выполнении следующей операции кодирования.</span><span class="sxs-lookup"><span data-stu-id="6407e-1361">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="6407e-1362">Например блок данных может заканчиваться непарные заместителем и сопоставления меньшим заменяющим значением может быть в следующем блоке данных.</span><span class="sxs-lookup"><span data-stu-id="6407e-1362">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="6407e-1363">Таким образом <xref:System.Text.Encoding.GetDecoder%2A> и <xref:System.Text.Encoding.GetEncoder%2A> полезны для передачи по сети и операции с файлами, так как эти операции часто работают с блоками данных вместо поток полного набора данных.</span><span class="sxs-lookup"><span data-stu-id="6407e-1363">Therefore, <xref:System.Text.Encoding.GetDecoder%2A> and <xref:System.Text.Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="6407e-1364">Реализация по умолчанию возвращает <see cref="T:System.Text.Encoder" /> , который вызывает <see cref="M:System.Text.Encoding.GetByteCount(System.Char[])" /> и <see cref="M:System.Text.Encoding.GetBytes(System.Char[])" /> методы текущего объекта <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1364">The default implementation returns a <see cref="T:System.Text.Encoder" /> that calls the <see cref="M:System.Text.Encoding.GetByteCount(System.Char[])" /> and <see cref="M:System.Text.Encoding.GetBytes(System.Char[])" /> methods of the current <see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="6407e-1365">Необходимо переопределить этот метод для возврата <see cref="T:System.Text.Encoder" /> , хранит свое состояние между вызовами.</span><span class="sxs-lookup"><span data-stu-id="6407e-1365">You must override this method to return a <see cref="T:System.Text.Encoder" /> that maintains its state between calls.</span></span></para></block>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="6407e-1366">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="6407e-1366">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEncoding">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6407e-1367">Возвращает кодировку для указанной кодовой страницы.</span><span class="sxs-lookup"><span data-stu-id="6407e-1367">Returns an encoding for the specified code page.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberSignature Language="F#" Value="static member GetEncoding : int -&gt; System.Text.Encoding" Usage="System.Text.Encoding.GetEncoding codepage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codepage"><span data-ttu-id="6407e-1368">Идентификатор кодовой страницы предпочтительной кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1368">The code page identifier of the preferred encoding.</span></span> <span data-ttu-id="6407e-1369">Возможные значения перечислены в столбце кодовой страницы таблицы, которая отображается в теме класса <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1369">Possible values are listed in the Code Page column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span></span>  
  
<span data-ttu-id="6407e-1370">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-1370">-or-</span></span> 
<span data-ttu-id="6407e-1371">0 (ноль), если требуется использовать кодировку по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="6407e-1371">0 (zero), to use the default encoding.</span></span></param>
        <summary><span data-ttu-id="6407e-1372">Возвращает кодировку, связанную с указанным идентификатором кодовой страницы.</span><span class="sxs-lookup"><span data-stu-id="6407e-1372">Returns the encoding associated with the specified code page identifier.</span></span></summary>
        <returns><span data-ttu-id="6407e-1373">Кодирование, связанное с заданной страницей кода.</span><span class="sxs-lookup"><span data-stu-id="6407e-1373">The encoding that is associated with the specified code page.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1374">Резервному обработчику зависит тип кодировки `codepage`.</span><span class="sxs-lookup"><span data-stu-id="6407e-1374">The fallback handler depends on the encoding type of `codepage`.</span></span> <span data-ttu-id="6407e-1375">Если `codepage` кода страницы или двухбайтовый символ кодировки (DBCS), используется стратегия наилучшего соответствия резервному обработчику.</span><span class="sxs-lookup"><span data-stu-id="6407e-1375">If `codepage` is a code page or double-byte character set (DBCS) encoding, a best-fit fallback handler is used.</span></span> <span data-ttu-id="6407e-1376">В противном случае используется резервному обработчику замены.</span><span class="sxs-lookup"><span data-stu-id="6407e-1376">Otherwise, a replacement fallback handler is used.</span></span> <span data-ttu-id="6407e-1377">Эти обработчики резервный может не подойти для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="6407e-1377">These fallback handlers may not be appropriate for your app.</span></span> <span data-ttu-id="6407e-1378">Чтобы указать резервному обработчику, используемые кодировку, заданную `codepage`, можно вызвать <xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1378">To specify the fallback handler used by the encoding specified by `codepage`, you can call the <xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> overload.</span></span>  
  
 <span data-ttu-id="6407e-1379">В .NET Framework <xref:System.Text.Encoding.GetEncoding%2A> метод зависит от базовой платформы для поддержки большинства кодовых страниц.</span><span class="sxs-lookup"><span data-stu-id="6407e-1379">In the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="6407e-1380">Тем не менее платформа .NET Framework изначально поддерживает некоторые кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1380">However, the .NET Framework natively supports some encodings.</span></span> <span data-ttu-id="6407e-1381">Список кодовых страниц, см. в разделе <xref:System.Text.Encoding> разделе, посвященном классу.</span><span class="sxs-lookup"><span data-stu-id="6407e-1381">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="6407e-1382">В .NET Core <xref:System.Text.Encoding.GetEncoding%2A> метод возвращает кодировки, изначально поддерживаемых .NET Core.</span><span class="sxs-lookup"><span data-stu-id="6407e-1382">In .NET Core, the <xref:System.Text.Encoding.GetEncoding%2A> method returns the encodings natively supported by .NET Core.</span></span> <span data-ttu-id="6407e-1383">В обоих реализациях .NET, можно вызвать <xref:System.Text.Encoding.GetEncodings%2A> метод для получения массива <xref:System.Text.EncodingInfo> объектов, содержащий сведения о все доступные кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1383">On both .NET implementations, you can call the <xref:System.Text.Encoding.GetEncodings%2A> method to get an array of <xref:System.Text.EncodingInfo> objects that contains information about all available encodings.</span></span> 

 <span data-ttu-id="6407e-1384">В дополнение к кодировки, скомпилированных в собственном коде, доступных в .NET Core или по своей природе, поддерживаются в версии конкретной платформы .NET Framework <xref:System.Text.Encoding.GetEncoding%2A> метод возвращает все дополнительные кодировки, которые становятся доступными благодаря регистрации <xref:System.Text.EncodingProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="6407e-1384">In addition to the encodings that are natively available on .NET Core or that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span> <span data-ttu-id="6407e-1385">Если же кодировка был зарегистрирован с помощью нескольких <xref:System.Text.EncodingProvider> объектов, этот метод возвращает последний зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="6407e-1385">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span>  

<span data-ttu-id="6407e-1386">Можно также указать значение 0 для `codepage` аргумент.</span><span class="sxs-lookup"><span data-stu-id="6407e-1386">You can also supply a value of 0 for the `codepage` argument.</span></span> <span data-ttu-id="6407e-1387">Его точное поведение зависит от того, ли любой кодировки предоставляются путем регистрации <xref:System.Text.EncodingProvider> объекта:</span><span class="sxs-lookup"><span data-stu-id="6407e-1387">Its precise behavior depends on whether any encodings have been made available by registering an <xref:System.Text.EncodingProvider> object:</span></span>

- <span data-ttu-id="6407e-1388">Если один или несколько поставщиков кодирования зарегистрировано, он возвращает кодировку последнего зарегистрированного поставщика, который выбрал вернуть кодировку при <xref:System.Text.Encoding.GetEncoding%2A> методу передается `codepage` аргумент 0.</span><span class="sxs-lookup"><span data-stu-id="6407e-1388">If one or more encoding providers have been registered, it returns the encoding of the last registered provider that has chosen to return a encoding when the <xref:System.Text.Encoding.GetEncoding%2A> method is passed a `codepage` argument of 0.</span></span>     

- <span data-ttu-id="6407e-1389">На платформе .NET Framework, если кодировка не зарегистрирован поставщик, если <xref:System.Text.CodePagesEncodingProvider> — это зарегистрированный поставщик кодировки, или нет зарегистрированного поставщика кодирования `codepage` значение 0, он возвращает активную кодовую страницу операционной системы.</span><span class="sxs-lookup"><span data-stu-id="6407e-1389">On the .NET Framework, if no encoding provider has been registered, if the <xref:System.Text.CodePagesEncodingProvider> is the registered encoding provider, or if no registered encoding provider handles a `codepage` value of 0, it returns the operating system's active code page.</span></span> <span data-ttu-id="6407e-1390">Чтобы определить активную кодовую страницу в системах Windows, вызовите Windows [GetACP](https://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) функции из .NET Framework на рабочем столе Windows.</span><span class="sxs-lookup"><span data-stu-id="6407e-1390">To determine the active code page on Windows systems, call the Windows [GetACP](https://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) function from the .NET Framework on the Windows desktop.</span></span>

- <span data-ttu-id="6407e-1391">В .NET Core, если не был зарегистрирован поставщик кодировки, или если нет зарегистрированный поставщик кодировки обрабатывает `codepage` значение 0, возвращается <xref:System.Text.UTF8Encoding>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1391">On .NET Core, if no encoding provider has been registered or if no registered encoding provider handles a `codepage` value of 0, it returns the <xref:System.Text.UTF8Encoding>.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="6407e-1392">Некоторые неподдерживаемые кодовых страниц, причина <xref:System.ArgumentException> исключение, тогда как другие приводят к <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1392">Some unsupported code pages cause an <xref:System.ArgumentException> to be thrown, whereas others cause a <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="6407e-1393">Таким образом, код должен перехватывать все исключения, приведенные в раздел "исключения".</span><span class="sxs-lookup"><span data-stu-id="6407e-1393">Therefore, your code must catch all exceptions indicated in the Exceptions section.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6407e-1394">Кодовые страницы ANSI могут быть разными на разных компьютерах и можно изменить на одном компьютере, что приводит к повреждению данных.</span><span class="sxs-lookup"><span data-stu-id="6407e-1394">The ANSI code pages can be different on different computers and can change on a single computer, leading to data corruption.</span></span> <span data-ttu-id="6407e-1395">По этой причине активную кодовую страницу является кодовая страница ANSI, кодирования и декодирования данных, используя кодовую страницу по умолчанию возвращенные `Encoding.GetEncoding(0)` не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="6407e-1395">For this reason, if the active code page is an ANSI code page, encoding and decoding data using the default code page returned by `Encoding.GetEncoding(0)` is not recommended.</span></span> <span data-ttu-id="6407e-1396">Для получения согласованных результатов следует использовать кодировку Юникод, например UTF-8 (кодовая страница 65001) или UTF-16, а не конкретной кодовой странице.</span><span class="sxs-lookup"><span data-stu-id="6407e-1396">For the most consistent results, you should use a Unicode encoding, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span>  
  
 <span data-ttu-id="6407e-1397"><xref:System.Text.Encoding.GetEncoding%2A> Возвращает кэшированный экземпляр с параметрами по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="6407e-1397"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="6407e-1398">Конструкторы производных классов следует использовать для получения экземпляра с различными параметрами.</span><span class="sxs-lookup"><span data-stu-id="6407e-1398">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="6407e-1399">Например <xref:System.Text.UTF32Encoding> класс предоставляет конструктор, который позволяет включить обнаружение ошибок.</span><span class="sxs-lookup"><span data-stu-id="6407e-1399">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  

   
  
## Examples  
 <span data-ttu-id="6407e-1400">Следующий пример возвращает два экземпляра одной и той же кодировку (по одной кодовой страницей), а другой по имени и проверяют их равенство.</span><span class="sxs-lookup"><span data-stu-id="6407e-1400">The following example gets two instances of the same encoding (one by code page and another by name), and checks their equality.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6407e-1401">Параметр <paramref name="codepage" /> меньше нуля или больше 65 535.</span><span class="sxs-lookup"><span data-stu-id="6407e-1401"><paramref name="codepage" /> is less than zero or greater than 65535.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6407e-1402"><paramref name="codepage" /> не поддерживается используемой платформой.</span><span class="sxs-lookup"><span data-stu-id="6407e-1402"><paramref name="codepage" /> is not supported by the underlying platform.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6407e-1403"><paramref name="codepage" /> не поддерживается используемой платформой.</span><span class="sxs-lookup"><span data-stu-id="6407e-1403"><paramref name="codepage" /> is not supported by the underlying platform.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="6407e-1404">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="6407e-1404">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetEncoding : string -&gt; System.Text.Encoding" Usage="System.Text.Encoding.GetEncoding name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6407e-1405">Имя кодовой страницы предпочтительной кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1405">The code page name of the preferred encoding.</span></span> <span data-ttu-id="6407e-1406">Любое значение, возвращаемое свойством <see cref="P:System.Text.Encoding.WebName" />, является допустимым.</span><span class="sxs-lookup"><span data-stu-id="6407e-1406">Any value returned by the <see cref="P:System.Text.Encoding.WebName" /> property is valid.</span></span> <span data-ttu-id="6407e-1407">Возможные значения перечислены в столбце "Имя" таблицы, отображаемой в разделе класса <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1407">Possible values are listed in the Name column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span></span></param>
        <summary><span data-ttu-id="6407e-1408">Возвращает кодировку, связанную с указанным именем кодовой страницы.</span><span class="sxs-lookup"><span data-stu-id="6407e-1408">Returns the encoding associated with the specified code page name.</span></span></summary>
        <returns><span data-ttu-id="6407e-1409">Кодировка, связанная с указанной кодовой страницей.</span><span class="sxs-lookup"><span data-stu-id="6407e-1409">The encoding  associated with the specified code page.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1410">Резервному обработчику зависит тип кодировки `name`.</span><span class="sxs-lookup"><span data-stu-id="6407e-1410">The fallback handler depends on the encoding type of `name`.</span></span> <span data-ttu-id="6407e-1411">Если `name` кода страницы или двухбайтовый символ кодировки (DBCS), используется стратегия наилучшего соответствия резервному обработчику.</span><span class="sxs-lookup"><span data-stu-id="6407e-1411">If `name` is a code page or double-byte character set (DBCS) encoding, a best-fit fallback handler is used.</span></span> <span data-ttu-id="6407e-1412">В противном случае используется резервному обработчику замены.</span><span class="sxs-lookup"><span data-stu-id="6407e-1412">Otherwise, a replacement fallback handler is used.</span></span> <span data-ttu-id="6407e-1413">Эти обработчики резервный может не подойти для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="6407e-1413">These fallback handlers may not be appropriate for your app.</span></span> <span data-ttu-id="6407e-1414">Чтобы указать резервному обработчику, используемые кодировку, заданную `name`, можно вызвать <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1414">To specify the fallback handler used by the encoding specified by `name`, you can call the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> overload.</span></span>  

<span data-ttu-id="6407e-1415">В .NET Framework <xref:System.Text.Encoding.GetEncoding%2A> метод зависит от базовой платформы для поддержки большинства кодовых страниц.</span><span class="sxs-lookup"><span data-stu-id="6407e-1415">In the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="6407e-1416">Тем не менее платформа .NET Framework изначально поддерживает некоторые кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1416">However, the .NET Framework natively supports some encodings.</span></span> <span data-ttu-id="6407e-1417">Список кодовых страниц, см. в разделе <xref:System.Text.Encoding> разделе, посвященном классу.</span><span class="sxs-lookup"><span data-stu-id="6407e-1417">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="6407e-1418">В .NET Core <xref:System.Text.Encoding.GetEncoding%2A> метод возвращает кодировки, изначально поддерживаемых .NET Core.</span><span class="sxs-lookup"><span data-stu-id="6407e-1418">In .NET Core, the <xref:System.Text.Encoding.GetEncoding%2A> method returns the encodings natively supported by .NET Core.</span></span> <span data-ttu-id="6407e-1419">В обоих реализациях .NET, можно вызвать <xref:System.Text.Encoding.GetEncodings%2A> метод для получения массива <xref:System.Text.EncodingInfo> объектов, содержащий сведения о все доступные кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1419">On both .NET implementations, you can call the <xref:System.Text.Encoding.GetEncodings%2A> method to get an array of <xref:System.Text.EncodingInfo> objects that contains information about all available encodings.</span></span> 

 <span data-ttu-id="6407e-1420">В дополнение к кодировки, скомпилированных в собственном коде, доступных в .NET Core или по своей природе, поддерживаются в версии конкретной платформы .NET Framework <xref:System.Text.Encoding.GetEncoding%2A> метод возвращает все дополнительные кодировки, которые становятся доступными благодаря регистрации <xref:System.Text.EncodingProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="6407e-1420">In addition to the encodings that are natively available on .NET Core or that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span> <span data-ttu-id="6407e-1421">Если же кодировка был зарегистрирован с помощью нескольких <xref:System.Text.EncodingProvider> объектов, этот метод возвращает последний зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="6407e-1421">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span>  
   
> [!NOTE]
>  <span data-ttu-id="6407e-1422">Кодовые страницы ANSI могут быть разными на разных компьютерах, или можно изменить для одного компьютера, что приводит к повреждению данных.</span><span class="sxs-lookup"><span data-stu-id="6407e-1422">The ANSI code pages can be different on different computers, or can be changed for a single computer, leading to data corruption.</span></span> <span data-ttu-id="6407e-1423">Для получения согласованных результатов следует использовать Юникод, например UTF-8 (кодовая страница 65001) или UTF-16, вместо конкретной кодовой странице.</span><span class="sxs-lookup"><span data-stu-id="6407e-1423">For the most consistent results, you should use Unicode, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span>  
 
  
 <span data-ttu-id="6407e-1424"><xref:System.Text.Encoding.GetEncoding%2A> Возвращает кэшированный экземпляр с параметрами по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="6407e-1424"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="6407e-1425">Конструкторы производных классов следует использовать для получения экземпляра с различными параметрами.</span><span class="sxs-lookup"><span data-stu-id="6407e-1425">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="6407e-1426">Например <xref:System.Text.UTF32Encoding> класс предоставляет конструктор, который позволяет включить обнаружение ошибок.</span><span class="sxs-lookup"><span data-stu-id="6407e-1426">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  
  
## Examples  
 <span data-ttu-id="6407e-1427">Следующий пример возвращает два экземпляра одной и той же кодировку (по одной кодовой страницей), а другой по имени и проверяют их равенство.</span><span class="sxs-lookup"><span data-stu-id="6407e-1427">The following example gets two instances of the same encoding (one by code page and another by name), and checks their equality.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6407e-1428"><paramref name="name" /> не является допустимым именем кодовой страницы.</span><span class="sxs-lookup"><span data-stu-id="6407e-1428"><paramref name="name" /> is not a valid code page name.</span></span>  
  
<span data-ttu-id="6407e-1429">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-1429">-or-</span></span> 
<span data-ttu-id="6407e-1430">Кодовая страница, указанная с помощью параметра <paramref name="name" />, не поддерживается используемой платформой.</span><span class="sxs-lookup"><span data-stu-id="6407e-1430">The code page indicated by <paramref name="name" /> is not supported by the underlying platform.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="6407e-1431">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="6407e-1431">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (int codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(int32 codepage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(int codepage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="static member GetEncoding : int * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="System.Text.Encoding.GetEncoding (codepage, encoderFallback, decoderFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codepage"><span data-ttu-id="6407e-1432">Идентификатор кодовой страницы предпочтительной кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1432">The code page identifier of the preferred encoding.</span></span> <span data-ttu-id="6407e-1433">Возможные значения перечислены в столбце кодовой страницы таблицы, которая отображается в теме класса <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1433">Possible values are listed in the Code Page column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span></span>  
  
<span data-ttu-id="6407e-1434">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-1434">-or-</span></span> 
<span data-ttu-id="6407e-1435">0 (ноль), если требуется использовать кодировку по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="6407e-1435">0 (zero), to use the default encoding.</span></span></param>
        <param name="encoderFallback"><span data-ttu-id="6407e-1436">Объект, предоставляющий процедуру обработки ошибок, когда символ не может быть закодирован с использованием текущей кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1436">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span></span></param>
        <param name="decoderFallback"><span data-ttu-id="6407e-1437">Объект, предоставляющий процедуру обработки ошибок, когда последовательность байтов не может быть декодирована с использованием текущей кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1437">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span></span></param>
        <summary><span data-ttu-id="6407e-1438">Возвращает кодировку, связанную с указанным идентификатором кодовой страницы.</span><span class="sxs-lookup"><span data-stu-id="6407e-1438">Returns the encoding associated with the specified code page identifier.</span></span> <span data-ttu-id="6407e-1439">С помощью параметров задается обработчик ошибок для символов, которые не удается закодировать, и последовательностей байтов, которые не удается декодировать.</span><span class="sxs-lookup"><span data-stu-id="6407e-1439">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span></span></summary>
        <returns><span data-ttu-id="6407e-1440">Кодирование, связанное с заданной страницей кода.</span><span class="sxs-lookup"><span data-stu-id="6407e-1440">The encoding that is associated with the specified code page.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="6407e-1441">Некоторые неподдерживаемую кодовую страниц вызывает исключение <xref:System.ArgumentException> исключение, тогда как другие приводят к <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1441">Some unsupported code pages cause the exception <xref:System.ArgumentException> to be thrown, whereas others cause <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="6407e-1442">Таким образом, код должен перехватывать все исключения, приведенные в раздел "исключения".</span><span class="sxs-lookup"><span data-stu-id="6407e-1442">Therefore, your code must catch all exceptions indicated in the Exceptions section.</span></span>  

<span data-ttu-id="6407e-1443">В .NET Framework <xref:System.Text.Encoding.GetEncoding%2A> метод зависит от базовой платформы для поддержки большинства кодовых страниц.</span><span class="sxs-lookup"><span data-stu-id="6407e-1443">In the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="6407e-1444">Тем не менее платформа .NET Framework изначально поддерживает некоторые кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1444">However, the .NET Framework natively supports some encodings.</span></span> <span data-ttu-id="6407e-1445">Список кодовых страниц, см. в разделе <xref:System.Text.Encoding> разделе, посвященном классу.</span><span class="sxs-lookup"><span data-stu-id="6407e-1445">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="6407e-1446">В .NET Core <xref:System.Text.Encoding.GetEncoding%2A> метод возвращает кодировки, изначально поддерживаемых .NET Core.</span><span class="sxs-lookup"><span data-stu-id="6407e-1446">In .NET Core, the <xref:System.Text.Encoding.GetEncoding%2A> method returns the encodings natively supported by .NET Core.</span></span> <span data-ttu-id="6407e-1447">В обоих реализациях .NET, можно вызвать <xref:System.Text.Encoding.GetEncodings%2A> метод для получения массива <xref:System.Text.EncodingInfo> объектов, содержащий сведения о все доступные кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1447">On both .NET implementations, you can call the <xref:System.Text.Encoding.GetEncodings%2A> method to get an array of <xref:System.Text.EncodingInfo> objects that contains information about all available encodings.</span></span> 

 <span data-ttu-id="6407e-1448">В дополнение к кодировки, скомпилированных в собственном коде, доступных в .NET Core или по своей природе, поддерживаются в версии конкретной платформы .NET Framework <xref:System.Text.Encoding.GetEncoding%2A> метод возвращает все дополнительные кодировки, которые становятся доступными благодаря регистрации <xref:System.Text.EncodingProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="6407e-1448">In addition to the encodings that are natively available on .NET Core or that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span> <span data-ttu-id="6407e-1449">Если же кодировка был зарегистрирован с помощью нескольких <xref:System.Text.EncodingProvider> объектов, этот метод возвращает последний зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="6407e-1449">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span>  

<span data-ttu-id="6407e-1450">Можно также указать значение 0 для `codepage` аргумент.</span><span class="sxs-lookup"><span data-stu-id="6407e-1450">You can also supply a value of 0 for the `codepage` argument.</span></span> <span data-ttu-id="6407e-1451">Его точное поведение зависит от того, ли любой кодировки предоставляются путем регистрации <xref:System.Text.EncodingProvider> объекта:</span><span class="sxs-lookup"><span data-stu-id="6407e-1451">Its precise behavior depends on whether any encodings have been made available by registering an <xref:System.Text.EncodingProvider> object:</span></span>

- <span data-ttu-id="6407e-1452">Если один или несколько поставщиков кодирования зарегистрировано, он возвращает кодировку последнего зарегистрированного поставщика, который выбрал вернуть кодировку при <xref:System.Text.Encoding.GetEncoding%2A> методу передается `codepage` аргумент 0.</span><span class="sxs-lookup"><span data-stu-id="6407e-1452">If one or more encoding providers have been registered, it returns the encoding of the last registered provider that has chosen to return a encoding when the <xref:System.Text.Encoding.GetEncoding%2A> method is passed a `codepage` argument of 0.</span></span>     

- <span data-ttu-id="6407e-1453">На платформе .NET Framework, если кодировка не зарегистрирован поставщик, если <xref:System.Text.CodePagesEncodingProvider> — это зарегистрированный поставщик кодировки, или нет зарегистрированного поставщика кодирования `codepage` значение 0, он возвращает активную кодовую страницу.</span><span class="sxs-lookup"><span data-stu-id="6407e-1453">On the .NET Framework, if no encoding provider has been registered, if the <xref:System.Text.CodePagesEncodingProvider> is the registered encoding provider, or if no registered encoding provider handles a `codepage` value of 0, it returns the active code page.</span></span>

- <span data-ttu-id="6407e-1454">В .NET Core, если не был зарегистрирован поставщик кодировки, или если нет зарегистрированный поставщик кодировки обрабатывает `codepage` значение 0, возвращается <xref:System.Text.UTF8Encoding> кодирования.</span><span class="sxs-lookup"><span data-stu-id="6407e-1454">On .NET Core, if no encoding provider has been registered or if no registered encoding provider handles a `codepage` value of 0, it returns the <xref:System.Text.UTF8Encoding> encoding.</span></span>

> [!NOTE]
>  <span data-ttu-id="6407e-1455">Кодовые страницы ANSI могут быть разными на разных компьютерах и можно изменить на одном компьютере, что приводит к повреждению данных.</span><span class="sxs-lookup"><span data-stu-id="6407e-1455">The ANSI code pages can be different on different computers and can change on a single computer, leading to data corruption.</span></span> <span data-ttu-id="6407e-1456">По этой причине активную кодовую страницу является кодовая страница ANSI, кодирования и декодирования данных, используя кодовую страницу по умолчанию возвращенные `Encoding.GetEncoding(0)` не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="6407e-1456">For this reason, if the active code page is an ANSI code page, encoding and decoding data using the default code page returned by `Encoding.GetEncoding(0)` is not recommended.</span></span> <span data-ttu-id="6407e-1457">Для получения согласованных результатов следует использовать Юникод, например UTF-8 (кодовая страница 65001) или UTF-16, вместо конкретной кодовой странице.</span><span class="sxs-lookup"><span data-stu-id="6407e-1457">For the most consistent results, you should use Unicode, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span> 
  
 <span data-ttu-id="6407e-1458">Чтобы получить кодировку, связанную с активную кодовую страницу, можно указать значение 0 для `codepage` аргумент или, если код выполняется на платформе .NET Framework, на рабочем столе Windows, получения значения <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="6407e-1458">To get the encoding associated with the active code page, you can either supply a value of 0 for the `codepage` argument or, if your code is running on the .NET Framework on the Windows desktop, retrieve the value of the <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="6407e-1459">Чтобы определить текущий активную кодовую страницу, вызовите Windows [GetACP](https://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) функции из .NET Framework на рабочем столе Windows.</span><span class="sxs-lookup"><span data-stu-id="6407e-1459">To determine the current active code page, call the Windows [GetACP](https://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) function from the .NET Framework on the Windows desktop.</span></span>  
  
 <span data-ttu-id="6407e-1460"><xref:System.Text.Encoding.GetEncoding%2A> Возвращает кэшированный экземпляр с параметрами по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="6407e-1460"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="6407e-1461">Конструкторы производных классов следует использовать для получения экземпляра с различными параметрами.</span><span class="sxs-lookup"><span data-stu-id="6407e-1461">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="6407e-1462">Например <xref:System.Text.UTF32Encoding> класс предоставляет конструктор, который позволяет включить обнаружение ошибок.</span><span class="sxs-lookup"><span data-stu-id="6407e-1462">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1463">В следующем примере демонстрируется <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1463">The following example demonstrates the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[sys.txt.fallbackEncRpl#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cpp/fallEncRpl.cpp#1)]
 [!code-csharp[sys.txt.fallbackEncRpl#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cs/fallEncRpl.cs#1)]
 [!code-vb[sys.txt.fallbackEncRpl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackEncRpl/vb/fallEncRpl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6407e-1464">Параметр <paramref name="codepage" /> меньше нуля или больше 65 535.</span><span class="sxs-lookup"><span data-stu-id="6407e-1464"><paramref name="codepage" /> is less than zero or greater than 65535.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6407e-1465"><paramref name="codepage" /> не поддерживается используемой платформой.</span><span class="sxs-lookup"><span data-stu-id="6407e-1465"><paramref name="codepage" /> is not supported by the underlying platform.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6407e-1466"><paramref name="codepage" /> не поддерживается используемой платформой.</span><span class="sxs-lookup"><span data-stu-id="6407e-1466"><paramref name="codepage" /> is not supported by the underlying platform.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="6407e-1467">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="6407e-1467">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (string name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(string name, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(System::String ^ name, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="static member GetEncoding : string * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="System.Text.Encoding.GetEncoding (name, encoderFallback, decoderFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6407e-1468">Имя кодовой страницы предпочтительной кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1468">The code page name of the preferred encoding.</span></span> <span data-ttu-id="6407e-1469">Любое значение, возвращаемое свойством <see cref="P:System.Text.Encoding.WebName" />, является допустимым.</span><span class="sxs-lookup"><span data-stu-id="6407e-1469">Any value returned by the <see cref="P:System.Text.Encoding.WebName" /> property is valid.</span></span> <span data-ttu-id="6407e-1470">Возможные значения перечислены в столбце "Имя" таблицы, отображаемой в разделе класса <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1470">Possible values are listed in the Name column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span></span></param>
        <param name="encoderFallback"><span data-ttu-id="6407e-1471">Объект, предоставляющий процедуру обработки ошибок, когда символ не может быть закодирован с использованием текущей кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1471">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span></span></param>
        <param name="decoderFallback"><span data-ttu-id="6407e-1472">Объект, предоставляющий процедуру обработки ошибок, когда последовательность байтов не может быть декодирована с использованием текущей кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1472">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span></span></param>
        <summary><span data-ttu-id="6407e-1473">Возвращает кодировку, связанную с указанным именем кодовой страницы.</span><span class="sxs-lookup"><span data-stu-id="6407e-1473">Returns the encoding associated with the specified code page name.</span></span> <span data-ttu-id="6407e-1474">С помощью параметров задается обработчик ошибок для символов, которые не удается закодировать, и последовательностей байтов, которые не удается декодировать.</span><span class="sxs-lookup"><span data-stu-id="6407e-1474">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span></span></summary>
        <returns><span data-ttu-id="6407e-1475">Кодирование, связанное с заданной страницей кода.</span><span class="sxs-lookup"><span data-stu-id="6407e-1475">The encoding that is associated with the specified code page.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="6407e-1476">В .NET Framework <xref:System.Text.Encoding.GetEncoding%2A> метод зависит от базовой платформы для поддержки большинства кодовых страниц.</span><span class="sxs-lookup"><span data-stu-id="6407e-1476">In the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="6407e-1477">Тем не менее платформа .NET Framework изначально поддерживает некоторые кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1477">However, the .NET Framework natively supports some encodings.</span></span> <span data-ttu-id="6407e-1478">Список кодовых страниц, см. в разделе <xref:System.Text.Encoding> разделе, посвященном классу.</span><span class="sxs-lookup"><span data-stu-id="6407e-1478">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="6407e-1479">В .NET Core <xref:System.Text.Encoding.GetEncoding%2A> метод возвращает кодировки, изначально поддерживаемых .NET Core.</span><span class="sxs-lookup"><span data-stu-id="6407e-1479">In .NET Core, the <xref:System.Text.Encoding.GetEncoding%2A> method returns the encodings natively supported by .NET Core.</span></span> <span data-ttu-id="6407e-1480">В обоих реализациях .NET, можно вызвать <xref:System.Text.Encoding.GetEncodings%2A> метод для получения массива <xref:System.Text.EncodingInfo> объектов, содержащий сведения о все доступные кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1480">On both .NET implementations, you can call the <xref:System.Text.Encoding.GetEncodings%2A> method to get an array of <xref:System.Text.EncodingInfo> objects that contains information about all available encodings.</span></span> 

 <span data-ttu-id="6407e-1481">В дополнение к кодировки, скомпилированных в собственном коде, доступных в .NET Core или по своей природе, поддерживаются в версии конкретной платформы .NET Framework <xref:System.Text.Encoding.GetEncoding%2A> метод возвращает все дополнительные кодировки, которые становятся доступными благодаря регистрации <xref:System.Text.EncodingProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="6407e-1481">In addition to the encodings that are natively available on .NET Core or that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span> <span data-ttu-id="6407e-1482">Если же кодировка был зарегистрирован с помощью нескольких <xref:System.Text.EncodingProvider> объектов, этот метод возвращает последний зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="6407e-1482">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6407e-1483">Кодовые страницы ANSI могут быть разными на разных компьютерах и можно изменить на одном компьютере, что приводит к повреждению данных.</span><span class="sxs-lookup"><span data-stu-id="6407e-1483">The ANSI code pages can be different on different computers and can change on a single computer, leading to data corruption.</span></span> <span data-ttu-id="6407e-1484">Для получения согласованных результатов следует использовать кодировку Юникод, например UTF-8 (кодовая страница 65001) или UTF-16, а не конкретной кодовой странице.</span><span class="sxs-lookup"><span data-stu-id="6407e-1484">For the most consistent results, you should use a Unicode encoding, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span>  
  
 <span data-ttu-id="6407e-1485"><xref:System.Text.Encoding.GetEncoding%2A> Возвращает кэшированный экземпляр с параметрами по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="6407e-1485"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="6407e-1486">Конструкторы производных классов следует использовать для получения экземпляра с различными параметрами.</span><span class="sxs-lookup"><span data-stu-id="6407e-1486">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="6407e-1487">Например <xref:System.Text.UTF32Encoding> класс предоставляет конструктор, который позволяет включить обнаружение ошибок.</span><span class="sxs-lookup"><span data-stu-id="6407e-1487">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1488">В следующем примере демонстрируется <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1488">The following example demonstrates the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[sys.txt.fallbackEncRpl#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cpp/fallEncRpl.cpp#1)]
 [!code-csharp[sys.txt.fallbackEncRpl#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cs/fallEncRpl.cs#1)]
 [!code-vb[sys.txt.fallbackEncRpl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackEncRpl/vb/fallEncRpl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6407e-1489"><paramref name="name" /> не является допустимым именем кодовой страницы.</span><span class="sxs-lookup"><span data-stu-id="6407e-1489"><paramref name="name" /> is not a valid code page name.</span></span>  
  
<span data-ttu-id="6407e-1490">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-1490">-or-</span></span> 
<span data-ttu-id="6407e-1491">Кодовая страница, указанная с помощью параметра <paramref name="name" />, не поддерживается используемой платформой.</span><span class="sxs-lookup"><span data-stu-id="6407e-1491">The code page indicated by <paramref name="name" /> is not supported by the underlying platform.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="6407e-1492">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="6407e-1492">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncodings">
      <MemberSignature Language="C#" Value="public static System.Text.EncodingInfo[] GetEncodings ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.EncodingInfo[] GetEncodings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncodings" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEncodings () As EncodingInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Text::EncodingInfo ^&gt; ^ GetEncodings();" />
      <MemberSignature Language="F#" Value="static member GetEncodings : unit -&gt; System.Text.EncodingInfo[]" Usage="System.Text.Encoding.GetEncodings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncodingInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6407e-1493">Возвращает массив, содержащий все кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1493">Returns an array that contains all encodings.</span></span></summary>
        <returns><span data-ttu-id="6407e-1494">Массив, содержащий все кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1494">An array that contains all encodings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1495">Этот метод возвращает список поддерживаемых кодировок, однозначно определяются по кодовой странице.</span><span class="sxs-lookup"><span data-stu-id="6407e-1495">This method returns a list of supported encodings, uniquely distinguished by code page.</span></span> <span data-ttu-id="6407e-1496">Таблица со списком поддерживаемых кодировок, см. в разделе <xref:System.Text.Encoding> разделе, посвященном классу.</span><span class="sxs-lookup"><span data-stu-id="6407e-1496">For a table that lists the supported encodings, see the <xref:System.Text.Encoding> class topic.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6407e-1497">Список поддерживаемых кодировок, возвращаемых <xref:System.Text.Encoding.GetEncodings%2A> метода не включает любые дополнительные кодировки, доступны по любому <xref:System.Text.EncodingProvider> реализаций, которые были зарегистрированы путем вызова <xref:System.Text.Encoding.RegisterProvider%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1497">The list of supported encodings returned by the <xref:System.Text.Encoding.GetEncodings%2A> method does not include any additional encodings made available by any <xref:System.Text.EncodingProvider> implementations that were registered by calls to the <xref:System.Text.Encoding.RegisterProvider%2A> method.</span></span>  
  
 <span data-ttu-id="6407e-1498">На платформе .NET Framework кодировки 50220 и 50222 будут связаны с именем «iso-2022-jp», но они не совпадают.</span><span class="sxs-lookup"><span data-stu-id="6407e-1498">On the .NET Framework, encodings 50220 and 50222 are both associated with the name "iso-2022-jp", but they are not identical.</span></span> <span data-ttu-id="6407e-1499">Кодировка 50220 Преобразует знаки катаканы половинной ширины полноширинные символы катакана, тогда как кодирование 50222 использует последовательность shift in/shift out для кодирования символов катакана половинной ширины.</span><span class="sxs-lookup"><span data-stu-id="6407e-1499">Encoding 50220 converts half-width Katakana characters to full-width Katakana characters, whereas encoding 50222 uses a shift-in/shift-out sequence to encode half-width Katakana characters.</span></span> <span data-ttu-id="6407e-1500">Отображаемое имя для кодировки 50222 «японский (JIS-Povolen 1 bajt Kana - поэтому / SI)» чтобы отличить его от кодирования 50220, имеющая отображаемое имя «Японская (JIS)».</span><span class="sxs-lookup"><span data-stu-id="6407e-1500">The display name for encoding 50222 is "Japanese (JIS-Allow 1 byte Kana - SO/SI)" to distinguish it from encoding 50220, which has the display name "Japanese (JIS)".</span></span>  
  
 <span data-ttu-id="6407e-1501">Если будет запрошено кодирования имя «iso-2022-jp», .NET Framework возвращает кодировку 50220.</span><span class="sxs-lookup"><span data-stu-id="6407e-1501">If you request the encoding name "iso-2022-jp", the .NET Framework returns encoding 50220.</span></span> <span data-ttu-id="6407e-1502">Тем не менее кодировку, которая подходит для вашего приложения зависит от предпочтительного способа обработки знаки катаканы половинной ширины.</span><span class="sxs-lookup"><span data-stu-id="6407e-1502">However, the encoding that is appropriate for your app depends on the preferred treatment of the half-width Katakana characters.</span></span>  
  
 <span data-ttu-id="6407e-1503">Чтобы получить конкретную кодировку, следует использовать <xref:System.Text.Encoding.GetEncoding%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1503">To get a specific encoding, you should use the <xref:System.Text.Encoding.GetEncoding%2A> method.</span></span>  
  
 <span data-ttu-id="6407e-1504"><xref:System.Text.Encoding.GetEncodings%2A> Иногда используется для предоставления пользователю список кодировок в файле **Сохранить как** диалоговое окно.</span><span class="sxs-lookup"><span data-stu-id="6407e-1504"><xref:System.Text.Encoding.GetEncodings%2A> is sometimes used to present the user with a list of encodings in a File **Save as** dialog box.</span></span> <span data-ttu-id="6407e-1505">Однако множество кодировок Юникод, либо неполными и перевод много символов для «?», или иметь немного по-разному на разных платформах.</span><span class="sxs-lookup"><span data-stu-id="6407e-1505">However, many non-Unicode encodings are either incomplete and translate many characters to "?", or have subtly different behavior on different platforms.</span></span> <span data-ttu-id="6407e-1506">Рекомендуется использовать значение по умолчанию UTF-8 или UTF-16.</span><span class="sxs-lookup"><span data-stu-id="6407e-1506">Consider using UTF-8 or UTF-16 as the default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1507">В следующем примере проверяется значения логических свойств каждой кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1507">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="6407e-1508">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="6407e-1508">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="encoding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6407e-1509">Возвращает хэш-код текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="6407e-1509">Returns the hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="6407e-1510">Хэш-код для текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="6407e-1510">The hash code for the current instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public abstract int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="abstract member GetMaxByteCount : int -&gt; int" Usage="encoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount"><span data-ttu-id="6407e-1511">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1511">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="6407e-1512">При переопределении в производном классе вычисляет максимальное количество байтов, полученных при кодировании заданного количества символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1512">When overridden in a derived class, calculates the maximum number of bytes produced by encoding the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="6407e-1513">Максимальное количество байтов, полученных при кодировании заданного количества символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1513">The maximum number of bytes produced by encoding the specified number of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1514">`charCount` Параметр фактически задает количество <xref:System.Char> объекты, представляющие символы Юникода для кодирования, так как .NET внутренним образом использует UTF-16 для представления символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="6407e-1514">The `charCount` parameter actually specifies the number of <xref:System.Char> objects that represent the Unicode characters to encode, because .NET internally uses UTF-16 to represent Unicode characters.</span></span> <span data-ttu-id="6407e-1515">Следовательно, большинство символов Юникода может быть представлена одним <xref:System.Char> объект, но знак Юникода, представленный суррогатную пару, например, требуются две <xref:System.Char> объектов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1515">Consequently, most Unicode characters can be represented by one <xref:System.Char> object, but a Unicode character represented by a surrogate pair, for example, requires two <xref:System.Char> objects.</span></span>  
  
 <span data-ttu-id="6407e-1516">Для вычисления размера точное массива, необходимого <xref:System.Text.Encoding.GetBytes%2A> для хранения полученных байтов, следует использовать <xref:System.Text.Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1516">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, you should use the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6407e-1517">Чтобы вычислить максимальный размер массива, используйте <xref:System.Text.Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1517">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6407e-1518"><xref:System.Text.Encoding.GetByteCount%2A> Метод обычно позволяет выделения меньше памяти, хотя <xref:System.Text.Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="6407e-1518">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6407e-1519"><xref:System.Text.Encoding.GetMaxByteCount%2A> Получает номер худшего случая, включая худшем случае для выбранного в данный момент <xref:System.Text.EncoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1519"><xref:System.Text.Encoding.GetMaxByteCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="6407e-1520">Если вы выбрали переход на резервный ресурс со строкой потенциально большого объема, <xref:System.Text.Encoding.GetMaxByteCount%2A> извлекает большие значения, особенно в случаях, где худшем случае для кодирования, включает в себя Переключение режимов для каждого символа.</span><span class="sxs-lookup"><span data-stu-id="6407e-1520">If a fallback is chosen with a potentially large string, <xref:System.Text.Encoding.GetMaxByteCount%2A> retrieves large values, particularly in cases where the worst case for the encoding involves switching modes for every character.</span></span> <span data-ttu-id="6407e-1521">Например это может происходить по ISO-2022-JP.</span><span class="sxs-lookup"><span data-stu-id="6407e-1521">For example, this can happen for ISO-2022-JP.</span></span> <span data-ttu-id="6407e-1522">Дополнительные сведения см. в записи блога "[в Encoding.GetMaxByteCount() и Encoding.GetMaxCharCount()?](https://go.microsoft.com/fwlink/?LinkId=153702)"</span><span class="sxs-lookup"><span data-stu-id="6407e-1522">For more information, see the blog entry "[What's with Encoding.GetMaxByteCount() and Encoding.GetMaxCharCount()?](https://go.microsoft.com/fwlink/?LinkId=153702)"</span></span> <span data-ttu-id="6407e-1523">(http://blogs.msdn.com/shawnste/archive/2005/03/02/383903.aspx).</span><span class="sxs-lookup"><span data-stu-id="6407e-1523">(http://blogs.msdn.com/shawnste/archive/2005/03/02/383903.aspx).</span></span>  
  
 <span data-ttu-id="6407e-1524">В большинстве случаев этот метод извлекает приемлемые значения для коротких строк.</span><span class="sxs-lookup"><span data-stu-id="6407e-1524">In most cases, this method retrieves reasonable values for small strings.</span></span> <span data-ttu-id="6407e-1525">Для больших строк возможно, выбирать между использованием очень больших буферов и перехват ошибок в тех редких случаях, когда более рациональной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="6407e-1525">For large strings, you might have to choose between using very large buffers and catching errors in the rare case when a more reasonable buffer is too small.</span></span> <span data-ttu-id="6407e-1526">Можно также рассмотреть возможность использования другого подхода <xref:System.Text.Encoding.GetByteCount%2A> или <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1526">You might also want to consider a different approach using <xref:System.Text.Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6407e-1527">При использовании <xref:System.Text.Encoding.GetMaxByteCount%2A>, необходимо выделить в выходной буфер, в зависимости от максимального размера входного буфера.</span><span class="sxs-lookup"><span data-stu-id="6407e-1527">When using <xref:System.Text.Encoding.GetMaxByteCount%2A>, you should allocate the output buffer based on the maximum size of the input buffer.</span></span> <span data-ttu-id="6407e-1528">Если размер выходного буфера ограничен, можно использовать <xref:System.Text.Encoding.Convert%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1528">If the output buffer is constrained in size, you might use the <xref:System.Text.Encoding.Convert%2A> method.</span></span>  
  
 <span data-ttu-id="6407e-1529">Обратите внимание, что <xref:System.Text.Encoding.GetMaxByteCount%2A> учитывает потенциальные оставшиеся суррогаты из предыдущей операции декодера.</span><span class="sxs-lookup"><span data-stu-id="6407e-1529">Note that <xref:System.Text.Encoding.GetMaxByteCount%2A> considers potential leftover surrogates from a previous decoder operation.</span></span> <span data-ttu-id="6407e-1530">Из-за декодера передав значение 1 в метод извлекает 2 для однобайтовой кодировки, например ASCII.</span><span class="sxs-lookup"><span data-stu-id="6407e-1530">Because of the decoder, passing a value of 1 to the method retrieves 2 for a single-byte encoding, such as ASCII.</span></span> <span data-ttu-id="6407e-1531">Следует использовать <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> свойства, если эта информация необходима.</span><span class="sxs-lookup"><span data-stu-id="6407e-1531">You should use the <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> property if this information is necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6407e-1532">`GetMaxByteCount(N)` не обязательно совпадает со значением `N* GetMaxByteCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="6407e-1532">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1533">Следующий пример определяет число байтов, необходимых для кодирования массива символов и кодирует символы отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="6407e-1533">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6407e-1534">Значение параметра <paramref name="charCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="6407e-1534"><paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="6407e-1535">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-1535">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-1536">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-1536">-and-</span></span> 
 <span data-ttu-id="6407e-1537">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1537"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="6407e-1538">Все <see cref="T:System.Text.Encoding" /> реализации должны гарантировать отсутствие исключений переполнения буфера, если буферы имеют размер в соответствии с результатами вычисления этот метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1538">All <see cref="T:System.Text.Encoding" /> implementations must guarantee that no buffer overflow exceptions occur if buffers are sized according to the results of this method's calculations.</span></span></para></block>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public abstract int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="abstract member GetMaxCharCount : int -&gt; int" Usage="encoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount"><span data-ttu-id="6407e-1539">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="6407e-1539">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="6407e-1540">При переопределении в производном классе вычисляет максимальное количество символов, полученных при декодировании заданного количества байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1540">When overridden in a derived class, calculates the maximum number of characters produced by decoding the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="6407e-1541">Максимальное количество символов, полученных при декодировании заданного количества байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1541">The maximum number of characters produced by decoding the specified number of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1542">Для вычисления размера точное массива, необходимого <xref:System.Text.Encoding.GetChars%2A> для хранения полученных символов, следует использовать <xref:System.Text.Encoding.GetCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1542">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%2A> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="6407e-1543">Чтобы вычислить максимальный размер массива, используйте <xref:System.Text.Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1543">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="6407e-1544"><xref:System.Text.Encoding.GetCharCount%2A> Метод обычно позволяет выделения меньше памяти, хотя <xref:System.Text.Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="6407e-1544">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6407e-1545"><xref:System.Text.Encoding.GetMaxCharCount%2A> Получает номер худшего случая, включая худшем случае для выбранного в данный момент <xref:System.Text.DecoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1545"><xref:System.Text.Encoding.GetMaxCharCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="6407e-1546">Если вы выбрали переход на резервный ресурс со строкой потенциально большого объема, <xref:System.Text.Encoding.GetMaxCharCount%2A> извлекает большие значения.</span><span class="sxs-lookup"><span data-stu-id="6407e-1546">If a fallback is chosen with a potentially large string, <xref:System.Text.Encoding.GetMaxCharCount%2A> retrieves large values.</span></span>  
  
 <span data-ttu-id="6407e-1547">В большинстве случаев этот метод извлекает адекватные числа для коротких строк.</span><span class="sxs-lookup"><span data-stu-id="6407e-1547">In most cases, this method retrieves reasonable numbers for small strings.</span></span> <span data-ttu-id="6407e-1548">Для больших строк возможно, выбирать между использованием очень больших буферов и перехват ошибок в тех редких случаях, что более рациональной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="6407e-1548">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is too small.</span></span> <span data-ttu-id="6407e-1549">Можно также рассмотреть возможность использования другого подхода <xref:System.Text.Encoding.GetCharCount%2A> или <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1549">You might also want to consider a different approach using <xref:System.Text.Encoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6407e-1550"><xref:System.Text.Encoding.GetMaxCharCount%2A> не имеет отношения к <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1550"><xref:System.Text.Encoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="6407e-1551">Если требуется подобная функция, для использования с <xref:System.Text.Encoding.GetBytes%2A>, следует использовать <xref:System.Text.Encoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1551">If you needs a similar function to use with <xref:System.Text.Encoding.GetBytes%2A>, you should use <xref:System.Text.Encoding.GetMaxByteCount%2A>.</span></span>  
  
 <span data-ttu-id="6407e-1552">При использовании <xref:System.Text.Encoding.GetMaxCharCount%2A>, необходимо выделить в выходной буфер, в зависимости от максимального размера входного буфера.</span><span class="sxs-lookup"><span data-stu-id="6407e-1552">When using <xref:System.Text.Encoding.GetMaxCharCount%2A>, you should allocate the output buffer based on the maximum size of the input buffer.</span></span> <span data-ttu-id="6407e-1553">Если размер выходного буфера ограничен, можно использовать <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1553">If the output buffer is constrained in size, you might use the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="6407e-1554">Обратите внимание, что <xref:System.Text.Encoding.GetMaxCharCount%2A> рассматривает Наихудший случай оставшиеся байты в предыдущей операции кодировщика.</span><span class="sxs-lookup"><span data-stu-id="6407e-1554">Note that <xref:System.Text.Encoding.GetMaxCharCount%2A> considers the worst case for leftover bytes from a previous encoder operation.</span></span> <span data-ttu-id="6407e-1555">Для большинства кодовых страниц передавая значение 0 в этот метод извлекает значения больше или равно 1.</span><span class="sxs-lookup"><span data-stu-id="6407e-1555">For most code pages, passing a value of 0 to this method retrieves values greater than or equal to 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6407e-1556">`GetMaxCharCount(N)` не обязательно совпадает со значением `N* GetMaxCharCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="6407e-1556">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1557">В следующем примере строка кодируется в массив байтов и затем декодирует байты в массив символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1557">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/VB/getchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6407e-1558">Значение параметра <paramref name="byteCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="6407e-1558"><paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="6407e-1559">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-1559">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-1560">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-1560">-and-</span></span> 
 <span data-ttu-id="6407e-1561">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1561"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="6407e-1562">Все <see cref="T:System.Text.Encoding" /> реализации должны гарантировать отсутствие исключений переполнения буфера, если буферы имеют размер в соответствии с результатами вычисления этот метод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1562">All <see cref="T:System.Text.Encoding" /> implementations must guarantee that no buffer overflow exceptions occur if buffers are sized according to the results of this method's calculations.</span></span></para></block>
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public virtual byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberSignature Language="F#" Value="abstract member GetPreamble : unit -&gt; byte[]&#xA;override this.GetPreamble : unit -&gt; byte[]" Usage="encoding.GetPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6407e-1563">При переопределении в производном классе возвращает последовательность байтов, задающую используемую кодировку.</span><span class="sxs-lookup"><span data-stu-id="6407e-1563">When overridden in a derived class, returns a sequence of bytes that specifies the encoding used.</span></span></summary>
        <returns><span data-ttu-id="6407e-1564">Массив байтов, в котором содержится последовательность байтов, задающая используемую кодировку.</span><span class="sxs-lookup"><span data-stu-id="6407e-1564">A byte array containing a sequence of bytes that specifies the encoding used.</span></span>  
  
<span data-ttu-id="6407e-1565">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-1565">-or-</span></span> 
<span data-ttu-id="6407e-1566">Массив байтов нулевой длины, если преамбула не требуется.</span><span class="sxs-lookup"><span data-stu-id="6407e-1566">A byte array of length zero, if a preamble is not required.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1567">При необходимости <xref:System.Text.Encoding> предоставляет заголовок, который представляет собой массив байтов, которые может иметь префикс в последовательность байтов, полученных в результате кодирования.</span><span class="sxs-lookup"><span data-stu-id="6407e-1567">Optionally, the <xref:System.Text.Encoding> object provides a preamble that is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="6407e-1568">Если преамбула содержит метку порядка байтов (в формате Юникод, кодовая точка U + FEFF), он позволяет определить порядок байтов и формат преобразования или UTF декодеру.</span><span class="sxs-lookup"><span data-stu-id="6407e-1568">If the preamble contains a byte order mark (in Unicode, code point U+FEFF), it helps the decoder determine the byte order and the transformation format or UTF.</span></span>  
  
 <span data-ttu-id="6407e-1569">Отметки порядка байтов (BOM) Юникода сериализуется следующим образом (в шестнадцатеричном формате):</span><span class="sxs-lookup"><span data-stu-id="6407e-1569">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="6407e-1570">UTF-8: EF BB BF</span><span class="sxs-lookup"><span data-stu-id="6407e-1570">UTF-8: EF BB BF</span></span>  
  
-   <span data-ttu-id="6407e-1571">UTF-16 обратный порядок байтов: FE FF</span><span class="sxs-lookup"><span data-stu-id="6407e-1571">UTF-16 big endian byte order: FE FF</span></span>  
  
-   <span data-ttu-id="6407e-1572">Прямой порядок байтов UTF-16: FF FE</span><span class="sxs-lookup"><span data-stu-id="6407e-1572">UTF-16 little endian byte order: FF FE</span></span>  
  
-   <span data-ttu-id="6407e-1573">UTF-32 обратный порядок байтов: 00 00 FE FF</span><span class="sxs-lookup"><span data-stu-id="6407e-1573">UTF-32 big endian byte order: 00 00 FE FF</span></span>  
  
-   <span data-ttu-id="6407e-1574">Прямой порядок байтов UTF-32: FF FE 00 00</span><span class="sxs-lookup"><span data-stu-id="6407e-1574">UTF-32 little endian byte order: FF FE 00 00</span></span>  
  
 <span data-ttu-id="6407e-1575">Спецификации, следует использовать, поскольку она обеспечивает почти точную идентификацию кодировки для файлов, в противном случае теряют ссылку на <xref:System.Text.Encoding> объекта, например, тег или неправильно отмечен веб-данных или случайное текстовые файлы, сохраненные, когда организация не иметь расставленными или другие данные.</span><span class="sxs-lookup"><span data-stu-id="6407e-1575">You should use the BOM, because it provides nearly certain identification of an encoding for files that otherwise have lost reference to the <xref:System.Text.Encoding> object, for example, untagged or improperly tagged web data or random text files stored when a business did not have international concerns or other data.</span></span> <span data-ttu-id="6407e-1576">Часто проблемы в работе пользователей избавить согласованных и правильных тегов в данных, желательно в UTF-8 или UTF-16.</span><span class="sxs-lookup"><span data-stu-id="6407e-1576">Often user problems might be avoided if data is consistently and properly tagged, preferably in UTF-8 or UTF-16.</span></span>  
  
 <span data-ttu-id="6407e-1577">Стандарты, которые предоставляют тип кодировки отчасти избыточна метки порядка БАЙТОВ.</span><span class="sxs-lookup"><span data-stu-id="6407e-1577">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="6407e-1578">Тем не менее он может использоваться для помочь серверу отправлять правильный заголовок кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1578">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="6407e-1579">Кроме того он может использоваться как переход на резервный ресурс в случае кодировку, в противном случае потери.</span><span class="sxs-lookup"><span data-stu-id="6407e-1579">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="6407e-1580">Есть некоторые недостатки использования метки порядка БАЙТОВ.</span><span class="sxs-lookup"><span data-stu-id="6407e-1580">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="6407e-1581">Например сложно выбрать способы ограничения полей базы данных, используйте метки порядка БАЙТОВ.</span><span class="sxs-lookup"><span data-stu-id="6407e-1581">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="6407e-1582">Объединение файлов может стать проблемой также, например, когда файлы будут объединены таким образом, что необязательный символ может оказаться в центре данных.</span><span class="sxs-lookup"><span data-stu-id="6407e-1582">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="6407e-1583">Несмотря на некоторые недостатки тем не менее, использование спецификации настоятельно рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="6407e-1583">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="6407e-1584">Дополнительные сведения о порядке байтов и отметки порядка байтов, см. в разделе стандарта Юникод на [домашней странице Юникода](https://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="6407e-1584">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](https://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="6407e-1585">Чтобы обеспечить правильное декодирование закодированных байтов, необходимо использовать перед закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="6407e-1585">To ensure that the encoded bytes are decoded properly, you should prefix encoded bytes with a preamble.</span></span> <span data-ttu-id="6407e-1586">Однако большинство кодировок преамбула не предоставляется.</span><span class="sxs-lookup"><span data-stu-id="6407e-1586">However, most encodings do not provide a preamble.</span></span> <span data-ttu-id="6407e-1587">Чтобы обеспечить правильное декодирование закодированных байтов, следует использовать кодировку Юникод, то есть <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, или <xref:System.Text.UTF32Encoding>, с начальной части.</span><span class="sxs-lookup"><span data-stu-id="6407e-1587">To ensure that the encoded bytes are decoded properly, you should use a Unicode encoding, that is, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding>, with a preamble.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1588">В следующем примере определяется порядок байтов кодировки на основе преамбулы.</span><span class="sxs-lookup"><span data-stu-id="6407e-1588">The following example determines the byte order of the encoding based on the preamble.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetPreamble Example/CPP/preamble.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetPreamble Example/CS/preamble.cs#1)]
 [!code-vb[System.Text.Encoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetPreamble Example/VB/preamble.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetString">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6407e-1589">При переопределении в производном классе декодирует последовательность байтов в строку.</span><span class="sxs-lookup"><span data-stu-id="6407e-1589">When overridden in a derived class, decodes a sequence of bytes into a string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (bytes As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="abstract member GetString : byte[] -&gt; string&#xA;override this.GetString : byte[] -&gt; string" Usage="encoding.GetString bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="6407e-1590">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="6407e-1590">The byte array containing the sequence of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="6407e-1591">При переопределении в производном классе декодирует все байты из указанного массива байтов в строку.</span><span class="sxs-lookup"><span data-stu-id="6407e-1591">When overridden in a derived class, decodes all the bytes in the specified byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="6407e-1592">Строка, содержащая результаты декодирования заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1592">A string that contains the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1593">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных слишком велико, что ему следует разделить на небольшие блоки, следует использовать <xref:System.Text.Decoder> объект, возвращаемый <xref:System.Text.Encoding.GetDecoder%2A> метод производные производные класса.</span><span class="sxs-lookup"><span data-stu-id="6407e-1593">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> object returned by the <xref:System.Text.Encoding.GetDecoder%2A> method of a derived class.</span></span>  
  
 <span data-ttu-id="6407e-1594">См. в разделе "Примечания" <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> справочном разделе для обсуждения декодирования методы и рекомендации.</span><span class="sxs-lookup"><span data-stu-id="6407e-1594">See the Remarks section of the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> reference topic for a discussion of decoding techniques and considerations.</span></span>  
  
 <span data-ttu-id="6407e-1595">Обратите внимание, что точное поведение <xref:System.Text.Encoding.GetString%2A> метод для какого-либо <xref:System.Text.Encoding> реализация зависит от резервной стратегии, определенным для этого <xref:System.Text.Encoding> объекта.</span><span class="sxs-lookup"><span data-stu-id="6407e-1595">Note that the precise behavior of the <xref:System.Text.Encoding.GetString%2A> method for a particular <xref:System.Text.Encoding> implementation depends on the fallback strategy defined for that <xref:System.Text.Encoding> object.</span></span> <span data-ttu-id="6407e-1596">Дополнительные сведения см. в разделе «Выбор резервной стратегии» [кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md) раздела.</span><span class="sxs-lookup"><span data-stu-id="6407e-1596">For more information, see the "Choosing a Fallback Strategy" section of the [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1597">Следующий пример считывает строку в кодировке UTF-8 из двоичного файла, представленного <xref:System.IO.FileStream> объекта.</span><span class="sxs-lookup"><span data-stu-id="6407e-1597">The following example reads a UTF-8 encoded string from a binary file represented by a <xref:System.IO.FileStream> object.</span></span> <span data-ttu-id="6407e-1598">Для файлов размером менее 2048 байтов, он считывает содержимое всего файла в массив байтов и вызовы <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%29> метод, чтобы выполнить декодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-1598">For files that are smaller than 2,048 bytes, it reads the contents of the entire file into a byte array and calls the <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%29> method to perform the decoding.</span></span> <span data-ttu-id="6407e-1599">Для более крупных файлов, он считывает 2048 байтов за раз в массив байтов, вызовы <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> метод, чтобы определить число символов, содержащихся в массиве, а затем вызывает <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> метод, чтобы выполнить декодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-1599">For larger files, it reads 2,048 bytes at a time into a byte array, calls the <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to determine how many characters are contained in the array, and then calls the <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> method to perform the decoding.</span></span>  
  
 [!code-csharp[System.Text.Encoding.GetString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetString/CS/getstring1.cs#2)]
 [!code-vb[System.Text.Encoding.GetString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetString/VB/getstring1.vb#2)]  
  
 <span data-ttu-id="6407e-1600">В примере используется следующий текст, который следует сохранить в файл в кодировке UTF-8, с именем Utf8Example.txt.</span><span class="sxs-lookup"><span data-stu-id="6407e-1600">The example uses the following text, which should be saved to a UTF-8 encoded file named Utf8Example.txt.</span></span>  
  
```  
  
This is a UTF-8-encoded file that contains primarily Latin text, although it   
does list the first twelve letters of the Russian (Cyrillic) alphabet:  
  
А б в г д е ё ж з и й к  
  
The goal is to save this file, then open and decode it as a binary stream.  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6407e-1601">Массив байтов содержит недопустимые точки кода Юникод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1601">The byte array contains invalid Unicode code points.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-1602"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1602"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="6407e-1603">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-1603">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-1604">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-1604">-and-</span></span> 
 <span data-ttu-id="6407e-1605">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1605"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetString (bytes As ReadOnlySpan(Of Byte)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="member this.GetString : ReadOnlySpan&lt;byte&gt; -&gt; string" Usage="encoding.GetString bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="member this.GetString : nativeptr&lt;byte&gt; * int -&gt; string" Usage="encoding.GetString (bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="6407e-1606">Указатель на массив байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1606">A pointer to a byte array.</span></span></param>
        <param name="byteCount"><span data-ttu-id="6407e-1607">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="6407e-1607">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="6407e-1608">При переопределении в производном классе декодирует указанное количество байтов начиная с указанного адреса в строку.</span><span class="sxs-lookup"><span data-stu-id="6407e-1608">When overridden in a derived class, decodes a specified number of bytes starting at a specified address into a string.</span></span></summary>
        <returns><span data-ttu-id="6407e-1609">Строка, содержащая результаты декодирования заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1609">A string that contains the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1610"><xref:System.Text.Encoding.GetString%2A> Метод предназначен для оптимизации производительности, когда у вас есть собственный указатель в массив байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1610">The <xref:System.Text.Encoding.GetString%2A> method is designed to optimize performance when you have a native pointer to a byte array.</span></span> <span data-ttu-id="6407e-1611">Вместо создания управляемого массива байтов и затем его вместо этого можно вызвать этот метод не требуется создавать все промежуточные объекты.</span><span class="sxs-lookup"><span data-stu-id="6407e-1611">Instead of creating a managed byte array and then decoding it, you can instead call this method without having to create any intermediate objects.</span></span>  
  
 <span data-ttu-id="6407e-1612">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных слишком велико, что ему следует разделить на небольшие блоки, следует использовать <xref:System.Text.Decoder> объект, возвращаемый <xref:System.Text.Encoding.GetDecoder%2A> метод производные производные класса.</span><span class="sxs-lookup"><span data-stu-id="6407e-1612">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> object returned by the <xref:System.Text.Encoding.GetDecoder%2A> method of a derived class.</span></span>  
  
 <span data-ttu-id="6407e-1613">См. в разделе "Примечания" <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> справочном разделе для обсуждения декодирования методы и рекомендации.</span><span class="sxs-lookup"><span data-stu-id="6407e-1613">See the Remarks section of the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> reference topic for a discussion of decoding techniques and considerations.</span></span>  
  
 <span data-ttu-id="6407e-1614">Обратите внимание, что точное поведение <xref:System.Text.Encoding.GetString%2A> метод для какого-либо <xref:System.Text.Encoding> реализация зависит от резервной стратегии, определенным для этого <xref:System.Text.Encoding> объекта.</span><span class="sxs-lookup"><span data-stu-id="6407e-1614">Note that the precise behavior of the <xref:System.Text.Encoding.GetString%2A> method for a particular <xref:System.Text.Encoding> implementation depends on the fallback strategy defined for that <xref:System.Text.Encoding> object.</span></span> <span data-ttu-id="6407e-1615">Дополнительные сведения см. в разделе «Выбор резервной стратегии» [кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md) раздела.</span><span class="sxs-lookup"><span data-stu-id="6407e-1615">For more information, see the "Choosing a Fallback Strategy" section of the [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) topic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-1616"><paramref name="bytes" /> является пустым указателем</span><span class="sxs-lookup"><span data-stu-id="6407e-1616"><paramref name="bytes" /> is a null pointer.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6407e-1617">Значение параметра <paramref name="byteCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="6407e-1617"><paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="6407e-1618">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-1618">A   fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for a complete explanation)</span></span> 
<span data-ttu-id="6407e-1619">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-1619">-and-</span></span> 
 <span data-ttu-id="6407e-1620">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1620"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetString : byte[] * int * int -&gt; string&#xA;override this.GetString : byte[] * int * int -&gt; string" Usage="encoding.GetString (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="6407e-1621">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="6407e-1621">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="6407e-1622">Индекс первого декодируемого байта.</span><span class="sxs-lookup"><span data-stu-id="6407e-1622">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="6407e-1623">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="6407e-1623">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="6407e-1624">При переопределении в производном классе декодирует последовательность байтов из указанного массива байтов в строку.</span><span class="sxs-lookup"><span data-stu-id="6407e-1624">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="6407e-1625">Строка, содержащая результаты декодирования заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1625">A string that contains the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1626">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных слишком велико, что ему следует разделить на небольшие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.Encoding.GetDecoder%2A> метод или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="6407e-1626">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="6407e-1627">См. в разделе "Примечания" <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> справочном разделе для обсуждения декодирования методы и рекомендации.</span><span class="sxs-lookup"><span data-stu-id="6407e-1627">See the Remarks section of the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> reference topic for a discussion of decoding techniques and considerations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1628">Следующий пример считывает строку в кодировке UTF-8 из двоичного файла, представленного <xref:System.IO.FileStream> объекта.</span><span class="sxs-lookup"><span data-stu-id="6407e-1628">The following example reads a UTF-8 encoded string from a binary file that is represented by a <xref:System.IO.FileStream> object.</span></span> <span data-ttu-id="6407e-1629">Для файлов размером менее 2048 байтов, он считывает содержимое всего файла в массив байтов и вызовы <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> метод, чтобы выполнить декодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-1629">For files that are smaller than 2,048 bytes, it reads the contents of the entire file into a byte array and calls the <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to perform the decoding.</span></span> <span data-ttu-id="6407e-1630">Для более крупных файлов, он считывает 2048 байтов за раз в массив байтов, вызовы <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> метод, чтобы определить число символов, содержащихся в массиве, а затем вызывает <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> метод, чтобы выполнить декодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-1630">For larger files, it reads 2,048 bytes at a time into a byte array, calls the <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to determine how many characters are contained in the array, and then calls the <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> method to perform the decoding.</span></span>  
  
 [!code-csharp[System.Text.Encoding.GetString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetString/CS/getstring2.cs#3)]
 [!code-vb[System.Text.Encoding.GetString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetString/VB/getstring2.vb#3)]  
  
 <span data-ttu-id="6407e-1631">В примере используется следующий текст, который следует сохранить в файл в кодировке UTF-8, с именем Utf8Example.txt.</span><span class="sxs-lookup"><span data-stu-id="6407e-1631">The example uses the following text, which should be saved to a UTF-8 encoded file named Utf8Example.txt.</span></span>  
  
```  
  
This is a UTF-8-encoded file that contains primarily Latin text, although it   
does list the first twelve letters of the Russian (Cyrillic) alphabet:  
  
А б в г д е ё ж з и й к  
  
The goal is to save this file, then open and decode it as a binary stream.  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6407e-1632">Массив байтов содержит недопустимые точки кода Юникод.</span><span class="sxs-lookup"><span data-stu-id="6407e-1632">The byte array contains invalid Unicode code points.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-1633"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1633"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6407e-1634">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="6407e-1634"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="6407e-1635">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-1635">-or-</span></span> 
 <span data-ttu-id="6407e-1636">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1636"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="6407e-1637">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="6407e-1637">A fallback occurred (see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="6407e-1638">- и -</span><span class="sxs-lookup"><span data-stu-id="6407e-1638">-and-</span></span> 
 <span data-ttu-id="6407e-1639">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1639"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HeaderName">
      <MemberSignature Language="C#" Value="public virtual string HeaderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.HeaderName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderName : string" Usage="System.Text.Encoding.HeaderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-1640">При переопределении в производном классе получает имя текущей кодировки, которое может использоваться с тегами заголовка сообщения почтового агента.</span><span class="sxs-lookup"><span data-stu-id="6407e-1640">When overridden in a derived class, gets a name for the current encoding that can be used with mail agent header tags.</span></span></summary>
        <value><span data-ttu-id="6407e-1641">Имя текущего объекта <see cref="T:System.Text.Encoding" />, которое может использоваться с тегами заголовка сообщения почтового агента.</span><span class="sxs-lookup"><span data-stu-id="6407e-1641">A name for the current <see cref="T:System.Text.Encoding" /> to use with mail agent header tags.</span></span>  
  
<span data-ttu-id="6407e-1642">-или-</span><span class="sxs-lookup"><span data-stu-id="6407e-1642">-or-</span></span> 
<span data-ttu-id="6407e-1643">Пустая строка (""), если текущий объект <see cref="T:System.Text.Encoding" /> не может использоваться.</span><span class="sxs-lookup"><span data-stu-id="6407e-1643">An empty string (""), if the current <see cref="T:System.Text.Encoding" /> cannot be used.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1644">Если вам нужна кодировка для имени заголовка, необходимо вызвать <xref:System.Text.Encoding.GetEncoding%2A> метод с <xref:System.Text.Encoding.HeaderName%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="6407e-1644">If you need an encoding for a header name, you should call the <xref:System.Text.Encoding.GetEncoding%2A> method with the <xref:System.Text.Encoding.HeaderName%2A> property.</span></span> <span data-ttu-id="6407e-1645">Этот метод часто извлекает другую кодировку из тестовой кодировки, которой он вызывается.</span><span class="sxs-lookup"><span data-stu-id="6407e-1645">Often the method retrieves a different encoding from the test encoding furnished in the call.</span></span> <span data-ttu-id="6407e-1646">Обычно только почтовые приложения нужно получить такое кодирование.</span><span class="sxs-lookup"><span data-stu-id="6407e-1646">Generally only email applications need to retrieve such an encoding.</span></span>  
  
 <span data-ttu-id="6407e-1647">В некоторых случаях значение <xref:System.Text.Encoding.BodyName%2A> свойство соответствует международный стандарт, определяющий эту кодировку.</span><span class="sxs-lookup"><span data-stu-id="6407e-1647">In some cases, the value of the <xref:System.Text.Encoding.BodyName%2A> property corresponds to the international standard that defines that encoding.</span></span> <span data-ttu-id="6407e-1648">Это не значит, что реализация соответствует в полном объеме с этого стандарта.</span><span class="sxs-lookup"><span data-stu-id="6407e-1648">This doesn't mean that the implementation complies in full with that standard.</span></span>  
  
 <span data-ttu-id="6407e-1649">Обратите внимание, что <xref:System.Text.Encoding.WebName%2A> возвращает имя, используемое для описания кодировку.</span><span class="sxs-lookup"><span data-stu-id="6407e-1649">Note that <xref:System.Text.Encoding.WebName%2A> returns the name to use to describe an encoding.</span></span> <span data-ttu-id="6407e-1650"><xref:System.Text.Encoding.HeaderName%2A> Свойство определяет другую кодировку, которая может работать лучше для приложения электронной почты, например.</span><span class="sxs-lookup"><span data-stu-id="6407e-1650">The <xref:System.Text.Encoding.HeaderName%2A> property defines a different encoding that might work better for an email application, for example.</span></span> <span data-ttu-id="6407e-1651">Тем не менее не рекомендуется использовать свойство для задания кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1651">However, use of the property to define the encoding is not recommended.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1652">В следующем примере извлекаются разные имена для каждой кодировки и отображаются кодировки, имеющие одно или несколько имен, которые отличаются от <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1652">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6407e-1653">Он отображает <xref:System.Text.Encoding.EncodingName%2A> , но не выполняет сравнение на ее основе.</span><span class="sxs-lookup"><span data-stu-id="6407e-1653">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.Name" />
        <altmember cref="P:System.Text.Encoding.BodyName" />
        <altmember cref="P:System.Text.Encoding.EncodingName" />
        <altmember cref="P:System.Text.Encoding.WebName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAlwaysNormalized">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6407e-1654">Получает значение, которое указывает, является ли текущая кодировка всегда нормированной.</span><span class="sxs-lookup"><span data-stu-id="6407e-1654">Gets a value indicating whether the current encoding is always normalized.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAlwaysNormalized">
      <MemberSignature Language="C#" Value="public bool IsAlwaysNormalized ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAlwaysNormalized() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.IsAlwaysNormalized" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAlwaysNormalized () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAlwaysNormalized();" />
      <MemberSignature Language="F#" Value="member this.IsAlwaysNormalized : unit -&gt; bool" Usage="encoding.IsAlwaysNormalized " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6407e-1655">Получает значение, которое указывает, является ли текущая кодировка всегда нормализованной с использованием формы нормализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="6407e-1655">Gets a value indicating whether the current encoding is always normalized, using the default normalization form.</span></span></summary>
        <returns><span data-ttu-id="6407e-1656"><see langword="true" />, если текущий объект <see cref="T:System.Text.Encoding" /> всегда нормирован; в противоположном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1656"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> is always normalized; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6407e-1657">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1657">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1658">Формы нормализации по умолчанию является <xref:System.Text.NormalizationForm.FormC>, с использованием полной канонической декомпозиции, по возможности следует замена последовательностей их первичными составляющими.</span><span class="sxs-lookup"><span data-stu-id="6407e-1658">The default normalization form is <xref:System.Text.NormalizationForm.FormC>, which uses full canonical decomposition, followed by the replacement of sequences with their primary composites, if possible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.NormalizationForm" />
      </Docs>
    </Member>
    <Member MemberName="IsAlwaysNormalized">
      <MemberSignature Language="C#" Value="public virtual bool IsAlwaysNormalized (System.Text.NormalizationForm form);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAlwaysNormalized(valuetype System.Text.NormalizationForm form) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.IsAlwaysNormalized(System.Text.NormalizationForm)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAlwaysNormalized (form As NormalizationForm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAlwaysNormalized(System::Text::NormalizationForm form);" />
      <MemberSignature Language="F#" Value="abstract member IsAlwaysNormalized : System.Text.NormalizationForm -&gt; bool&#xA;override this.IsAlwaysNormalized : System.Text.NormalizationForm -&gt; bool" Usage="encoding.IsAlwaysNormalized form" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="form" Type="System.Text.NormalizationForm" />
      </Parameters>
      <Docs>
        <param name="form"><span data-ttu-id="6407e-1659">Одно из значений <see cref="T:System.Text.NormalizationForm" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1659">One of the <see cref="T:System.Text.NormalizationForm" /> values.</span></span></param>
        <summary><span data-ttu-id="6407e-1660">При переопределении в производном классе получает значение, которое указывает, является ли текущая кодировка всегда нормализованной с использованием заданной по умолчанию формы нормализации.</span><span class="sxs-lookup"><span data-stu-id="6407e-1660">When overridden in a derived class, gets a value indicating whether the current encoding is always normalized, using the specified normalization form.</span></span></summary>
        <returns><span data-ttu-id="6407e-1661"><see langword="true" />, если текущий объект <see cref="T:System.Text.Encoding" /> всегда нормализуется с использованием заданного значения <see cref="T:System.Text.NormalizationForm" />; в противоположном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1661"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> object is always normalized using the specified <see cref="T:System.Text.NormalizationForm" /> value; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6407e-1662">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1662">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1663">Формы нормализации по умолчанию является <xref:System.Text.NormalizationForm.FormC>, с использованием полной канонической декомпозиции, по возможности следует замена последовательностей их первичными составляющими.</span><span class="sxs-lookup"><span data-stu-id="6407e-1663">The default normalization form is <xref:System.Text.NormalizationForm.FormC>, which uses full canonical decomposition, followed by the replacement of sequences with their primary composites, if possible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.NormalizationForm" />
      </Docs>
    </Member>
    <Member MemberName="IsBrowserDisplay">
      <MemberSignature Language="C#" Value="public virtual bool IsBrowserDisplay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBrowserDisplay" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsBrowserDisplay" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsBrowserDisplay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsBrowserDisplay { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBrowserDisplay : bool" Usage="System.Text.Encoding.IsBrowserDisplay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-1664">При переопределении в производном классе получает значение, указывающее, может ли текущая кодировка использоваться клиентами браузера для отображения содержимого.</span><span class="sxs-lookup"><span data-stu-id="6407e-1664">When overridden in a derived class, gets a value indicating whether the current encoding can be used by browser clients for displaying content.</span></span></summary>
        <value><span data-ttu-id="6407e-1665"><see langword="true" />, если текущий объект <see cref="T:System.Text.Encoding" /> может использоваться клиентами браузера для отображения содержимого; в противоположном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1665"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by browser clients for displaying content; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6407e-1666">В следующем примере проверяется значения логических свойств каждой кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1666">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsBrowserSave" />
      </Docs>
    </Member>
    <Member MemberName="IsBrowserSave">
      <MemberSignature Language="C#" Value="public virtual bool IsBrowserSave { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBrowserSave" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsBrowserSave" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsBrowserSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsBrowserSave { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBrowserSave : bool" Usage="System.Text.Encoding.IsBrowserSave" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-1667">При переопределении в производном классе получает значение, указывающее, может ли текущая кодировка использоваться клиентами браузера для сохранения содержимого.</span><span class="sxs-lookup"><span data-stu-id="6407e-1667">When overridden in a derived class, gets a value indicating whether the current encoding can be used by browser clients for saving content.</span></span></summary>
        <value><span data-ttu-id="6407e-1668"><see langword="true" />, если текущий объект <see cref="T:System.Text.Encoding" /> может использоваться клиентами браузера для сохранения содержимого; в противоположном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1668"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by browser clients for saving content; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6407e-1669">В следующем примере проверяется значения логических свойств каждой кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1669">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsBrowserDisplay" />
      </Docs>
    </Member>
    <Member MemberName="IsMailNewsDisplay">
      <MemberSignature Language="C#" Value="public virtual bool IsMailNewsDisplay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMailNewsDisplay" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsMailNewsDisplay" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMailNewsDisplay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMailNewsDisplay { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMailNewsDisplay : bool" Usage="System.Text.Encoding.IsMailNewsDisplay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-1670">При переопределении в производном классе получает значение, указывающее, может ли текущая кодировка использоваться клиентами электронной почты и новостей для отображения содержимого.</span><span class="sxs-lookup"><span data-stu-id="6407e-1670">When overridden in a derived class, gets a value indicating whether the current encoding can be used by mail and news clients for displaying content.</span></span></summary>
        <value><span data-ttu-id="6407e-1671"><see langword="true" />, если текущий объект <see cref="T:System.Text.Encoding" /> может использоваться клиентами электронной почты и новостей для отображения содержимого; в противоположном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1671"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by mail and news clients for displaying content; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6407e-1672">В следующем примере проверяется значения логических свойств каждой кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1672">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsMailNewsDisplay" />
      </Docs>
    </Member>
    <Member MemberName="IsMailNewsSave">
      <MemberSignature Language="C#" Value="public virtual bool IsMailNewsSave { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMailNewsSave" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsMailNewsSave" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMailNewsSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMailNewsSave { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMailNewsSave : bool" Usage="System.Text.Encoding.IsMailNewsSave" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-1673">При переопределении в производном классе получает значение, указывающее, может ли текущая кодировка использоваться клиентами электронной почты и новостей для сохранения содержимого.</span><span class="sxs-lookup"><span data-stu-id="6407e-1673">When overridden in a derived class, gets a value indicating whether the current encoding can be used by mail and news clients for saving content.</span></span></summary>
        <value><span data-ttu-id="6407e-1674"><see langword="true" />, если текущий объект <see cref="T:System.Text.Encoding" /> может использоваться клиентами почты и новостей для сохранения содержимого; в противоположном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1674"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by mail and news clients for saving content; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6407e-1675">В следующем примере проверяется значения логических свойств каждой кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1675">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsMailNewsSave" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Text.Encoding.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-1676">При переопределении в производном классе получает значение, указывающее, является ли текущая кодировка доступной только для чтения.</span><span class="sxs-lookup"><span data-stu-id="6407e-1676">When overridden in a derived class, gets a value indicating whether the current encoding is read-only.</span></span></summary>
        <value><span data-ttu-id="6407e-1677">Значение <see langword="true" />, если текущий объект <see cref="T:System.Text.Encoding" /> доступен только для чтения, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1677"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6407e-1678">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1678">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSingleByte">
      <MemberSignature Language="C#" Value="public virtual bool IsSingleByte { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSingleByte" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsSingleByte" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSingleByte As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSingleByte { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSingleByte : bool" Usage="System.Text.Encoding.IsSingleByte" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-1679">При переопределении в производном классе получает значение, указывающее, используются ли в текущей кодировке однобайтовые кодовые точки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1679">When overridden in a derived class, gets a value indicating whether the current encoding uses single-byte code points.</span></span></summary>
        <value><span data-ttu-id="6407e-1680"><see langword="true" />, если в текущем объекте <see cref="T:System.Text.Encoding" /> используются однобайтовые кодовые точки; в противоположном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1680"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> uses single-byte code points; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1681">Для однобайтовой кодировки, например, <xref:System.Text.ASCIIEncoding>, это свойство получает `true`.</span><span class="sxs-lookup"><span data-stu-id="6407e-1681">For a single-byte encoding, for example, <xref:System.Text.ASCIIEncoding>, this property retrieves `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="6407e-1682">Следует соблюдать осторожность в назначение со значением для <xref:System.Text.Encoding.IsSingleByte%2A>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1682">You should be careful in what your application does with the value for <xref:System.Text.Encoding.IsSingleByte%2A>.</span></span> <span data-ttu-id="6407e-1683">Предполагается, что как кодировки продолжится по-прежнему могут быть некорректными.</span><span class="sxs-lookup"><span data-stu-id="6407e-1683">An assumption of how an Encoding will proceed may still be wrong.</span></span> <span data-ttu-id="6407e-1684">Например, Windows-1252 имеет значение `true` для <xref:System.Text.Encoding.IsSingleByte%2A?displayProperty=nameWithType>, но Encoding.GetMaxByteCount(1) возвращает 2.</span><span class="sxs-lookup"><span data-stu-id="6407e-1684">For example, Windows-1252 has a value of `true` for <xref:System.Text.Encoding.IsSingleByte%2A?displayProperty=nameWithType>, but Encoding.GetMaxByteCount(1) returns 2.</span></span> <span data-ttu-id="6407e-1685">Это потому, что метод учитывает потенциальные оставшиеся суррогаты из предыдущей операции декодера.</span><span class="sxs-lookup"><span data-stu-id="6407e-1685">This is because the method considers potential leftover surrogates from a previous decoder operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1686">В следующем примере проверяется значения логических свойств каждой кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1686">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Preamble">
      <MemberSignature Language="C#" Value="public virtual ReadOnlySpan&lt;byte&gt; Preamble { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; Preamble" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.Preamble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Preamble As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property ReadOnlySpan&lt;System::Byte&gt; Preamble { ReadOnlySpan&lt;System::Byte&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Preamble : ReadOnlySpan&lt;byte&gt;" Usage="System.Text.Encoding.Preamble" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterProvider">
      <MemberSignature Language="C#" Value="public static void RegisterProvider (System.Text.EncodingProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterProvider(class System.Text.EncodingProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterProvider (provider As EncodingProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterProvider(System::Text::EncodingProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member RegisterProvider : System.Text.EncodingProvider -&gt; unit" Usage="System.Text.Encoding.RegisterProvider provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Text.EncodingProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="6407e-1687">Подкласс класса <see cref="T:System.Text.EncodingProvider" />, который предоставляет доступ к дополнительным кодировкам символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1687">A subclass of <see cref="T:System.Text.EncodingProvider" /> that provides access to additional character encodings.</span></span></param>
        <summary><span data-ttu-id="6407e-1688">Регистрирует поставщик кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1688">Registers an encoding provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1689"><xref:System.Text.Encoding.RegisterProvider%2A> Метод позволяет зарегистрировать класс, производный от <xref:System.Text.EncodingProvider> что делает кодировки доступные на платформе, в противном случае их не поддерживает.</span><span class="sxs-lookup"><span data-stu-id="6407e-1689">The <xref:System.Text.Encoding.RegisterProvider%2A> method allows you to register a class derived from <xref:System.Text.EncodingProvider> that makes character encodings available on a platform that does not otherwise support them.</span></span> <span data-ttu-id="6407e-1690">Зарегистрированный поставщик кодировки, кодировки, которые он поддерживает можно получить путем вызова любого <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1690">Once the encoding provider is registered, the encodings that it supports can be retrieved by calling any <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="6407e-1691">При наличии нескольких поставщиков кодирования, <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> метод пытается извлечь с заданной кодировкой от каждого поставщика, начиная с наиболее недавно зарегистрированный.</span><span class="sxs-lookup"><span data-stu-id="6407e-1691">If there are multiple encoding providers, the <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> method attempts to retrieve a specified encoding from each provider starting with the one most recently registered.</span></span>

<span data-ttu-id="6407e-1692">Регистрация поставщика кодировки с помощью <xref:System.Text.Encoding.RegisterProvider%2A> метод также изменяет поведение [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) и [EncodingProvider.GetEncoding (Int32, EncoderFallback, DecoderFallback )](xref:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)) методы при передаче аргумента `0`:</span><span class="sxs-lookup"><span data-stu-id="6407e-1692">Registering an encoding provider by using the <xref:System.Text.Encoding.RegisterProvider%2A> method also modifies the behavior of the [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) and [EncodingProvider.GetEncoding(Int32, EncoderFallback, DecoderFallback)](xref:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)) methods when passed an argument of `0`:</span></span>

- <span data-ttu-id="6407e-1693">Если зарегистрированный поставщик <xref:System.Text.CodePagesEncodingProvider>, метод возвращает кодировку, соответствующую активную кодовую страницу системы при работе в операционной системе Windows.</span><span class="sxs-lookup"><span data-stu-id="6407e-1693">If the registered provider is the <xref:System.Text.CodePagesEncodingProvider>, the method returns the encoding that matches the system active code page when running on the Windows operating system.</span></span>

- <span data-ttu-id="6407e-1694">Пользовательский поставщик кодировки можно выбрать, какую кодировку, возвращаемое, если любой из этих <xref:System.Text.Encoding.GetEncoding%2A> перегрузок метода передается аргумент `0`.</span><span class="sxs-lookup"><span data-stu-id="6407e-1694">A custom encoding provider can choose which encoding to return when either of these <xref:System.Text.Encoding.GetEncoding%2A> method overloads is passed an argument of `0`.</span></span> <span data-ttu-id="6407e-1695">Поставщик можно также возвращает кодировку, задав <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> возвращаемого значения метода `null`.</span><span class="sxs-lookup"><span data-stu-id="6407e-1695">The provider can also choose to not return an encoding by having the <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> method return `null`.</span></span> 
  
<span data-ttu-id="6407e-1696">Начиная с .NET Framework 4.6, .NET Framework включает один поставщик кодировки, <xref:System.Text.CodePagesEncodingProvider>, это делает доступные кодировки, которые присутствуют в полной версии платформы .NET Framework, но не доступны в универсальной платформы Windows.</span><span class="sxs-lookup"><span data-stu-id="6407e-1696">Starting with the .NET Framework 4.6, the .NET Framework includes one encoding provider, <xref:System.Text.CodePagesEncodingProvider>, that makes the encodings available that are present in the full .NET Framework but are not available in the Universal Windows Platform.</span></span> <span data-ttu-id="6407e-1697">По умолчанию универсальная платформа Windows поддерживает только кодировки Юникод, ASCII и кодовой страницы 28591.</span><span class="sxs-lookup"><span data-stu-id="6407e-1697">By default, the Universal Windows Platform only supports the Unicode encodings, ASCII, and code page 28591.</span></span>  
  
 <span data-ttu-id="6407e-1698">Если один и тот же поставщик кодировки используется в нескольких вызовах <xref:System.Text.Encoding.RegisterProvider%2A> поставщик регистрирует метод, только первый вызов метода.</span><span class="sxs-lookup"><span data-stu-id="6407e-1698">If the same encoding provider is used in multiple calls to the <xref:System.Text.Encoding.RegisterProvider%2A> method, only the first method call registers the provider.</span></span> <span data-ttu-id="6407e-1699">Последующие вызовы учитываются.</span><span class="sxs-lookup"><span data-stu-id="6407e-1699">Subsequent calls are ignored.</span></span>  
  
 <span data-ttu-id="6407e-1700">Если <xref:System.Text.Encoding.RegisterProvider%2A> метод вызывается для регистрации нескольких поставщиков, которые обрабатывают ту же кодировку, последний зарегистрированный поставщик используется для всех операциях кодирования и декодирования.</span><span class="sxs-lookup"><span data-stu-id="6407e-1700">If the <xref:System.Text.Encoding.RegisterProvider%2A> method is called to register multiple providers that handle the same encoding, the last registered provider is the used for all encoding and decoding operations.</span></span> <span data-ttu-id="6407e-1701">Все ранее зарегистрированных поставщиков учитываются.</span><span class="sxs-lookup"><span data-stu-id="6407e-1701">Any previously registered providers are ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6407e-1702"><paramref name="provider" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1702"><paramref name="provider" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Text.CodePagesEncodingProvider" />
        <altmember cref="T:System.Text.EncodingProvider" />
      </Docs>
    </Member>
    <Member MemberName="Unicode">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding Unicode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding Unicode" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.Unicode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Unicode As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ Unicode { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Unicode : System.Text.Encoding" Usage="System.Text.Encoding.Unicode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-1703">Получает кодировку для формата UTF-16 с прямым порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1703">Gets an encoding for the UTF-16 format using the little endian byte order.</span></span></summary>
        <value><span data-ttu-id="6407e-1704">Кодировка для формата UTF-16 с прямым порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1704">An encoding for the UTF-16 format using the little endian byte order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1705">Сведения о кодировках, поддерживаемых .NET и обсуждение какие Юникод, кодировка, используемая, см. в разделе [кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="6407e-1705">For information about the encodings supported by the .NET and a discussion of which Unicode encoding to use, see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="6407e-1706"><xref:System.Text.UnicodeEncoding> Возвращаемый этим свойством объект может иметь необходимого поведения для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="6407e-1706">The <xref:System.Text.UnicodeEncoding> object that is returned by this property may not have the appropriate behavior for your app.</span></span> <span data-ttu-id="6407e-1707">Он использует резервную стратегию замены для замены каждой строки, он не может закодировать и каждый байт, он не может декодировать с вопросительным знаком ("?») символ.</span><span class="sxs-lookup"><span data-stu-id="6407e-1707">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with a question mark ("?") character.</span></span> <span data-ttu-id="6407e-1708">Вместо этого можно вызвать <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> конструктора для создания обратным порядком байтов <xref:System.Text.UnicodeEncoding> которого резервный метод, либо объект <xref:System.Text.EncoderFallbackException> или <xref:System.Text.DecoderFallbackException>, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="6407e-1708">Instead, you can call the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a little endian <xref:System.Text.UnicodeEncoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.Unicode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.unicode/cs/unicode1.cs#2)]
 [!code-vb[System.Text.Encoding.Unicode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.unicode/vb/unicode1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1709">Следующий пример определяет число байтов, необходимых для кодирования массива символов и кодирует символы отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="6407e-1709">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UnicodeEncoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <altmember cref="P:System.Text.Encoding.BigEndianUnicode" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="6407e-1710">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="6407e-1710">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UTF32">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding UTF32 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding UTF32" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.UTF32" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UTF32 As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ UTF32 { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UTF32 : System.Text.Encoding" Usage="System.Text.Encoding.UTF32" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-1711">Получает кодировку для формата UTF-32 с прямым порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1711">Gets an encoding for the UTF-32 format using the little endian byte order.</span></span></summary>
        <value><span data-ttu-id="6407e-1712">Объект кодировки для формата UTF-32 с прямым порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1712">An  encoding object for the UTF-32 format using the little endian byte order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1713"><xref:System.Text.UTF32Encoding> Возвращаемый этим свойством объект может иметь необходимого поведения для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="6407e-1713">The <xref:System.Text.UTF32Encoding> object that is returned by this property may not have the appropriate behavior for your app.</span></span> <span data-ttu-id="6407e-1714">Он использует резервную стратегию замены для каждой строки, он не может закодировать и каждый байт, он не может декодировать замените замещающий символ Юникода (U + FFFE).</span><span class="sxs-lookup"><span data-stu-id="6407e-1714">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with the Unicode REPLACEMENT CHARACTER (U+FFFE).</span></span> <span data-ttu-id="6407e-1715">Вместо этого можно вызвать <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> конструктора для создания <xref:System.Text.UTF32Encoding> которого резервный метод, либо объект <xref:System.Text.EncoderFallbackException> или <xref:System.Text.DecoderFallbackException>, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="6407e-1715">Instead, you can call the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a <xref:System.Text.UTF32Encoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.UTF32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.utf32/cs/encoding.utf32.1.cs#1)]
 [!code-vb[System.Text.Encoding.UTF32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.utf32/vb/encoding.utf32.1.vb#1)]  
  
 <span data-ttu-id="6407e-1716">Описание прямой порядок байтов, см. в разделе <xref:System.Text.Encoding> разделе, посвященном классу.</span><span class="sxs-lookup"><span data-stu-id="6407e-1716">For a discussion of little endian byte order, see the <xref:System.Text.Encoding> class topic.</span></span>  
  
 <span data-ttu-id="6407e-1717">Сведения о кодировках, поддерживаемых .NET и обсуждение какие Юникод, кодировка, используемая, см. в разделе [кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="6407e-1717">For information about the encodings supported by .NET and a discussion of which Unicode encoding to use, see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1718">Следующий пример определяет число байтов, необходимых для кодирования массива символов и кодирует символы отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="6407e-1718">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UTF32Encoding" />
        <altmember cref="P:System.Text.Encoding.UTF8" />
        <altmember cref="P:System.Text.Encoding.Unicode" />
        <altmember cref="P:System.Text.Encoding.BigEndianUnicode" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="6407e-1719">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="6407e-1719">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UTF7">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding UTF7 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding UTF7" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.UTF7" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UTF7 As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ UTF7 { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UTF7 : System.Text.Encoding" Usage="System.Text.Encoding.UTF7" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-1720">Получает кодировку для формата UTF-7.</span><span class="sxs-lookup"><span data-stu-id="6407e-1720">Gets an encoding for the UTF-7 format.</span></span></summary>
        <value><span data-ttu-id="6407e-1721">Кодировка для формата UTF-7.</span><span class="sxs-lookup"><span data-stu-id="6407e-1721">An encoding for the UTF-7 format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1722">В основном в средах, которые Исторически ограниченные 7 разрядов, таких как NNTP и некоторые приложения электронной почты используется кодировка UTF-7.</span><span class="sxs-lookup"><span data-stu-id="6407e-1722">UTF-7 encoding is used primarily in environments that historically have been restricted to 7 bits, such as NNTP and some email applications.</span></span> <span data-ttu-id="6407e-1723">Из-за проблем с надежности и безопасности не следует использовать кодировку UTF7 в 8-разрядных сред где кодировку UTF-8 можно использовать вместо этого.</span><span class="sxs-lookup"><span data-stu-id="6407e-1723">Because of issues with robustness and security, you should not use UTF7 encoding in 8-bit environments where UTF-8 encoding can be used instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1724">Следующий пример определяет число байтов, необходимых для кодирования массива символов и кодирует символы отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="6407e-1724">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UTF7Encoding" />
        <altmember cref="P:System.Text.Encoding.UTF8" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="6407e-1725">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="6407e-1725">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UTF8">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding UTF8 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding UTF8" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.UTF8" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UTF8 As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ UTF8 { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UTF8 : System.Text.Encoding" Usage="System.Text.Encoding.UTF8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-1726">Получает кодировку для формата UTF-8.</span><span class="sxs-lookup"><span data-stu-id="6407e-1726">Gets an encoding for the UTF-8 format.</span></span></summary>
        <value><span data-ttu-id="6407e-1727">Кодировка для формата UTF-8.</span><span class="sxs-lookup"><span data-stu-id="6407e-1727">An encoding for the UTF-8 format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1728">Это свойство возвращает <xref:System.Text.UTF8Encoding> объекта, кодирует (кодировки UTF-16) символов Юникода в последовательность байтов от одной до четырех на один знак, и который декодирует массива байтов в кодировке UTF-8, Юникод (кодировки UTF-16).</span><span class="sxs-lookup"><span data-stu-id="6407e-1728">This property returns a <xref:System.Text.UTF8Encoding> object that encodes Unicode (UTF-16-encoded) characters into a sequence of one to four bytes per character, and that decodes a UTF-8-encoded byte array to Unicode (UTF-16-encoded) characters.</span></span> <span data-ttu-id="6407e-1729">Сведения о кодировках символов, поддерживаемых .NET и обсуждение какие Юникод, кодировка, используемая, см. в разделе [кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="6407e-1729">For information about the character encodings supported by .NET and a discussion of which Unicode encoding to use, see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="6407e-1730"><xref:System.Text.UTF8Encoding> Возвращаемый этим свойством объект может иметь необходимого поведения для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="6407e-1730">The <xref:System.Text.UTF8Encoding> object that is returned by this property might not have the appropriate behavior for your app.</span></span>  
  
-   <span data-ttu-id="6407e-1731">Он возвращает <xref:System.Text.UTF8Encoding> объект, который предоставляет метку порядка байтов (BOM) Юникода.</span><span class="sxs-lookup"><span data-stu-id="6407e-1731">It returns a <xref:System.Text.UTF8Encoding> object that provides a Unicode byte order mark (BOM).</span></span> <span data-ttu-id="6407e-1732">Для создания экземпляра, также UTF8 кодирование, которое не имеет метки порядка БАЙТОВ, вызвать любой перегрузки <xref:System.Text.UTF8Encoding.%23ctor%2A> конструктор.</span><span class="sxs-lookup"><span data-stu-id="6407e-1732">To instantiate a UTF8 encoding that doesn't provide a BOM, call any overload of the <xref:System.Text.UTF8Encoding.%23ctor%2A> constructor.</span></span>  
  
-   <span data-ttu-id="6407e-1733">Он возвращает <xref:System.Text.UTF8Encoding> объект, который использует резервную стратегию замены для замены каждой строки, он не может закодировать и каждый байт, он не может декодировать с вопросительным знаком ("?») символ.</span><span class="sxs-lookup"><span data-stu-id="6407e-1733">It returns a <xref:System.Text.UTF8Encoding> object that uses replacement fallback to replace each string that it can't encode and each byte that it can't decode with a question mark ("?") character.</span></span> <span data-ttu-id="6407e-1734">Вместо этого можно вызвать <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> конструктора для создания <xref:System.Text.UTF8Encoding> которого резервный метод, либо объект <xref:System.Text.EncoderFallbackException> или <xref:System.Text.DecoderFallbackException>, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="6407e-1734">Instead, you can call the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a <xref:System.Text.UTF8Encoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
     [!code-csharp[System.Text.Encoding.UTF8#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.utf8/cs/encoding.utf8.1.cs#1)]
     [!code-vb[System.Text.Encoding.UTF8#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.utf8/vb/encoding.utf8.1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1735">В следующем примере определяется массив, состоящий из следующих символов:</span><span class="sxs-lookup"><span data-stu-id="6407e-1735">The following example defines an array that consists of the following characters:</span></span>  
  
-   <span data-ttu-id="6407e-1736">ЛАТИНСКАЯ СТРОЧНАЯ БУКВА Z (U + 007A)</span><span class="sxs-lookup"><span data-stu-id="6407e-1736">LATIN SMALL LETTER Z (U+007A)</span></span>  
  
-   <span data-ttu-id="6407e-1737">ЛАТИНИЦА МАЛОГО LETTER (U + 0061)</span><span class="sxs-lookup"><span data-stu-id="6407e-1737">LATIN SMALL LETTER A (U+0061)</span></span>  
  
-   <span data-ttu-id="6407e-1738">ОБЪЕДИНЕНИЕ БРЕВЕ; (U + 0306)</span><span class="sxs-lookup"><span data-stu-id="6407e-1738">COMBINING BREVE (U+0306)</span></span>  
  
-   <span data-ttu-id="6407e-1739">ЛАТИНСКАЯ СТРОЧНАЯ БУКВА AE С ОСТРОЙ (U + 01FD)</span><span class="sxs-lookup"><span data-stu-id="6407e-1739">LATIN SMALL LETTER AE WITH ACUTE (U+01FD)</span></span>  
  
-   <span data-ttu-id="6407e-1740">БЕТА-ВЕРСИИ ГРЕЧЕСКУЮ БУКВУ (U + 03B2)</span><span class="sxs-lookup"><span data-stu-id="6407e-1740">GREEK SMALL LETTER BETA (U+03B2)</span></span>  
  
-   <span data-ttu-id="6407e-1741">Суррогатная пара (U + D800 U + DD54), являющийся GREEK ACROPHONIC ATTIC один ТЫСЯЧ STATERS (U + 10154).</span><span class="sxs-lookup"><span data-stu-id="6407e-1741">A surrogate pair (U+D800 U+DD54) that forms GREEK ACROPHONIC ATTIC ONE THOUSAND STATERS (U+10154).</span></span>  
  
 <span data-ttu-id="6407e-1742">Он отображает блоков кода UTF-16 для каждого символа и определяет количество байтов, необходимых кодировщиком UTF-8 для кодирования массива символов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1742">It displays the UTF-16 code units of each character and determines the number of bytes required by a UTF-8 encoder to encode the character array.</span></span> <span data-ttu-id="6407e-1743">Затем кодирует символы и отображается в кодировке UTF-8 байтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1743">It then encodes the characters and displays the resulting UTF-8-encoded bytes.</span></span>  
  
 [!code-csharp[System.Text.Encoding.UTF8#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.utf8/cs/example1.cs#2)]
 [!code-vb[System.Text.Encoding.UTF8#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.utf8/vb/example1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UTF8Encoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="6407e-1744">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="6407e-1744">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WebName">
      <MemberSignature Language="C#" Value="public virtual string WebName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WebName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.WebName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WebName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ WebName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebName : string" Usage="System.Text.Encoding.WebName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-1745">При переопределении в производном классе получает для текущей кодировки имя, зарегистрированное в IANA (Internet Assigned Numbers Authority).</span><span class="sxs-lookup"><span data-stu-id="6407e-1745">When overridden in a derived class, gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.</span></span></summary>
        <value><span data-ttu-id="6407e-1746">Имя IANA для текущего объекта <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1746">The IANA name for the current <see cref="T:System.Text.Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1747"><xref:System.Text.Encoding.WebName%2A> Свойства совпадает со значением <xref:System.Text.EncodingInfo.Name%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="6407e-1747">The <xref:System.Text.Encoding.WebName%2A> property is the same as the <xref:System.Text.EncodingInfo.Name%2A> property.</span></span>  
  
 <span data-ttu-id="6407e-1748">Обратите внимание, что <xref:System.Text.Encoding.WebName%2A> возвращает имя регистрации IANA для данной кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1748">Note that <xref:System.Text.Encoding.WebName%2A> returns an IANA-registered name for the encoding.</span></span> <span data-ttu-id="6407e-1749">Когда он имеет значение стандартное имя, кодировку реализация может не соответствовать в полном объеме для этого стандарта.</span><span class="sxs-lookup"><span data-stu-id="6407e-1749">When its value is the name of a standard, the implementation of the encoding might not conform in full to that standard.</span></span> <span data-ttu-id="6407e-1750"><xref:System.Text.Encoding.HeaderName%2A> Свойство определяет другую кодировку, которая лучше заголовки электронной почты.</span><span class="sxs-lookup"><span data-stu-id="6407e-1750">The <xref:System.Text.Encoding.HeaderName%2A> property defines a different encoding that might work better for email headers.</span></span> <span data-ttu-id="6407e-1751">Однако большинство приложений следует использовать <xref:System.Text.Encoding.WebName%2A> вместо этого.</span><span class="sxs-lookup"><span data-stu-id="6407e-1751">However, most apps should use <xref:System.Text.Encoding.WebName%2A> instead.</span></span>  
  
 <span data-ttu-id="6407e-1752">Дополнительные сведения о IANA см. в статье [www.iana.org](https://www.iana.org/).</span><span class="sxs-lookup"><span data-stu-id="6407e-1752">For more information on the IANA, go to [www.iana.org](https://www.iana.org/).</span></span>  
  
 <span data-ttu-id="6407e-1753"><xref:System.Text.Encoding.WebName%2A?displayProperty=nameWithType> Совпадает со значением <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> возвращаемый <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1753">The <xref:System.Text.Encoding.WebName%2A?displayProperty=nameWithType> is the same as the <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> returned by <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6407e-1754">Некоторые веб-имена являются дубликатами; см. в разделе "Примечания" для <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> Дополнительные сведения.</span><span class="sxs-lookup"><span data-stu-id="6407e-1754">Some of the web names are duplicates; see the remarks for <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1755">В следующем примере <xref:System.Text.Encoding.WebName%2A> в заголовок HTML.</span><span class="sxs-lookup"><span data-stu-id="6407e-1755">The following example includes the <xref:System.Text.Encoding.WebName%2A> in an HTML header.</span></span>  
  
 [!code-cpp[System.Text.Encoding.WebName#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.WebName/CPP/webname.cpp#1)]
 [!code-csharp[System.Text.Encoding.WebName#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.WebName/CS/webname.cs#1)]
 [!code-vb[System.Text.Encoding.WebName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.WebName/VB/webname.vb#1)]  
  
 <span data-ttu-id="6407e-1756">В следующем примере извлекаются разные имена для каждой кодировки и отображаются кодировки, имеющие одно или несколько имен, которые отличаются от <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6407e-1756">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6407e-1757">Он отображает <xref:System.Text.Encoding.EncodingName%2A> , но не выполняет сравнение на ее основе.</span><span class="sxs-lookup"><span data-stu-id="6407e-1757">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.Name" />
        <altmember cref="P:System.Text.Encoding.BodyName" />
        <altmember cref="P:System.Text.Encoding.EncodingName" />
        <altmember cref="P:System.Text.Encoding.HeaderName" />
      </Docs>
    </Member>
    <Member MemberName="WindowsCodePage">
      <MemberSignature Language="C#" Value="public virtual int WindowsCodePage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WindowsCodePage" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.WindowsCodePage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WindowsCodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WindowsCodePage { int get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowsCodePage : int" Usage="System.Text.Encoding.WindowsCodePage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6407e-1758">При переопределении в производном классе получает кодовую страницу операционной системы Windows, наиболее точно соответствующую текущей кодировке.</span><span class="sxs-lookup"><span data-stu-id="6407e-1758">When overridden in a derived class, gets the Windows operating system code page that most closely corresponds to the current encoding.</span></span></summary>
        <value><span data-ttu-id="6407e-1759">Кодовая страница операционной системы Windows, наиболее точно соответствующая текущему объекту <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="6407e-1759">The Windows operating system code page that most closely corresponds to the current <see cref="T:System.Text.Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6407e-1760">Это свойство предоставляется для обеспечения совместимости с Windows MultiLanguage (MLang) API, например, при определении семейств шрифтов.</span><span class="sxs-lookup"><span data-stu-id="6407e-1760">This property is provided for compatibility with the Windows MultiLanguage (MLang) APIs, for example, in determining font families.</span></span> <span data-ttu-id="6407e-1761">Для глобализации с помощью одного из кодировки Юникод рекомендуется вместо этого.</span><span class="sxs-lookup"><span data-stu-id="6407e-1761">For globalization, using one of the Unicode encodings is recommended instead.</span></span> <span data-ttu-id="6407e-1762">Также рекомендуется использовать <xref:System.Text.Encoding.WebName%2A> вместо <xref:System.Text.Encoding.WindowsCodePage%2A> определить кодовую страницу.</span><span class="sxs-lookup"><span data-stu-id="6407e-1762">It is also recommended to use <xref:System.Text.Encoding.WebName%2A> instead of <xref:System.Text.Encoding.WindowsCodePage%2A> to identify the code page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6407e-1763">В следующем примере определяется кодовой странице Windows, наиболее точно соответствующий каждой кодировки.</span><span class="sxs-lookup"><span data-stu-id="6407e-1763">The following example determines the Windows code page that most closely corresponds to each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.CodePage#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.CodePage/CPP/codepage.cpp#1)]
 [!code-csharp[System.Text.Encoding.CodePage#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.CodePage/CS/codepage.cs#1)]
 [!code-vb[System.Text.Encoding.CodePage#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.CodePage/VB/codepage.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="P:System.Text.EncodingInfo.CodePage" />
      </Docs>
    </Member>
  </Members>
</Type>