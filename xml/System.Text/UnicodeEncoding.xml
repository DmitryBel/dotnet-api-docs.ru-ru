<Type Name="UnicodeEncoding" FullName="System.Text.UnicodeEncoding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ed90575e89d76488c1d85d59e815c01936bfcbb" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56399915" /></Metadata><TypeSignature Language="C#" Value="public class UnicodeEncoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UnicodeEncoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UnicodeEncoding" />
  <TypeSignature Language="VB.NET" Value="Public Class UnicodeEncoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnicodeEncoding : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type UnicodeEncoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a40a9-101">Представляет кодировку символов Юникода в формате UTF-16.</span><span class="sxs-lookup"><span data-stu-id="a40a9-101">Represents a UTF-16 encoding of Unicode characters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-102">Кодирование - это процесс преобразования набора символов Юникода в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="a40a9-103">Декодирование представляет собой процесс преобразования последовательности закодированных байтов в набор символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="a40a9-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="a40a9-104">[Стандарта Юникод](https://go.microsoft.com/fwlink/?linkid=37123) каждому символу в каждом поддерживаемом символьном присваивается кодовая точка (номер).</span><span class="sxs-lookup"><span data-stu-id="a40a9-104">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) assigns a code point (a number) to each character in every supported script.</span></span> <span data-ttu-id="a40a9-105">Формат преобразования Юникода (UTF) — это способ кодирования кодовой точки.</span><span class="sxs-lookup"><span data-stu-id="a40a9-105">A Unicode Transformation Format (UTF) is a way to encode that code point.</span></span> <span data-ttu-id="a40a9-106">[Стандарта Юникод](https://go.microsoft.com/fwlink/?linkid=37123) использует следующие форматы UTF:</span><span class="sxs-lookup"><span data-stu-id="a40a9-106">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) uses the following UTFs:</span></span>  
  
-   <span data-ttu-id="a40a9-107">UTF-8, который представляет каждую кодовую точку в виде последовательности от одного до четырех байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-107">UTF-8, which represents each code point as a sequence of one to four bytes.</span></span>  
  
-   <span data-ttu-id="a40a9-108">UTF-16, который представляет каждую кодовую точку в виде последовательности одного или двух 16-разрядных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="a40a9-108">UTF-16, which represents each code point as a sequence of one to two 16-bit integers.</span></span>  
  
-   <span data-ttu-id="a40a9-109">UTF-32, который представляет каждую кодовую точку как 32-разрядное целое число.</span><span class="sxs-lookup"><span data-stu-id="a40a9-109">UTF-32, which represents each code point as a 32-bit integer.</span></span>  
  
 <span data-ttu-id="a40a9-110">Дополнительные сведения о UTF и других кодировках, поддерживаемых <xref:System.Text>, см. в разделе [кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="a40a9-110">For more information about the UTFs and other encodings supported by <xref:System.Text>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="a40a9-111"><xref:System.Text.UnicodeEncoding> Класс представляет кодировку UTF-16.</span><span class="sxs-lookup"><span data-stu-id="a40a9-111">The <xref:System.Text.UnicodeEncoding> class represents a UTF-16 encoding.</span></span> <span data-ttu-id="a40a9-112">Кодировщик может использовать либо обратный порядок байтов (самый старший байт первого) или прямой порядок байтов (младший байт первый).</span><span class="sxs-lookup"><span data-stu-id="a40a9-112">The encoder can use either big endian byte order (most significant byte first) or little endian byte order (least significant byte first).</span></span> <span data-ttu-id="a40a9-113">Например прописная латинская буква (кодовая точка U + 0041) сериализуется как следующим образом (в шестнадцатеричном формате):</span><span class="sxs-lookup"><span data-stu-id="a40a9-113">For example, the Latin Capital Letter A (code point U+0041) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="a40a9-114">Обратный порядок байтов: 00 00 00 41</span><span class="sxs-lookup"><span data-stu-id="a40a9-114">Big endian byte order: 00 00 00 41</span></span>  
  
-   <span data-ttu-id="a40a9-115">Прямой порядок байтов: 41 00 00 00</span><span class="sxs-lookup"><span data-stu-id="a40a9-115">Little endian byte order: 41 00 00 00</span></span>  
  
 <span data-ttu-id="a40a9-116">Он обычно более эффективен для хранения символов Юникода, с помощью собственного порядка байтов с конкретной платформой.</span><span class="sxs-lookup"><span data-stu-id="a40a9-116">It is generally more efficient to store Unicode characters using the native byte order of a particular platform.</span></span> <span data-ttu-id="a40a9-117">Например лучше использовать прямой порядок байтов на платформах с прямым порядком, таких как компьютеры Intel.</span><span class="sxs-lookup"><span data-stu-id="a40a9-117">For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</span></span> <span data-ttu-id="a40a9-118"><xref:System.Text.UnicodeEncoding> Класс соответствует кодовые страницы Windows 1200 (прямой порядок байтов) и 1201 (обратный порядок байтов).</span><span class="sxs-lookup"><span data-stu-id="a40a9-118">The <xref:System.Text.UnicodeEncoding> class corresponds to the Windows code pages 1200 (little endian byte order) and 1201 (big endian byte order).</span></span> <span data-ttu-id="a40a9-119">«Порядка байтов» конкретной архитектуры можно определить, вызвав <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-119">You can determine the "endianness" of a particular architecture by calling the <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a40a9-120">При необходимости <xref:System.Text.UnicodeEncoding> предоставляет метку порядка байтов (BOM), который представляет собой массив байтов, которые может иметь префикс в последовательность байтов, полученных в результате кодирования.</span><span class="sxs-lookup"><span data-stu-id="a40a9-120">Optionally, the <xref:System.Text.UnicodeEncoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="a40a9-121">Если преамбула содержит метку порядка байтов (BOM), он позволяет определить порядок байтов и формат преобразования или UTF декодеру.</span><span class="sxs-lookup"><span data-stu-id="a40a9-121">If the preamble contains a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF.</span></span>  
  
 <span data-ttu-id="a40a9-122">Если <xref:System.Text.UnicodeEncoding> экземпляр настраивается для предоставления Спецификации, его можно получить, вызвав <xref:System.Text.UnicodeEncoding.GetPreamble%2A> метода; в противном случае метод возвращает пустой массив.</span><span class="sxs-lookup"><span data-stu-id="a40a9-122">If the <xref:System.Text.UnicodeEncoding> instance is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="a40a9-123">Обратите внимание, что, даже если <xref:System.Text.UnicodeEncoding> объект настроен для поддержки Спецификации, необходимо включить метки порядка БАЙТОВ в начале потока закодированных байтов в виде соответствующих; методов кодирования из <xref:System.Text.UnicodeEncoding> класс делают это автоматически.</span><span class="sxs-lookup"><span data-stu-id="a40a9-123">Note that, even if a <xref:System.Text.UnicodeEncoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UnicodeEncoding> class do not do this automatically.</span></span>  
  
 <span data-ttu-id="a40a9-124">Чтобы включить обнаружение ошибок и повышения уровня защищенности экземпляра класса, следует создавать экземпляр <xref:System.Text.UnicodeEncoding> путем вызова метода <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> конструктор и параметр его `throwOnInvalidBytes` аргумент `true`.</span><span class="sxs-lookup"><span data-stu-id="a40a9-124">To enable error detection and to make the class instance more secure, you should instantiate a <xref:System.Text.UnicodeEncoding> object by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span> <span data-ttu-id="a40a9-125">Обнаружения ошибок, вызывает метод, который обнаруживает недопустимую последовательность символов или байтов <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-125">With error detection, a method that detects an invalid sequence of characters or bytes throws a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a40a9-126">Без обнаружения ошибки исключение не создается, и Недопустимая последовательность обычно игнорируется.</span><span class="sxs-lookup"><span data-stu-id="a40a9-126">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
 <span data-ttu-id="a40a9-127">Можно создать экземпляр <xref:System.Text.UnicodeEncoding> объекта несколькими способами, в зависимости от того, нужно ли выполнять его для предоставления метку порядка байтов (BOM), нужно ли кодирование с прямым или обратным порядком байтов и того, требуется ли включить функцию обнаружения ошибок.</span><span class="sxs-lookup"><span data-stu-id="a40a9-127">You can instantiate a <xref:System.Text.UnicodeEncoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM), whether you want big-endian or little-endian encoding, and whether you want to enable error detection.</span></span> <span data-ttu-id="a40a9-128">В следующей таблице перечислены <xref:System.Text.UnicodeEncoding> конструкторы и <xref:System.Text.Encoding> свойства, которые возвращают <xref:System.Text.UnicodeEncoding> объекта.</span><span class="sxs-lookup"><span data-stu-id="a40a9-128">The following table lists the <xref:System.Text.UnicodeEncoding> constructors and the <xref:System.Text.Encoding> properties that return a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
|<span data-ttu-id="a40a9-129">Член</span><span class="sxs-lookup"><span data-stu-id="a40a9-129">Member</span></span>|<span data-ttu-id="a40a9-130">Порядок байтов</span><span class="sxs-lookup"><span data-stu-id="a40a9-130">Endianness</span></span>|<span data-ttu-id="a40a9-131">СПЕЦИФИКАЦИИ</span><span class="sxs-lookup"><span data-stu-id="a40a9-131">BOM</span></span>|<span data-ttu-id="a40a9-132">Обнаружение ошибок</span><span class="sxs-lookup"><span data-stu-id="a40a9-132">Error detection</span></span>|  
|------------|----------------|---------|---------------------|  
|<xref:System.Text.Encoding.BigEndianUnicode%2A>|<span data-ttu-id="a40a9-133">С прямым порядком байтов</span><span class="sxs-lookup"><span data-stu-id="a40a9-133">Big-endian</span></span>|<span data-ttu-id="a40a9-134">Да</span><span class="sxs-lookup"><span data-stu-id="a40a9-134">Yes</span></span>|<span data-ttu-id="a40a9-135">Нет (стратегия замены)</span><span class="sxs-lookup"><span data-stu-id="a40a9-135">No (Replacement fallback)</span></span>|  
|<xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType>|<span data-ttu-id="a40a9-136">С прямым порядком байтов</span><span class="sxs-lookup"><span data-stu-id="a40a9-136">Little-endian</span></span>|<span data-ttu-id="a40a9-137">Да</span><span class="sxs-lookup"><span data-stu-id="a40a9-137">Yes</span></span>|<span data-ttu-id="a40a9-138">Нет (стратегия замены)</span><span class="sxs-lookup"><span data-stu-id="a40a9-138">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="a40a9-139">С прямым порядком байтов</span><span class="sxs-lookup"><span data-stu-id="a40a9-139">Little-endian</span></span>|<span data-ttu-id="a40a9-140">Да</span><span class="sxs-lookup"><span data-stu-id="a40a9-140">Yes</span></span>|<span data-ttu-id="a40a9-141">Нет (стратегия замены)</span><span class="sxs-lookup"><span data-stu-id="a40a9-141">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29>|<span data-ttu-id="a40a9-142">Возможность настройки</span><span class="sxs-lookup"><span data-stu-id="a40a9-142">Configurable</span></span>|<span data-ttu-id="a40a9-143">Возможность настройки</span><span class="sxs-lookup"><span data-stu-id="a40a9-143">Configurable</span></span>|<span data-ttu-id="a40a9-144">Нет (стратегия замены)</span><span class="sxs-lookup"><span data-stu-id="a40a9-144">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="a40a9-145">Возможность настройки</span><span class="sxs-lookup"><span data-stu-id="a40a9-145">Configurable</span></span>|<span data-ttu-id="a40a9-146">Возможность настройки</span><span class="sxs-lookup"><span data-stu-id="a40a9-146">Configurable</span></span>|<span data-ttu-id="a40a9-147">Возможность настройки</span><span class="sxs-lookup"><span data-stu-id="a40a9-147">Configurable</span></span>|  
  
 <span data-ttu-id="a40a9-148"><xref:System.Text.UnicodeEncoding.GetByteCount%2A> Метод определяет, сколько байтов привести кодировании набора символов Юникода и <xref:System.Text.UnicodeEncoding.GetBytes%2A> метод выполняет фактическое кодирование.</span><span class="sxs-lookup"><span data-stu-id="a40a9-148">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="a40a9-149">Аналогичным образом <xref:System.Text.UnicodeEncoding.GetCharCount%2A> метод определяет, сколько символов привести декодировании последовательности байтов и <xref:System.Text.UnicodeEncoding.GetChars%2A> и <xref:System.Text.UnicodeEncoding.GetString%2A> методы выполняют фактическое декодирование.</span><span class="sxs-lookup"><span data-stu-id="a40a9-149">Likewise, the <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UnicodeEncoding.GetChars%2A> and <xref:System.Text.UnicodeEncoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="a40a9-150">Для кодировщика или декодера, которое сможет сохранить сведения о состоянии для кодирования или декодирования данных, охватывающих несколько блоков (например, строка 1 миллиона символов, кодируется в сегментах 100 000 символов), используйте <xref:System.Text.UnicodeEncoding.GetEncoder%2A> и <xref:System.Text.UnicodeEncoding.GetDecoder%2A> свойства, соответственно.</span><span class="sxs-lookup"><span data-stu-id="a40a9-150">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> and <xref:System.Text.UnicodeEncoding.GetDecoder%2A> properties, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a40a9-151">Следующий пример демонстрирует закодировать в строку символов Юникода в массив байтов с помощью <xref:System.Text.UnicodeEncoding> объекта.</span><span class="sxs-lookup"><span data-stu-id="a40a9-151">The following example demonstrates how to encode a string of Unicode characters into a byte array by using a <xref:System.Text.UnicodeEncoding> object.</span></span> <span data-ttu-id="a40a9-152">Массив байтов расшифровывается в строку, чтобы показать, что без потери данных.</span><span class="sxs-lookup"><span data-stu-id="a40a9-152">The byte array is decoded into a string to demonstrate that there is no loss of data.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/VB/snippet.vb#1)]  
  
 <span data-ttu-id="a40a9-153">В следующем примере та же строка на предыдущий, за исключением того, что она записывает закодированных байтов в файл и добавляет в поток байтов с метку порядка байтов (BOM).</span><span class="sxs-lookup"><span data-stu-id="a40a9-153">The following example uses the same string as the previous one, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="a40a9-154">Затем он считывает из файла двумя разными способами: как текстовый файл с помощью <xref:System.IO.StreamReader> объекта; и как двоичный файл.</span><span class="sxs-lookup"><span data-stu-id="a40a9-154">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="a40a9-155">Как и следовало ожидать, ни одна из строк вновь чтения включает в себя метки порядка БАЙТОВ.</span><span class="sxs-lookup"><span data-stu-id="a40a9-155">As you would expect, neither newly-read string includes the BOM.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CS/bom1.cs#2)]
 [!code-vb[System.Text.UnicodeEncoding Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/VB/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Encoding" />
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.UTF32Encoding" />
    <altmember cref="T:System.Text.UTF8Encoding" />
    <altmember cref="T:System.Text.UTF7Encoding" />
    <altmember cref="T:System.Text.ASCIIEncoding" />
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="T:System.Globalization.CharUnicodeInfo" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="a40a9-156">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="a40a9-156">Understanding Encodings</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a40a9-157">Инициализирует новый экземпляр класса <see cref="T:System.Text.UnicodeEncoding" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-157">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a40a9-158">Инициализирует новый экземпляр класса <see cref="T:System.Text.UnicodeEncoding" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-158">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-159">Этот конструктор создает экземпляр, который использует прямой порядок байтов, предоставляет метку порядка байтов Юникода и не выдает исключение при обнаружении недопустимой кодировки.</span><span class="sxs-lookup"><span data-stu-id="a40a9-159">This constructor creates an instance that uses the little endian byte order, provides a Unicode byte order mark, and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a40a9-160">По соображениям безопасности следует включить обнаружение ошибок путем вызова <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> конструктор и установив его `throwOnInvalidBytes` аргумент `true`.</span><span class="sxs-lookup"><span data-stu-id="a40a9-160">For security reasons, you should enable error detection by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a40a9-161">В следующем примере показано, как для создания нового <xref:System.Text.UnicodeEncoding> экземпляра и отображаемое имя кодировки.</span><span class="sxs-lookup"><span data-stu-id="a40a9-161">The following example demonstrates how to create a new <xref:System.Text.UnicodeEncoding> instance and display the name of the encoding.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding (bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding(bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="F#" Value="new System.Text.UnicodeEncoding : bool * bool -&gt; System.Text.UnicodeEncoding" Usage="new System.Text.UnicodeEncoding (bigEndian, byteOrderMark)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian"><span data-ttu-id="a40a9-162">Значение <see langword="true" /> соответствует использованию обратного порядка байтов (самый старший байт располагается на первом месте); значение <see langword="false" /> соответствует использованию прямого порядка байтов (на первом месте находится самый младший байт).</span><span class="sxs-lookup"><span data-stu-id="a40a9-162"><see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span></span></param>
        <param name="byteOrderMark"><span data-ttu-id="a40a9-163">Значение <see langword="true" /> указывает, что метод <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> возвращает метку порядка байтов Юникода; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-163"><see langword="true" /> to specify that the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a40a9-164">Инициализирует новый экземпляр класса <see cref="T:System.Text.UnicodeEncoding" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-164">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span></span> <span data-ttu-id="a40a9-165">Параметры указывают, следует ли использовать обратный порядок байтов и возвращает ли метод <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> метку порядка байтов Юникода.</span><span class="sxs-lookup"><span data-stu-id="a40a9-165">Parameters specify whether to use the big endian byte order and whether the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-166">Этот конструктор создает экземпляр, который не выдает исключение при обнаружении недопустимой кодировки.</span><span class="sxs-lookup"><span data-stu-id="a40a9-166">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a40a9-167">По соображениям безопасности следует включить обнаружение ошибок путем вызова <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> конструктор и установив его `throwOnInvalidBytes` аргумент `true`.</span><span class="sxs-lookup"><span data-stu-id="a40a9-167">For security reasons, you should enable error detection by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span>  
  
 <span data-ttu-id="a40a9-168">`byteOrderMark` Параметр управляет операциями <xref:System.Text.UnicodeEncoding.GetPreamble%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-168">The `byteOrderMark` parameter controls the operation of the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="a40a9-169">Если `true`, метод возвращает массив байтов, содержащий метку порядка байтов (BOM) Юникода в формате UTF-16.</span><span class="sxs-lookup"><span data-stu-id="a40a9-169">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-16 format.</span></span>  <span data-ttu-id="a40a9-170">Если `false`, он возвращает массив байтов нулевой длины.</span><span class="sxs-lookup"><span data-stu-id="a40a9-170">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="a40a9-171">Однако можно присвоить `byteOrderMark` для `true` не приводит к <xref:System.Text.UnicodeEncoding.GetBytes%2A> метод в качестве префикса метки порядка БАЙТОВ в начале байтового массива, привести к не <xref:System.Text.UnicodeEncoding.GetByteCount%2A> метод включать число байтов в Спецификации в счетчик байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-171">However, setting `byteOrderMark` to `true` does not cause the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a40a9-172">В следующем примере показано, как для создания нового <xref:System.Text.UnicodeEncoding> экземпляра, указывая, нужно ли поддерживать прямым порядком байтов или больших порядком байтов и Юникода метку порядка байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-172">The following example demonstrates how to create a new <xref:System.Text.UnicodeEncoding> instance specifying whether to support little endian or big endian byte ordering and the Unicode byte order mark.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding (bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean, throwOnInvalidBytes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding(bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes);" />
      <MemberSignature Language="F#" Value="new System.Text.UnicodeEncoding : bool * bool * bool -&gt; System.Text.UnicodeEncoding" Usage="new System.Text.UnicodeEncoding (bigEndian, byteOrderMark, throwOnInvalidBytes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidBytes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian"><span data-ttu-id="a40a9-173">Значение <see langword="true" /> соответствует использованию обратного порядка байтов (самый старший байт располагается на первом месте); значение <see langword="false" /> соответствует использованию прямого порядка байтов (на первом месте находится самый младший байт).</span><span class="sxs-lookup"><span data-stu-id="a40a9-173"><see langword="true" /> to use the big endian byte order (most significant byte first); <see langword="false" /> to use the little endian byte order (least significant byte first).</span></span></param>
        <param name="byteOrderMark"><span data-ttu-id="a40a9-174">Значение <see langword="true" /> указывает, что метод <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> возвращает метку порядка байтов Юникода; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-174"><see langword="true" /> to specify that the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span></span></param>
        <param name="throwOnInvalidBytes"><span data-ttu-id="a40a9-175"><see langword="true" />, чтобы указать, что следует выдавать исключение при обнаружении недопустимой кодировки; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-175"><see langword="true" /> to specify that an exception should be thrown when an invalid encoding is detected; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a40a9-176">Инициализирует новый экземпляр класса <see cref="T:System.Text.UnicodeEncoding" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-176">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span></span> <span data-ttu-id="a40a9-177">Параметры указывают, следует ли использовать обратный порядок байтов, должна ли предоставляться метка порядка байтов Юникода и следует ли создавать исключение при обнаружении недопустимой кодировки.</span><span class="sxs-lookup"><span data-stu-id="a40a9-177">Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-178">`byteOrderMark` Параметр управляет операциями <xref:System.Text.UnicodeEncoding.GetPreamble%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-178">The `byteOrderMark` parameter controls the operation of the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="a40a9-179">Если `true`, метод возвращает массив байтов, содержащий метку порядка байтов (BOM) Юникода в формате UTF-16.</span><span class="sxs-lookup"><span data-stu-id="a40a9-179">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-16 format.</span></span>  <span data-ttu-id="a40a9-180">Если `false`, он возвращает массив байтов нулевой длины.</span><span class="sxs-lookup"><span data-stu-id="a40a9-180">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="a40a9-181">Однако можно присвоить `byteOrderMark` для `true` не приводит к <xref:System.Text.UnicodeEncoding.GetBytes%2A> метод в качестве префикса метки порядка БАЙТОВ в начале байтового массива, привести к не <xref:System.Text.UnicodeEncoding.GetByteCount%2A> метод включать число байтов в Спецификации в счетчик байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-181">However, setting `byteOrderMark` to `true` does not cause the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
 <span data-ttu-id="a40a9-182">Если `throwOnInvalidBytes` параметр `true`, вызывает метод, который обнаруживает недопустимые последовательности байтов <xref:System.ArgumentException?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-182">If the `throwOnInvalidBytes` parameter is `true`, a method that detects an invalid byte sequence throws <xref:System.ArgumentException?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a40a9-183">В противном случае этот метод создает исключение, и недопустимую последовательность учитывается.</span><span class="sxs-lookup"><span data-stu-id="a40a9-183">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a40a9-184">По соображениям безопасности в приложениях рекомендуется использовать этот конструктор для создания экземпляра <xref:System.Text.UnicodeEncoding> класса и включите обнаружение ошибок, задав `throwOnInvalidBytes` для `true`.</span><span class="sxs-lookup"><span data-stu-id="a40a9-184">For security reasons, your applications are recommended to use this constructor to create an instance of the <xref:System.Text.UnicodeEncoding> class and turn on error detection by setting `throwOnInvalidBytes` to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a40a9-185">В следующем примере показано поведение <xref:System.Text.UnicodeEncoding>, как с помощью обнаружение ошибок включено, так и без.</span><span class="sxs-lookup"><span data-stu-id="a40a9-185">The following example demonstrates the behavior of <xref:System.Text.UnicodeEncoding>, both with error detection enabled and without.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/VB/errordetection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="CharSize">
      <MemberSignature Language="C#" Value="public const int CharSize = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 CharSize = (2)" />
      <MemberSignature Language="DocId" Value="F:System.Text.UnicodeEncoding.CharSize" />
      <MemberSignature Language="VB.NET" Value="Public Const CharSize As Integer  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: int CharSize = 2;" />
      <MemberSignature Language="F#" Value="val mutable CharSize : int" Usage="System.Text.UnicodeEncoding.CharSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a40a9-186">Представляет размер символа Юникода в байтах.</span><span class="sxs-lookup"><span data-stu-id="a40a9-186">Represents the Unicode character size in bytes.</span></span> <span data-ttu-id="a40a9-187">Это поле является константой.</span><span class="sxs-lookup"><span data-stu-id="a40a9-187">This field is a constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-188">Значение этого поля является константой 32-разрядных со знаком со значением 2.</span><span class="sxs-lookup"><span data-stu-id="a40a9-188">The value of this field is a 32-bit signed constant with a value of 2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a40a9-189">Следующий пример демонстрирует способы возврата значение <xref:System.Text.UnicodeEncoding.CharSize> и отобразить ее.</span><span class="sxs-lookup"><span data-stu-id="a40a9-189">The following example demonstrates how to return the value of <xref:System.Text.UnicodeEncoding.CharSize> and display it.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/CPP/charsize.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/CS/charsize.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/VB/charsize.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="unicodeEncoding.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a40a9-190">Объект, который требуется сравнить с текущим объектом.</span><span class="sxs-lookup"><span data-stu-id="a40a9-190">The object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="a40a9-191">Определяет, равен ли заданный объект <see cref="T:System.Object" /> текущему объекту <see cref="T:System.Text.UnicodeEncoding" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-191">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Text.UnicodeEncoding" /> object.</span></span></summary>
        <returns><span data-ttu-id="a40a9-192">Значение <see langword="true" />, если <paramref name="value" /> является экземпляром класса <see cref="T:System.Text.UnicodeEncoding" /> и равен текущему объекту; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-192"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UnicodeEncoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-193">Два <xref:System.Text.UnicodeEncoding> объекты считаются равными, если выполняются все следующие условия:</span><span class="sxs-lookup"><span data-stu-id="a40a9-193">Two <xref:System.Text.UnicodeEncoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="a40a9-194">Оба объекта используют одинаковый порядок следования байтов (с прямым или обратным порядком).</span><span class="sxs-lookup"><span data-stu-id="a40a9-194">Both objects use the same byte order (little-endian or big-endian).</span></span>  
  
-   <span data-ttu-id="a40a9-195">Оба объекта укажите отметки порядка байтов или оба — нет.</span><span class="sxs-lookup"><span data-stu-id="a40a9-195">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="a40a9-196">Оба объекта используют же резерв кодировщика.</span><span class="sxs-lookup"><span data-stu-id="a40a9-196">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="a40a9-197">Оба объекта используют же резерва декодера.</span><span class="sxs-lookup"><span data-stu-id="a40a9-197">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a40a9-198">Следующий пример демонстрирует, как использовать <xref:System.Text.UnicodeEncoding.Equals%2A> тестируемого метода ли текущий <xref:System.Text.UnicodeEncoding> объект равен другому <xref:System.Text.UnicodeEncoding> объекта.</span><span class="sxs-lookup"><span data-stu-id="a40a9-198">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.Equals%2A> method to test whether the current <xref:System.Text.UnicodeEncoding> object is equal to a different <xref:System.Text.UnicodeEncoding> object.</span></span> <span data-ttu-id="a40a9-199">Пять <xref:System.Text.UnicodeEncoding> создаются и по сравнению с объектами, и отображаются результаты сравнения.</span><span class="sxs-lookup"><span data-stu-id="a40a9-199">Five <xref:System.Text.UnicodeEncoding> objects are created and compared, and the results of the comparisons are displayed.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a40a9-200">Подсчитывает количество байтов, полученных при кодировании набора символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-200">Calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="unicodeEncoding.GetByteCount s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a40a9-201">Строка, содержащая кодируемый набор символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-201">The string that contains the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="a40a9-202">Вычисляет количество байтов, полученных при кодировании символов в указанной строке.</span><span class="sxs-lookup"><span data-stu-id="a40a9-202">Calculates the number of bytes produced by encoding the characters in the specified string.</span></span></summary>
        <returns><span data-ttu-id="a40a9-203">Число байтов, полученных при кодировании заданных символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-203">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-204">Для вычисления размера точное массива, необходимого <xref:System.Text.UnicodeEncoding.GetBytes%2A> для сохранения полученных байтов, можно вызвать <xref:System.Text.UnicodeEncoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-204">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="a40a9-205">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-205">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="a40a9-206"><xref:System.Text.UnicodeEncoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="a40a9-206">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a40a9-207">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-207">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a40a9-208">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="a40a9-208">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a40a9-209">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно добавить префикс поток закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="a40a9-209">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="a40a9-210">Вставка приставку в начале потока байтов (такие как в начале последовательность байтов, записываемых в файл) — это разработчик, и число байтов в преамбула не отражаются в значение, возвращаемое <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-210">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a40a9-211">В следующем примере вызывается <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> и <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> методы для вычисления фактического и максимального числа байтов, необходимых для кодирования строки.</span><span class="sxs-lookup"><span data-stu-id="a40a9-211">The following example calls the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> and <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="a40a9-212">Она также отображает фактическое число байтов, необходимое для хранения потока данных с метки порядка байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-212">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a40a9-213"><paramref name="s" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-213"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a40a9-214">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="a40a9-214">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a40a9-215">Обнаружение ошибок включено, и <paramref name="s" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-215">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a40a9-216">Произошла отработка отказа (см. полное объяснение в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="a40a9-216">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="a40a9-217">- и -</span><span class="sxs-lookup"><span data-stu-id="a40a9-217">-and-</span></span> 
 <span data-ttu-id="a40a9-218">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-218"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="unicodeEncoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="a40a9-219">Указатель на первый кодируемый символ.</span><span class="sxs-lookup"><span data-stu-id="a40a9-219">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="a40a9-220">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-220">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="a40a9-221">Вычисляет число байтов, полученных при кодировании набора символов начиная с заданного указателя символа.</span><span class="sxs-lookup"><span data-stu-id="a40a9-221">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="a40a9-222">Число байтов, полученных при кодировании заданных символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-222">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-223">Для вычисления массиве точный размер, который <xref:System.Text.UnicodeEncoding.GetBytes%2A> требуется для хранения полученных байтов, следует вызвать <xref:System.Text.UnicodeEncoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-223">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetBytes%2A> requires to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="a40a9-224">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-224">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="a40a9-225"><xref:System.Text.UnicodeEncoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="a40a9-225">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a40a9-226">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-226">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a40a9-227">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="a40a9-227">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a40a9-228">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно добавить префикс поток закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="a40a9-228">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="a40a9-229">Вставка приставку в начале потока байтов (такие как в начале последовательность байтов, записываемых в файл) — это разработчик, и число байтов в преамбула не отражаются в значение, возвращаемое <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-229">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a40a9-230"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-230"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a40a9-231">Значение параметра <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="a40a9-231"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="a40a9-232">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-232">-or-</span></span> 
<span data-ttu-id="a40a9-233">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="a40a9-233">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a40a9-234">Включена функция обнаружения ошибок, <paramref name="chars" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-234">Error detection is enabled and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a40a9-235">Произошла отработка отказа (см. полное объяснение в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="a40a9-235">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="a40a9-236">- и -</span><span class="sxs-lookup"><span data-stu-id="a40a9-236">-and-</span></span> 
 <span data-ttu-id="a40a9-237">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-237"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="a40a9-238">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="a40a9-238">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="a40a9-239">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="a40a9-239">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="unicodeEncoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="a40a9-240">Массив символов, содержащий набор кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-240">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="a40a9-241">Индекс первого кодируемого символа.</span><span class="sxs-lookup"><span data-stu-id="a40a9-241">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="a40a9-242">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-242">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="a40a9-243">Вычисляет число байтов, полученных при кодировании набора символов из указанного массива символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-243">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span></summary>
        <returns><span data-ttu-id="a40a9-244">Число байтов, полученных при кодировании заданных символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-244">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-245">Для вычисления размера точное массива, необходимого <xref:System.Text.UnicodeEncoding.GetBytes%2A> для хранения полученных байтов, приложение использует <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-245">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="a40a9-246">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-246">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="a40a9-247"><xref:System.Text.UnicodeEncoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="a40a9-247">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a40a9-248">Обнаружение ошибок включено, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-248">With error detection enabled, an invalid sequence causes this method to throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a40a9-249">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="a40a9-249">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="a40a9-250">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно добавить префикс поток закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="a40a9-250">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="a40a9-251">Вставка приставку в начале потока байтов (такие как в начале последовательность байтов, записываемых в файл) — это разработчик, и число байтов в преамбула не отражаются в значение, возвращаемое <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-251">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a40a9-252">Следующий пример заполняет массив, содержащий Latin прописные и строчные буквы и вызовы <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> метод для определения числа байтов, необходимых для кодирования латинских символов нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="a40a9-252">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="a40a9-253">Затем отображается эту информацию, а также общее число байтов, которые требуются при добавлении метки порядка байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-253">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="a40a9-254">Он сравнивает это число с помощью значения, возвращенного <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> метод, который указывает максимальное число байтов, необходимое для кодирования латинских символов нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="a40a9-254">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="a40a9-255">Следующий пример заполняет массив с сочетания символов греческий и кириллица и вызовы <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> метод для определения числа байтов, необходимых для кодирования символов кириллицы.</span><span class="sxs-lookup"><span data-stu-id="a40a9-255">The following example populates an array with a combination of Greek and Cyrillic characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Cyrillic characters.</span></span> <span data-ttu-id="a40a9-256">Затем отображается эту информацию, а также общее число байтов, которые требуются при добавлении метки порядка байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-256">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="a40a9-257">Он сравнивает это число с помощью значения, возвращенного <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> метода, который указывает максимальное число байтов, необходимых для кодирования символов кириллицы.</span><span class="sxs-lookup"><span data-stu-id="a40a9-257">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Cyrillic characters.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.UnicodeEncoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a40a9-258"><paramref name="chars" /> имеет значение <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a40a9-258"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a40a9-259">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="a40a9-259"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="a40a9-260">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-260">-or-</span></span> 
 <span data-ttu-id="a40a9-261">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-261"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="a40a9-262">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-262">-or-</span></span> 
<span data-ttu-id="a40a9-263">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="a40a9-263">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a40a9-264">Обнаружение ошибок включено, и <paramref name="chars" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-264">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a40a9-265">Произошла отработка отказа (см. полное объяснение в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="a40a9-265">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="a40a9-266">- и -</span><span class="sxs-lookup"><span data-stu-id="a40a9-266">-and-</span></span> 
 <span data-ttu-id="a40a9-267">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-267"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a40a9-268">Кодирует набор символов в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-268">Encodes a set of characters into a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string -&gt; byte[]" Usage="unicodeEncoding.GetBytes s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="unicodeEncoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="a40a9-269">Указатель на первый кодируемый символ.</span><span class="sxs-lookup"><span data-stu-id="a40a9-269">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="a40a9-270">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-270">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="a40a9-271">Указатель на положение, с которого начинается запись результирующей последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-271">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="a40a9-272">Максимальное число байтов для записи.</span><span class="sxs-lookup"><span data-stu-id="a40a9-272">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="a40a9-273">Кодирует набор символов, начало которого задается указателем символа, в последовательность байтов, которые сохраняются начиная с заданного указателя байта.</span><span class="sxs-lookup"><span data-stu-id="a40a9-273">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="a40a9-274">Фактическое число байтов, записанных в местоположение, которое задано параметром <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-274">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-275">Для вычисления массиве точный размер, который <xref:System.Text.UnicodeEncoding.GetBytes%2A> требуется для хранения полученных байтов, следует вызвать <xref:System.Text.UnicodeEncoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-275">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetBytes%2A> requires to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="a40a9-276">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-276">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="a40a9-277"><xref:System.Text.UnicodeEncoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="a40a9-277">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a40a9-278">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-278">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a40a9-279">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="a40a9-279">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="a40a9-280">Данные для преобразования, такие как данные, считанные из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="a40a9-280">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="a40a9-281">В этом случае или если объем данных слишком велико, что необходимо разделить на небольшие блоки, приложение должно использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> объекта, предоставляемого <xref:System.Text.UnicodeEncoding.GetDecoder%2A> или <xref:System.Text.UnicodeEncoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="a40a9-281">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a40a9-282">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно добавить префикс поток закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="a40a9-282">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="a40a9-283">Вставка приставку в начале потока байтов (такие как в начале последовательность байтов, записываемых в файл) — это разработчик.</span><span class="sxs-lookup"><span data-stu-id="a40a9-283">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="a40a9-284"><xref:System.Text.UnicodeEncoding.GetBytes%2A> Метод не добавить в начало преамбулу последовательность закодированных байтов в начале.</span><span class="sxs-lookup"><span data-stu-id="a40a9-284">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a40a9-285"><paramref name="chars" /> имеет значение <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a40a9-285"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
<span data-ttu-id="a40a9-286">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-286">-or-</span></span> 
 <span data-ttu-id="a40a9-287"><paramref name="bytes" /> имеет значение <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a40a9-287"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a40a9-288">Значение параметра <paramref name="charCount" /> или <paramref name="byteCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="a40a9-288"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a40a9-289">Обнаружение ошибок включено, и <paramref name="chars" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-289">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="a40a9-290">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-290">-or-</span></span> 
 <span data-ttu-id="a40a9-291"><paramref name="byteCount" /> меньше результирующего числа байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-291"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a40a9-292">Произошла отработка отказа (см. полное объяснение в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="a40a9-292">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="a40a9-293">- и -</span><span class="sxs-lookup"><span data-stu-id="a40a9-293">-and-</span></span> 
 <span data-ttu-id="a40a9-294">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-294"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="a40a9-295">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="a40a9-295">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="a40a9-296">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="a40a9-296">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="unicodeEncoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="a40a9-297">Массив символов, содержащий набор кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-297">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="a40a9-298">Индекс первого кодируемого символа.</span><span class="sxs-lookup"><span data-stu-id="a40a9-298">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="a40a9-299">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-299">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="a40a9-300">Массив байтов, в который будет помещена результирующая последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-300">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="a40a9-301">Индекс, с которого начинается запись результирующей последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-301">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="a40a9-302">Кодирует набор символов из заданного массива символов в указанный массив байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-302">Encodes a set of characters from the specified character array into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="a40a9-303">Фактическое число байтов, записанных в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-303">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-304">Для вычисления размера точное массива, необходимого <xref:System.Text.UnicodeEncoding.GetBytes%2A> для сохранения полученных байтов, можно вызвать <xref:System.Text.UnicodeEncoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-304">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="a40a9-305">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-305">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="a40a9-306"><xref:System.Text.UnicodeEncoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="a40a9-306">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a40a9-307">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-307">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a40a9-308">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="a40a9-308">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="a40a9-309">Данные для преобразования, такие как данные, считанные из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="a40a9-309">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="a40a9-310">В этом случае или если объем данных слишком велико, что необходимо разделить на небольшие блоки, приложение должно использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.UnicodeEncoding.GetDecoder%2A> метод или <xref:System.Text.UnicodeEncoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="a40a9-310">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a40a9-311">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно добавить префикс поток закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="a40a9-311">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="a40a9-312">Вставка приставку в начале потока байтов (такие как в начале последовательность байтов, записываемых в файл) — это разработчик.</span><span class="sxs-lookup"><span data-stu-id="a40a9-312">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="a40a9-313"><xref:System.Text.UnicodeEncoding.GetBytes%2A> Метод не добавить в начало преамбулу последовательность закодированных байтов в начале.</span><span class="sxs-lookup"><span data-stu-id="a40a9-313">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a40a9-314">Следующий пример демонстрирует, как использовать <xref:System.Text.UnicodeEncoding.GetBytes%2A> способ кодирования диапазона символов из <xref:System.String> и сохранение закодированных байтов в диапазоне элементов в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-314">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to encode a range of characters from a <xref:System.String> and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a40a9-315"><paramref name="chars" /> имеет значение <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a40a9-315"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
<span data-ttu-id="a40a9-316">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-316">-or-</span></span> 
 <span data-ttu-id="a40a9-317"><paramref name="bytes" /> имеет значение <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a40a9-317"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a40a9-318">Значение параметра <paramref name="charIndex" />, <paramref name="charCount" /> или <paramref name="byteIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="a40a9-318"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="a40a9-319">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-319">-or-</span></span> 
 <span data-ttu-id="a40a9-320">Параметры <paramref name="charIndex" /> и <paramref name="charCount" /> не указывают допустимый диапазон в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-320"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="a40a9-321">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-321">-or-</span></span> 
 <span data-ttu-id="a40a9-322">Значение параметра <paramref name="byteIndex" /> не является допустимым индексом в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-322"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a40a9-323">Обнаружение ошибок включено, и <paramref name="chars" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-323">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="a40a9-324">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-324">-or-</span></span> 
 <span data-ttu-id="a40a9-325">Недостаточно емкости <paramref name="bytes" /> от <paramref name="byteIndex" /> до конца массива для размещения полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-325"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a40a9-326">Произошла отработка отказа (см. полное объяснение в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="a40a9-326">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="a40a9-327">- и -</span><span class="sxs-lookup"><span data-stu-id="a40a9-327">-and-</span></span> 
 <span data-ttu-id="a40a9-328">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-328"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="unicodeEncoding.GetBytes (s, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a40a9-329">Строка, содержащая набор символов для кодирования.</span><span class="sxs-lookup"><span data-stu-id="a40a9-329">The string containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="a40a9-330">Индекс первого кодируемого символа.</span><span class="sxs-lookup"><span data-stu-id="a40a9-330">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="a40a9-331">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-331">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="a40a9-332">Массив байтов, в который будет помещена результирующая последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-332">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="a40a9-333">Индекс, с которого начинается запись результирующей последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-333">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="a40a9-334">Кодирует набор символов из заданного объекта <see cref="T:System.String" /> в указанный массив байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-334">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="a40a9-335">Фактическое число байтов, записанных в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-335">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-336">Для вычисления размера точное массива, необходимого <xref:System.Text.UnicodeEncoding.GetBytes%2A> для сохранения полученных байтов, можно вызвать <xref:System.Text.UnicodeEncoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-336">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="a40a9-337">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-337">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="a40a9-338"><xref:System.Text.UnicodeEncoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="a40a9-338">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a40a9-339">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-339">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a40a9-340">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="a40a9-340">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="a40a9-341">Данные для преобразования, такие как данные, считанные из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="a40a9-341">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="a40a9-342">В этом случае или если объем данных слишком велико, что необходимо разделить на небольшие блоки, приложение должно использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.UnicodeEncoding.GetDecoder%2A> метод или <xref:System.Text.UnicodeEncoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="a40a9-342">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a40a9-343">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно добавить префикс поток закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="a40a9-343">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="a40a9-344">Вставка приставку в начале потока байтов (такие как в начале последовательность байтов, записываемых в файл) — это разработчик.</span><span class="sxs-lookup"><span data-stu-id="a40a9-344">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="a40a9-345"><xref:System.Text.UnicodeEncoding.GetBytes%2A> Метод не добавить в начало преамбулу последовательность закодированных байтов в начале.</span><span class="sxs-lookup"><span data-stu-id="a40a9-345">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a40a9-346">Ниже приведен пример, как кодировать диапазон элементов из массива знаков Юникода и сохранение закодированных байтов в диапазоне элементов в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-346">The following example demonstrates how to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a40a9-347"><paramref name="s" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-347"><paramref name="s" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a40a9-348">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-348">-or-</span></span> 
 <span data-ttu-id="a40a9-349"><paramref name="bytes" /> имеет значение <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a40a9-349"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a40a9-350">Значение параметра <paramref name="charIndex" />, <paramref name="charCount" /> или <paramref name="byteIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="a40a9-350"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="a40a9-351">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-351">-or-</span></span> 
 <span data-ttu-id="a40a9-352">Параметры <paramref name="charIndex" /> и <paramref name="charCount" /> не указывают допустимый диапазон в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-352"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="a40a9-353">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-353">-or-</span></span> 
 <span data-ttu-id="a40a9-354">Значение параметра <paramref name="byteIndex" /> не является допустимым индексом в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-354"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a40a9-355">Обнаружение ошибок включено, и <paramref name="s" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-355">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="a40a9-356">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-356">-or-</span></span> 
 <span data-ttu-id="a40a9-357">Недостаточно емкости <paramref name="bytes" /> от <paramref name="byteIndex" /> до конца массива для размещения полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-357"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a40a9-358">Произошла отработка отказа (см. полное объяснение в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="a40a9-358">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="a40a9-359">- и -</span><span class="sxs-lookup"><span data-stu-id="a40a9-359">-and-</span></span> 
 <span data-ttu-id="a40a9-360">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-360"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a40a9-361">Вычисляет количество символов, полученных при декодировании последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-361">Calculates the number of characters produced by decoding a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="unicodeEncoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="a40a9-362">Указатель на первый декодируемый байт.</span><span class="sxs-lookup"><span data-stu-id="a40a9-362">A pointer to the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="a40a9-363">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="a40a9-363">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="a40a9-364">Вычисляет количество символов, полученных при декодировании последовательности байтов начиная с заданного указателя байта.</span><span class="sxs-lookup"><span data-stu-id="a40a9-364">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="a40a9-365">Число символов, полученных при декодировании заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-365">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-366">Для вычисления массиве точный размер, который <xref:System.Text.UnicodeEncoding.GetChars%2A> требуется для хранения полученных символов, используемых приложением <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-366">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetChars%2A> requires to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="a40a9-367">Чтобы вычислить максимальный размер массива, приложение должно использовать <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-367">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="a40a9-368"><xref:System.Text.UnicodeEncoding.GetCharCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="a40a9-368">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a40a9-369">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-369">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a40a9-370">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="a40a9-370">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a40a9-371"><paramref name="bytes" /> имеет значение <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a40a9-371"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a40a9-372">Значение параметра <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="a40a9-372"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="a40a9-373">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-373">-or-</span></span> 
<span data-ttu-id="a40a9-374">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="a40a9-374">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a40a9-375">Обнаружение ошибок включено, и параметр <paramref name="bytes" /> содержит недопустимую последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-375">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="a40a9-376">Произошла отработка отказа (см. полное объяснение в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="a40a9-376">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="a40a9-377">- и -</span><span class="sxs-lookup"><span data-stu-id="a40a9-377">-and-</span></span> 
 <span data-ttu-id="a40a9-378">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-378"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="a40a9-379">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="a40a9-379">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="a40a9-380">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="a40a9-380">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Text.UnicodeEncoding.GetChars" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="unicodeEncoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="a40a9-381">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="a40a9-381">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="a40a9-382">Индекс первого декодируемого байта.</span><span class="sxs-lookup"><span data-stu-id="a40a9-382">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="a40a9-383">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="a40a9-383">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="a40a9-384">Вычисляет количество символов, полученных при декодировании последовательности байтов из заданного массива байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-384">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="a40a9-385">Число символов, полученных при декодировании заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-385">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-386">Для вычисления размера точное массива, необходимого <xref:System.Text.UnicodeEncoding.GetChars%2A> для хранения полученных символов, приложение использует <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-386">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="a40a9-387">Чтобы вычислить максимальный размер массива, приложение должно использовать <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-387">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="a40a9-388"><xref:System.Text.UnicodeEncoding.GetCharCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="a40a9-388">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a40a9-389">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-389">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a40a9-390">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="a40a9-390">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a40a9-391">Следующий пример демонстрирует, как использовать <xref:System.Text.UnicodeEncoding.GetCharCount%2A> метод, чтобы вернуть количество символов, полученных при декодировании диапазон элементов в массив байтов с помощью <xref:System.Text.UnicodeEncoding>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-391">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array using <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a40a9-392"><paramref name="bytes" /> имеет значение <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a40a9-392"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a40a9-393">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="a40a9-393"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="a40a9-394">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-394">-or-</span></span> 
 <span data-ttu-id="a40a9-395">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-395"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="a40a9-396">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-396">-or-</span></span> 
<span data-ttu-id="a40a9-397">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="a40a9-397">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a40a9-398">Обнаружение ошибок включено, и параметр <paramref name="bytes" /> содержит недопустимую последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-398">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="a40a9-399">Произошла отработка отказа (см. полное объяснение в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="a40a9-399">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="a40a9-400">- и -</span><span class="sxs-lookup"><span data-stu-id="a40a9-400">-and-</span></span> 
 <span data-ttu-id="a40a9-401">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-401"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.UnicodeEncoding.GetChars" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a40a9-402">Декодирует последовательность байтов в набор символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-402">Decodes a sequence of bytes into a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="unicodeEncoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="a40a9-403">Указатель на первый декодируемый байт.</span><span class="sxs-lookup"><span data-stu-id="a40a9-403">A pointer to the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="a40a9-404">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="a40a9-404">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="a40a9-405">Указатель на положение, с которого начинается запись результирующего набора символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-405">A pointer to the location at which to start writing the resulting set of characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="a40a9-406">Наибольшее количество символов для записи.</span><span class="sxs-lookup"><span data-stu-id="a40a9-406">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="a40a9-407">Декодирует последовательность байтов, начало которой задается указателем байта, в набор символов, которые сохраняются начиная с заданного указателя символа.</span><span class="sxs-lookup"><span data-stu-id="a40a9-407">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="a40a9-408">Фактическое число символов, записанных в местоположение, которое задано параметром <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-408">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-409">Для вычисления массиве точный размер, который <xref:System.Text.UnicodeEncoding.GetChars%2A> требуется для хранения полученных символов, используемых приложением <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-409">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetChars%2A> requires to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="a40a9-410">Чтобы вычислить максимальный размер массива, приложение должно использовать <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-410">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="a40a9-411"><xref:System.Text.UnicodeEncoding.GetCharCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="a40a9-411">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a40a9-412">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-412">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a40a9-413">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="a40a9-413">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="a40a9-414">Если массив байтов был возвращен методом виду типа без метки порядка БАЙТОВ диапазон байтов для декодирования включает отметки порядка байтов (BOM), знак U + FFFE включается в массив символов, возвращаемый этим методом.</span><span class="sxs-lookup"><span data-stu-id="a40a9-414">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="a40a9-415">Его можно удалить, вызвав <xref:System.String.TrimStart%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-415">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a40a9-416">Данные для преобразования, такие как данные, считанные из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="a40a9-416">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="a40a9-417">В этом случае или если объем данных слишком велико, что необходимо разделить на небольшие блоки, приложение должно использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> объекта, предоставляемого <xref:System.Text.UnicodeEncoding.GetDecoder%2A> или <xref:System.Text.UnicodeEncoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="a40a9-417">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a40a9-418"><paramref name="bytes" /> имеет значение <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a40a9-418"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
<span data-ttu-id="a40a9-419">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-419">-or-</span></span> 
 <span data-ttu-id="a40a9-420"><paramref name="chars" /> имеет значение <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a40a9-420"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a40a9-421">Значение параметра <paramref name="byteCount" /> или <paramref name="charCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="a40a9-421"><paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a40a9-422">Обнаружение ошибок включено, и параметр <paramref name="bytes" /> содержит недопустимую последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-422">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
<span data-ttu-id="a40a9-423">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-423">-or-</span></span> 
 <span data-ttu-id="a40a9-424"><paramref name="charCount" /> меньше результирующего числа символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-424"><paramref name="charCount" /> is less than the resulting number of characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="a40a9-425">Произошла отработка отказа (см. полное объяснение в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="a40a9-425">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="a40a9-426">- и -</span><span class="sxs-lookup"><span data-stu-id="a40a9-426">-and-</span></span> 
 <span data-ttu-id="a40a9-427">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-427"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="a40a9-428">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="a40a9-428">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="a40a9-429">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="a40a9-429">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="unicodeEncoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="a40a9-430">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="a40a9-430">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="a40a9-431">Индекс первого декодируемого байта.</span><span class="sxs-lookup"><span data-stu-id="a40a9-431">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="a40a9-432">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="a40a9-432">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="a40a9-433">Массив символов, в который будет помещен результирующий набор символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-433">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="a40a9-434">Индекс, с которого начинается запись результирующего набора символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-434">The index at which to start writing the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="a40a9-435">Декодирует последовательность байтов из заданного массива байтов в указанный массив символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-435">Decodes a sequence of bytes from the specified byte array into the specified character array.</span></span></summary>
        <returns><span data-ttu-id="a40a9-436">Фактическое число символов, записанных в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-436">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-437">Для вычисления размера точное массива, необходимого <xref:System.Text.UnicodeEncoding.GetChars%2A> для хранения полученных символов, приложение использует <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-437">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="a40a9-438">Чтобы вычислить максимальный размер массива, приложение должно использовать <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-438">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="a40a9-439"><xref:System.Text.UnicodeEncoding.GetCharCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="a40a9-439">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a40a9-440">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-440">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a40a9-441">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="a40a9-441">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="a40a9-442">Если массив байтов был возвращен методом виду типа без метки порядка БАЙТОВ диапазон байтов для декодирования включает отметки порядка байтов (BOM), знак U + FFFE включается в массив символов, возвращаемый этим методом.</span><span class="sxs-lookup"><span data-stu-id="a40a9-442">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="a40a9-443">Его можно удалить, вызвав <xref:System.String.TrimStart%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-443">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a40a9-444">Данные для преобразования, такие как данные, считанные из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="a40a9-444">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="a40a9-445">В этом случае или если объем данных слишком велико, что необходимо разделить на небольшие блоки, приложение должно использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.UnicodeEncoding.GetDecoder%2A> метод или <xref:System.Text.UnicodeEncoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="a40a9-445">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a40a9-446">Следующий пример демонстрирует, как использовать <xref:System.Text.UnicodeEncoding.GetChars%2A> метод декодировать диапазон элементов в массиве байтов и сохраняет результат в массив символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-446">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetChars%2A> method to decode a range of elements in a byte array and store the result in a character array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a40a9-447"><paramref name="bytes" /> имеет значение <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a40a9-447"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
<span data-ttu-id="a40a9-448">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-448">-or-</span></span> 
 <span data-ttu-id="a40a9-449"><paramref name="chars" /> имеет значение <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a40a9-449"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a40a9-450">Значение параметра <paramref name="byteIndex" />, <paramref name="byteCount" /> или <paramref name="charIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="a40a9-450"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="a40a9-451">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-451">-or-</span></span> 
 <span data-ttu-id="a40a9-452">Параметры <paramref name="byteindex" /> и <paramref name="byteCount" /> не указывают допустимый диапазон в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-452"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="a40a9-453">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-453">-or-</span></span> 
 <span data-ttu-id="a40a9-454">Значение параметра <paramref name="charIndex" /> не является допустимым индексом в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-454"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a40a9-455">Обнаружение ошибок включено, и параметр <paramref name="bytes" /> содержит недопустимую последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-455">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
<span data-ttu-id="a40a9-456">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-456">-or-</span></span> 
 <span data-ttu-id="a40a9-457">Недостаточно емкости <paramref name="chars" /> от <paramref name="charIndex" /> до конца массива для размещения полученных символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-457"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="a40a9-458">Произошла отработка отказа (см. полное объяснение в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="a40a9-458">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="a40a9-459">- и -</span><span class="sxs-lookup"><span data-stu-id="a40a9-459">-and-</span></span> 
 <span data-ttu-id="a40a9-460">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-460"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="unicodeEncoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a40a9-461">Получает средство декодирования, преобразующее последовательность байтов в кодировке UTF-16 в последовательность символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="a40a9-461">Obtains a decoder that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.</span></span></summary>
        <returns><span data-ttu-id="a40a9-462">Объект <see cref="T:System.Text.Decoder" />, преобразующий последовательность байтов в кодировке UTF-16 в последовательность символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="a40a9-462">A <see cref="T:System.Text.Decoder" /> that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-463"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> Метод преобразует последовательные блоки байтов в последовательные блоки символов в так же, как <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-463">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span></span> <span data-ttu-id="a40a9-464">Тем не менее <xref:System.Text.Decoder> хранит сведения о состоянии между вызовами, что позволяет ему правильно декодировать последовательность байтов, охватывающие блоки.</span><span class="sxs-lookup"><span data-stu-id="a40a9-464">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="a40a9-465"><xref:System.Text.Decoder> Также сохраняет конечные байты в конце блоки данных и использует конечные байты при следующей операции декодирования.</span><span class="sxs-lookup"><span data-stu-id="a40a9-465">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="a40a9-466">Таким образом <xref:System.Text.UnicodeEncoding.GetDecoder%2A> и <xref:System.Text.UnicodeEncoding.GetEncoder%2A> полезны для передачи по сети и операции с файлами, так как эти операции часто работают с блоками данных вместо поток полного набора данных.</span><span class="sxs-lookup"><span data-stu-id="a40a9-466">Therefore, <xref:System.Text.UnicodeEncoding.GetDecoder%2A> and <xref:System.Text.UnicodeEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="a40a9-467">Если обнаружение ошибок включено, то есть `throwOnInvalidBytes` параметр конструктора имеет значение `true`, обнаружение ошибок также включено в <xref:System.Text.Decoder> возвращаемого этим методом.</span><span class="sxs-lookup"><span data-stu-id="a40a9-467">If error detection is enabled, that is, the `throwOnInvalidBytes` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="a40a9-468">Если включена функция обнаружения ошибок и недопустимую последовательность, состояние декодера не определено, и обработка должна прерываться.</span><span class="sxs-lookup"><span data-stu-id="a40a9-468">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a40a9-469">Следующий пример использует кодировщик и декодер для кодирования строки в массив байтов и затем декодировать байты в массив символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-469">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/VB/encdec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="a40a9-470">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="a40a9-470">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="unicodeEncoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a40a9-471">Получает средство кодирования, преобразующее последовательность символов Юникода в последовательность байтов в кодировке UTF-16.</span><span class="sxs-lookup"><span data-stu-id="a40a9-471">Obtains an encoder that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="a40a9-472">Объект <see cref="T:System.Text.Encoder" />, преобразующий последовательность символов Юникода в последовательность байтов в кодировке UTF-16.</span><span class="sxs-lookup"><span data-stu-id="a40a9-472">A <see cref="T:System.Text.Encoder" /> object that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-473"><xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> Метод преобразует последовательные блоки символов в последовательные блоки байтов в так же, как <xref:System.Text.UnicodeEncoding.GetBytes%2A> метод этого класса.</span><span class="sxs-lookup"><span data-stu-id="a40a9-473">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes in a manner similar to the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method of this class.</span></span> <span data-ttu-id="a40a9-474">Тем не менее <xref:System.Text.Encoder> объект хранит сведения о состоянии между вызовами, таким образом, чтобы он правильно можно закодировать последовательности символов, охватывающие блоки.</span><span class="sxs-lookup"><span data-stu-id="a40a9-474">However, a <xref:System.Text.Encoder> object maintains state information between calls so that it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="a40a9-475"><xref:System.Text.Encoder> Объект также сохраняет замыкающие символы в конце блоки данных и использует замыкающие символы при выполнении следующей операции кодирования.</span><span class="sxs-lookup"><span data-stu-id="a40a9-475">The <xref:System.Text.Encoder> object also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="a40a9-476">Например блок данных может заканчиваться непарные заместителем и сопоставления меньшим заменяющим значением может быть в следующем блоке данных.</span><span class="sxs-lookup"><span data-stu-id="a40a9-476">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="a40a9-477">Таким образом <xref:System.Text.UnicodeEncoding.GetDecoder%2A> и <xref:System.Text.UnicodeEncoding.GetEncoder%2A> полезны для передачи по сети и операции с файлами, так как эти операции часто работают с блоками данных вместо поток полного набора данных.</span><span class="sxs-lookup"><span data-stu-id="a40a9-477">Therefore, <xref:System.Text.UnicodeEncoding.GetDecoder%2A> and <xref:System.Text.UnicodeEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="a40a9-478">Если обнаружение ошибок включено, то есть `throwOnInvalidBytes` параметр конструктора имеет значение `true`, обнаружение ошибок также включено в <xref:System.Text.Encoder> объекта, возвращаемого этим методом.</span><span class="sxs-lookup"><span data-stu-id="a40a9-478">If error detection is enabled, that is, the `throwOnInvalidBytes` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> object returned by this method.</span></span> <span data-ttu-id="a40a9-479">Если включена функция обнаружения ошибок и недопустимую последовательность, состояние кодировщика является неопределенным и обработка должна прерываться.</span><span class="sxs-lookup"><span data-stu-id="a40a9-479">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a40a9-480">Следующий пример использует кодировщик и декодер для кодирования строки в массив байтов и затем декодировать байты в массив символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-480">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/VB/encdec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="a40a9-481">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="a40a9-481">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="unicodeEncoding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a40a9-482">Возвращает хэш-код текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="a40a9-482">Returns the hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="a40a9-483">Хэш-код для текущего объекта <see cref="T:System.Text.UnicodeEncoding" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-483">The hash code for the current <see cref="T:System.Text.UnicodeEncoding" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="unicodeEncoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount"><span data-ttu-id="a40a9-484">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-484">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="a40a9-485">Вычисляет максимальное количество байтов, полученных при кодировании заданного числа символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-485">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="a40a9-486">Максимальное количество байтов, полученных при кодировании заданного количества символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-486">The maximum number of bytes produced by encoding the specified number of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-487">Для вычисления размера точное массива, необходимого <xref:System.Text.UnicodeEncoding.GetBytes%2A> для хранения полученных байтов, приложение использует <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-487">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="a40a9-488">Чтобы вычислить максимальный размер массива, приложение должно использовать <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-488">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="a40a9-489"><xref:System.Text.UnicodeEncoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="a40a9-489">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a40a9-490"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> Получает номер худшего случая, включая худшем случае для выбранного в данный момент <xref:System.Text.EncoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-490"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="a40a9-491">Если вы выбрали переход на резервный ресурс со строкой потенциально большого объема, <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> может возвращать большие значения.</span><span class="sxs-lookup"><span data-stu-id="a40a9-491">If a fallback is chosen with a potentially large string, <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="a40a9-492">В большинстве случаев этот метод извлекает адекватные числа для коротких строк.</span><span class="sxs-lookup"><span data-stu-id="a40a9-492">In most cases, this method retrieves reasonable numbers for small strings.</span></span> <span data-ttu-id="a40a9-493">Для больших строк может потребоваться выбирать между использованием очень больших буферов и перехват ошибок в тех редких случаях, что превышено более рациональной буфера.</span><span class="sxs-lookup"><span data-stu-id="a40a9-493">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="a40a9-494">Можно также рассмотреть возможность использования другого подхода <xref:System.Text.UnicodeEncoding.GetByteCount%2A> или <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-494">You might also want to consider a different approach using <xref:System.Text.UnicodeEncoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a40a9-495"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> не имеет отношения к <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-495"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span></span> <span data-ttu-id="a40a9-496">Если ваше приложение должно использовать с ту же функцию <xref:System.Text.UnicodeEncoding.GetChars%2A>, следует использовать <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-496">If your application needs a similar function to use with <xref:System.Text.UnicodeEncoding.GetChars%2A>, it should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a40a9-497">`GetMaxByteCount(N)` не обязательно совпадает со значением `N* GetMaxByteCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="a40a9-497">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a40a9-498">Следующий пример демонстрирует, как использовать <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> метод вернет максимальное число байтов, необходимых для кодирования указанное количество символов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-498">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method to return the maximum number of bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a40a9-499">Значение параметра <paramref name="charCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="a40a9-499"><paramref name="charCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="a40a9-500">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-500">-or-</span></span> 
<span data-ttu-id="a40a9-501">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="a40a9-501">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a40a9-502">Произошла отработка отказа (см. полное объяснение в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="a40a9-502">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="a40a9-503">- и -</span><span class="sxs-lookup"><span data-stu-id="a40a9-503">-and-</span></span> 
 <span data-ttu-id="a40a9-504">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-504"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="unicodeEncoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount"><span data-ttu-id="a40a9-505">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="a40a9-505">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="a40a9-506">Вычисляет максимальное количество символов, полученных при декодировании заданного числа байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-506">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="a40a9-507">Максимальное количество символов, полученных при декодировании заданного количества байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-507">The maximum number of characters produced by decoding the specified number of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-508">Для вычисления размера точное массива, необходимого <xref:System.Text.UnicodeEncoding.GetChars%2A> для хранения полученных символов, приложение использует <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-508">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="a40a9-509">Чтобы вычислить максимальный размер массива, приложение должно использовать <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-509">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="a40a9-510"><xref:System.Text.UnicodeEncoding.GetCharCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="a40a9-510">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a40a9-511"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> Получает номер худшего случая, включая худшем случае для выбранного в данный момент <xref:System.Text.DecoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-511"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="a40a9-512">Если вы выбрали переход на резервный ресурс со строкой потенциально большого объема, <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> извлекает большие значения.</span><span class="sxs-lookup"><span data-stu-id="a40a9-512">If a fallback is chosen with a potentially large string, <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> retrieves large values.</span></span>  
  
 <span data-ttu-id="a40a9-513">В большинстве случаев этот метод извлекает адекватные числа для коротких строк.</span><span class="sxs-lookup"><span data-stu-id="a40a9-513">In most cases, this method retrieves reasonable numbers for small strings.</span></span> <span data-ttu-id="a40a9-514">Для больших строк может потребоваться выбирать между использованием очень больших буферов и перехват ошибок в тех редких случаях, что превышено более рациональной буфера.</span><span class="sxs-lookup"><span data-stu-id="a40a9-514">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="a40a9-515">Можно также рассмотреть возможность использования другого подхода <xref:System.Text.UnicodeEncoding.GetCharCount%2A> или <xref:System.Text.Decoder.Convert%2A>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-515">You might also want to consider a different approach using <xref:System.Text.UnicodeEncoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A>.</span></span>  
  
 <span data-ttu-id="a40a9-516"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> не имеет отношения к <xref:System.Text.UnicodeEncoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-516"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.UnicodeEncoding.GetBytes%2A>.</span></span> <span data-ttu-id="a40a9-517">Если ваше приложение должно использовать с ту же функцию <xref:System.Text.UnicodeEncoding.GetBytes%2A>, следует использовать <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-517">If your application needs a similar function to use with <xref:System.Text.UnicodeEncoding.GetBytes%2A>, it should use <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a40a9-518">`GetMaxCharCount(N)` не обязательно совпадает со значением `N* GetMaxCharCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="a40a9-518">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a40a9-519">Следующий пример демонстрирует, как использовать <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> метод вернет максимальное количество символов, полученных при декодировании указанное число байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-519">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method to return the maximum number of characters produced by decoding a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a40a9-520">Значение параметра <paramref name="byteCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="a40a9-520"><paramref name="byteCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="a40a9-521">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-521">-or-</span></span> 
<span data-ttu-id="a40a9-522">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="a40a9-522">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="a40a9-523">Произошла отработка отказа (см. полное объяснение в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="a40a9-523">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="a40a9-524">- и -</span><span class="sxs-lookup"><span data-stu-id="a40a9-524">-and-</span></span> 
 <span data-ttu-id="a40a9-525">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-525"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberSignature Language="F#" Value="override this.GetPreamble : unit -&gt; byte[]" Usage="unicodeEncoding.GetPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a40a9-526">Возвращает метку порядка байтов Юникода, закодированную в формате UTF-16, если конструктор данного экземпляра запрашивает метку порядка байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-526">Returns a Unicode byte order mark encoded in UTF-16 format, if the constructor for this instance requests a byte order mark.</span></span></summary>
        <returns><span data-ttu-id="a40a9-527">Массив байтов, содержащий метку порядка байтов Юникода, если объект <see cref="T:System.Text.UnicodeEncoding" /> настроен для его предоставления.</span><span class="sxs-lookup"><span data-stu-id="a40a9-527">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UnicodeEncoding" /> object is configured to supply one.</span></span> <span data-ttu-id="a40a9-528">В противном случае этот метод возвращает массив байтов нулевой длины.</span><span class="sxs-lookup"><span data-stu-id="a40a9-528">Otherwise, this method returns a zero-length byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-529"><xref:System.Text.UnicodeEncoding> Объект может предоставлять преамбулу, который является массив байтов, который может иметь префикс в последовательность байтов, полученных в результате кодирования.</span><span class="sxs-lookup"><span data-stu-id="a40a9-529">The <xref:System.Text.UnicodeEncoding> object can provide a preamble, which is a byte array that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="a40a9-530">Предшествующим последовательность закодированных байтов с метки порядка байтов (кодовая точка U + FEFF) декодер может определить порядок байтов и формат преобразования или UTF.</span><span class="sxs-lookup"><span data-stu-id="a40a9-530">Prefacing a sequence of encoded bytes with a byte order mark (code point U+FEFF) helps the decoder determine the byte order and the transformation format or UTF.</span></span> <span data-ttu-id="a40a9-531">Отметки порядка байтов (BOM) Юникода сериализуется следующим образом (в шестнадцатеричном формате):</span><span class="sxs-lookup"><span data-stu-id="a40a9-531">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="a40a9-532">Обратный порядок байтов: FE FF</span><span class="sxs-lookup"><span data-stu-id="a40a9-532">Big endian byte order: FE FF</span></span>  
  
-   <span data-ttu-id="a40a9-533">Прямой порядок байтов: FF FE</span><span class="sxs-lookup"><span data-stu-id="a40a9-533">Little endian byte order: FF FE</span></span>  
  
 <span data-ttu-id="a40a9-534">Можно создать экземпляр <xref:System.Text.UnicodeEncoding> которого <xref:System.Text.UnicodeEncoding.GetPreamble%2A> метод возвращает допустимый Спецификации одним из следующих способов:</span><span class="sxs-lookup"><span data-stu-id="a40a9-534">You can instantiate a <xref:System.Text.UnicodeEncoding> object whose <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="a40a9-535">Получая <xref:System.Text.UnicodeEncoding> объект, возвращаемый <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> или <xref:System.Text.Encoding.BigEndianUnicode%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="a40a9-535">By retrieving the <xref:System.Text.UnicodeEncoding> object returned by the <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> or <xref:System.Text.Encoding.BigEndianUnicode%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="a40a9-536">Путем вызова без параметров <xref:System.Text.UnicodeEncoding.%23ctor> конструктора для создания <xref:System.Text.UnicodeEncoding> объекта.</span><span class="sxs-lookup"><span data-stu-id="a40a9-536">By calling the parameterless <xref:System.Text.UnicodeEncoding.%23ctor> constructor to instantiate a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
-   <span data-ttu-id="a40a9-537">Указав `true` для параметра `byteOrderMark` аргумент <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> или <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> конструкторы.</span><span class="sxs-lookup"><span data-stu-id="a40a9-537">By supplying `true` as the value of the `byteOrderMark` argument to the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> or <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructors.</span></span>  
  
 <span data-ttu-id="a40a9-538">Рекомендуется использовать метки порядка БАЙТОВ, так как он обеспечивает почти точную идентификацию кодировки для файлов, которые в противном случае теряют ссылку к их кодировании, например без тегов или неправильно с тегами веб-данных или случайное текстовые файлы, сохраненные, когда организация не было расставленными.</span><span class="sxs-lookup"><span data-stu-id="a40a9-538">We recommended that you use the BOM, since it provides nearly certain identification of an encoding for files that otherwise have lost a reference to their encoding, such as untagged or improperly tagged web data or random text files stored when a business did not have international concerns.</span></span> <span data-ttu-id="a40a9-539">Часто проблемы в работе пользователей избавить согласованных и правильных тегов в данных.</span><span class="sxs-lookup"><span data-stu-id="a40a9-539">Often user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="a40a9-540">Стандарты, которые предоставляют тип кодировки отчасти избыточна метки порядка БАЙТОВ.</span><span class="sxs-lookup"><span data-stu-id="a40a9-540">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="a40a9-541">Тем не менее он может использоваться для помочь серверу отправлять правильный заголовок кодировки.</span><span class="sxs-lookup"><span data-stu-id="a40a9-541">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="a40a9-542">Кроме того он может использоваться как переход на резервный ресурс в случае кодировку, в противном случае потери.</span><span class="sxs-lookup"><span data-stu-id="a40a9-542">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="a40a9-543">Есть некоторые недостатки использования метки порядка БАЙТОВ.</span><span class="sxs-lookup"><span data-stu-id="a40a9-543">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="a40a9-544">Например сложно выбрать способы ограничения полей базы данных, используйте метки порядка БАЙТОВ.</span><span class="sxs-lookup"><span data-stu-id="a40a9-544">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="a40a9-545">Объединение файлов может стать проблемой также, например, когда файлы будут объединены таким образом, что необязательный символ может оказаться в центре данных.</span><span class="sxs-lookup"><span data-stu-id="a40a9-545">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="a40a9-546">Несмотря на некоторые недостатки тем не менее, использование спецификации настоятельно рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="a40a9-546">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a40a9-547">Чтобы обеспечить правильное декодирование закодированных байтов, необходимо использовать перед начало потока закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="a40a9-547">To ensure that the encoded bytes are decoded properly, you should prefix the beginning of a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="a40a9-548">Обратите внимание, что <xref:System.Text.UnicodeEncoding.GetBytes%2A> метод не добавить в начало метки порядка БАЙТОВ в последовательность закодированных байтов; предоставление метки порядка БАЙТОВ в начале соответствующих байтового потока является обязанностью разработчика.</span><span class="sxs-lookup"><span data-stu-id="a40a9-548">Note that the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a40a9-549">Следующий пример демонстрирует, как использовать <xref:System.Text.UnicodeEncoding.GetPreamble%2A> метод для извлечения отметки порядка байтов Юникод с обратным порядком байтов или прямой порядок байтов для экземпляра <xref:System.Text.UnicodeEncoding>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-549">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to retrieve the Unicode byte order mark in big endian or little endian byte order for an instance of a <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/CPP/getpreamble-.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/CS/getpreamble-.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/VB/getpreamble-.vb#1)]  
  
 <span data-ttu-id="a40a9-550">В следующем примере создается два <xref:System.Text.UnicodeEncoding> объектов, первая из которых не поддерживает метки порядка БАЙТОВ, а второе — какие не.</span><span class="sxs-lookup"><span data-stu-id="a40a9-550">The following example instantiates two <xref:System.Text.UnicodeEncoding> objects, the first of which does not provide a BOM, and the second of which does.</span></span> <span data-ttu-id="a40a9-551">Затем он вызывает <xref:System.Text.UnicodeEncoding.GetPreamble%2A> метод для записи метки порядка БАЙТОВ в файл перед записью строка в кодировке Юникод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-551">It then calls the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to write the BOM to a file before writing a Unicode-encoded string.</span></span> <span data-ttu-id="a40a9-552">Как выходные данные консоли из в примере показано, файл, который сохраняет байты из второго кодировщика имеет три байта больше, чем для первого.</span><span class="sxs-lookup"><span data-stu-id="a40a9-552">As the console output from the example shows, the file that saves the bytes from the second encoder has three more bytes than the first.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Text.UnicodeEncoding.GetPreamble/cs/GetPreamble1.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Text.UnicodeEncoding.GetPreamble/vb/GetPreamble1.vb#1)]  
  
 <span data-ttu-id="a40a9-553">Вы также можете сравнить файлы с помощью `fc` команды в окне консоли, или можно проверить файлы в текстовом редакторе, который включает режим шестнадцатеричное представление.</span><span class="sxs-lookup"><span data-stu-id="a40a9-553">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="a40a9-554">Обратите внимание, что если файл открыт в редакторе, который поддерживает кодировку UTF-16, Спецификации не отображается.</span><span class="sxs-lookup"><span data-stu-id="a40a9-554">Note that when the file is opened in an editor that supports UTF-16 encoding, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="unicodeEncoding.GetString (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="a40a9-555">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="a40a9-555">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="a40a9-556">Индекс первого декодируемого байта.</span><span class="sxs-lookup"><span data-stu-id="a40a9-556">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="a40a9-557">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="a40a9-557">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="a40a9-558">Декодирует диапазон байтов из массива байтов в строку.</span><span class="sxs-lookup"><span data-stu-id="a40a9-558">Decodes a range of bytes from a byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="a40a9-559">Объект <see cref="T:System.String" />, содержащий результаты декодирования заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-559">A <see cref="T:System.String" /> object containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40a9-560">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a40a9-560">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a40a9-561">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="a40a9-561">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="a40a9-562">Если массив байтов был возвращен методом виду типа без метки порядка БАЙТОВ диапазон байтов для декодирования включает отметки порядка байтов (BOM), знак U + FFFE включается в массив символов, возвращаемый этим методом.</span><span class="sxs-lookup"><span data-stu-id="a40a9-562">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="a40a9-563">Его можно удалить, вызвав <xref:System.String.TrimStart%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-563">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a40a9-564">Данные для преобразования, такие как данные, считанные из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="a40a9-564">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="a40a9-565">В этом случае или если объем данных слишком велико, что необходимо разделить на небольшие блоки, приложение должно использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> объекта, предоставляемого <xref:System.Text.UnicodeEncoding.GetDecoder%2A> или <xref:System.Text.UnicodeEncoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="a40a9-565">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a40a9-566">Следующий пример инициализирует массив путем вызова <xref:System.Text.UnicodeEncoding.GetByteCount%2A> метод, чтобы определить точно, сколько байтов являются обязательными для закодированной строки, а затем добавив размер отметки порядка байтов (BOM).</span><span class="sxs-lookup"><span data-stu-id="a40a9-566">The following example initializes an array by calling the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="a40a9-567">Затем в примере вызывается <xref:System.Text.UnicodeEncoding.GetPreamble%2A> для сохранения метки порядка БАЙТОВ в массив до вызова метода <xref:System.Text.Encoding.GetBytes%2A> метод для хранения закодированных байтов в массив.</span><span class="sxs-lookup"><span data-stu-id="a40a9-567">The example then calls the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="a40a9-568">Затем в примере вызывается <xref:System.Text.UnicodeEncoding.GetString%2A> метод Декодируемая строка.</span><span class="sxs-lookup"><span data-stu-id="a40a9-568">The example then calls the <xref:System.Text.UnicodeEncoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/cs/getstring1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/vb/getstring1.vb#1)]  
  
 <span data-ttu-id="a40a9-569">Обратите внимание на то, что в этом случае расшифрованную строку отличается от исходной строки, так как он начинается с метки порядка байтов в 16-разрядное U + FFFD.</span><span class="sxs-lookup"><span data-stu-id="a40a9-569">Note that in this case the decoded string differs from the original string, since it begins with a 16-bit byte order mark U+FFFD.</span></span> <span data-ttu-id="a40a9-570">Это означает, что две строки будут неравны и, если строка выходных данных, Спецификации отображается как замещающий символ «?».</span><span class="sxs-lookup"><span data-stu-id="a40a9-570">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span> <span data-ttu-id="a40a9-571">Чтобы удалить метки порядка БАЙТОВ в начале строки, можно вызвать <xref:System.String.TrimStart%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="a40a9-571">To remove the BOM at the beginning of the string, you can call the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a40a9-572"><paramref name="bytes" /> имеет значение <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a40a9-572"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a40a9-573">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="a40a9-573"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="a40a9-574">-или-</span><span class="sxs-lookup"><span data-stu-id="a40a9-574">-or-</span></span> 
 <span data-ttu-id="a40a9-575">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-575"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a40a9-576">Обнаружение ошибок включено, и параметр <paramref name="bytes" /> содержит недопустимую последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="a40a9-576">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="a40a9-577">Произошла отработка отказа (см. полное объяснение в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md))</span><span class="sxs-lookup"><span data-stu-id="a40a9-577">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="a40a9-578">- и -</span><span class="sxs-lookup"><span data-stu-id="a40a9-578">-and-</span></span> 
 <span data-ttu-id="a40a9-579">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a40a9-579"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>