<Type Name="UTF32Encoding" FullName="System.Text.UTF32Encoding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f0f047d3b7e414417b38badf4c585451ca50e6cc" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="58874726" /></Metadata><TypeSignature Language="C#" Value="public sealed class UTF32Encoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit UTF32Encoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UTF32Encoding" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UTF32Encoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UTF32Encoding sealed : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type UTF32Encoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4a6dd-101">Представляет кодировку символов Юникода в формате UTF-32.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-101">Represents a UTF-32 encoding of Unicode characters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-102">Кодирование - это процесс преобразования набора символов Юникода в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="4a6dd-103">Декодирование представляет собой процесс преобразования последовательности закодированных байтов в набор символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="4a6dd-104">[Стандарта Юникод](https://go.microsoft.com/fwlink/?linkid=37123) каждому символу в каждом поддерживаемом символьном присваивается кодовая точка (номер).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-104">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) assigns a code point (a number) to each character in every supported script.</span></span> <span data-ttu-id="4a6dd-105">Формат преобразования Юникода (UTF) — это способ кодирования кодовой точки.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-105">A Unicode Transformation Format (UTF) is a way to encode that code point.</span></span> <span data-ttu-id="4a6dd-106">[Стандарта Юникод](https://go.microsoft.com/fwlink/?linkid=37123) использует следующие форматы UTF:</span><span class="sxs-lookup"><span data-stu-id="4a6dd-106">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) uses the following UTFs:</span></span>  
  
-   <span data-ttu-id="4a6dd-107">UTF-8, который представляет каждую кодовую точку в виде последовательности от одного до четырех байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-107">UTF-8, which represents each code point as a sequence of one to four bytes.</span></span>  
  
-   <span data-ttu-id="4a6dd-108">UTF-16, который представляет каждую кодовую точку в виде последовательности одного или двух 16-разрядных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-108">UTF-16, which represents each code point as a sequence of one to two 16-bit integers.</span></span>  
  
-   <span data-ttu-id="4a6dd-109">UTF-32, который представляет каждую кодовую точку как 32-разрядное целое число.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-109">UTF-32, which represents each code point as a 32-bit integer.</span></span>  
  
 <span data-ttu-id="4a6dd-110">Дополнительные сведения о UTF и других кодировках, поддерживаемых <xref:System.Text>, см. в разделе [кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-110">For more information about the UTFs and other encodings supported by <xref:System.Text>, see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md).</span></span>
  
 <span data-ttu-id="4a6dd-111"><xref:System.Text.UTF32Encoding> Класс представляет кодировку UTF-32.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-111">The <xref:System.Text.UTF32Encoding> class represents a UTF-32 encoding.</span></span> <span data-ttu-id="4a6dd-112">Кодировщик может использовать обратный порядок байтов (самый старший байт первого) или прямой порядок байтов (младший байт первый).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-112">The encoder can use the big endian byte order (most significant byte first) or the little endian byte order (least significant byte first).</span></span> <span data-ttu-id="4a6dd-113">Например прописная латинская буква (кодовая точка U + 0041) сериализуется как следующим образом (в шестнадцатеричном формате):</span><span class="sxs-lookup"><span data-stu-id="4a6dd-113">For example, the Latin Capital Letter A (code point U+0041) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="4a6dd-114">Обратный порядок байтов: 00 00 00 41</span><span class="sxs-lookup"><span data-stu-id="4a6dd-114">Big endian byte order: 00 00 00 41</span></span>  
  
-   <span data-ttu-id="4a6dd-115">Прямой порядок байтов: 41 00 00 00</span><span class="sxs-lookup"><span data-stu-id="4a6dd-115">Little endian byte order: 41 00 00 00</span></span>  
  
 <span data-ttu-id="4a6dd-116">Он обычно более эффективен для хранения символов Юникода, с помощью собственного порядка байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-116">It is generally more efficient to store Unicode characters using the native byte order.</span></span> <span data-ttu-id="4a6dd-117">Например лучше использовать прямой порядок байтов на платформах с прямым порядком, таких как компьютеры Intel.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-117">For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</span></span> <span data-ttu-id="4a6dd-118"><xref:System.Text.UTF32Encoding> соответствует кодовые страницы Windows 12000 (прямой порядок байтов) и 12001 (обратный порядок байтов).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-118"><xref:System.Text.UTF32Encoding> corresponds to the Windows code pages 12000 (little endian byte order) and 12001 (big endian byte order).</span></span> <span data-ttu-id="4a6dd-119">«Порядка байтов» конкретной архитектуры можно определить, вызвав <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-119">You can determine the "endianness" of a particular architecture by calling the <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4a6dd-120">При необходимости <xref:System.Text.UTF32Encoding> предоставляет метку порядка байтов (BOM), который представляет собой массив байтов, которые может иметь префикс в последовательность байтов, полученных в результате кодирования.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-120">Optionally, the <xref:System.Text.UTF32Encoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="4a6dd-121">Если преамбула содержит метку порядка байтов (BOM), декодер определить порядок байтов и формат преобразования или UTF массива байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-121">If the preamble contains a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF of a byte array.</span></span>  
  
 <span data-ttu-id="4a6dd-122">Если <xref:System.Text.UTF32Encoding> экземпляр настраивается для предоставления Спецификации, его можно получить, вызвав <xref:System.Text.UTF32Encoding.GetPreamble%2A> метода; в противном случае метод возвращает пустой массив.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-122">If the <xref:System.Text.UTF32Encoding> instance is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="4a6dd-123">Обратите внимание, что, даже если <xref:System.Text.UTF32Encoding> объект настроен для поддержки Спецификации, необходимо включить метки порядка БАЙТОВ в начале потока закодированных байтов в виде соответствующих; методов кодирования из <xref:System.Text.UTF32Encoding> класс делают это автоматически.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-123">Note that, even if a <xref:System.Text.UTF32Encoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UTF32Encoding> class do not do this automatically.</span></span>  

> [!CAUTION]  
> <span data-ttu-id="4a6dd-124">Чтобы включить обнаружение ошибок и повышения уровня защищенности экземпляра класса, следует создавать экземпляр <xref:System.Text.UTF32Encoding> путем вызова метода <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> конструктор и параметр его `throwOnInvalidBytes` аргумент `true`.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-124">To enable error detection and to make the class instance more secure, you should instantiate a <xref:System.Text.UTF32Encoding> object by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span> <span data-ttu-id="4a6dd-125">Обнаружения ошибок, вызывает метод, который обнаруживает недопустимую последовательность символов или байтов <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-125">With error detection, a method that detects an invalid sequence of characters or bytes throws an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="4a6dd-126">Без обнаружения ошибки исключение не создается, и Недопустимая последовательность обычно игнорируется.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-126">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
 <span data-ttu-id="4a6dd-127">Можно создать экземпляр <xref:System.Text.UTF32Encoding> объекта несколькими способами, в зависимости от того, нужно ли выполнять его для предоставления метку порядка байтов (BOM), нужно ли кодирование с прямым или обратным порядком байтов и того, требуется ли включить функцию обнаружения ошибок.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-127">You can instantiate a <xref:System.Text.UTF32Encoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM), whether you want big-endian or little-endian encoding, and whether you want to enable error detection.</span></span> <span data-ttu-id="4a6dd-128">В следующей таблице перечислены <xref:System.Text.UTF32Encoding> конструкторы и <xref:System.Text.Encoding> свойства, которые возвращают <xref:System.Text.UnicodeEncoding> объекта.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-128">The following table lists the <xref:System.Text.UTF32Encoding> constructors and the <xref:System.Text.Encoding> properties that return a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
|<span data-ttu-id="4a6dd-129">Член</span><span class="sxs-lookup"><span data-stu-id="4a6dd-129">Member</span></span>|<span data-ttu-id="4a6dd-130">Порядок байтов</span><span class="sxs-lookup"><span data-stu-id="4a6dd-130">Endianness</span></span>|<span data-ttu-id="4a6dd-131">СПЕЦИФИКАЦИИ</span><span class="sxs-lookup"><span data-stu-id="4a6dd-131">BOM</span></span>|<span data-ttu-id="4a6dd-132">Обнаружение ошибок</span><span class="sxs-lookup"><span data-stu-id="4a6dd-132">Error detection</span></span>|  
|------------|----------------|---------|---------------------|  
|<xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>|<span data-ttu-id="4a6dd-133">С прямым порядком байтов</span><span class="sxs-lookup"><span data-stu-id="4a6dd-133">Little-endian</span></span>|<span data-ttu-id="4a6dd-134">Да</span><span class="sxs-lookup"><span data-stu-id="4a6dd-134">Yes</span></span>|<span data-ttu-id="4a6dd-135">Нет (стратегия замены)</span><span class="sxs-lookup"><span data-stu-id="4a6dd-135">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="4a6dd-136">С прямым порядком байтов</span><span class="sxs-lookup"><span data-stu-id="4a6dd-136">Little-endian</span></span>|<span data-ttu-id="4a6dd-137">Да</span><span class="sxs-lookup"><span data-stu-id="4a6dd-137">Yes</span></span>|<span data-ttu-id="4a6dd-138">Нет (стратегия замены)</span><span class="sxs-lookup"><span data-stu-id="4a6dd-138">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="4a6dd-139">Возможность настройки</span><span class="sxs-lookup"><span data-stu-id="4a6dd-139">Configurable</span></span>|<span data-ttu-id="4a6dd-140">Возможность настройки</span><span class="sxs-lookup"><span data-stu-id="4a6dd-140">Configurable</span></span>|<span data-ttu-id="4a6dd-141">Нет (стратегия замены)</span><span class="sxs-lookup"><span data-stu-id="4a6dd-141">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="4a6dd-142">Возможность настройки</span><span class="sxs-lookup"><span data-stu-id="4a6dd-142">Configurable</span></span>|<span data-ttu-id="4a6dd-143">Возможность настройки</span><span class="sxs-lookup"><span data-stu-id="4a6dd-143">Configurable</span></span>|<span data-ttu-id="4a6dd-144">Возможность настройки</span><span class="sxs-lookup"><span data-stu-id="4a6dd-144">Configurable</span></span>|  
  
 <span data-ttu-id="4a6dd-145"><xref:System.Text.UTF32Encoding.GetByteCount%2A> Метод определяет, сколько байтов привести кодировании набора символов Юникода и <xref:System.Text.UTF32Encoding.GetBytes%2A> метод выполняет фактическое кодирование.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-145">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UTF32Encoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="4a6dd-146">Аналогичным образом <xref:System.Text.UTF32Encoding.GetCharCount%2A> метод определяет, сколько символов привести декодировании последовательности байтов и <xref:System.Text.UTF32Encoding.GetChars%2A> и <xref:System.Text.UTF32Encoding.GetString%2A> методы выполняют фактическое декодирование.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-146">Likewise, the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UTF32Encoding.GetChars%2A> and <xref:System.Text.UTF32Encoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="4a6dd-147">Для кодировщика или декодера, которое сможет сохранить сведения о состоянии для кодирования или декодирования данных, охватывающих несколько блоков (например, строка 1 миллиона символов, кодируется в сегментах 100 000 символов), используйте <xref:System.Text.UTF32Encoding.GetEncoder%2A> и <xref:System.Text.UTF32Encoding.GetDecoder%2A> свойства, соответственно.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-147">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UTF32Encoding.GetEncoder%2A> and <xref:System.Text.UTF32Encoding.GetDecoder%2A> properties, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a6dd-148">В следующем примере показано поведение <xref:System.Text.UTF32Encoding> объекты с и без обнаружение ошибок включено.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-148">The following example demonstrates the behavior of <xref:System.Text.UTF32Encoding> objects with and without error detection enabled.</span></span> <span data-ttu-id="4a6dd-149">Он создает массив байтов, в которых последние четыре байта представляют недопустимую суррогатную пару; старшим символом-заместителем U + D8FF сопровождается U + 01FF, который находится вне диапазона от низкой суррогаты (0xDC00 до 0xDFFF).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-149">It creates a byte array whose last four bytes represent an invalid surrogate pair; the high surrogate U+D8FF is followed by an U+01FF, which is outside the range of low surrogates (0xDC00 through 0xDFFF).</span></span> <span data-ttu-id="4a6dd-150">Без обнаружения ошибки декодер UTF32 использует резервную стратегию замены для замены недопустимую суррогатную пару замещающим символом (U + FFFD).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-150">Without error detection, the UTF32 decoder uses replacement fallback to replace the invalid surrogate pair with REPLACEMENT CHARACTER (U+FFFD).</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/VB/ErrorDetection.vb#1)]  
  
 <span data-ttu-id="4a6dd-151">В следующем примере кодируется в строку символов Юникода в массив байтов с помощью <xref:System.Text.UTF32Encoding> объекта.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-151">The following example encodes a string of Unicode characters into a byte array by using a <xref:System.Text.UTF32Encoding> object.</span></span> <span data-ttu-id="4a6dd-152">Массив байтов расшифровывается, затем, в строку, чтобы показать, что без потери данных.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-152">The byte array is then decoded into a string to demonstrate that there is no loss of data.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.class/cs/snippet.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.class/vb/snippet.vb#1)]  
  
 <span data-ttu-id="4a6dd-153">В следующем примере та же строка на предыдущий, за исключением того, что она записывает закодированных байтов в файл и добавляет в поток байтов с метку порядка байтов (BOM).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-153">The following example uses the same string as the previous one, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="4a6dd-154">Затем он считывает из файла двумя разными способами: как текстовый файл с помощью <xref:System.IO.StreamReader> объекта; и как двоичный файл.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-154">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="4a6dd-155">Как и следовало ожидать, ни одна из строк вновь чтения включает в себя метки порядка БАЙТОВ.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-155">As you would expect, neither newly-read string includes the BOM.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.class/cs/bom1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.class/vb/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Encoding" />
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.UTF8Encoding" />
    <altmember cref="T:System.Text.ASCIIEncoding" />
    <altmember cref="T:System.Text.UnicodeEncoding" />
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="T:System.Globalization.CharUnicodeInfo" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="4a6dd-156">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="4a6dd-156">Understanding Encodings</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a6dd-157">Инициализирует новый экземпляр класса <see cref="T:System.Text.UTF32Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-157">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a6dd-158">Инициализирует новый экземпляр класса <see cref="T:System.Text.UTF32Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-158">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-159">Этот конструктор создает экземпляр, который использует прямой порядок байтов, предоставляет метку порядка байтов Юникода и не выдает исключение при обнаружении недопустимой кодировки.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-159">This constructor creates an instance that uses the little endian byte order, provides a Unicode byte order mark, and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4a6dd-160">По соображениям безопасности следует включить обнаружение ошибок путем вызова <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> конструктор и установив его `throwOnInvalidCharacters` аргумент `true`.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-160">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a6dd-161">Следующий пример извлекает и отображает порядок байтов пометить для разных <xref:System.Text.UTF32Encoding> экземпляров.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-161">The following example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding (bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding(bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF32Encoding : bool * bool -&gt; System.Text.UTF32Encoding" Usage="new System.Text.UTF32Encoding (bigEndian, byteOrderMark)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian"><span data-ttu-id="4a6dd-162">Значение <see langword="true" /> соответствует использованию обратного порядка байтов (самый старший байт располагается на первом месте); значение <see langword="false" /> соответствует использованию прямого порядка байтов (на первом месте находится самый младший байт).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-162"><see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span></span></param>
        <param name="byteOrderMark"><span data-ttu-id="4a6dd-163">Значение <see langword="true" /> указывает, что предоставляется метка порядка байтов Юникода; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-163"><see langword="true" /> to specify that a Unicode byte order mark is provided; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4a6dd-164">Инициализирует новый экземпляр класса <see cref="T:System.Text.UTF32Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-164">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span></span> <span data-ttu-id="4a6dd-165">Параметры указывают, следует ли использовать обратный порядок байтов и возвращает ли метод <see cref="M:System.Text.UTF32Encoding.GetPreamble" /> метку порядка байтов Юникода.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-165">Parameters specify whether to use the big endian byte order and whether the <see cref="M:System.Text.UTF32Encoding.GetPreamble" /> method returns a Unicode byte order mark.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-166">Этот конструктор создает экземпляр, который не выдает исключение при обнаружении недопустимой кодировки.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-166">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4a6dd-167">По соображениям безопасности следует включить обнаружение ошибок путем вызова <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> конструктор и установив его `throwOnInvalidCharacters` аргумент `true`.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-167">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>  
  
## Examples  
 <span data-ttu-id="4a6dd-168">Следующий пример извлекает и отображает порядок байтов пометить для разных <xref:System.Text.UTF32Encoding> экземпляров.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-168">The following example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding (bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean, throwOnInvalidCharacters As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding(bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF32Encoding : bool * bool * bool -&gt; System.Text.UTF32Encoding" Usage="new System.Text.UTF32Encoding (bigEndian, byteOrderMark, throwOnInvalidCharacters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidCharacters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian"><span data-ttu-id="4a6dd-169">Значение <see langword="true" /> соответствует использованию обратного порядка байтов (самый старший байт располагается на первом месте); значение <see langword="false" /> соответствует использованию прямого порядка байтов (на первом месте находится самый младший байт).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-169"><see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span></span></param>
        <param name="byteOrderMark"><span data-ttu-id="4a6dd-170">Значение <see langword="true" /> указывает, что предоставляется метка порядка байтов Юникода; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-170"><see langword="true" /> to specify that a Unicode byte order mark is provided; otherwise, <see langword="false" />.</span></span></param>
        <param name="throwOnInvalidCharacters"><span data-ttu-id="4a6dd-171"><see langword="true" />, чтобы указать, что следует выдавать исключение при обнаружении недопустимой кодировки; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-171"><see langword="true" /> to specify that an exception should be thrown when an invalid encoding is detected; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4a6dd-172">Инициализирует новый экземпляр класса <see cref="T:System.Text.UTF32Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-172">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span></span> <span data-ttu-id="4a6dd-173">Параметры указывают, следует ли использовать обратный порядок байтов, должна ли предоставляться метка порядка байтов Юникода и следует ли создавать исключение при обнаружении недопустимой кодировки.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-173">Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-174">Если `throwOnInvalidCharacters` — `true`, вызывает метод, который обнаруживает недопустимые последовательности байтов <xref:System.ArgumentException?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-174">If `throwOnInvalidCharacters` is `true`, a method that detects an invalid byte sequence throws <xref:System.ArgumentException?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a6dd-175">В противном случае этот метод создает исключение, и недопустимую последовательность учитывается.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-175">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4a6dd-176">По соображениям безопасности следует включить обнаружение ошибок путем вызова <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> конструктор и установив его `throwOnInvalidCharacters` аргумент `true`.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-176">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>
  
## Examples  
 <span data-ttu-id="4a6dd-177">В следующем примере показано поведение <xref:System.Text.UTF32Encoding>, как с помощью обнаружение ошибок включено, так и без.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-177">The following example demonstrates the behavior of <xref:System.Text.UTF32Encoding>, both with error detection enabled and without.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/VB/ErrorDetection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uTF32Encoding.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a6dd-178">Объект <see cref="T:System.Object" />, который требуется сравнить с текущим объектом.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-178">The <see cref="T:System.Object" /> to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="4a6dd-179">Определяет, равен ли заданный объект <see cref="T:System.Object" /> текущему объекту <see cref="T:System.Text.UTF32Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-179">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Text.UTF32Encoding" /> object.</span></span></summary>
        <returns><span data-ttu-id="4a6dd-180">Значение <see langword="true" />, если <paramref name="value" /> является экземпляром класса <see cref="T:System.Text.UTF32Encoding" /> и равен текущему объекту; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-180"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF32Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-181">Два <xref:System.Text.UTF32Encoding> объекты считаются равными, если выполняются все следующие условия:</span><span class="sxs-lookup"><span data-stu-id="4a6dd-181">Two <xref:System.Text.UTF32Encoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="4a6dd-182">Оба объекта используют одинаковый порядок следования байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-182">Both objects use the same byte order.</span></span>  
  
-   <span data-ttu-id="4a6dd-183">Оба объекта укажите отметки порядка байтов или оба — нет.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-183">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="4a6dd-184">Оба объекта используют же резерв кодировщика.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-184">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="4a6dd-185">Оба объекта используют же резерва декодера.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-185">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a6dd-186">В следующем примере создается <xref:System.Text.UTF32Encoding> объектов с помощью разных параметров значения, а затем проверяет их на предмет равенства.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-186">The following example creates <xref:System.Text.UTF32Encoding> objects using different parameter values and then checks them for equality.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a6dd-187">Подсчитывает количество байтов, полученных при кодировании набора символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-187">Calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="uTF32Encoding.GetByteCount s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4a6dd-188">Объект <see cref="T:System.String" />, содержащий кодируемый набор символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-188">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="4a6dd-189">Вычисляет количество байтов, полученных при кодировании символов в заданном объекте <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-189">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="4a6dd-190">Число байтов, полученных при кодировании заданных символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-190">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-191">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF32Encoding.GetBytes%2A> для сохранения полученных байтов, можно вызвать <xref:System.Text.UTF32Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-191">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4a6dd-192">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-192">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4a6dd-193"><xref:System.Text.UTF32Encoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-193">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a6dd-194">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-194">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a6dd-195">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-195">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4a6dd-196">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно добавить префикс поток закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-196">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4a6dd-197">Вставка приставку в начале потока байтов (такие как в начале последовательность байтов, записываемых в файл) — это разработчик, и число байтов в преамбула не отражаются в значение, возвращаемое <xref:System.Text.UTF32Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-197">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a6dd-198">В следующем примере вызывается <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> и <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> методы для вычисления фактического и максимального числа байтов, необходимых для кодирования строки.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-198">The following example calls the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> and <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="4a6dd-199">Она также отображает фактическое число байтов, необходимое для хранения потока данных с метки порядка байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-199">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.Utf32Encoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.Utf32Encoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a6dd-200"><paramref name="s" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-200"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a6dd-201">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-201">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a6dd-202">Обнаружение ошибок включено, и <paramref name="s" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-202">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="4a6dd-203">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-203">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="4a6dd-204">- и -</span><span class="sxs-lookup"><span data-stu-id="4a6dd-204">-and-</span></span> 
 <span data-ttu-id="4a6dd-205">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-205"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF32Encoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="4a6dd-206">Указатель на первый кодируемый символ.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-206">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="4a6dd-207">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-207">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="4a6dd-208">Вычисляет число байтов, полученных при кодировании набора символов начиная с заданного указателя символа.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-208">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="4a6dd-209">Число байтов, полученных при кодировании заданных символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-209">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-210">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF32Encoding.GetBytes%2A> для сохранения полученных байтов, можно вызвать <xref:System.Text.UTF32Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-210">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4a6dd-211">Чтобы вычислить максимальный размер массива, необходимо вызвать <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-211">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="4a6dd-212"><xref:System.Text.UTF32Encoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-212">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a6dd-213">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-213">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a6dd-214">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-214">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4a6dd-215">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются как файл или поток, можно добавить префикс поток закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-215">To ensure that the encoded bytes are decoded properly when they are saved as a file or a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4a6dd-216">Вставка начальной части в начале потока байтов (такие как в начале последовательность байтов, записываемых в файл) — это разработчик, и число байтов в преамбула не отражаются в значение, возвращаемое <xref:System.Text.UTF32Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-216">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a6dd-217"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-217"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a6dd-218">Значение параметра <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-218"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="4a6dd-219">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-219">-or-</span></span> 
<span data-ttu-id="4a6dd-220">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-220">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a6dd-221">Обнаружение ошибок включено, и <paramref name="chars" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-221">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="4a6dd-222">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-222">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="4a6dd-223">- и -</span><span class="sxs-lookup"><span data-stu-id="4a6dd-223">-and-</span></span> 
 <span data-ttu-id="4a6dd-224">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-224"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="4a6dd-225">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-225">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="4a6dd-226">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-226">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="uTF32Encoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="4a6dd-227">Массив символов, содержащий набор кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-227">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="4a6dd-228">Индекс первого кодируемого символа.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-228">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="4a6dd-229">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-229">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="4a6dd-230">Вычисляет число байтов, полученных при кодировании набора символов из указанного массива символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-230">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span></summary>
        <returns><span data-ttu-id="4a6dd-231">Число байтов, полученных при кодировании заданных символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-231">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-232">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF32Encoding.GetBytes%2A> для сохранения полученных байтов, можно вызвать <xref:System.Text.UTF32Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-232">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4a6dd-233">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-233">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4a6dd-234"><xref:System.Text.UTF32Encoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-234">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a6dd-235">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-235">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a6dd-236">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-236">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4a6dd-237">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются как файл или поток, можно добавить префикс поток закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-237">To ensure that the encoded bytes are decoded properly when they are saved as a file or a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4a6dd-238">Вставка начальной части в начале потока байтов (такие как в начале последовательность байтов, записываемых в файл) — это разработчик, и число байтов в преамбула не отражаются в значение, возвращаемое <xref:System.Text.UTF32Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-238">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a6dd-239">Следующий пример заполняет массив, содержащий Latin прописные и строчные буквы и вызовы <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> метод для определения числа байтов, необходимых для кодирования латинских символов нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-239">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="4a6dd-240">Затем отображается эту информацию, а также общее число байтов, которые требуются при добавлении метки порядка байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-240">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="4a6dd-241">Он сравнивает это число с помощью значения, возвращенного <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> метод, который указывает максимальное число байтов, необходимое для кодирования латинских символов нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-241">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="4a6dd-242">Следующий пример заполняет массив с сочетания символов греческий и кириллица и вызовы <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> метод для определения числа байтов, необходимых для кодирования символов кириллицы.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-242">The following example populates an array with a combination of Greek and Cyrillic characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Cyrillic characters.</span></span> <span data-ttu-id="4a6dd-243">Затем отображается эту информацию, а также общее число байтов, которые требуются при добавлении метки порядка байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-243">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="4a6dd-244">Он сравнивает это число с помощью значения, возвращенного <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> метода, который указывает максимальное число байтов, необходимых для кодирования символов кириллицы.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-244">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Cyrillic characters.</span></span>  
  
 [!code-csharp[System.Text.Utf32Encoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.Utf32Encoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a6dd-245"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-245"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a6dd-246">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-246"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="4a6dd-247">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-247">-or-</span></span> 
 <span data-ttu-id="4a6dd-248">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-248"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="4a6dd-249">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-249">-or-</span></span> 
<span data-ttu-id="4a6dd-250">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-250">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a6dd-251">Обнаружение ошибок включено, и <paramref name="chars" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-251">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="4a6dd-252">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-252">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="4a6dd-253">- и -</span><span class="sxs-lookup"><span data-stu-id="4a6dd-253">-and-</span></span> 
 <span data-ttu-id="4a6dd-254">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-254"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a6dd-255">Кодирует набор символов в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-255">Encodes a set of characters into a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF32Encoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="4a6dd-256">Указатель на первый кодируемый символ.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-256">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="4a6dd-257">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-257">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="4a6dd-258">Указатель на положение, с которого начинается запись результирующей последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-258">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="4a6dd-259">Максимальное число байтов для записи.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-259">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="4a6dd-260">Кодирует набор символов, начало которого задается указателем символа, в последовательность байтов, которые сохраняются начиная с заданного указателя байта.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-260">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="4a6dd-261">Фактическое число байтов, записанных в местоположение, которое задано параметром <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-261">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-262">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF32Encoding.GetBytes%2A> для сохранения полученных байтов, можно вызвать <xref:System.Text.UTF32Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-262">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4a6dd-263">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-263">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4a6dd-264"><xref:System.Text.UTF32Encoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-264">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a6dd-265">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-265">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a6dd-266">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-266">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4a6dd-267">Данные для преобразования, такие как данные, считанные из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-267">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4a6dd-268">В этом случае или если объем данных слишком велико, что необходимо разделить на небольшие блоки, приложение использует <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.UTF32Encoding.GetDecoder%2A> метод или <xref:System.Text.UTF32Encoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-268">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a6dd-269">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно добавить префикс поток закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-269">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4a6dd-270">Вставка начальной части в начале потока байтов (такие как в начале последовательность байтов, записываемых в файл) — это разработчик.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-270">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="4a6dd-271"><xref:System.Text.UTF32Encoding.GetBytes%2A> Метод не добавить в начало преамбулу последовательность закодированных байтов в начале.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-271">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a6dd-272"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-272"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4a6dd-273">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-273">-or-</span></span> 
 <span data-ttu-id="4a6dd-274"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-274"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a6dd-275">Значение параметра <paramref name="charCount" /> или <paramref name="byteCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-275"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a6dd-276">Обнаружение ошибок включено, и <paramref name="chars" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-276">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="4a6dd-277">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-277">-or-</span></span> 
 <span data-ttu-id="4a6dd-278"><paramref name="byteCount" /> меньше результирующего числа байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-278"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="4a6dd-279">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-279">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="4a6dd-280">- и -</span><span class="sxs-lookup"><span data-stu-id="4a6dd-280">-and-</span></span> 
 <span data-ttu-id="4a6dd-281">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-281"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="4a6dd-282">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-282">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="4a6dd-283">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-283">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="uTF32Encoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="4a6dd-284">Массив символов, содержащий набор кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-284">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="4a6dd-285">Индекс первого кодируемого символа.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-285">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="4a6dd-286">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-286">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="4a6dd-287">Массив байтов, в который будет помещена результирующая последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-287">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="4a6dd-288">Индекс, с которого начинается запись результирующей последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-288">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="4a6dd-289">Кодирует набор символов из заданного массива символов в указанный массив байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-289">Encodes a set of characters from the specified character array into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="4a6dd-290">Фактическое число байтов, записанных в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-290">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-291">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF32Encoding.GetBytes%2A> для сохранения полученных байтов, можно вызвать <xref:System.Text.UTF32Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-291">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4a6dd-292">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-292">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4a6dd-293"><xref:System.Text.UTF32Encoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-293">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a6dd-294">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-294">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a6dd-295">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-295">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4a6dd-296">Данные для преобразования, такие как данные, считанные из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-296">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4a6dd-297">В этом случае или если объем данных слишком велико, что необходимо разделить на небольшие блоки, приложение использует <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.UTF32Encoding.GetDecoder%2A> метод или <xref:System.Text.UTF32Encoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-297">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a6dd-298">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно добавить префикс поток закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-298">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4a6dd-299">Вставка начальной части в начале потока байтов (такие как в начале последовательность байтов, записываемых в файл) — это разработчик.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-299">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="4a6dd-300"><xref:System.Text.UTF32Encoding.GetBytes%2A> Метод не добавить в начало преамбулу последовательность закодированных байтов в начале.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-300">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>
  
## Examples  
 <span data-ttu-id="4a6dd-301">В следующем примере определяет число байтов, необходимых для кодирования трех символов из массива символов, а затем кодирует символы и отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-301">The following example determines the number of bytes required to encode three characters from a character array, then encodes the characters and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/VB/GetBytes_CharArr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a6dd-302"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-302"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4a6dd-303">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-303">-or-</span></span> 
 <span data-ttu-id="4a6dd-304"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-304"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a6dd-305">Значение параметра <paramref name="charIndex" />, <paramref name="charCount" /> или <paramref name="byteIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-305"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="4a6dd-306">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-306">-or-</span></span> 
 <span data-ttu-id="4a6dd-307">Параметры <paramref name="charIndex" /> и <paramref name="charCount" /> не указывают допустимый диапазон в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-307"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="4a6dd-308">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-308">-or-</span></span> 
 <span data-ttu-id="4a6dd-309">Значение параметра <paramref name="byteIndex" /> не является допустимым индексом в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-309"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a6dd-310">Обнаружение ошибок включено, и <paramref name="chars" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-310">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="4a6dd-311">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-311">-or-</span></span> 
 <span data-ttu-id="4a6dd-312">Недостаточно емкости <paramref name="bytes" /> от <paramref name="byteIndex" /> до конца массива для размещения полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-312"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="4a6dd-313">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-313">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="4a6dd-314">- и -</span><span class="sxs-lookup"><span data-stu-id="4a6dd-314">-and-</span></span> 
 <span data-ttu-id="4a6dd-315">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-315"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="uTF32Encoding.GetBytes (s, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4a6dd-316">Объект <see cref="T:System.String" />, содержащий кодируемый набор символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-316">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="4a6dd-317">Индекс первого кодируемого символа.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-317">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="4a6dd-318">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-318">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="4a6dd-319">Массив байтов, в который будет помещена результирующая последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-319">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="4a6dd-320">Индекс, с которого начинается запись результирующей последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-320">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="4a6dd-321">Кодирует набор символов из заданного объекта <see cref="T:System.String" /> в указанный массив байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-321">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="4a6dd-322">Фактическое число байтов, записанных в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-322">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-323">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF32Encoding.GetBytes%2A> для сохранения полученных байтов, можно вызвать <xref:System.Text.UTF32Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-323">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4a6dd-324">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-324">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4a6dd-325"><xref:System.Text.UTF32Encoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-325">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a6dd-326">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-326">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a6dd-327">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-327">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4a6dd-328">Данные для преобразования, такие как данные, считанные из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-328">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4a6dd-329">В этом случае или если объем данных слишком велико, что необходимо разделить на небольшие блоки, приложение использует <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.UTF32Encoding.GetDecoder%2A> метод или <xref:System.Text.UTF32Encoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-329">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a6dd-330">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно добавить префикс поток закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-330">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4a6dd-331">Вставка начальной части в начале потока байтов (такие как в начале последовательность байтов, записываемых в файл) — это разработчик.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-331">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="4a6dd-332"><xref:System.Text.UTF32Encoding.GetBytes%2A> Метод не добавить в начало преамбулу последовательность закодированных байтов в начале.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-332">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>
  
## Examples  
 <span data-ttu-id="4a6dd-333">В следующем примере определяет число байтов, необходимых для кодирования строк, а затем кодирует строку и выводит полученные байты.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-333">The following example determines the number of bytes required to encode a string, then encodes the string and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/VB/GetBytes_String.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a6dd-334"><paramref name="s" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-334"><paramref name="s" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4a6dd-335">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-335">-or-</span></span> 
 <span data-ttu-id="4a6dd-336"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-336"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a6dd-337">Значение параметра <paramref name="charIndex" />, <paramref name="charCount" /> или <paramref name="byteIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-337"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="4a6dd-338">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-338">-or-</span></span> 
 <span data-ttu-id="4a6dd-339">Параметры <paramref name="charIndex" /> и <paramref name="charCount" /> не указывают допустимый диапазон в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-339"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="4a6dd-340">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-340">-or-</span></span> 
 <span data-ttu-id="4a6dd-341">Значение параметра <paramref name="byteIndex" /> не является допустимым индексом в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-341"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a6dd-342">Обнаружение ошибок включено, и <paramref name="s" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-342">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="4a6dd-343">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-343">-or-</span></span> 
 <span data-ttu-id="4a6dd-344">Недостаточно емкости <paramref name="bytes" /> от <paramref name="byteIndex" /> до конца массива для размещения полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-344"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="4a6dd-345">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-345">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="4a6dd-346">- и -</span><span class="sxs-lookup"><span data-stu-id="4a6dd-346">-and-</span></span> 
 <span data-ttu-id="4a6dd-347">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-347"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a6dd-348">Вычисляет количество символов, полученных при декодировании последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-348">Calculates the number of characters produced by decoding a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF32Encoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="4a6dd-349">Указатель на первый декодируемый байт.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-349">A pointer to the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="4a6dd-350">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-350">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="4a6dd-351">Вычисляет количество символов, полученных при декодировании последовательности байтов начиная с заданного указателя байта.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-351">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="4a6dd-352">Число символов, полученных при декодировании заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-352">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-353"><xref:System.Text.UTF32Encoding.GetCharCount%2A> вычисляет размер точное массива, необходимого <xref:System.Text.UTF32Encoding.GetChars%2A> для сохранения полученных символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-353"><xref:System.Text.UTF32Encoding.GetCharCount%2A> calculates the exact array size required by the <xref:System.Text.UTF32Encoding.GetChars%2A> method to store the resulting characters.</span></span> <span data-ttu-id="4a6dd-354">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-354">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="4a6dd-355"><xref:System.Text.UTF32Encoding.GetCharCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-355">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a6dd-356">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-356">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a6dd-357">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-357">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a6dd-358"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-358"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a6dd-359">Значение параметра <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-359"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="4a6dd-360">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-360">-or-</span></span> 
<span data-ttu-id="4a6dd-361">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-361">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a6dd-362">Обнаружение ошибок включено, и параметр <paramref name="bytes" /> содержит недопустимую последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-362">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="4a6dd-363">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-363">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="4a6dd-364">- и -</span><span class="sxs-lookup"><span data-stu-id="4a6dd-364">-and-</span></span> 
 <span data-ttu-id="4a6dd-365">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-365"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="4a6dd-366">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-366">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="4a6dd-367">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-367">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Text.UTF32Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="uTF32Encoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="4a6dd-368">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-368">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="4a6dd-369">Индекс первого декодируемого байта.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-369">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="4a6dd-370">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-370">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="4a6dd-371">Вычисляет количество символов, полученных при декодировании последовательности байтов из заданного массива байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-371">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="4a6dd-372">Число символов, полученных при декодировании заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-372">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-373"><xref:System.Text.UTF32Encoding.GetCharCount%2A> Метод вычисляет размер точное массива, необходимого <xref:System.Text.UTF32Encoding.GetChars%2A> для сохранения полученных символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-373">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method calculates the exact array size required by the <xref:System.Text.UTF32Encoding.GetChars%2A> method to store the resulting characters.</span></span> <span data-ttu-id="4a6dd-374">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-374">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="4a6dd-375"><xref:System.Text.UTF32Encoding.GetCharCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-375">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a6dd-376">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-376">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a6dd-377">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-377">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a6dd-378">В следующем примере строка кодируется в массив байтов и затем декодирует байты в массив символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-378">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a6dd-379"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-379"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a6dd-380">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-380"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="4a6dd-381">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-381">-or-</span></span> 
 <span data-ttu-id="4a6dd-382">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-382"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="4a6dd-383">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-383">-or-</span></span> 
<span data-ttu-id="4a6dd-384">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-384">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a6dd-385">Обнаружение ошибок включено, и параметр <paramref name="bytes" /> содержит недопустимую последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-385">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="4a6dd-386">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-386">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="4a6dd-387">- и -</span><span class="sxs-lookup"><span data-stu-id="4a6dd-387">-and-</span></span> 
 <span data-ttu-id="4a6dd-388">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-388"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.UTF32Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a6dd-389">Декодирует последовательность байтов в набор символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-389">Decodes a sequence of bytes into a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF32Encoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="4a6dd-390">Указатель на первый декодируемый байт.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-390">A pointer to the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="4a6dd-391">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-391">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="4a6dd-392">Указатель на положение, с которого начинается запись результирующего набора символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-392">A pointer to the location at which to start writing the resulting set of characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="4a6dd-393">Наибольшее количество символов для записи.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-393">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="4a6dd-394">Декодирует последовательность байтов, начало которой задается указателем байта, в набор символов, которые сохраняются начиная с заданного указателя символа.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-394">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="4a6dd-395">Фактическое число символов, записанных в местоположение, указанное с помощью параметра <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-395">The actual number of characters written at the location indicated by <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-396">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF32Encoding.GetChars%2A> для сохранения полученных символов, вызвать <xref:System.Text.UTF32Encoding.GetCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-396">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="4a6dd-397">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-397">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="4a6dd-398"><xref:System.Text.UTF32Encoding.GetCharCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-398">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a6dd-399">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-399">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a6dd-400">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-400">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4a6dd-401">Если массив байтов был возвращен методом виду типа без метки порядка БАЙТОВ диапазон байтов для декодирования включает отметки порядка байтов (BOM), знак U + FFFE включается в массив символов, возвращаемый этим методом.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-401">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="4a6dd-402">Его можно удалить, вызвав <xref:System.String.TrimStart%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-402">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4a6dd-403">Данные для преобразования, такие как данные, считанные из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-403">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4a6dd-404">В этом случае или если объем данных слишком велико, что необходимо разделить на небольшие блоки, приложение использует <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.UTF32Encoding.GetDecoder%2A> метод или <xref:System.Text.UTF32Encoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-404">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a6dd-405"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-405"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4a6dd-406">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-406">-or-</span></span> 
 <span data-ttu-id="4a6dd-407"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-407"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a6dd-408">Значение параметра <paramref name="byteCount" /> или <paramref name="charCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-408"><paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a6dd-409">Обнаружение ошибок включено, и параметр <paramref name="bytes" /> содержит недопустимую последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-409">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
<span data-ttu-id="4a6dd-410">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-410">-or-</span></span> 
 <span data-ttu-id="4a6dd-411"><paramref name="charCount" /> меньше результирующего числа символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-411"><paramref name="charCount" /> is less than the resulting number of characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="4a6dd-412">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-412">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="4a6dd-413">- и -</span><span class="sxs-lookup"><span data-stu-id="4a6dd-413">-and-</span></span> 
 <span data-ttu-id="4a6dd-414">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-414"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="4a6dd-415">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-415">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="4a6dd-416">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-416">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="uTF32Encoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="4a6dd-417">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-417">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="4a6dd-418">Индекс первого декодируемого байта.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-418">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="4a6dd-419">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-419">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="4a6dd-420">Массив символов, в который будет помещен результирующий набор символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-420">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="4a6dd-421">Индекс, с которого начинается запись результирующего набора символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-421">The index at which to start writing the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="4a6dd-422">Декодирует последовательность байтов из заданного массива байтов в указанный массив символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-422">Decodes a sequence of bytes from the specified byte array into the specified character array.</span></span></summary>
        <returns><span data-ttu-id="4a6dd-423">Фактическое число символов, записанных в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-423">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-424">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF32Encoding.GetChars%2A> для сохранения полученных символов, вызвать <xref:System.Text.UTF32Encoding.GetCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-424">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="4a6dd-425">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-425">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="4a6dd-426"><xref:System.Text.UTF32Encoding.GetCharCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-426">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a6dd-427">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-427">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a6dd-428">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-428">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4a6dd-429">Если массив байтов был возвращен методом виду типа без метки порядка БАЙТОВ диапазон байтов для декодирования включает отметки порядка байтов (BOM), знак U + FFFE включается в массив символов, возвращаемый этим методом.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-429">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="4a6dd-430">Его можно удалить, вызвав <xref:System.String.TrimStart%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-430">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4a6dd-431">Данные для преобразования, такие как данные, считанные из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-431">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4a6dd-432">В этом случае или если объем данных слишком велико, что необходимо разделить на небольшие блоки, приложение использует <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.UTF32Encoding.GetDecoder%2A> метод или <xref:System.Text.UTF32Encoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-432">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a6dd-433">В следующем примере строка кодируется в массив байтов и затем декодирует байты в массив символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-433">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a6dd-434"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-434"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4a6dd-435">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-435">-or-</span></span> 
 <span data-ttu-id="4a6dd-436"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-436"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a6dd-437">Значение параметра <paramref name="byteIndex" />, <paramref name="byteCount" /> или <paramref name="charIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-437"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="4a6dd-438">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-438">-or-</span></span> 
 <span data-ttu-id="4a6dd-439">Параметры <paramref name="byteindex" /> и <paramref name="byteCount" /> не указывают допустимый диапазон в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-439"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="4a6dd-440">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-440">-or-</span></span> 
 <span data-ttu-id="4a6dd-441">Значение параметра <paramref name="charIndex" /> не является допустимым индексом в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-441"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a6dd-442">Обнаружение ошибок включено, и параметр <paramref name="bytes" /> содержит недопустимую последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-442">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
<span data-ttu-id="4a6dd-443">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-443">-or-</span></span> 
 <span data-ttu-id="4a6dd-444">Недостаточно емкости <paramref name="chars" /> от <paramref name="charIndex" /> до конца массива для размещения полученных символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-444"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="4a6dd-445">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-445">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="4a6dd-446">- и -</span><span class="sxs-lookup"><span data-stu-id="4a6dd-446">-and-</span></span> 
 <span data-ttu-id="4a6dd-447">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-447"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="uTF32Encoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a6dd-448">Получает средство декодирования, преобразующее последовательность байтов в кодировке UTF-32 в последовательность символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-448">Obtains a decoder that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.</span></span></summary>
        <returns><span data-ttu-id="4a6dd-449">Объект <see cref="T:System.Text.Decoder" />, преобразующий последовательность байтов в кодировке UTF-32 в последовательность символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-449">A <see cref="T:System.Text.Decoder" /> that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-450"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> Метод преобразует последовательные блоки байтов в последовательные блоки символов в так же, как <xref:System.Text.UTF32Encoding.GetChars%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-450">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UTF32Encoding.GetChars%2A> method.</span></span> <span data-ttu-id="4a6dd-451">Тем не менее <xref:System.Text.Decoder> хранит сведения о состоянии между вызовами, что позволяет ему правильно декодировать последовательность байтов, охватывающие блоки.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-451">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="4a6dd-452"><xref:System.Text.Decoder> Также сохраняет конечные байты в конце блоки данных и использует конечные байты при следующей операции декодирования.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-452">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="4a6dd-453">Таким образом <xref:System.Text.UTF32Encoding.GetDecoder%2A> и <xref:System.Text.UTF32Encoding.GetEncoder%2A> полезны для передачи по сети и операции с файлами, так как эти операции часто работают с блоками данных вместо поток полного набора данных.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-453">Therefore, <xref:System.Text.UTF32Encoding.GetDecoder%2A> and <xref:System.Text.UTF32Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="4a6dd-454">Если обнаружение ошибок включено, то есть `throwOnInvalidCharacters` конструктора имеет значение `true`, обнаружение ошибок также включено в <xref:System.Text.Decoder> возвращаемого этим методом.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-454">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor was set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="4a6dd-455">Если включена функция обнаружения ошибок и недопустимую последовательность, состояние декодера не определено, и обработка должна прерываться.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-455">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a6dd-456">Следующий пример использует кодировщик и декодер для кодирования строки в массив байтов и затем декодировать байты в массив символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-456">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/VB/EncDec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="4a6dd-457">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="4a6dd-457">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="uTF32Encoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a6dd-458">Получает средство кодирования, преобразующее последовательность символов Юникода в последовательность байтов в кодировке UTF-32.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-458">Obtains an encoder that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="4a6dd-459">Объект <see cref="T:System.Text.Encoder" />, преобразующий последовательность символов Юникода в последовательность байтов в кодировке UTF-32.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-459">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-460"><xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> Метод преобразует последовательные блоки символов в последовательные блоки байтов в так же, как <xref:System.Text.UTF32Encoding.GetBytes%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-460">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.UTF32Encoding.GetBytes%2A> method.</span></span> <span data-ttu-id="4a6dd-461">Тем не менее <xref:System.Text.Encoder> хранит сведения о состоянии между вызовами, что позволяет правильно кодировать последовательности символов, охватывающие блоки.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-461">However, a <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="4a6dd-462"><xref:System.Text.Encoder> Также сохраняет замыкающие символы в конце блоки данных и использует замыкающие символы при выполнении следующей операции кодирования.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-462">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="4a6dd-463">Например блок данных может заканчиваться непарные старшим и сопоставления младшим символом-заместителем может быть в следующем блоке данных.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-463">For example, a data block might end with an unmatched high-surrogate, and the matching low-surrogate might be in the next data block.</span></span> <span data-ttu-id="4a6dd-464">Таким образом <xref:System.Text.UTF32Encoding.GetDecoder%2A> и <xref:System.Text.UTF32Encoding.GetEncoder%2A> полезны для передачи по сети и операции с файлами, так как эти операции часто работают с блоками данных вместо поток полного набора данных.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-464">Therefore, <xref:System.Text.UTF32Encoding.GetDecoder%2A> and <xref:System.Text.UTF32Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="4a6dd-465">Если обнаружение ошибок включено, то есть `throwOnInvalidCharacters` конструктора имеет значение `true`, обнаружение ошибок также включено в <xref:System.Text.Encoder> возвращаемого этим методом.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-465">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor was set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> returned by this method.</span></span> <span data-ttu-id="4a6dd-466">Если включена функция обнаружения ошибок и недопустимую последовательность, состояние кодировщика является неопределенным и обработка должна прерываться.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-466">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a6dd-467">Следующий пример использует кодировщик и декодер для кодирования строки в массив байтов и затем декодировать байты в массив символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-467">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/VB/EncDec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="4a6dd-468">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="4a6dd-468">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uTF32Encoding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a6dd-469">Возвращает хэш-код текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-469">Returns the hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="4a6dd-470">Хэш-код для текущего объекта <see cref="T:System.Text.UTF32Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-470">The hash code for the current <see cref="T:System.Text.UTF32Encoding" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="uTF32Encoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount"><span data-ttu-id="4a6dd-471">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-471">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="4a6dd-472">Вычисляет максимальное количество байтов, полученных при кодировании заданного числа символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-472">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="4a6dd-473">Максимальное количество байтов, полученных при кодировании заданного количества символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-473">The maximum number of bytes produced by encoding the specified number of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-474">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF32Encoding.GetBytes%2A> для сохранения полученных байтов, можно вызвать <xref:System.Text.UTF32Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-474">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4a6dd-475">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-475">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4a6dd-476"><xref:System.Text.UTF32Encoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-476">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a6dd-477"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> — Это худший номер, включая худшем случае для выбранного в данный момент <xref:System.Text.EncoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-477"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="4a6dd-478">Если вы выбрали переход на резервный ресурс со строкой потенциально большого объема, <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> может возвращать большие значения.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-478">If a fallback is chosen with a potentially large string,  <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="4a6dd-479">В большинстве случаев этот метод возвращает адекватные числа для коротких строк.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-479">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="4a6dd-480">Для больших строк может потребоваться выбирать между использованием очень больших буферов и перехват ошибок в тех редких случаях, что превышено более рациональной буфера.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-480">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="4a6dd-481">Можно также использовать другой подход и использовать <xref:System.Text.UTF32Encoding.GetByteCount%2A> или <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-481">You might also want to consider a different approach and use <xref:System.Text.UTF32Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4a6dd-482"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> не имеют отношения к <xref:System.Text.UTF32Encoding.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-482"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> has no relationship to <xref:System.Text.UTF32Encoding.GetChars%2A>.</span></span> <span data-ttu-id="4a6dd-483">Если требуется использовать с ту же функцию <xref:System.Text.UTF32Encoding.GetChars%2A>, используйте <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-483">If you need a similar function to use with <xref:System.Text.UTF32Encoding.GetChars%2A>, use <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a6dd-484">`GetMaxByteCount(N)` не обязательно совпадает со значением `N* GetMaxByteCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-484">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
## Examples  
 <span data-ttu-id="4a6dd-485">В следующем примере определяет число байтов, необходимых для кодирования строк, а затем кодирует строку и выводит полученные байты.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-485">The following example determines the number of bytes required to encode a string, then encodes the string and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/VB/GetBytes_String.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a6dd-486">Значение параметра <paramref name="charCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-486"><paramref name="charCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="4a6dd-487">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-487">-or-</span></span> 
<span data-ttu-id="4a6dd-488">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-488">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="4a6dd-489">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-489">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="4a6dd-490">- и -</span><span class="sxs-lookup"><span data-stu-id="4a6dd-490">-and-</span></span> 
 <span data-ttu-id="4a6dd-491">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-491"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="uTF32Encoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount"><span data-ttu-id="4a6dd-492">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-492">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="4a6dd-493">Вычисляет максимальное количество символов, полученных при декодировании заданного числа байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-493">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="4a6dd-494">Максимальное количество символов, полученных при декодировании заданного количества байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-494">The maximum number of characters produced by decoding the specified number of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-495">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF32Encoding.GetChars%2A> для хранения полученных символов, вызовите <xref:System.Text.UTF32Encoding.GetCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-495">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, you call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="4a6dd-496">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-496">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="4a6dd-497"><xref:System.Text.UTF32Encoding.GetCharCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-497">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4a6dd-498"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> — Это худший номер, включая худшем случае для выбранного в данный момент <xref:System.Text.DecoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-498"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="4a6dd-499">Если вы выбрали переход на резервный ресурс со строкой потенциально большого объема, <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> может возвращать большие значения.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-499">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="4a6dd-500">В большинстве случаев этот метод возвращает адекватные числа для коротких строк.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-500">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="4a6dd-501">Для больших строк может потребоваться выбирать между использованием очень больших буферов и перехват ошибок в тех редких случаях, что превышено более рациональной буфера.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-501">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="4a6dd-502">Можно также использовать другой подход и использовать <xref:System.Text.UTF32Encoding.GetCharCount%2A> или <xref:System.Text.Decoder.Convert%2A>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-502">You might also want to consider a different approach and use <xref:System.Text.UTF32Encoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A>.</span></span>  
  
 <span data-ttu-id="4a6dd-503"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> не имеют отношения к <xref:System.Text.UTF32Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-503"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> has no relationship to <xref:System.Text.UTF32Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="4a6dd-504">Если требуется использовать с ту же функцию <xref:System.Text.UTF32Encoding.GetBytes%2A>, используйте <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-504">If you need a similar function to use with <xref:System.Text.UTF32Encoding.GetBytes%2A>, use <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a6dd-505">`GetMaxCharCount(N)` не обязательно совпадает со значением `N* GetMaxCharCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-505">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
## Examples  
 <span data-ttu-id="4a6dd-506">В следующем примере строка кодируется в массив байтов и затем декодирует байты в массив символов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-506">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a6dd-507">Значение параметра <paramref name="byteCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-507"><paramref name="byteCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="4a6dd-508">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-508">-or-</span></span> 
<span data-ttu-id="4a6dd-509">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-509">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="4a6dd-510">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-510">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="4a6dd-511">- и -</span><span class="sxs-lookup"><span data-stu-id="4a6dd-511">-and-</span></span> 
 <span data-ttu-id="4a6dd-512">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-512"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberSignature Language="F#" Value="override this.GetPreamble : unit -&gt; byte[]" Usage="uTF32Encoding.GetPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a6dd-513">Возвращает метку порядка байтов Юникода в кодировке UTF-32, если объект <see cref="T:System.Text.UTF32Encoding" /> настроен для ее предоставления.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-513">Returns a Unicode byte order mark encoded in UTF-32 format, if the <see cref="T:System.Text.UTF32Encoding" /> object is configured to supply one.</span></span></summary>
        <returns><span data-ttu-id="4a6dd-514">Массив байтов, содержащий метку порядка байтов Юникода, если объект <see cref="T:System.Text.UTF32Encoding" /> настроен для его предоставления.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-514">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF32Encoding" /> object is configured to supply one.</span></span> <span data-ttu-id="4a6dd-515">В противном случае этот метод возвращает массив байтов нулевой длины.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-515">Otherwise, this method returns a zero-length byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-516"><xref:System.Text.UTF32Encoding> Объект может предоставлять преамбулу, который представляет собой массив байтов, которые может иметь префикс в последовательность байтов, полученных в результате кодирования.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-516">The <xref:System.Text.UTF32Encoding> object can provide a preamble, which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="4a6dd-517">Предшествующим последовательность закодированных байтов с метки порядка байтов (кодовые точки U + 0000 U + FEFF) декодер может определить порядок байтов и формат преобразования или UTF.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-517">Prefacing a sequence of encoded bytes with a byte order mark (code points U+0000 U+FEFF) helps the decoder determine the byte order and the transformation format, or UTF.</span></span> <span data-ttu-id="4a6dd-518">Отметки порядка байтов (BOM) Юникода сериализуется следующим образом (в шестнадцатеричном формате):</span><span class="sxs-lookup"><span data-stu-id="4a6dd-518">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="4a6dd-519">Обратный порядок байтов: 00 00 FE FF</span><span class="sxs-lookup"><span data-stu-id="4a6dd-519">Big endian byte order: 00 00 FE FF</span></span>  
  
-   <span data-ttu-id="4a6dd-520">Прямой порядок байтов: FF FE 00 00</span><span class="sxs-lookup"><span data-stu-id="4a6dd-520">Little endian byte order: FF FE 00 00</span></span>  
  
 <span data-ttu-id="4a6dd-521">Можно создать экземпляр <xref:System.Text.UTF32Encoding> которого <xref:System.Text.UTF32Encoding.GetPreamble%2A> метод возвращает допустимый Спецификации одним из следующих способов:</span><span class="sxs-lookup"><span data-stu-id="4a6dd-521">You can instantiate a <xref:System.Text.UTF32Encoding> object whose <xref:System.Text.UTF32Encoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="4a6dd-522">Получая <xref:System.Text.UTF32Encoding> объект, возвращаемый <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-522">By retrieving the <xref:System.Text.UTF32Encoding> object returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="4a6dd-523">Путем вызова без параметров <xref:System.Text.UTF32Encoding.%23ctor> конструктора для создания <xref:System.Text.UTF32Encoding> объекта.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-523">By calling the parameterless <xref:System.Text.UTF32Encoding.%23ctor> constructor to instantiate a <xref:System.Text.UTF32Encoding> object.</span></span>  
  
-   <span data-ttu-id="4a6dd-524">Указав `true` для параметра `byteOrderMark` аргумент <xref:System.Text.UTF32Encoding.%23ctor%2A> и <xref:System.Text.UTF32Encoding.%23ctor%2A> конструкторы.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-524">By supplying `true` as the value of the `byteOrderMark` argument to the <xref:System.Text.UTF32Encoding.%23ctor%2A> and <xref:System.Text.UTF32Encoding.%23ctor%2A> constructors.</span></span>  
  
 <span data-ttu-id="4a6dd-525">Мы рекомендуем использовать Спецификации, так как он обеспечивает почти точную идентификацию кодировки для файлов, в противном случае теряют ссылку на <xref:System.Text.UTF32Encoding> объекта, например, тег или неправильно отмечен веб-данных или храниться файлы произвольного текста, когда организация не имела расставленными или других данных.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-525">We recommend that you use the BOM, since it provides nearly certain identification of an encoding for files that otherwise have lost reference to the <xref:System.Text.UTF32Encoding> object, for example, untagged or improperly tagged web data, or random text files stored when a business did not have international concerns or other data.</span></span> <span data-ttu-id="4a6dd-526">Часто проблемы в работе пользователей избавить согласованных и правильных тегов в данных.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-526">Often, user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="4a6dd-527">Стандарты, которые предоставляют тип кодировки отчасти избыточна метки порядка БАЙТОВ.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-527">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="4a6dd-528">Тем не менее он может использоваться для помочь серверу отправлять правильный заголовок кодировки.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-528">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="4a6dd-529">Кроме того он может использоваться как переход на резервный ресурс в случае кодировку, в противном случае потери.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-529">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="4a6dd-530">Есть некоторые недостатки использования метки порядка БАЙТОВ.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-530">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="4a6dd-531">Например сложно выбрать способы ограничения полей базы данных, используйте метки порядка БАЙТОВ.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-531">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="4a6dd-532">Объединение файлов может стать проблемой также, например, когда файлы будут объединены таким образом, что необязательный символ может оказаться в центре данных.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-532">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="4a6dd-533">Несмотря на некоторые недостатки тем не менее, использование спецификации настоятельно рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-533">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="4a6dd-534">Дополнительные сведения о порядке байтов и отметки порядка байтов, см. в разделе стандарта Юникод на [домашней странице Юникода](https://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-534">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](https://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a6dd-535">Чтобы обеспечить правильное декодирование закодированных байтов, необходимо использовать перед закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-535">To ensure that the encoded bytes are decoded properly, you should prefix encoded bytes with a preamble.</span></span> <span data-ttu-id="4a6dd-536">Обратите внимание, что <xref:System.Text.UTF32Encoding.GetBytes%2A> метод не добавить в начало метки порядка БАЙТОВ в последовательность закодированных байтов; предоставление метки порядка БАЙТОВ в начале соответствующих байтового потока является обязанностью разработчика.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-536">Note that the <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
## Examples  
 <span data-ttu-id="4a6dd-537">Следующие пример код извлекает и отображает порядок байтов пометить для разных <xref:System.Text.UTF32Encoding> экземпляров.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-537">The following code example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 <span data-ttu-id="4a6dd-538">В следующем примере создается два <xref:System.Text.UTF32Encoding> объектов, первая из которых не поддерживает метки порядка БАЙТОВ и второй которая осуществляет.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-538">The following example instantiates two <xref:System.Text.UTF32Encoding> objects, the first of which does not provide a BOM and the second of which does.</span></span> <span data-ttu-id="4a6dd-539">Затем он вызывает <xref:System.Text.UTF32Encoding.GetPreamble%2A> метод для записи метки порядка БАЙТОВ в файл перед записью строка в кодировке UTF-32.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-539">It then calls the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method to write the BOM to a file before writing a UTF-32-encoded string.</span></span> <span data-ttu-id="4a6dd-540">Как видно из примера, файл, который сохраняет байты из второго кодировщика имеет четыре большее число байтов, первый.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-540">As the output from the example shows, the file that saves the bytes from the second encoder has four more bytes that the first.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/getpreamble1.vb#2)]  
  
 <span data-ttu-id="4a6dd-541">Вы также можете сравнить файлы с помощью `fc` команды в окне консоли, или можно проверить файлы в текстовом редакторе, который включает режим шестнадцатеричное представление.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-541">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="4a6dd-542">Обратите внимание, что если файл открыт в редакторе, который поддерживает UTF-32, Спецификации не отображается.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-542">Note that when the file is opened in an editor that supports UTF-32, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="uTF32Encoding.GetString (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="4a6dd-543">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-543">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="4a6dd-544">Индекс первого декодируемого байта.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-544">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="4a6dd-545">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-545">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="4a6dd-546">Декодирует диапазон байтов из массива байтов в строку.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-546">Decodes a range of bytes from a byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="4a6dd-547">Строка, содержащая результаты декодирования заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-547">A string that contains the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a6dd-548">Обнаружения ошибок, недопустимую последовательность вызывает этот метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-548">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4a6dd-549">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-549">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4a6dd-550">Если диапазон байтов для декодирования включает отметки порядка байтов (BOM), а массив байтов был возвращен методом виду типа без метки порядка БАЙТОВ, знак U + FFFE включается в массив символов, возвращаемый этим методом.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-550">If the range of bytes to be decoded includes the byte order mark (BOM), and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="4a6dd-551">Его можно удалить, вызвав <xref:System.String.TrimStart%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-551">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4a6dd-552">Данные для преобразования, такие как данные, считанные из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-552">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4a6dd-553">В этом случае или если объем данных слишком велико, что необходимо разделить на небольшие блоки, приложение должно использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.UTF32Encoding.GetDecoder%2A> метод или <xref:System.Text.UTF32Encoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-553">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a6dd-554">В следующем примере строка кодируется в двух массивов байтов, по одному в прямом порядке, а другой — в порядке с прямым порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-554">The following example encodes a string into two arrays of bytes, one in little-endian order and the other in big-endian order.</span></span> <span data-ttu-id="4a6dd-555">Затем он декодирует байты обратно в строку.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-555">It then decodes the bytes back into a string.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/CS/getstring.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/VB/GetString.vb#1)]  
  
 <span data-ttu-id="4a6dd-556">Следующий пример инициализирует массив путем вызова <xref:System.Text.UTF32Encoding.GetByteCount%2A> метод, чтобы определить точно, сколько байтов являются обязательными для закодированной строки, а затем добавив размер отметки порядка байтов (BOM).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-556">The following example initializes an array by calling the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="4a6dd-557">Затем в примере вызывается <xref:System.Text.UTF32Encoding.GetPreamble%2A> для сохранения метки порядка БАЙТОВ в массив до вызова метода <xref:System.Text.UTF32Encoding.GetBytes%2A> метод для хранения закодированных байтов в массив.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-557">The example then calls the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.UTF32Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="4a6dd-558">Затем в примере вызывается <xref:System.Text.UTF32Encoding.GetString%2A> метод Декодируемая строка.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-558">The example then calls the <xref:System.Text.UTF32Encoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/CS/GetString1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.GetString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/VB/GetString1.vb#2)]  
  
 <span data-ttu-id="4a6dd-559">Обратите внимание на то, что в этом случае расшифрованную строку отличается от исходной строки, так как он начинается с метки порядка байтов 32-разрядных U + FFFE U + 0000.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-559">Note that in this case the decoded string differs from the original string, since it begins with a 32-bit byte order mark U+FFFE U+0000.</span></span> <span data-ttu-id="4a6dd-560">Это означает, что две строки будут неравны и, если строка выходных данных, Спецификации отображается как замещающий символ «?».</span><span class="sxs-lookup"><span data-stu-id="4a6dd-560">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a6dd-561"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-561"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a6dd-562">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-562"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="4a6dd-563">-или-</span><span class="sxs-lookup"><span data-stu-id="4a6dd-563">-or-</span></span> 
 <span data-ttu-id="4a6dd-564">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-564"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a6dd-565">Обнаружение ошибок включено, и параметр <paramref name="bytes" /> содержит недопустимую последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-565">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="4a6dd-566">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="4a6dd-566">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)</span></span> 
<span data-ttu-id="4a6dd-567">- и -</span><span class="sxs-lookup"><span data-stu-id="4a6dd-567">-and-</span></span> 
 <span data-ttu-id="4a6dd-568">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="4a6dd-568"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>