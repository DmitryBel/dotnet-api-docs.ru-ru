<Type Name="UTF8Encoding" FullName="System.Text.UTF8Encoding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="400b66e629629ccfb67ffdfc76de6ad73fb9526b" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56376151" /></Metadata><TypeSignature Language="C#" Value="public class UTF8Encoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UTF8Encoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UTF8Encoding" />
  <TypeSignature Language="VB.NET" Value="Public Class UTF8Encoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UTF8Encoding : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type UTF8Encoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="60c0c-101">Представляет кодировку символов Юникода в формате UTF-8.</span><span class="sxs-lookup"><span data-stu-id="60c0c-101">Represents a UTF-8 encoding of Unicode characters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-102">Кодирование - это процесс преобразования набора символов Юникода в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="60c0c-103">Декодирование представляет собой процесс преобразования последовательности закодированных байтов в набор символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="60c0c-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="60c0c-104">Является UTF-8, Юникод, представляет каждую кодовую точку в виде последовательности от одного до четырех байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-104">UTF-8 is a Unicode encoding that represents each code point as a sequence of one to four bytes.</span></span> <span data-ttu-id="60c0c-105">В отличие от кодировки UTF-16 и UTF-32 кодировка UTF-8 не требуется «порядка следования байтов»; схема кодирования является таким же, независимо от того, является ли процессор с прямым или обратным порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-105">Unlike the UTF-16 and UTF-32 encodings, the UTF-8 encoding does not require "endianness"; the encoding scheme is the same regardless of whether the processor is big-endian or little-endian.</span></span> <span data-ttu-id="60c0c-106"><xref:System.Text.UTF8Encoding> соответствует кодовая страница 65001 Windows.</span><span class="sxs-lookup"><span data-stu-id="60c0c-106"><xref:System.Text.UTF8Encoding> corresponds to the Windows code page 65001.</span></span> <span data-ttu-id="60c0c-107">Дополнительные сведения о UTF и других кодировках, поддерживаемых <xref:System.Text>, см. в разделе [кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="60c0c-107">For more information about the UTFs and other encodings supported by <xref:System.Text>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="60c0c-108">Можно создать экземпляр <xref:System.Text.UTF8Encoding> объекта несколькими способами, в зависимости от того, нужно ли выполнять его для предоставления метку порядка байтов (BOM), и требуется ли включить функцию обнаружения ошибок.</span><span class="sxs-lookup"><span data-stu-id="60c0c-108">You can instantiate a <xref:System.Text.UTF8Encoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM) and whether you want to enable error detection.</span></span> <span data-ttu-id="60c0c-109">В следующей таблице перечислены конструкторы и <xref:System.Text.Encoding> свойства, которые возвращают <xref:System.Text.UTF8Encoding> объекта.</span><span class="sxs-lookup"><span data-stu-id="60c0c-109">The following table lists the constructors and the <xref:System.Text.Encoding> property that return a <xref:System.Text.UTF8Encoding> object.</span></span>  
  
|<span data-ttu-id="60c0c-110">Член</span><span class="sxs-lookup"><span data-stu-id="60c0c-110">Member</span></span>|<span data-ttu-id="60c0c-111">СПЕЦИФИКАЦИИ</span><span class="sxs-lookup"><span data-stu-id="60c0c-111">BOM</span></span>|<span data-ttu-id="60c0c-112">Обнаружение ошибок</span><span class="sxs-lookup"><span data-stu-id="60c0c-112">Error detection</span></span>|  
|------------|---------|---------------------|  
|<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>|<span data-ttu-id="60c0c-113">Да</span><span class="sxs-lookup"><span data-stu-id="60c0c-113">Yes</span></span>|<span data-ttu-id="60c0c-114">Нет (стратегия замены)</span><span class="sxs-lookup"><span data-stu-id="60c0c-114">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="60c0c-115">Нет</span><span class="sxs-lookup"><span data-stu-id="60c0c-115">No</span></span>|<span data-ttu-id="60c0c-116">Нет (стратегия замены)</span><span class="sxs-lookup"><span data-stu-id="60c0c-116">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="60c0c-117">Возможность настройки</span><span class="sxs-lookup"><span data-stu-id="60c0c-117">Configurable</span></span>|<span data-ttu-id="60c0c-118">Нет (стратегия замены)</span><span class="sxs-lookup"><span data-stu-id="60c0c-118">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="60c0c-119">Возможность настройки</span><span class="sxs-lookup"><span data-stu-id="60c0c-119">Configurable</span></span>|<span data-ttu-id="60c0c-120">Возможность настройки</span><span class="sxs-lookup"><span data-stu-id="60c0c-120">Configurable</span></span>|  
  
 <span data-ttu-id="60c0c-121"><xref:System.Text.UTF8Encoding.GetByteCount%2A> Метод определяет, сколько байтов привести кодировании набора символов Юникода и <xref:System.Text.UTF8Encoding.GetBytes%2A> метод выполняет фактическое кодирование.</span><span class="sxs-lookup"><span data-stu-id="60c0c-121">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UTF8Encoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="60c0c-122">Аналогичным образом <xref:System.Text.UTF8Encoding.GetCharCount%2A> метод определяет, сколько символов привести декодировании последовательности байтов и <xref:System.Text.UTF8Encoding.GetChars%2A> и <xref:System.Text.UTF8Encoding.GetString%2A> методы выполняют фактическое декодирование.</span><span class="sxs-lookup"><span data-stu-id="60c0c-122">Likewise, the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UTF8Encoding.GetChars%2A> and <xref:System.Text.UTF8Encoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="60c0c-123">Для кодировщика или декодера, которое сможет сохранить сведения о состоянии для кодирования или декодирования данных, охватывающих несколько блоков (например, строка 1 миллиона символов, кодируется в сегментах 100 000 символов), используйте <xref:System.Text.UTF8Encoding.GetEncoder%2A> и <xref:System.Text.UTF8Encoding.GetDecoder%2A> свойства, соответственно.</span><span class="sxs-lookup"><span data-stu-id="60c0c-123">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UTF8Encoding.GetEncoder%2A> and <xref:System.Text.UTF8Encoding.GetDecoder%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="60c0c-124">При необходимости <xref:System.Text.UTF8Encoding> предоставляет метку порядка байтов (BOM), который представляет собой массив байтов, которые может иметь префикс в начало потока, полученный в результате процесса кодирования.</span><span class="sxs-lookup"><span data-stu-id="60c0c-124">Optionally, the <xref:System.Text.UTF8Encoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the beginning of the byte stream that results from the encoding process.</span></span> <span data-ttu-id="60c0c-125">Если метку порядка байтов (BOM), используемое потока байтов в кодировке UTF-8, декодер определить порядок байтов и формат преобразования или UTF.</span><span class="sxs-lookup"><span data-stu-id="60c0c-125">If a UTF-8 encoded byte stream is prefaced with a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF.</span></span> <span data-ttu-id="60c0c-126">Обратите внимание, что стандарт Юникод не требуется, и не рекомендует метки порядка БАЙТОВ в кодировке UTF-8 в кодировке потоков.</span><span class="sxs-lookup"><span data-stu-id="60c0c-126">Note, however, that the Unicode Standard neither requires nor recommends a BOM in UTF-8 encoded streams.</span></span> <span data-ttu-id="60c0c-127">Дополнительные сведения о порядке байтов и отметки порядка байтов, см. в разделе стандарта Юникод на [домашней странице Юникода](https://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="60c0c-127">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](https://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
 <span data-ttu-id="60c0c-128">Если кодировщик настроен для поддержки Спецификации, его можно получить, вызвав <xref:System.Text.UTF8Encoding.GetPreamble%2A> метода; в противном случае метод возвращает пустой массив.</span><span class="sxs-lookup"><span data-stu-id="60c0c-128">If the encoder is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="60c0c-129">Обратите внимание, что, даже если <xref:System.Text.UTF8Encoding> объект настроен для поддержки Спецификации, необходимо включить метки порядка БАЙТОВ в начале потока закодированных байтов в виде соответствующих; методов кодирования из <xref:System.Text.UTF8Encoding> класс делают это автоматически.</span><span class="sxs-lookup"><span data-stu-id="60c0c-129">Note that, even if a <xref:System.Text.UTF8Encoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UTF8Encoding> class do not do this automatically.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c0c-130">Чтобы включить обнаружение ошибок и защищенности экземпляра класса следует вызывать <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> конструктора и задайте `throwOnInvalidBytes` параметр `true`.</span><span class="sxs-lookup"><span data-stu-id="60c0c-130">To enable error detection and to make the class instance more secure, you should call the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> constructor and set the `throwOnInvalidBytes` parameter to `true`.</span></span> <span data-ttu-id="60c0c-131">С помощью обнаружение ошибок включено, вызывает метод, который обнаруживает недопустимую последовательность символов или байтов <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="60c0c-131">With error detection enabled, a method that detects an invalid sequence of characters or bytes throws an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="60c0c-132">Без обнаружения ошибки исключение не создается, и Недопустимая последовательность обычно игнорируется.</span><span class="sxs-lookup"><span data-stu-id="60c0c-132">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c0c-133">Состояние объекта в кодировке UTF-8 не сохраняется, если объект сериализуется и десериализуется с использованием различных версий .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="60c0c-133">The state of a UTF-8 encoded object is not preserved if the object is serialized and deserialized using different .NET Framework versions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c0c-134">В следующем примере используется <xref:System.Text.UTF8Encoding> объекта для кодирования строки символов Юникода и сохранения их в массив байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-134">The following example uses a <xref:System.Text.UTF8Encoding> object to encode a string of Unicode characters and store them in a byte array.</span></span> <span data-ttu-id="60c0c-135">Строка Юникода включает в себя два символа, Pi (U + 03A0) и «сигма» (U + 03A3), за которые находятся за пределами диапазона символов ASCII.</span><span class="sxs-lookup"><span data-stu-id="60c0c-135">The Unicode string includes two characters, Pi (U+03A0) and Sigma (U+03A3), that are outside the ASCII character range.</span></span> <span data-ttu-id="60c0c-136">Когда закодированный массив байтов расшифровывается обратно в строку, символы Pi и «сигма» по-прежнему присутствуют.</span><span class="sxs-lookup"><span data-stu-id="60c0c-136">When the encoded byte array is decoded back to a string, the Pi and Sigma characters are still present.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.UTF8Encoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/VB/snippet.vb#1)]  
  
 <span data-ttu-id="60c0c-137">В следующем примере та же строка в предыдущем примере, за исключением того, что она записывает закодированных байтов в файл и добавляет в поток байтов с метку порядка байтов (BOM).</span><span class="sxs-lookup"><span data-stu-id="60c0c-137">The following example uses the same string as the previous example, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="60c0c-138">Затем он считывает из файла двумя разными способами: как текстовый файл с помощью <xref:System.IO.StreamReader> объекта; и как двоичный файл.</span><span class="sxs-lookup"><span data-stu-id="60c0c-138">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="60c0c-139">Как и следовало ожидать, ни одна из строк вновь чтения включает в себя метки порядка БАЙТОВ.</span><span class="sxs-lookup"><span data-stu-id="60c0c-139">As you would expect, neither newly-read string includes the BOM.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CS/bom1.cs#2)]
 [!code-vb[System.Text.UTF8Encoding Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/VB/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.Encoder" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="60c0c-140">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="60c0c-140">Understanding Encodings</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="60c0c-141">Инициализирует новый экземпляр класса <see cref="T:System.Text.UTF8Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-141">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="60c0c-142">Инициализирует новый экземпляр класса <see cref="T:System.Text.UTF8Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-142">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-143">Этот конструктор создает экземпляр, который не поддерживает метки порядка байтов Юникода и не выдает исключение при обнаружении недопустимой кодировки.</span><span class="sxs-lookup"><span data-stu-id="60c0c-143">This constructor creates an instance that does not provide a Unicode byte order mark and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c0c-144">По соображениям безопасности рекомендуется включить обнаружение ошибок путем вызова конструктора с `throwOnInvalidBytes` параметр и присвоить ему значение `true`.</span><span class="sxs-lookup"><span data-stu-id="60c0c-144">For security reasons, we recommend that you enable error detection by calling a constructor with a `throwOnInvalidBytes` parameter and setting its value to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c0c-145">В следующем примере создается новый <xref:System.Text.UTF8Encoding> экземпляра и отображает его имя.</span><span class="sxs-lookup"><span data-stu-id="60c0c-145">The following example creates a new <xref:System.Text.UTF8Encoding> instance and displays its name.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding (bool encoderShouldEmitUTF8Identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool encoderShouldEmitUTF8Identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encoderShouldEmitUTF8Identifier As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding(bool encoderShouldEmitUTF8Identifier);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF8Encoding : bool -&gt; System.Text.UTF8Encoding" Usage="new System.Text.UTF8Encoding encoderShouldEmitUTF8Identifier" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoderShouldEmitUTF8Identifier" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoderShouldEmitUTF8Identifier"><span data-ttu-id="60c0c-146">Значение <see langword="true" /> указывает, что метод <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> возвращает метку порядка байтов Юникода; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-146"><see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="60c0c-147">Инициализирует новый экземпляр класса <see cref="T:System.Text.UTF8Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-147">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span></span> <span data-ttu-id="60c0c-148">Параметр указывает, нужно ли предоставлять метку порядка байтов Юникода.</span><span class="sxs-lookup"><span data-stu-id="60c0c-148">A parameter specifies whether to provide a Unicode byte order mark.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-149">Этот конструктор создает экземпляр, который не выдает исключение при обнаружении недопустимой кодировки.</span><span class="sxs-lookup"><span data-stu-id="60c0c-149">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c0c-150">По соображениям безопасности следует включить обнаружение ошибок, вызвав конструктор, который включает в себя `throwOnInvalidBytes` параметр и присвоить ему значение `true`.</span><span class="sxs-lookup"><span data-stu-id="60c0c-150">For security reasons, you should enable error detection by calling a constructor that includes a `throwOnInvalidBytes` parameter and setting its value to `true`.</span></span>  
  
 <span data-ttu-id="60c0c-151">`encoderShouldEmitUTF8Identifier` Параметр управляет операциями <xref:System.Text.UTF8Encoding.GetPreamble%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-151">The `encoderShouldEmitUTF8Identifier` parameter controls the operation of the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="60c0c-152">Если `true`, метод возвращает массив байтов, содержащий метку порядка байтов (BOM) Юникода в формате UTF-8.</span><span class="sxs-lookup"><span data-stu-id="60c0c-152">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-8 format.</span></span>  <span data-ttu-id="60c0c-153">Если `false`, он возвращает массив байтов нулевой длины.</span><span class="sxs-lookup"><span data-stu-id="60c0c-153">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="60c0c-154">Однако можно присвоить `encoderShouldEmitUTF8Identifier` для `true` не приводит к <xref:System.Text.UTF8Encoding.GetBytes%2A> метод в качестве префикса метки порядка БАЙТОВ в начале байтового массива, привести к не <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод включать число байтов в Спецификации в счетчик байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-154">However, setting `encoderShouldEmitUTF8Identifier` to `true` does not cause the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c0c-155">В следующем примере создается новый <xref:System.Text.UTF8Encoding> экземпляра и указывает, что префикс метки порядка байтов Юникода должен быть задействован <xref:System.Text.UTF8Encoding.GetPreamble%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-155">The following example creates a new <xref:System.Text.UTF8Encoding> instance and specifies that a Unicode byte order mark prefix should be emitted by the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="60c0c-156"><xref:System.Text.UTF8Encoding.GetPreamble%2A> Метод затем возвращает префикс метки порядка байтов Юникода.</span><span class="sxs-lookup"><span data-stu-id="60c0c-156">The <xref:System.Text.UTF8Encoding.GetPreamble%2A> method then returns the Unicode byte order mark prefix.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/CPP/ctor-boolean.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/CS/ctor-boolean.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/VB/ctor-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding (bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encoderShouldEmitUTF8Identifier As Boolean, throwOnInvalidBytes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding(bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF8Encoding : bool * bool -&gt; System.Text.UTF8Encoding" Usage="new System.Text.UTF8Encoding (encoderShouldEmitUTF8Identifier, throwOnInvalidBytes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoderShouldEmitUTF8Identifier" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidBytes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoderShouldEmitUTF8Identifier"><span data-ttu-id="60c0c-157">Значение <see langword="true" /> указывает, что метод <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> должен возвращать метку порядка байтов Юникода; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-157"><see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method should return a Unicode byte order mark; otherwise, <see langword="false" />.</span></span></param>
        <param name="throwOnInvalidBytes"><span data-ttu-id="60c0c-158">Значение <see langword="true" /> указывает, что следует создавать исключение при обнаружении недопустимой кодировки; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-158"><see langword="true" /> to throw an exception when an invalid encoding is detected; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="60c0c-159">Инициализирует новый экземпляр класса <see cref="T:System.Text.UTF8Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-159">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span></span> <span data-ttu-id="60c0c-160">Параметры указывают, должна ли предоставляться метка порядка байтов Юникода и следует ли создавать исключение при обнаружении недопустимой кодировки.</span><span class="sxs-lookup"><span data-stu-id="60c0c-160">Parameters specify whether to provide a Unicode byte order mark and whether to throw an exception when an invalid encoding is detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-161">`encoderShouldEmitUTF8Identifier` Параметр управляет операциями <xref:System.Text.UTF8Encoding.GetPreamble%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-161">The `encoderShouldEmitUTF8Identifier` parameter controls the operation of the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="60c0c-162">Если `true`, метод возвращает массив байтов, содержащий метку порядка байтов (BOM) Юникода в формате UTF-8.</span><span class="sxs-lookup"><span data-stu-id="60c0c-162">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-8 format.</span></span>  <span data-ttu-id="60c0c-163">Если `false`, он возвращает массив байтов нулевой длины.</span><span class="sxs-lookup"><span data-stu-id="60c0c-163">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="60c0c-164">Однако можно присвоить `encoderShouldEmitUTF8Identifier` для `true` не приводит к <xref:System.Text.UTF8Encoding.GetBytes%2A> метод в качестве префикса метки порядка БАЙТОВ в начале байтового массива, привести к не <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод включать число байтов в Спецификации в счетчик байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-164">However, setting `encoderShouldEmitUTF8Identifier` to `true` does not cause the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
 <span data-ttu-id="60c0c-165">Если `throwOnInvalidBytes` — `true`, вызывает метод, который обнаруживает недопустимые последовательности байтов <xref:System.ArgumentException?displayProperty=nameWithType> исключение.</span><span class="sxs-lookup"><span data-stu-id="60c0c-165">If `throwOnInvalidBytes` is `true`, a method that detects an invalid byte sequence throws an <xref:System.ArgumentException?displayProperty=nameWithType> exception.</span></span> <span data-ttu-id="60c0c-166">В противном случае этот метод создает исключение, и недопустимую последовательность учитывается.</span><span class="sxs-lookup"><span data-stu-id="60c0c-166">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c0c-167">По соображениям безопасности следует включить обнаружение ошибок, вызвав конструктор, который включает в себя `throwOnInvalidBytes` параметр и установив для этого параметра `true`.</span><span class="sxs-lookup"><span data-stu-id="60c0c-167">For security reasons, you should enable error detection by calling a constructor that includes a `throwOnInvalidBytes` parameter and setting that parameter to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c0c-168">В следующем примере создается новый <xref:System.Text.UTF8Encoding> экземпляр, указав, что <xref:System.Text.UTF8Encoding.GetPreamble%2A> метод не должен выдавать префикс метки порядка байтов Юникода и следует исключение при обнаружении недопустимой кодировки.</span><span class="sxs-lookup"><span data-stu-id="60c0c-168">The following example creates a new <xref:System.Text.UTF8Encoding> instance, specifying that the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method should not emit a Unicode byte order mark prefix, and an exception should be thrown when an invalid encoding is detected.</span></span> <span data-ttu-id="60c0c-169">По сравнению с поведением этот конструктор по умолчанию <xref:System.Text.UTF8Encoding.%23ctor> конструктор, который не выдает исключение при обнаружении недопустимой кодировки.</span><span class="sxs-lookup"><span data-stu-id="60c0c-169">The behavior of this constructor is compared to the default <xref:System.Text.UTF8Encoding.%23ctor> constructor, which does not throw an exception when an invalid encoding is detected.</span></span> <span data-ttu-id="60c0c-170">Два <xref:System.Text.UTF8Encoding> экземпляров кодирования массив символов, содержащий два высокой суррогаты (U + D801 и U + D802) в строке, который является недопустимую последовательность символов; старший символ-заместитель должен всегда следовать младшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="60c0c-170">The two <xref:System.Text.UTF8Encoding> instances encode a character array that contains two high surrogates (U+D801 and U+D802) in a row, which is an invalid character sequence; a high surrogate should always be followed by a low surrogate.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uTF8Encoding.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="60c0c-171">Объект для сравнения с текущим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="60c0c-171">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="60c0c-172">Определяет, равен ли заданный объект текущему объекту <see cref="T:System.Text.UTF8Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-172">Determines whether the specified object is equal to the current <see cref="T:System.Text.UTF8Encoding" /> object.</span></span></summary>
        <returns><span data-ttu-id="60c0c-173">Значение <see langword="true" />, если <paramref name="value" /> является экземпляром класса <see cref="T:System.Text.UTF8Encoding" /> и равен текущему объекту; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-173"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF8Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-174">Два <xref:System.Text.UTF8Encoding> объекты считаются равными, если выполняются все следующие условия:</span><span class="sxs-lookup"><span data-stu-id="60c0c-174">Two <xref:System.Text.UTF8Encoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="60c0c-175">Оба объекта укажите отметки порядка байтов или оба — нет.</span><span class="sxs-lookup"><span data-stu-id="60c0c-175">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="60c0c-176">Оба объекта используют же резерв кодировщика.</span><span class="sxs-lookup"><span data-stu-id="60c0c-176">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="60c0c-177">Оба объекта используют же резерва декодера.</span><span class="sxs-lookup"><span data-stu-id="60c0c-177">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c0c-178">В следующем примере используется <xref:System.Text.UTF8Encoding.Equals%2A> тестируемого метода ли текущий <xref:System.Text.UTF8Encoding> объект равен другому <xref:System.Text.UTF8Encoding> объекта.</span><span class="sxs-lookup"><span data-stu-id="60c0c-178">The following example uses the <xref:System.Text.UTF8Encoding.Equals%2A> method to test whether the current <xref:System.Text.UTF8Encoding> object is equal to a different <xref:System.Text.UTF8Encoding> object.</span></span> <span data-ttu-id="60c0c-179">Четыре <xref:System.Text.UTF8Encoding> создаются и по сравнению с объектами, и отображаются результаты сравнения.</span><span class="sxs-lookup"><span data-stu-id="60c0c-179">Four <xref:System.Text.UTF8Encoding> objects are created and compared and the results of the comparisons are displayed.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/CPP/equals-object.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/CS/equals-object.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/VB/equals-object.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="60c0c-180">Подсчитывает количество байтов, полученных при кодировании набора символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-180">Calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ chars);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="uTF8Encoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="60c0c-181">Объект <see cref="T:System.String" />, содержащий кодируемый набор символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-181">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="60c0c-182">Вычисляет количество байтов, полученных при кодировании символов в заданном объекте <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-182">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="60c0c-183">Число байтов, полученных при кодировании заданных символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-183">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-184">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF8Encoding.GetBytes%2A> для сохранения полученных байтов, можно вызвать <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-184">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="60c0c-185">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-185">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="60c0c-186"><xref:System.Text.UTF8Encoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="60c0c-186">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="60c0c-187">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="60c0c-187">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="60c0c-188">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="60c0c-188">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="60c0c-189">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно добавить префикс поток закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="60c0c-189">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="60c0c-190">Вставка приставку в начале потока байтов (такие как в начале последовательность байтов, записываемых в файл) — это разработчик, и число байтов в преамбула не отражаются в значение, возвращаемое <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-190">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c0c-191">В следующем примере вызывается <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> и <xref:System.Text.UTF8Encoding.GetByteCount%28System.String%29> методы для вычисления фактического и максимального числа байтов, необходимых для кодирования строки.</span><span class="sxs-lookup"><span data-stu-id="60c0c-191">The following example calls the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> and <xref:System.Text.UTF8Encoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="60c0c-192">Она также отображает фактическое число байтов, необходимое для хранения потока данных с метки порядка байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-192">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c0c-193"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-193"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="60c0c-194">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="60c0c-194">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="60c0c-195">Обнаружение ошибок включено, и <paramref name="chars" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-195">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="60c0c-196">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="60c0c-196">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="60c0c-197">- и -</span><span class="sxs-lookup"><span data-stu-id="60c0c-197">-and-</span></span> 
 <span data-ttu-id="60c0c-198">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-198"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF8Encoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="60c0c-199">Указатель на первый кодируемый символ.</span><span class="sxs-lookup"><span data-stu-id="60c0c-199">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="60c0c-200">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-200">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="60c0c-201">Вычисляет число байтов, полученных при кодировании набора символов начиная с заданного указателя символа.</span><span class="sxs-lookup"><span data-stu-id="60c0c-201">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="60c0c-202">Число байтов, полученных при кодировании заданных символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-202">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-203">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF8Encoding.GetBytes%2A> для сохранения полученных байтов, вы вызываете <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-203">To calculate the exact array size required by the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="60c0c-204">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-204">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="60c0c-205"><xref:System.Text.UTF8Encoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="60c0c-205">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="60c0c-206">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="60c0c-206">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="60c0c-207">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="60c0c-207">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="60c0c-208">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно добавить префикс поток закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="60c0c-208">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="60c0c-209">Вставка приставку в начале потока байтов (такие как в начале последовательность байтов, записываемых в файл) — это разработчик, и число байтов в преамбула не отражаются в значение, возвращаемое <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-209">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c0c-210"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-210"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="60c0c-211">Значение параметра <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="60c0c-211"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="60c0c-212">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-212">-or-</span></span> 
<span data-ttu-id="60c0c-213">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="60c0c-213">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="60c0c-214">Обнаружение ошибок включено, и <paramref name="chars" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-214">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="60c0c-215">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="60c0c-215">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)</span></span> 
<span data-ttu-id="60c0c-216">- и -</span><span class="sxs-lookup"><span data-stu-id="60c0c-216">-and-</span></span> 
 <span data-ttu-id="60c0c-217">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-217"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="60c0c-218">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="60c0c-218">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="60c0c-219">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="60c0c-219">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="uTF8Encoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="60c0c-220">Массив символов, содержащий набор кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-220">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="60c0c-221">Индекс первого кодируемого символа.</span><span class="sxs-lookup"><span data-stu-id="60c0c-221">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="60c0c-222">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-222">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="60c0c-223">Вычисляет число байтов, полученных при кодировании набора символов из указанного массива символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-223">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span></summary>
        <returns><span data-ttu-id="60c0c-224">Число байтов, полученных при кодировании заданных символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-224">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-225">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF8Encoding.GetBytes%2A> для сохранения полученных байтов, можно вызвать использует <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-225">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the uses <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="60c0c-226">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-226">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="60c0c-227"><xref:System.Text.UTF8Encoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="60c0c-227">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="60c0c-228">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="60c0c-228">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="60c0c-229">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="60c0c-229">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="60c0c-230">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно добавить префикс поток закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="60c0c-230">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="60c0c-231">Вставка приставку в начале потока байтов (такие как в начале последовательность байтов, записываемых в файл) — это разработчик, и число байтов в преамбула не отражаются в значение, возвращаемое <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-231">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c0c-232">Следующий пример заполняет массив, содержащий Latin прописные и строчные буквы и вызовы <xref:System.Text.UTF8Encoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> метод для определения числа байтов, необходимых для кодирования латинских символов нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="60c0c-232">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UTF8Encoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="60c0c-233">Затем отображается эту информацию, а также общее число байтов, которые требуются при добавлении метки порядка байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-233">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="60c0c-234">Он сравнивает это число с помощью значения, возвращенного <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод, который указывает максимальное число байтов, необходимое для кодирования латинских символов нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="60c0c-234">It compares this number with the value returned by the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.UTF8Encoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c0c-235"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-235"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="60c0c-236">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="60c0c-236"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="60c0c-237">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-237">-or-</span></span> 
 <span data-ttu-id="60c0c-238">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-238"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="60c0c-239">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-239">-or-</span></span> 
<span data-ttu-id="60c0c-240">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="60c0c-240">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="60c0c-241">Обнаружение ошибок включено, и <paramref name="chars" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-241">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="60c0c-242">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="60c0c-242">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="60c0c-243">- и -</span><span class="sxs-lookup"><span data-stu-id="60c0c-243">-and-</span></span> 
<span data-ttu-id="60c0c-244">Свойству <see cref="P:System.Text.Encoding.EncoderFallback" /> задано значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-244">The <see cref="P:System.Text.Encoding.EncoderFallback" /> property is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="60c0c-245">Кодирует набор символов в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-245">Encodes a set of characters into a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string -&gt; byte[]" Usage="uTF8Encoding.GetBytes s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="60c0c-246">Кодируемая строка символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-246">The character string to encode.</span></span></param>
        <summary><span data-ttu-id="60c0c-247">Кодирует символы из указанного объекта <see cref="T:System.String" /> в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-247">Encodes the characters in a specified <see cref="T:System.String" /> object into a sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="60c0c-248">Массив байтов, содержащий закодированные символы из строки, заданной параметром s.</span><span class="sxs-lookup"><span data-stu-id="60c0c-248">A byte array that contains the encoded characters in the string specified by the s parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF8Encoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="60c0c-249">Указатель на первый кодируемый символ.</span><span class="sxs-lookup"><span data-stu-id="60c0c-249">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="60c0c-250">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-250">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="60c0c-251">Указатель на положение, с которого начинается запись результирующей последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-251">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="60c0c-252">Максимальное число байтов для записи.</span><span class="sxs-lookup"><span data-stu-id="60c0c-252">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="60c0c-253">Кодирует набор символов, начало которого задается указателем символа, в последовательность байтов, которые сохраняются начиная с заданного указателя байта.</span><span class="sxs-lookup"><span data-stu-id="60c0c-253">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="60c0c-254">Фактическое число байтов, записанных в местоположение, указанное с помощью параметра <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-254">The actual number of bytes written at the location indicated by <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-255">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF8Encoding.GetBytes%2A> для сохранения полученных байтов, можно вызвать <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-255">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="60c0c-256">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-256">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="60c0c-257"><xref:System.Text.UTF8Encoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="60c0c-257">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="60c0c-258">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="60c0c-258">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="60c0c-259">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="60c0c-259">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="60c0c-260">Данные для преобразования, такие как данные, считанные из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="60c0c-260">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="60c0c-261">В этом случае или если объем данных слишком велико, что необходимо разделить на небольшие блоки, используйте <xref:System.Text.Decoder> или <xref:System.Text.Encoder> возвращаемые <xref:System.Text.UTF8Encoding.GetDecoder%2A> метод или <xref:System.Text.UTF8Encoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="60c0c-261">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> returned by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="60c0c-262">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно добавить префикс поток закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="60c0c-262">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="60c0c-263">Вставка приставку в начале потока байтов (такие как в начале последовательность байтов, записываемых в файл) — это разработчик.</span><span class="sxs-lookup"><span data-stu-id="60c0c-263">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="60c0c-264"><xref:System.Text.UTF8Encoding.GetBytes%2A> Метод не добавить в начало преамбулу последовательность закодированных байтов в начале.</span><span class="sxs-lookup"><span data-stu-id="60c0c-264">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c0c-265"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-265"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="60c0c-266">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-266">-or-</span></span> 
 <span data-ttu-id="60c0c-267"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-267"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="60c0c-268">Значение параметра <paramref name="charCount" /> или <paramref name="byteCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="60c0c-268"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="60c0c-269">Обнаружение ошибок включено, и <paramref name="chars" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-269">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="60c0c-270">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-270">-or-</span></span> 
 <span data-ttu-id="60c0c-271"><paramref name="byteCount" /> меньше результирующего числа байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-271"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="60c0c-272">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="60c0c-272">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="60c0c-273">- и -</span><span class="sxs-lookup"><span data-stu-id="60c0c-273">-and-</span></span> 
 <span data-ttu-id="60c0c-274">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-274"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="60c0c-275">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="60c0c-275">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="60c0c-276">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="60c0c-276">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="uTF8Encoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="60c0c-277">Массив символов, содержащий набор кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-277">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="60c0c-278">Индекс первого кодируемого символа.</span><span class="sxs-lookup"><span data-stu-id="60c0c-278">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="60c0c-279">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-279">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="60c0c-280">Массив байтов, в который будет помещена результирующая последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-280">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="60c0c-281">Индекс, с которого начинается запись результирующей последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-281">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="60c0c-282">Кодирует набор символов из заданного массива символов в указанный массив байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-282">Encodes a set of characters from the specified character array into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="60c0c-283">Фактическое число байтов, записанных в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-283">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-284">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF8Encoding.GetBytes%2A> для сохранения полученных байтов, можно вызвать <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-284">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="60c0c-285">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-285">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="60c0c-286"><xref:System.Text.UTF8Encoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="60c0c-286">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="60c0c-287">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="60c0c-287">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="60c0c-288">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="60c0c-288">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="60c0c-289">Данные для преобразования, такие как данные, считанные из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="60c0c-289">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="60c0c-290">В этом случае или если объем данных слишком велико, что необходимо разделить на небольшие блоки, используйте <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.UTF8Encoding.GetDecoder%2A> метод или <xref:System.Text.UTF8Encoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="60c0c-290">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="60c0c-291">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно добавить префикс поток закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="60c0c-291">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="60c0c-292">Вставка приставку в начале потока байтов (такие как в начале последовательность байтов, записываемых в файл) — это разработчик.</span><span class="sxs-lookup"><span data-stu-id="60c0c-292">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="60c0c-293"><xref:System.Text.UTF8Encoding.GetBytes%2A> Метод не добавить в начало преамбулу последовательность закодированных байтов в начале.</span><span class="sxs-lookup"><span data-stu-id="60c0c-293">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c0c-294">В следующем примере используется <xref:System.Text.UTF8Encoding.GetBytes%2A> способ кодирования диапазона символов из строки и хранилищ закодированных байтов в диапазон элементов в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-294">The following example uses the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to encode a range of characters from a string and stores the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c0c-295"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-295"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="60c0c-296">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-296">-or-</span></span> 
 <span data-ttu-id="60c0c-297"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-297"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="60c0c-298">Значение параметра <paramref name="charIndex" />, <paramref name="charCount" /> или <paramref name="byteIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="60c0c-298"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="60c0c-299">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-299">-or-</span></span> 
 <span data-ttu-id="60c0c-300">Параметры <paramref name="charIndex" /> и <paramref name="charCount" /> не указывают допустимый диапазон в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-300"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="60c0c-301">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-301">-or-</span></span> 
 <span data-ttu-id="60c0c-302">Значение параметра <paramref name="byteIndex" /> не является допустимым индексом в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-302"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="60c0c-303">Обнаружение ошибок включено, и <paramref name="chars" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-303">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="60c0c-304">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-304">-or-</span></span> 
 <span data-ttu-id="60c0c-305">Недостаточно емкости <paramref name="bytes" /> от <paramref name="byteIndex" /> до конца массива для размещения полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-305"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="60c0c-306">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="60c0c-306">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="60c0c-307">- и -</span><span class="sxs-lookup"><span data-stu-id="60c0c-307">-and-</span></span> 
 <span data-ttu-id="60c0c-308">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-308"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="uTF8Encoding.GetBytes (s, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="60c0c-309">Объект <see cref="T:System.String" />, содержащий кодируемый набор символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-309">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="60c0c-310">Индекс первого кодируемого символа.</span><span class="sxs-lookup"><span data-stu-id="60c0c-310">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="60c0c-311">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-311">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="60c0c-312">Массив байтов, в который будет помещена результирующая последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-312">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="60c0c-313">Индекс, с которого начинается запись результирующей последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-313">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="60c0c-314">Кодирует набор символов из заданного объекта <see cref="T:System.String" /> в указанный массив байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-314">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="60c0c-315">Фактическое число байтов, записанных в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-315">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-316">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF8Encoding.GetBytes%2A> для сохранения полученных байтов, можно вызвать <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-316">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="60c0c-317">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-317">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="60c0c-318"><xref:System.Text.UTF8Encoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="60c0c-318">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="60c0c-319">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="60c0c-319">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="60c0c-320">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="60c0c-320">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="60c0c-321">Данные для преобразования, такие как данные, считанные из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="60c0c-321">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="60c0c-322">В этом случае или если объем данных слишком велико, что необходимо разделить на небольшие блоки, используйте <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.UTF8Encoding.GetDecoder%2A> метод или <xref:System.Text.UTF8Encoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="60c0c-322">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="60c0c-323">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно добавить префикс поток закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="60c0c-323">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="60c0c-324">Вставка приставку в начале потока байтов (такие как в начале последовательность байтов, записываемых в файл) — это разработчик.</span><span class="sxs-lookup"><span data-stu-id="60c0c-324">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="60c0c-325"><xref:System.Text.UTF8Encoding.GetBytes%2A> Метод не добавить в начало преамбулу последовательность закодированных байтов в начале.</span><span class="sxs-lookup"><span data-stu-id="60c0c-325">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c0c-326">В следующем примере используется <xref:System.Text.UTF8Encoding.GetBytes%2A> способ кодирования диапазон элементов из массива знаков Юникода и сохранение закодированных байтов в диапазоне элементов в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-326">The following example uses the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c0c-327"><paramref name="s" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-327"><paramref name="s" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="60c0c-328">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-328">-or-</span></span> 
 <span data-ttu-id="60c0c-329"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-329"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="60c0c-330">Значение параметра <paramref name="charIndex" />, <paramref name="charCount" /> или <paramref name="byteIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="60c0c-330"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="60c0c-331">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-331">-or-</span></span> 
 <span data-ttu-id="60c0c-332">Параметры <paramref name="charIndex" /> и <paramref name="charCount" /> не указывают допустимый диапазон в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-332"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="60c0c-333">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-333">-or-</span></span> 
 <span data-ttu-id="60c0c-334">Значение параметра <paramref name="byteIndex" /> не является допустимым индексом в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-334"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="60c0c-335">Обнаружение ошибок включено, и <paramref name="s" /> содержит недопустимую последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-335">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="60c0c-336">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-336">-or-</span></span> 
 <span data-ttu-id="60c0c-337">Недостаточно емкости <paramref name="bytes" /> от <paramref name="byteIndex" /> до конца массива для размещения полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-337"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="60c0c-338">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="60c0c-338">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="60c0c-339">- и -</span><span class="sxs-lookup"><span data-stu-id="60c0c-339">-and-</span></span> 
 <span data-ttu-id="60c0c-340">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-340"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="60c0c-341">Вычисляет количество символов, полученных при декодировании последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-341">Calculates the number of characters produced by decoding a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF8Encoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="60c0c-342">Указатель на первый декодируемый байт.</span><span class="sxs-lookup"><span data-stu-id="60c0c-342">A pointer to the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="60c0c-343">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="60c0c-343">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="60c0c-344">Вычисляет количество символов, полученных при декодировании последовательности байтов начиная с заданного указателя байта.</span><span class="sxs-lookup"><span data-stu-id="60c0c-344">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="60c0c-345">Число символов, полученных при декодировании заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-345">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-346">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF8Encoding.GetChars%2A> для сохранения полученных символов, вызвать <xref:System.Text.UTF8Encoding.GetCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-346">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="60c0c-347">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-347">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="60c0c-348"><xref:System.Text.UTF8Encoding.GetCharCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="60c0c-348">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="60c0c-349">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="60c0c-349">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="60c0c-350">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="60c0c-350">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c0c-351"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-351"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="60c0c-352">Значение параметра <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="60c0c-352"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="60c0c-353">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-353">-or-</span></span> 
<span data-ttu-id="60c0c-354">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="60c0c-354">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="60c0c-355">Обнаружение ошибок включено, и параметр <paramref name="bytes" /> содержит недопустимую последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-355">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="60c0c-356">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="60c0c-356">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="60c0c-357">- и -</span><span class="sxs-lookup"><span data-stu-id="60c0c-357">-and-</span></span> 
 <span data-ttu-id="60c0c-358">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-358"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="60c0c-359">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="60c0c-359">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="60c0c-360">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="60c0c-360">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Text.UTF8Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="uTF8Encoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="60c0c-361">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="60c0c-361">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="60c0c-362">Индекс первого декодируемого байта.</span><span class="sxs-lookup"><span data-stu-id="60c0c-362">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="60c0c-363">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="60c0c-363">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="60c0c-364">Вычисляет количество символов, полученных при декодировании последовательности байтов из заданного массива байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-364">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="60c0c-365">Число символов, полученных при декодировании заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-365">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-366">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF8Encoding.GetChars%2A> для сохранения полученных символов, вызвать <xref:System.Text.UTF8Encoding.GetCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-366">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="60c0c-367">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-367">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="60c0c-368"><xref:System.Text.UTF8Encoding.GetCharCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="60c0c-368">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="60c0c-369">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="60c0c-369">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="60c0c-370">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="60c0c-370">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c0c-371">В следующем примере используется <xref:System.Text.UTF8Encoding.GetCharCount%2A> метод, чтобы вернуть количество символов, полученных при декодировании диапазон элементов в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-371">The following example uses the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c0c-372"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-372"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="60c0c-373">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="60c0c-373"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="60c0c-374">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-374">-or-</span></span> 
 <span data-ttu-id="60c0c-375">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-375"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="60c0c-376">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-376">-or-</span></span> 
<span data-ttu-id="60c0c-377">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="60c0c-377">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="60c0c-378">Обнаружение ошибок включено, и параметр <paramref name="bytes" /> содержит недопустимую последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-378">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="60c0c-379">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="60c0c-379">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="60c0c-380">- и -</span><span class="sxs-lookup"><span data-stu-id="60c0c-380">-and-</span></span> 
 <span data-ttu-id="60c0c-381">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-381"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.UTF8Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="60c0c-382">Декодирует последовательность байтов в набор символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-382">Decodes a sequence of bytes into a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF8Encoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="60c0c-383">Указатель на первый декодируемый байт.</span><span class="sxs-lookup"><span data-stu-id="60c0c-383">A pointer to the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="60c0c-384">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="60c0c-384">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="60c0c-385">Указатель на положение, с которого начинается запись результирующего набора символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-385">A pointer to the location at which to start writing the resulting set of characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="60c0c-386">Наибольшее количество символов для записи.</span><span class="sxs-lookup"><span data-stu-id="60c0c-386">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="60c0c-387">Декодирует последовательность байтов, начало которой задается указателем байта, в набор символов, которые сохраняются начиная с заданного указателя символа.</span><span class="sxs-lookup"><span data-stu-id="60c0c-387">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="60c0c-388">Фактическое число символов, записанных в местоположение, указанное с помощью параметра <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-388">The actual number of characters written at the location indicated by <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-389">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF8Encoding.GetChars%2A> для сохранения полученных символов, вызвать <xref:System.Text.UTF8Encoding.GetCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-389">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="60c0c-390">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-390">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="60c0c-391"><xref:System.Text.UTF8Encoding.GetCharCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="60c0c-391">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="60c0c-392">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="60c0c-392">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="60c0c-393">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="60c0c-393">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="60c0c-394">Если массив байтов был возвращен методом виду типа без метки порядка БАЙТОВ диапазон байтов для декодирования включает отметки порядка байтов (BOM), знак U + FFFE включается в массив символов, возвращаемый этим методом.</span><span class="sxs-lookup"><span data-stu-id="60c0c-394">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="60c0c-395">Его можно удалить, вызвав <xref:System.String.TrimStart%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-395">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="60c0c-396">Данные для преобразования, такие как данные, считанные из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="60c0c-396">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="60c0c-397">В этом случае или если объем данных слишком велико, что необходимо разделить на небольшие блоки, используйте <xref:System.Text.Decoder> или <xref:System.Text.Encoder> объекта, предоставляемого <xref:System.Text.UTF8Encoding.GetDecoder%2A> метод или <xref:System.Text.UTF8Encoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="60c0c-397">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c0c-398"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-398"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="60c0c-399">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-399">-or-</span></span> 
 <span data-ttu-id="60c0c-400"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-400"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="60c0c-401">Значение параметра <paramref name="byteCount" /> или <paramref name="charCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="60c0c-401"><paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="60c0c-402">Обнаружение ошибок включено, и параметр <paramref name="bytes" /> содержит недопустимую последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-402">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
<span data-ttu-id="60c0c-403">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-403">-or-</span></span> 
 <span data-ttu-id="60c0c-404"><paramref name="charCount" /> меньше результирующего числа символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-404"><paramref name="charCount" /> is less than the resulting number of characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="60c0c-405">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="60c0c-405">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="60c0c-406">- и -</span><span class="sxs-lookup"><span data-stu-id="60c0c-406">-and-</span></span> 
 <span data-ttu-id="60c0c-407">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-407"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="60c0c-408">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="60c0c-408">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="60c0c-409">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="60c0c-409">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="uTF8Encoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="60c0c-410">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="60c0c-410">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="60c0c-411">Индекс первого декодируемого байта.</span><span class="sxs-lookup"><span data-stu-id="60c0c-411">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="60c0c-412">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="60c0c-412">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="60c0c-413">Массив символов, в который будет помещен результирующий набор символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-413">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="60c0c-414">Индекс, с которого начинается запись результирующего набора символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-414">The index at which to start writing the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="60c0c-415">Декодирует последовательность байтов из заданного массива байтов в указанный массив символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-415">Decodes a sequence of bytes from the specified byte array into the specified character array.</span></span></summary>
        <returns><span data-ttu-id="60c0c-416">Фактическое число символов, записанных в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-416">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-417">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF8Encoding.GetChars%2A> для сохранения полученных символов, вызвать <xref:System.Text.UTF8Encoding.GetCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-417">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="60c0c-418">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-418">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="60c0c-419"><xref:System.Text.UTF8Encoding.GetCharCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="60c0c-419">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="60c0c-420">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="60c0c-420">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="60c0c-421">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="60c0c-421">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="60c0c-422">Если массив байтов был возвращен методом виду типа без метки порядка БАЙТОВ диапазон байтов для декодирования включает отметки порядка байтов (BOM), знак U + FFFE включается в массив символов, возвращаемый этим методом.</span><span class="sxs-lookup"><span data-stu-id="60c0c-422">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="60c0c-423">Его можно удалить, вызвав <xref:System.String.TrimStart%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-423">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="60c0c-424">Данные для преобразования, такие как данные, считанные из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="60c0c-424">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="60c0c-425">В этом случае или если объем данных слишком велико, что необходимо разделить на небольшие блоки, используйте <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.UTF8Encoding.GetDecoder%2A> метод или <xref:System.Text.UTF8Encoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="60c0c-425">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c0c-426">В следующем примере используется <xref:System.Text.UTF8Encoding.GetChars%2A> метод декодировать диапазон элементов в массиве байтов и сохраняет результат в массив символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-426">The following example uses the <xref:System.Text.UTF8Encoding.GetChars%2A> method to decode a range of elements in a byte array and store the result in a character array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c0c-427"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-427"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="60c0c-428">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-428">-or-</span></span> 
 <span data-ttu-id="60c0c-429"><paramref name="chars" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-429"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="60c0c-430">Значение параметра <paramref name="byteIndex" />, <paramref name="byteCount" /> или <paramref name="charIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="60c0c-430"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="60c0c-431">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-431">-or-</span></span> 
 <span data-ttu-id="60c0c-432">Параметры <paramref name="byteindex" /> и <paramref name="byteCount" /> не указывают допустимый диапазон в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-432"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="60c0c-433">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-433">-or-</span></span> 
 <span data-ttu-id="60c0c-434">Значение параметра <paramref name="charIndex" /> не является допустимым индексом в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-434"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="60c0c-435">Обнаружение ошибок включено, и параметр <paramref name="bytes" /> содержит недопустимую последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-435">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
<span data-ttu-id="60c0c-436">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-436">-or-</span></span> 
 <span data-ttu-id="60c0c-437">Недостаточно емкости <paramref name="chars" /> от <paramref name="charIndex" /> до конца массива для размещения полученных символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-437"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="60c0c-438">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="60c0c-438">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="60c0c-439">- и -</span><span class="sxs-lookup"><span data-stu-id="60c0c-439">-and-</span></span> 
 <span data-ttu-id="60c0c-440">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-440"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="uTF8Encoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="60c0c-441">Получает средство декодирования, преобразующее последовательность байтов в кодировке UTF-8 в последовательность символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="60c0c-441">Obtains a decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span></span></summary>
        <returns><span data-ttu-id="60c0c-442">Средство декодирования, преобразующее последовательность байтов в кодировке UTF-8 в последовательность символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="60c0c-442">A decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-443"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> Метод преобразует последовательные блоки байтов в последовательные блоки символов в так же, как <xref:System.Text.UTF8Encoding.GetChars%2A> метод этого класса.</span><span class="sxs-lookup"><span data-stu-id="60c0c-443">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UTF8Encoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="60c0c-444">Тем не менее <xref:System.Text.Decoder> хранит сведения о состоянии между вызовами, что позволяет ему правильно декодировать последовательность байтов, охватывающие блоки.</span><span class="sxs-lookup"><span data-stu-id="60c0c-444">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="60c0c-445"><xref:System.Text.Decoder> Также сохраняет конечные байты в конце блоки данных и использует конечные байты при следующей операции декодирования.</span><span class="sxs-lookup"><span data-stu-id="60c0c-445">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="60c0c-446">Таким образом <xref:System.Text.UTF8Encoding.GetDecoder%2A> и <xref:System.Text.UTF8Encoding.GetEncoder%2A> полезны для передачи по сети и операции с файлами, так как эти операции часто работают с блоками данных вместо поток полного набора данных.</span><span class="sxs-lookup"><span data-stu-id="60c0c-446">Therefore, <xref:System.Text.UTF8Encoding.GetDecoder%2A> and <xref:System.Text.UTF8Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="60c0c-447">Если обнаружение ошибок включено, то есть `throwOnInvalidCharacters` параметр конструктора имеет значение `true`, обнаружение ошибок также включено в <xref:System.Text.Decoder> возвращаемого этим методом.</span><span class="sxs-lookup"><span data-stu-id="60c0c-447">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="60c0c-448">Если включена функция обнаружения ошибок и недопустимую последовательность, состояние декодера не определено, и обработка должна прерываться.</span><span class="sxs-lookup"><span data-stu-id="60c0c-448">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c0c-449">В следующем примере используется <xref:System.Text.UTF8Encoding.GetDecoder%2A> метод для получения декодера UTF-8.</span><span class="sxs-lookup"><span data-stu-id="60c0c-449">The following example uses the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method to obtain a UTF-8 decoder.</span></span> <span data-ttu-id="60c0c-450">Декодер преобразует последовательность байтов в последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-450">The decoder converts a sequence of bytes into a sequence of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/CPP/getdecoder-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/CS/getdecoder-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/VB/getdecoder-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="60c0c-451">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="60c0c-451">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="uTF8Encoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="60c0c-452">Получает средство кодирования, преобразующее последовательность символов Юникода в последовательность байтов в кодировке UTF-8.</span><span class="sxs-lookup"><span data-stu-id="60c0c-452">Obtains an encoder that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="60c0c-453">Объект <see cref="T:System.Text.Encoder" />, преобразующий последовательность символов Юникода в последовательность байтов в кодировке UTF-8.</span><span class="sxs-lookup"><span data-stu-id="60c0c-453">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-454"><xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> Метод преобразует последовательные блоки символов в последовательные блоки байтов в так же, как <xref:System.Text.UTF8Encoding.GetBytes%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-454">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.UTF8Encoding.GetBytes%2A> method.</span></span> <span data-ttu-id="60c0c-455">Тем не менее <xref:System.Text.Encoder> хранит сведения о состоянии между вызовами, что позволяет правильно кодировать последовательности символов, охватывающие блоки.</span><span class="sxs-lookup"><span data-stu-id="60c0c-455">However, a <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="60c0c-456"><xref:System.Text.Encoder> Также сохраняет замыкающие символы в конце блоки данных и использует замыкающие символы при выполнении следующей операции кодирования.</span><span class="sxs-lookup"><span data-stu-id="60c0c-456">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="60c0c-457">Например блок данных может заканчиваться непарные заместителем и сопоставления меньшим заменяющим значением может быть в следующем блоке данных.</span><span class="sxs-lookup"><span data-stu-id="60c0c-457">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="60c0c-458">Таким образом <xref:System.Text.UTF8Encoding.GetDecoder%2A> и <xref:System.Text.UTF8Encoding.GetEncoder%2A> полезны для передачи по сети и операции с файлами, так как эти операции часто работают с блоками данных вместо поток полного набора данных.</span><span class="sxs-lookup"><span data-stu-id="60c0c-458">Therefore, <xref:System.Text.UTF8Encoding.GetDecoder%2A> and <xref:System.Text.UTF8Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="60c0c-459">Если обнаружение ошибок включено, то есть `throwOnInvalidCharacters` параметр конструктора имеет значение `true`, обнаружение ошибок также включено в <xref:System.Text.Encoder> возвращаемого этим методом.</span><span class="sxs-lookup"><span data-stu-id="60c0c-459">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> returned by this method.</span></span> <span data-ttu-id="60c0c-460">Если включена функция обнаружения ошибок и недопустимую последовательность, состояние кодировщика является неопределенным и обработка должна прерываться.</span><span class="sxs-lookup"><span data-stu-id="60c0c-460">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c0c-461">В следующем примере используется <xref:System.Text.UTF8Encoding.GetEncoder%2A> метод, чтобы получить кодировщик для преобразования последовательности символов в кодировке UTF-8-закодированную последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-461">The following example uses the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method to obtain an encoder to convert a sequence of characters into a UTF-8 encoded sequence of bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/CPP/getencoder-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/CS/getencoder-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/VB/getencoder-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="60c0c-462">Основные сведения о кодировках</span><span class="sxs-lookup"><span data-stu-id="60c0c-462">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uTF8Encoding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="60c0c-463">Возвращает хэш-код текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="60c0c-463">Returns the hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="60c0c-464">Хэш-код для текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="60c0c-464">The hash code for the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="60c0c-465">В следующем примере используется <xref:System.Text.UTF8Encoding.GetHashCode%2A> метод, чтобы вернуть хэш-код для <xref:System.Text.UTF8Encoding> экземпляров.</span><span class="sxs-lookup"><span data-stu-id="60c0c-465">The following example uses the <xref:System.Text.UTF8Encoding.GetHashCode%2A> method to return a hash code for <xref:System.Text.UTF8Encoding> instances.</span></span> <span data-ttu-id="60c0c-466">Обратите внимание на то, что хэш-код, возвращаемый этим методом зависит от конструктора, используемого для создания <xref:System.Text.UTF8Encoding> объекта.</span><span class="sxs-lookup"><span data-stu-id="60c0c-466">Notice that the hash code returned by this method depends on the constructor used to create the <xref:System.Text.UTF8Encoding> object.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/CPP/gethashcode-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/CS/gethashcode-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/VB/gethashcode-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="uTF8Encoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount"><span data-ttu-id="60c0c-467">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-467">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="60c0c-468">Вычисляет максимальное количество байтов, полученных при кодировании заданного числа символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-468">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="60c0c-469">Максимальное количество байтов, полученных при кодировании заданного количества символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-469">The maximum number of bytes produced by encoding the specified number of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-470">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF8Encoding.GetBytes%2A> для сохранения полученных байтов, можно вызвать <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-470">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="60c0c-471">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-471">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="60c0c-472"><xref:System.Text.UTF8Encoding.GetByteCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="60c0c-472">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="60c0c-473"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> — Это худший номер, включая худшем случае для выбранного в данный момент <xref:System.Text.EncoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="60c0c-473"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="60c0c-474">Если вы выбрали переход на резервный ресурс со строкой потенциально большого объема, <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> может возвращать большие значения.</span><span class="sxs-lookup"><span data-stu-id="60c0c-474">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="60c0c-475">В большинстве случаев этот метод возвращает адекватные числа для коротких строк.</span><span class="sxs-lookup"><span data-stu-id="60c0c-475">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="60c0c-476">Для больших строк может потребоваться выбирать между использованием очень больших буферов и перехват ошибок в тех редких случаях, что превышено более рациональной буфера.</span><span class="sxs-lookup"><span data-stu-id="60c0c-476">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="60c0c-477">Можно также рассмотреть возможность использования другого подхода <xref:System.Text.UTF8Encoding.GetByteCount%2A> или <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="60c0c-477">You might also want to consider a different approach using <xref:System.Text.UTF8Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="60c0c-478">Например, текст на английском и многих других языков, часто требуется только один байт UTF-8 для представления символа, но возвращаемое значение <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> должен допускать возможность, что строка для преобразования будет состоять только из символов, в которых требуется четыре байта.</span><span class="sxs-lookup"><span data-stu-id="60c0c-478">For example, text in English and many other languages often needs only one UTF-8 byte to represent a character, but the number returned by <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> has to allow for the possibility that the string to be converted will consist entirely of characters that each require four bytes.</span></span>  
  
 <span data-ttu-id="60c0c-479"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> не имеет отношения к <xref:System.Text.UTF8Encoding.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="60c0c-479"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.UTF8Encoding.GetChars%2A>.</span></span> <span data-ttu-id="60c0c-480">Если ваше приложение должно использовать с ту же функцию <xref:System.Text.UTF8Encoding.GetChars%2A>, следует использовать <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="60c0c-480">If your application needs a similar function to use with <xref:System.Text.UTF8Encoding.GetChars%2A>, it should use <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c0c-481">`GetMaxByteCount(N)` не обязательно совпадает со значением `N* GetMaxByteCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="60c0c-481">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c0c-482">В следующем примере используется <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод вернет максимальное число байтов, необходимых для кодирования указанное количество символов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-482">The following example uses the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method to return the maximum number of bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="60c0c-483">Значение параметра <paramref name="charCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="60c0c-483"><paramref name="charCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="60c0c-484">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-484">-or-</span></span> 
<span data-ttu-id="60c0c-485">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="60c0c-485">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="60c0c-486">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="60c0c-486">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="60c0c-487">- и -</span><span class="sxs-lookup"><span data-stu-id="60c0c-487">-and-</span></span> 
 <span data-ttu-id="60c0c-488">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-488"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="uTF8Encoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount"><span data-ttu-id="60c0c-489">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="60c0c-489">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="60c0c-490">Вычисляет максимальное количество символов, полученных при декодировании заданного числа байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-490">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="60c0c-491">Максимальное количество символов, полученных при декодировании заданного количества байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-491">The maximum number of characters produced by decoding the specified number of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-492">Для вычисления размера точное массива, необходимого <xref:System.Text.UTF8Encoding.GetChars%2A> для хранения полученных символов, вызовите <xref:System.Text.UTF8Encoding.GetCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-492">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, you call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="60c0c-493">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-493">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="60c0c-494"><xref:System.Text.UTF8Encoding.GetCharCount%2A> Метод выделяет обычно меньше памяти, хотя <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="60c0c-494">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="60c0c-495"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> — Это худший номер, включая худшем случае для выбранного в данный момент <xref:System.Text.DecoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="60c0c-495"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="60c0c-496">Если вы выбрали переход на резервный ресурс со строкой потенциально большого объема, <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> может возвращать большие значения.</span><span class="sxs-lookup"><span data-stu-id="60c0c-496">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="60c0c-497">В большинстве случаев этот метод возвращает адекватные числа для коротких строк.</span><span class="sxs-lookup"><span data-stu-id="60c0c-497">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="60c0c-498">Для больших строк может потребоваться выбирать между использованием очень больших буферов и перехват ошибок в тех редких случаях, что превышено более рациональной буфера.</span><span class="sxs-lookup"><span data-stu-id="60c0c-498">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span>  <span data-ttu-id="60c0c-499">Можно также рассмотреть возможность использования другого подхода <xref:System.Text.UTF8Encoding.GetCharCount%2A> или <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="60c0c-499">You might also want to consider a different approach using <xref:System.Text.UTF8Encoding.GetCharCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="60c0c-500"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> не имеет отношения к <xref:System.Text.UTF8Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="60c0c-500"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.UTF8Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="60c0c-501">Если ваше приложение должно использовать с ту же функцию <xref:System.Text.UTF8Encoding.GetBytes%2A>, следует использовать <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="60c0c-501">If your application needs a similar function to use with <xref:System.Text.UTF8Encoding.GetBytes%2A>, it should use <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c0c-502">`GetMaxCharCount(N)` не обязательно совпадает со значением `N* GetMaxCharCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="60c0c-502">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c0c-503">В следующем примере используется <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> метод вернет максимальное количество символов, полученных при декодировании указанное число байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-503">The following example uses the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method to return the maximum number of characters produced by decoding a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="60c0c-504">Значение параметра <paramref name="byteCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="60c0c-504"><paramref name="byteCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="60c0c-505">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-505">-or-</span></span> 
<span data-ttu-id="60c0c-506">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="60c0c-506">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="60c0c-507">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="60c0c-507">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="60c0c-508">- и -</span><span class="sxs-lookup"><span data-stu-id="60c0c-508">-and-</span></span> 
 <span data-ttu-id="60c0c-509">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-509"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberSignature Language="F#" Value="override this.GetPreamble : unit -&gt; byte[]" Usage="uTF8Encoding.GetPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="60c0c-510">Возвращает метку порядка байтов Юникода в кодировке UTF-8, если кодирующий объект <see cref="T:System.Text.UTF8Encoding" /> настроен для ее предоставления.</span><span class="sxs-lookup"><span data-stu-id="60c0c-510">Returns a Unicode byte order mark encoded in UTF-8 format, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span></span></summary>
        <returns><span data-ttu-id="60c0c-511">Массив байтов, содержащий метку порядка байтов Юникода, если кодирующий объект <see cref="T:System.Text.UTF8Encoding" /> настроен для ее предоставления.</span><span class="sxs-lookup"><span data-stu-id="60c0c-511">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span></span> <span data-ttu-id="60c0c-512">В противном случае этот метод возвращает массив байтов нулевой длины.</span><span class="sxs-lookup"><span data-stu-id="60c0c-512">Otherwise, this method returns a zero-length byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-513"><xref:System.Text.UTF8Encoding> Объект может предоставлять преамбулу, который является массив байтов, который может иметь префикс в последовательность байтов, полученных в результате кодирования.</span><span class="sxs-lookup"><span data-stu-id="60c0c-513">The <xref:System.Text.UTF8Encoding> object can provide a preamble, which is a byte array that can be prefixed to the sequence of bytes that result from the encoding process.</span></span> <span data-ttu-id="60c0c-514">Предшествующим последовательность закодированных байтов с метки порядка байтов (кодовая точка U + FEFF) декодер может определить порядок байтов и формат преобразования или UTF.</span><span class="sxs-lookup"><span data-stu-id="60c0c-514">Prefacing a sequence of encoded bytes with a byte order mark (code point U+FEFF) helps the decoder determine the byte order and the transformation format, or UTF.</span></span> <span data-ttu-id="60c0c-515">Отметки порядка байтов (BOM) Юникода сериализуется как 0xEF 0xBB 0xBF.</span><span class="sxs-lookup"><span data-stu-id="60c0c-515">The Unicode byte order mark (BOM) is serialized as 0xEF 0xBB 0xBF.</span></span> <span data-ttu-id="60c0c-516">Обратите внимание на то, что потоки в кодировке Юникод не требуется ни для рекомендует использовать метки порядка байтов UTF-8.</span><span class="sxs-lookup"><span data-stu-id="60c0c-516">Note that the Unicode Standard neither requires nor recommends the use of a BOM for UTF-8 encoded streams.</span></span>  
  
 <span data-ttu-id="60c0c-517">Можно создать экземпляр <xref:System.Text.UTF8Encoding> которого <xref:System.Text.UTF8Encoding.GetPreamble%2A> метод возвращает допустимый Спецификации одним из следующих способов:</span><span class="sxs-lookup"><span data-stu-id="60c0c-517">You can instantiate a <xref:System.Text.UTF8Encoding> object whose <xref:System.Text.UTF8Encoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="60c0c-518">Получая <xref:System.Text.UTF8Encoding> объект, возвращаемый <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="60c0c-518">By retrieving the <xref:System.Text.UTF8Encoding> object returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="60c0c-519">Путем вызова <xref:System.Text.UTF8Encoding> конструктор с `encoderShouldEmitUTF8Identifier` параметр и присвоить ему значение, равным `true`.</span><span class="sxs-lookup"><span data-stu-id="60c0c-519">By calling a <xref:System.Text.UTF8Encoding> constructor with a `encoderShouldEmitUTF8Identifier` parameter and setting its value set to `true`.</span></span>  
  
 <span data-ttu-id="60c0c-520">Все остальные <xref:System.Text.UTF8Encoding> объекты настроены для возвращения пустой массив, а не допустимые метки порядка БАЙТОВ.</span><span class="sxs-lookup"><span data-stu-id="60c0c-520">All other <xref:System.Text.UTF8Encoding> objects are configured to return an empty array rather than a valid BOM.</span></span>  
  
 <span data-ttu-id="60c0c-521">Спецификации предоставляют почти точную идентификацию кодировки для файлов, которые в противном случае теряют ссылку на их кодировании, например без тегов или неправильно с тегами веб-данных или случайное текстовые файлы, сохраненные, когда организация не имели расставленными.</span><span class="sxs-lookup"><span data-stu-id="60c0c-521">The BOM provide nearly certain identification of an encoding for files that otherwise have lost a reference to their encoding, such as untagged or improperly tagged web data or random text files stored when a business did not have international concerns.</span></span> <span data-ttu-id="60c0c-522">Часто проблемы в работе пользователей избавить согласованных и правильных тегов в данных.</span><span class="sxs-lookup"><span data-stu-id="60c0c-522">Often user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="60c0c-523">Стандарты, которые предоставляют тип кодировки отчасти избыточна метки порядка БАЙТОВ.</span><span class="sxs-lookup"><span data-stu-id="60c0c-523">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="60c0c-524">Тем не менее он может использоваться для помочь серверу отправлять правильный заголовок кодировки.</span><span class="sxs-lookup"><span data-stu-id="60c0c-524">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="60c0c-525">Кроме того он может использоваться как переход на резервный ресурс в случае кодировку, в противном случае потери.</span><span class="sxs-lookup"><span data-stu-id="60c0c-525">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="60c0c-526">Есть некоторые недостатки использования метки порядка БАЙТОВ.</span><span class="sxs-lookup"><span data-stu-id="60c0c-526">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="60c0c-527">Например сложно выбрать способы ограничения полей базы данных, используйте метки порядка БАЙТОВ.</span><span class="sxs-lookup"><span data-stu-id="60c0c-527">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="60c0c-528">Объединение файлов может стать проблемой также, например, когда файлы будут объединены таким образом, что необязательный символ может оказаться в центре данных.</span><span class="sxs-lookup"><span data-stu-id="60c0c-528">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="60c0c-529">Несмотря на некоторые недостатки тем не менее, использование спецификации настоятельно рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="60c0c-529">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="60c0c-530">Дополнительные сведения о порядке байтов и отметки порядка байтов, см. в разделе стандарта Юникод на [домашней странице Юникода](https://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="60c0c-530">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](https://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="60c0c-531">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно добавить префикс начало потока закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="60c0c-531">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix the beginning of a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="60c0c-532">Обратите внимание, что <xref:System.Text.UTF8Encoding.GetBytes%2A> метод не добавить в начало метки порядка БАЙТОВ в последовательность закодированных байтов; предоставление метки порядка БАЙТОВ в начале соответствующих байтового потока является обязанностью разработчика.</span><span class="sxs-lookup"><span data-stu-id="60c0c-532">Note that the <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c0c-533">В следующем примере используется <xref:System.Text.UTF8Encoding.GetPreamble%2A> метод для возврата байтов Юникода порядок следования, закодированную в формате UTF-8.</span><span class="sxs-lookup"><span data-stu-id="60c0c-533">The following example uses the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to return the Unicode byte order mark encoded in UTF-8 format.</span></span> <span data-ttu-id="60c0c-534">Обратите внимание, что конструктор по умолчанию для <xref:System.Text.UTF8Encoding> преамбула не предоставляется.</span><span class="sxs-lookup"><span data-stu-id="60c0c-534">Notice that the default constructor for <xref:System.Text.UTF8Encoding> does not provide a preamble.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/CPP/getpreamble-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/CS/getpreamble-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/VB/getpreamble-.vb#1)]  
  
 <span data-ttu-id="60c0c-535">В следующем примере создается два <xref:System.Text.UTF8Encoding> объектов, то первое путем вызова без параметров <xref:System.Text.UTF8Encoding.%23ctor> конструктор, который не поддерживает метки порядка БАЙТОВ, а второе — путем вызова <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29> конструктор с его `encoderShouldEmitUTF8Identifier` аргумент значение `true`.</span><span class="sxs-lookup"><span data-stu-id="60c0c-535">The following example instantiates two <xref:System.Text.UTF8Encoding> objects, the first by calling the parameterless <xref:System.Text.UTF8Encoding.%23ctor> constructor, which does not provide a BOM, and the second by calling the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29> constructor with its `encoderShouldEmitUTF8Identifier` argument set to `true`.</span></span> <span data-ttu-id="60c0c-536">Затем он вызывает <xref:System.Text.UTF8Encoding.GetPreamble%2A> метод для записи метки порядка БАЙТОВ в файл перед записью строка в кодировке UF8.</span><span class="sxs-lookup"><span data-stu-id="60c0c-536">It then calls the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to write the BOM to a file before writing a UF8-encoded string.</span></span> <span data-ttu-id="60c0c-537">Как выходные данные консоли из в примере показано, файл, который сохраняет байты из второго кодировщика имеет три байта больше, чем для первого.</span><span class="sxs-lookup"><span data-stu-id="60c0c-537">As the console output from the example shows, the file that saves the bytes from the second encoder has three more bytes than the first.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getpreamble/cs/getpreamble1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getpreamble/vb/getpreamble1.vb#1)]  
  
 <span data-ttu-id="60c0c-538">Вы также можете сравнить файлы с помощью `fc` команды в окне консоли, или можно проверить файлы в текстовом редакторе, который включает режим шестнадцатеричное представление.</span><span class="sxs-lookup"><span data-stu-id="60c0c-538">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="60c0c-539">Обратите внимание, что если файл открыт в редакторе, который поддерживает UTF-8, Спецификации не отображается.</span><span class="sxs-lookup"><span data-stu-id="60c0c-539">Note that when the file is opened in an editor that supports UTF-8, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="uTF8Encoding.GetString (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="60c0c-540">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="60c0c-540">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="60c0c-541">Индекс первого декодируемого байта.</span><span class="sxs-lookup"><span data-stu-id="60c0c-541">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="60c0c-542">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="60c0c-542">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="60c0c-543">Декодирует диапазон байтов из массива байтов в строку.</span><span class="sxs-lookup"><span data-stu-id="60c0c-543">Decodes a range of bytes from a byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="60c0c-544">Объект <see cref="T:System.String" />, содержащий результаты декодирования заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-544">A <see cref="T:System.String" /> containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c0c-545">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="60c0c-545">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="60c0c-546">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="60c0c-546">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="60c0c-547">Если массив байтов был возвращен методом виду типа без метки порядка БАЙТОВ диапазон байтов для декодирования включает отметки порядка байтов (BOM), знак U + FFFE включается в массив символов, возвращаемый этим методом.</span><span class="sxs-lookup"><span data-stu-id="60c0c-547">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="60c0c-548">Его можно удалить, вызвав <xref:System.String.TrimStart%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-548">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="60c0c-549">Данные для преобразования, такие как данные, считанные из потока, могут быть доступны только в последовательных блоках.</span><span class="sxs-lookup"><span data-stu-id="60c0c-549">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="60c0c-550">В этом случае или если объем данных слишком велико, что необходимо разделить на небольшие блоки, используйте <xref:System.Text.Decoder> или <xref:System.Text.Encoder> предоставляемые <xref:System.Text.UTF8Encoding.GetDecoder%2A> метод или <xref:System.Text.UTF8Encoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="60c0c-550">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c0c-551">Следующий пример инициализирует массив путем вызова <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод, чтобы определить точно, сколько байтов являются обязательными для закодированной строки, а затем добавив размер отметки порядка байтов (BOM).</span><span class="sxs-lookup"><span data-stu-id="60c0c-551">The following example initializes an array by calling the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="60c0c-552">Затем в примере вызывается <xref:System.Text.UTF8Encoding.GetPreamble%2A> для сохранения метки порядка БАЙТОВ в массив до вызова метода <xref:System.Text.UTF8Encoding.GetBytes%2A> метод для хранения закодированных байтов в массив.</span><span class="sxs-lookup"><span data-stu-id="60c0c-552">The example then calls the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="60c0c-553">Затем в примере вызывается <xref:System.Text.UTF8Encoding.GetString%2A> метод Декодируемая строка.</span><span class="sxs-lookup"><span data-stu-id="60c0c-553">The example then calls the <xref:System.Text.UTF8Encoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/cs/getstring1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/vb/getstring1.vb#1)]  
  
 <span data-ttu-id="60c0c-554">Обратите внимание на то, что в этом случае расшифрованную строку отличается от исходной строки, так как он начинается с метки порядка байтов в 16-разрядное U + FFFD.</span><span class="sxs-lookup"><span data-stu-id="60c0c-554">Note that in this case the decoded string differs from the original string, since it begins with a 16-bit byte order mark U+FFFD.</span></span> <span data-ttu-id="60c0c-555">Это означает, что две строки будут неравны и, если строка выходных данных, Спецификации отображается как замещающий символ «?».</span><span class="sxs-lookup"><span data-stu-id="60c0c-555">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span> <span data-ttu-id="60c0c-556">Чтобы удалить метки порядка БАЙТОВ в начале строки, можно вызвать <xref:System.String.TrimStart%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="60c0c-556">To remove the BOM at the beginning of the string, you can call the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c0c-557"><paramref name="bytes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-557"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="60c0c-558">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="60c0c-558"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="60c0c-559">-или-</span><span class="sxs-lookup"><span data-stu-id="60c0c-559">-or-</span></span> 
 <span data-ttu-id="60c0c-560">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-560"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="60c0c-561">Обнаружение ошибок включено, и параметр <paramref name="bytes" /> содержит недопустимую последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="60c0c-561">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="60c0c-562">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="60c0c-562">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="60c0c-563">- и -</span><span class="sxs-lookup"><span data-stu-id="60c0c-563">-and-</span></span> 
 <span data-ttu-id="60c0c-564">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="60c0c-564"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>