<Type Name="TaiwanLunisolarCalendar" FullName="System.Globalization.TaiwanLunisolarCalendar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3c862e38f96eb656e821df4578c2394d6258750a" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58727142" /></Metadata><TypeSignature Language="C#" Value="public class TaiwanLunisolarCalendar : System.Globalization.EastAsianLunisolarCalendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TaiwanLunisolarCalendar extends System.Globalization.EastAsianLunisolarCalendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.TaiwanLunisolarCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class TaiwanLunisolarCalendar&#xA;Inherits EastAsianLunisolarCalendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaiwanLunisolarCalendar : System::Globalization::EastAsianLunisolarCalendar" />
  <TypeSignature Language="F#" Value="type TaiwanLunisolarCalendar = class&#xA;    inherit EastAsianLunisolarCalendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.EastAsianLunisolarCalendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7b068-101">Представляет тайваньский лунно-солнечный календарь.</span><span class="sxs-lookup"><span data-stu-id="7b068-101">Represents the Taiwan lunisolar calendar.</span></span> <span data-ttu-id="7b068-102">Как и в тайваньском календаре, годы подсчитываются с помощью григорианского календаря, а дни и месяцы — с помощью лунно-солнечного календаря.</span><span class="sxs-lookup"><span data-stu-id="7b068-102">As for the Taiwan calendar, years are calculated using the Gregorian calendar, while days and months are calculated using the lunisolar calendar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b068-103">Тайваньский лунно-солнечный календарь работает так же, как григорианского календаря, за исключением того, что отличаются года и эры.</span><span class="sxs-lookup"><span data-stu-id="7b068-103">The Taiwan lunisolar calendar works exactly like the Gregorian calendar, except that the year and era are different.</span></span> <span data-ttu-id="7b068-104"><xref:System.Globalization.TaiwanLunisolarCalendar> Класс вычисляет лет с помощью григорианского календаря, дни и месяцы с помощью <xref:System.Globalization.EastAsianLunisolarCalendar> класса и распознает только текущую эру.</span><span class="sxs-lookup"><span data-stu-id="7b068-104">The <xref:System.Globalization.TaiwanLunisolarCalendar> class calculates years using the Gregorian calendar, days and months using the <xref:System.Globalization.EastAsianLunisolarCalendar> class, and recognizes only the current era.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7b068-105">Дополнительные сведения об использовании <xref:System.Globalization.TaiwanLunisolarCalendar> класса, а другой календарь на классы в .NET Framework, см. в разделе [работа с календарями](~/docs/standard/datetime/working-with-calendars.md).</span><span class="sxs-lookup"><span data-stu-id="7b068-105">For information about using the <xref:System.Globalization.TaiwanLunisolarCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
 <span data-ttu-id="7b068-106"><xref:System.Globalization.TaiwanLunisolarCalendar> Класс является производным от <xref:System.Globalization.EastAsianLunisolarCalendar> класс, который представляет лунно-солнечный календарь.</span><span class="sxs-lookup"><span data-stu-id="7b068-106">The <xref:System.Globalization.TaiwanLunisolarCalendar> class is derived from the <xref:System.Globalization.EastAsianLunisolarCalendar> class, which represents the lunisolar calendar.</span></span> <span data-ttu-id="7b068-107"><xref:System.Globalization.EastAsianLunisolarCalendar> Класс поддерживает цикл шестидесятилетним год (который повторяется каждые 60 лет) в дополнение к Солнечной годах и месяцах лунного.</span><span class="sxs-lookup"><span data-stu-id="7b068-107">The <xref:System.Globalization.EastAsianLunisolarCalendar> class supports the sexagenary year cycle (which repeats every 60 years) in addition to solar years and lunar months.</span></span> <span data-ttu-id="7b068-108">Каждый солнечный год в календаре связан с шестидесятилетним годом, небесного ствола и земной ветви, и эти календари могут иметь високосные месяцы после любой месяц года.</span><span class="sxs-lookup"><span data-stu-id="7b068-108">Each solar year in the calendar is associated with a Sexagenary Year, a Celestial Stem, and a Terrestrial Branch, and these calendars can have leap months after any month of the year.</span></span>  
  
 <span data-ttu-id="7b068-109">Високосный месяц может возникнуть после любого месяца в году.</span><span class="sxs-lookup"><span data-stu-id="7b068-109">A leap month can occur after any month in a year.</span></span> <span data-ttu-id="7b068-110">Например <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=nameWithType> метод возвращает число от 1 до 13, указывающее месяц, связанный с указанной даты.</span><span class="sxs-lookup"><span data-stu-id="7b068-110">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=nameWithType> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="7b068-111">Если между восьмой и девятый месяцы года, високосным месяцем <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> метод возвращает значение 8 для восьмого месяца, 9 для високосного восьмого месяца и 10 для девятый месяц.</span><span class="sxs-lookup"><span data-stu-id="7b068-111">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 <span data-ttu-id="7b068-112">В настоящее время <xref:System.Globalization.TaiwanLunisolarCalendar> не используется каким-либо языков и региональных параметров, поддерживаемых <xref:System.Globalization.CultureInfo> класса.</span><span class="sxs-lookup"><span data-stu-id="7b068-112">Currently, the <xref:System.Globalization.TaiwanLunisolarCalendar> is not used by any of the cultures supported by the <xref:System.Globalization.CultureInfo> class.</span></span> <span data-ttu-id="7b068-113">Таким образом этот класс можно использовать только для вычисления дат в тайваньский лунно-солнечный календарь.</span><span class="sxs-lookup"><span data-stu-id="7b068-113">Therefore, this class can be used only to calculate dates in the Taiwan lunisolar calendar.</span></span>  
  
 <span data-ttu-id="7b068-114">Каждый <xref:System.Globalization.CultureInfo> объект поддерживает несколько календарей.</span><span class="sxs-lookup"><span data-stu-id="7b068-114">Each <xref:System.Globalization.CultureInfo> object supports a set of calendars.</span></span> <span data-ttu-id="7b068-115"><xref:System.Globalization.CultureInfo.Calendar%2A> Свойство возвращает календаря по умолчанию для языка и региональных параметров и <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> свойство возвращает массив, содержащий все календари, поддерживаемые языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="7b068-115">The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture.</span></span> <span data-ttu-id="7b068-116">Чтобы изменить календарь, используемый <xref:System.Globalization.CultureInfo>, приложение должно задать <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> в новый <xref:System.Globalization.Calendar>.</span><span class="sxs-lookup"><span data-stu-id="7b068-116">To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> to a new <xref:System.Globalization.Calendar>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.TaiwanCalendar" />
    <related type="Article" href="~/docs/standard/datetime/working-with-calendars.md"><span data-ttu-id="7b068-117">Работа с календарями</span><span class="sxs-lookup"><span data-stu-id="7b068-117">Working with Calendars</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a"><span data-ttu-id="7b068-118">Пример: Calendar Week Range Utility</span><span class="sxs-lookup"><span data-stu-id="7b068-118">Sample: Calendar Week Range Utility</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaiwanLunisolarCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanLunisolarCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaiwanLunisolarCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7b068-119">Инициализирует новый экземпляр класса <see cref="T:System.Globalization.TaiwanLunisolarCalendar" />.</span><span class="sxs-lookup"><span data-stu-id="7b068-119">Initializes a new instance of the <see cref="T:System.Globalization.TaiwanLunisolarCalendar" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DaysInYearBeforeMinSupportedYear">
      <MemberSignature Language="C#" Value="protected override int DaysInYearBeforeMinSupportedYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanLunisolarCalendar.DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DaysInYearBeforeMinSupportedYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int DaysInYearBeforeMinSupportedYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DaysInYearBeforeMinSupportedYear : int" Usage="System.Globalization.TaiwanLunisolarCalendar.DaysInYearBeforeMinSupportedYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7b068-120">Получает число дней в году, который предшествует году, указанному свойством <see cref="P:System.Globalization.TaiwanLunisolarCalendar.MinSupportedDateTime" />.</span><span class="sxs-lookup"><span data-stu-id="7b068-120">Gets the number of days in the year that precedes the year specified by the <see cref="P:System.Globalization.TaiwanLunisolarCalendar.MinSupportedDateTime" /> property.</span></span></summary>
        <value><span data-ttu-id="7b068-121">Число дней в году, который предшествует году, указанному с помощью <see cref="P:System.Globalization.TaiwanLunisolarCalendar.MinSupportedDateTime" />.</span><span class="sxs-lookup"><span data-stu-id="7b068-121">The number of days in the year that precedes the year specified by <see cref="P:System.Globalization.TaiwanLunisolarCalendar.MinSupportedDateTime" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b068-122">Это свойство возвращает значение константы 384.</span><span class="sxs-lookup"><span data-stu-id="7b068-122">This property returns a constant value of 384.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanLunisolarCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.TaiwanLunisolarCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7b068-123">Получает эры, относящиеся к текущему объекту <see cref="T:System.Globalization.TaiwanLunisolarCalendar" />.</span><span class="sxs-lookup"><span data-stu-id="7b068-123">Gets the eras that are relevant to the current <see cref="T:System.Globalization.TaiwanLunisolarCalendar" /> object.</span></span></summary>
        <value><span data-ttu-id="7b068-124">Массив, состоящий из одного элемента, который имеет значение, всегда равное текущей эре.</span><span class="sxs-lookup"><span data-stu-id="7b068-124">An array that consists of a single element having a value that is always the current era.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b068-125">Значения в массиве, возвращенный этим свойством, являются числами в диапазоне от 1 до самого большого числа эры.</span><span class="sxs-lookup"><span data-stu-id="7b068-125">The values in the array returned by this property are numbers that range from 1 to the largest era number.</span></span> <span data-ttu-id="7b068-126">Наибольшее число эры возвращается в первом элементе массива и наименьшее число эры возвращается в последнем элементе.</span><span class="sxs-lookup"><span data-stu-id="7b068-126">The largest era number is returned in the first array element and the smallest era number is returned in the last element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanLunisolarCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetEra : DateTime -&gt; int" Usage="taiwanLunisolarCalendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="7b068-127"><see cref="T:System.DateTime" />, который требуется прочитать.</span><span class="sxs-lookup"><span data-stu-id="7b068-127">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="7b068-128">Возвращает эру, соответствующую указанному объекту <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="7b068-128">Retrieves the era that corresponds to the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="7b068-129">Целое число, представляющее эру в заданном параметре <paramref name="time" />.</span><span class="sxs-lookup"><span data-stu-id="7b068-129">An integer that represents the era specified in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanLunisolarCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.TaiwanLunisolarCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7b068-130">Получает максимальные дату и время, поддерживаемые классом <see cref="T:System.Globalization.TaiwanLunisolarCalendar" />.</span><span class="sxs-lookup"><span data-stu-id="7b068-130">Gets the maximum date and time supported by the <see cref="T:System.Globalization.TaiwanLunisolarCalendar" /> class.</span></span></summary>
        <value><span data-ttu-id="7b068-131">Самые последние дата и время, поддерживаемые классом <see cref="T:System.Globalization.TaiwanLunisolarCalendar" />, что эквивалентно последнему мгновению 10 февраля 2051 года нашей эры.</span><span class="sxs-lookup"><span data-stu-id="7b068-131">The latest date and time supported by the <see cref="T:System.Globalization.TaiwanLunisolarCalendar" /> class, which is equivalent to the last moment of February 10, 2051 C.E.</span></span> <span data-ttu-id="7b068-132">по григорианскому календарю.</span><span class="sxs-lookup"><span data-stu-id="7b068-132">in the Gregorian calendar.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanLunisolarCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.TaiwanLunisolarCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7b068-133">Возвращает минимальные дату и время, поддерживаемые классом <see cref="T:System.Globalization.TaiwanLunisolarCalendar" />.</span><span class="sxs-lookup"><span data-stu-id="7b068-133">Gets the minimum date and time supported by the <see cref="T:System.Globalization.TaiwanLunisolarCalendar" /> class.</span></span></summary>
        <value><span data-ttu-id="7b068-134">Самые ранние дата и время, поддерживаемые классом <see cref="T:System.Globalization.TaiwanLunisolarCalendar" />, что эквивалентно первому мгновению 18 февраля 1912 года нашей эры.</span><span class="sxs-lookup"><span data-stu-id="7b068-134">The earliest date and time supported by the <see cref="T:System.Globalization.TaiwanLunisolarCalendar" /> class, which is equivalent to the first moment of February 18, 1912 C.E.</span></span> <span data-ttu-id="7b068-135">по григорианскому календарю.</span><span class="sxs-lookup"><span data-stu-id="7b068-135">in the Gregorian calendar.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>