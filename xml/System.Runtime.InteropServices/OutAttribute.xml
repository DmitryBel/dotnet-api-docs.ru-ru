<Type Name="OutAttribute" FullName="System.Runtime.InteropServices.OutAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="885afe3e646339166ad260a0b8aea9a7488f92a8" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56385605" /></Metadata><TypeSignature Language="C#" Value="public sealed class OutAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OutAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.OutAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OutAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type OutAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="16d42-101">Показывает, что требуется маршалинг данных из вызываемого объекта в вызывающий.</span><span class="sxs-lookup"><span data-stu-id="16d42-101">Indicates that data should be marshaled from callee back to caller.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16d42-102">Этот атрибут можно применять к параметрам.</span><span class="sxs-lookup"><span data-stu-id="16d42-102">You can apply this attribute to parameters.</span></span>  
  
 <span data-ttu-id="16d42-103"><xref:System.Runtime.InteropServices.OutAttribute> Является необязательным.</span><span class="sxs-lookup"><span data-stu-id="16d42-103">The <xref:System.Runtime.InteropServices.OutAttribute> is optional.</span></span> <span data-ttu-id="16d42-104">Атрибут поддерживается для COM-взаимодействия и неуправляемого кода только.</span><span class="sxs-lookup"><span data-stu-id="16d42-104">The attribute is supported for COM interop and platform invoke only.</span></span> <span data-ttu-id="16d42-105">В отсутствие явных параметров маршалер взаимодействия использует правила на основе параметра типа, является ли этот параметр передается по значению или по ссылке и, является ли тип преобразуемые и непреобразуемые.</span><span class="sxs-lookup"><span data-stu-id="16d42-105">In the absence of explicit settings, the interop marshaler assumes rules based on the parameter type, whether the parameter is passed by reference or by value, and whether the type is blittable or non-blittable.</span></span> <span data-ttu-id="16d42-106">Например <xref:System.Text.StringBuilder> класса всегда предполагается, что ввода-вывода и массив строк, передаваемые по значению предполагается, что в.</span><span class="sxs-lookup"><span data-stu-id="16d42-106">For example, the <xref:System.Text.StringBuilder> class is always assumed to be In/Out and an array of strings passed by value is assumed to be In.</span></span>  
  
 <span data-ttu-id="16d42-107">Только никогда не является стандартное поведение для параметров.</span><span class="sxs-lookup"><span data-stu-id="16d42-107">Out-only behavior is never a default marshaling behavior for parameters.</span></span> <span data-ttu-id="16d42-108">Можно применить <xref:System.Runtime.InteropServices.OutAttribute> для значений и ссылочных типов, передаваемый по ссылке для изменения ввода-вывода поведение только поведение, которое эквивалентно использованию `out` ключевого слова C#.</span><span class="sxs-lookup"><span data-stu-id="16d42-108">You can apply the <xref:System.Runtime.InteropServices.OutAttribute> to value and reference types passed by reference to change In/Out behavior to Out-only behavior, which is equivalent to using the `out` keyword in C#.</span></span> <span data-ttu-id="16d42-109">Например массивов, передаваемые по значению, маршалируются как только параметры по умолчанию можно изменить только для ожидания.</span><span class="sxs-lookup"><span data-stu-id="16d42-109">For example, arrays passed by value, marshaled as In-only parameters by default, can be changed to Out-only.</span></span> <span data-ttu-id="16d42-110">Тем не менее поведение не всегда предоставляет ожидаемой семантикой Если типы содержат полностью непреобразуемые элементы или поля, поскольку маршалер взаимодействия использует закрепление.</span><span class="sxs-lookup"><span data-stu-id="16d42-110">However, the behavior does not always provide expected semantics when the types include all-blittable elements or fields because the interop marshaler uses pinning.</span></span> <span data-ttu-id="16d42-111">Если вас не интересует передача данных в вызываемый объект, только маршалинг может обеспечить лучшую производительность для преобразуемых типов.</span><span class="sxs-lookup"><span data-stu-id="16d42-111">If you do not care about passing data into the callee, Out-only marshaling can provide better performance for non-blittable types.</span></span>  
  
 <span data-ttu-id="16d42-112">Объединение <xref:System.Runtime.InteropServices.InAttribute> и <xref:System.Runtime.InteropServices.OutAttribute> является особенно удобно при работе с массивами и отформатированы, преобразуемых типов.</span><span class="sxs-lookup"><span data-stu-id="16d42-112">Combining the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> is particularly useful when applied to arrays and formatted, non-blittable types.</span></span> <span data-ttu-id="16d42-113">Вызывающим объектам см. в разделе изменения, вызываемыми с этими типами только в том случае, когда применяются оба атрибута.</span><span class="sxs-lookup"><span data-stu-id="16d42-113">Callers see the changes a callee makes to these types only when you apply both attributes.</span></span> <span data-ttu-id="16d42-114">Поскольку этих типов необходимо копирование во время маршалинга, можно использовать <xref:System.Runtime.InteropServices.InAttribute> и <xref:System.Runtime.InteropServices.OutAttribute> для снижения количества ненужных копий.</span><span class="sxs-lookup"><span data-stu-id="16d42-114">Since these types require copying during marshaling, you can use <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to reduce unnecessary copies.</span></span>  
  
 <span data-ttu-id="16d42-115">Дополнительные сведения о влиянии <xref:System.Runtime.InteropServices.OutAttribute> на маршалинг см. в разделе [атрибуты направления](https://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span><span class="sxs-lookup"><span data-stu-id="16d42-115">For more information on the effect of <xref:System.Runtime.InteropServices.OutAttribute> on marshaling behavior, see [Directional Attributes](https://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="16d42-116">В следующем примере показано, как применить <xref:System.Runtime.InteropServices.InAttribute> и <xref:System.Runtime.InteropServices.OutAttribute> на платформу прототипа вызова неуправляемого кода, передает массив в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="16d42-116">The following example shows how to apply the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to a platform invoke prototype that passes an array as a parameter.</span></span> <span data-ttu-id="16d42-117">Сочетание атрибутов направления позволяет вызывающему объекту просмотреть изменения, внесенные вызываемым объектом.</span><span class="sxs-lookup"><span data-stu-id="16d42-117">The combination of directional attributes allows the caller to see the changes made by the callee.</span></span>  
  
 [!code-cpp[Interop InOutParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR/Interop InOutParameters/CPP/inout.cpp#1)]
 [!code-csharp[Interop InOutParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR/Interop InOutParameters/CS/inout.cs#1)]
 [!code-vb[Interop InOutParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Interop InOutParameters/VB/inout.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.InAttribute" />
    <altmember cref="T:System.Text.StringBuilder" />
    <related type="Article" href="~/docs/framework/interop/blittable-and-non-blittable-types.md"><span data-ttu-id="16d42-118">Преобразуемые и непреобразуемые типы</span><span class="sxs-lookup"><span data-stu-id="16d42-118">Blittable and Non-Blittable Types</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.OutAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="16d42-119">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.OutAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="16d42-119">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.OutAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>