<Type Name="DllImportAttribute" FullName="System.Runtime.InteropServices.DllImportAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37bef5b8d5432f8b55aa701283962ecdf92faa8c" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58681114" /></Metadata><TypeSignature Language="C#" Value="public sealed class DllImportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DllImportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.DllImportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DllImportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DllImportAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DllImportAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="febde-101">Показывает, что в качестве статической точки входа неуправляемая динамическая библиотека (DLL) предоставляет метод с атрибутами.</span><span class="sxs-lookup"><span data-stu-id="febde-101">Indicates that the attributed method is exposed by an unmanaged dynamic-link library (DLL) as a static entry point.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="febde-102">Этот атрибут можно применять к методам.</span><span class="sxs-lookup"><span data-stu-id="febde-102">You can apply this attribute to methods.</span></span>  
  
 <span data-ttu-id="febde-103"><xref:System.Runtime.InteropServices.DllImportAttribute> Атрибут содержит сведения, необходимые для вызова функции, экспортированные из неуправляемой библиотеки DLL.</span><span class="sxs-lookup"><span data-stu-id="febde-103">The <xref:System.Runtime.InteropServices.DllImportAttribute> attribute provides the information needed to call a function exported from an unmanaged DLL.</span></span> <span data-ttu-id="febde-104">Как минимум необходимо указать имя библиотеки DLL, содержащей точку входа.</span><span class="sxs-lookup"><span data-stu-id="febde-104">As a minimum requirement, you must supply the name of the DLL containing the entry point.</span></span>  
  
 <span data-ttu-id="febde-105">Этот атрибут применяется непосредственно к C# и C++ определения методов; Тем не менее, компилятор Visual Basic выдает этот атрибут при использовании `Declare` инструкции.</span><span class="sxs-lookup"><span data-stu-id="febde-105">You apply this attribute directly to C# and C++ method definitions; however, the Visual Basic compiler emits this attribute when you use the `Declare` statement.</span></span> <span data-ttu-id="febde-106">Для определения сложных методов, которые включают <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping>, <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention>, <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling>, <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig>, <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError>, или <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> поля, этот атрибут применяется непосредственно к определениям методов Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="febde-106">For complex method definitions that include <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping>, <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention>, <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling>, <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig>, <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError>, or <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> fields, you apply this attribute directly to Visual Basic method definitions.</span></span>  
  
 <span data-ttu-id="febde-107">**Примечание** JScript не поддерживает этот атрибут.</span><span class="sxs-lookup"><span data-stu-id="febde-107">**Note** JScript does not support this attribute.</span></span> <span data-ttu-id="febde-108">Для доступа к неуправляемым методам интерфейса API из программ JScript можно использовать C# или Visual Basic классы-оболочки.</span><span class="sxs-lookup"><span data-stu-id="febde-108">You can use C# or Visual Basic wrapper classes to access unmanaged API methods from JScript programs.</span></span>  
  
 <span data-ttu-id="febde-109">Дополнительные сведения об использовании платформы вызвать службу для доступа к функциям в неуправляемых библиотек DLL, см. в разделе [использование неуправляемых функций DLL](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="febde-109">For additional information about using the platform invoke service to access functions in unmanaged DLLs, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="febde-110"><xref:System.Runtime.InteropServices.DllImportAttribute> Не поддерживает маршалинг универсальных типов.</span><span class="sxs-lookup"><span data-stu-id="febde-110">The <xref:System.Runtime.InteropServices.DllImportAttribute> does not support marshaling of generic types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="febde-111">В следующем примере кода показано, как использовать <xref:System.Runtime.InteropServices.DllImportAttribute> атрибут для импорта Win32 `MessageBox` функции.</span><span class="sxs-lookup"><span data-stu-id="febde-111">The following code example shows how to use the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to import the Win32 `MessageBox` function.</span></span>  <span data-ttu-id="febde-112">В примере кода затем вызывает метод импортированных.</span><span class="sxs-lookup"><span data-stu-id="febde-112">The code example then calls the imported method.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/vb/sample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" />
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling" />
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.PreserveSig" />
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.CallingConvention" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DllImportAttribute (string dllName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string dllName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.DllImportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dllName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DllImportAttribute(System::String ^ dllName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.DllImportAttribute : string -&gt; System.Runtime.InteropServices.DllImportAttribute" Usage="new System.Runtime.InteropServices.DllImportAttribute dllName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dllName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dllName"><span data-ttu-id="febde-113">Имя динамической библиотеки (DLL), содержащей неуправляемый метод.</span><span class="sxs-lookup"><span data-stu-id="febde-113">The name of the DLL that contains the unmanaged method.</span></span> <span data-ttu-id="febde-114">Если DLL включена в сборку, это имя может включать отображаемое имя сборки.</span><span class="sxs-lookup"><span data-stu-id="febde-114">This can include an assembly display name, if the DLL is included in an assembly.</span></span></param>
        <summary><span data-ttu-id="febde-115">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.DllImportAttribute" /> с именем динамической библиотеки (DLL), содержащей импортируемый метод.</span><span class="sxs-lookup"><span data-stu-id="febde-115">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.DllImportAttribute" /> class with the name of the DLL containing the method to import.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="febde-116">Если в неуправляемой библиотеки DLL-файл включается в сборке, например, с помощью компоновщика или `/linkresource` параметр компилятора, можно указать отображаемое имя сборки как часть `dllName`.</span><span class="sxs-lookup"><span data-stu-id="febde-116">If an unmanaged DLL file is included in an assembly, for example, by using the linker or the `/linkresource` compiler option, you can specify the assembly display name as part of `dllName`.</span></span> <span data-ttu-id="febde-117">Например, если неуправляемой библиотеки DLL с именем `unmanaged.dll` входит в управляемую сборку с именем `MyAssembly`, атрибут может быть указан, как показано в следующем коде.</span><span class="sxs-lookup"><span data-stu-id="febde-117">For example, if an unmanaged DLL named `unmanaged.dll` is included in a managed assembly named `MyAssembly`, the attribute might be specified as shown in the following code.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#2)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#2)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="febde-118">В следующем примере кода показано, как использовать <xref:System.Runtime.InteropServices.DllImportAttribute> атрибут для импорта Win32 `MessageBox` функции.</span><span class="sxs-lookup"><span data-stu-id="febde-118">The following code example shows how to use the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to import the Win32 `MessageBox` function.</span></span>  <span data-ttu-id="febde-119">В примере кода затем вызывает метод импортированных.</span><span class="sxs-lookup"><span data-stu-id="febde-119">The code example then calls the imported method.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BestFitMapping">
      <MemberSignature Language="C#" Value="public bool BestFitMapping;" />
      <MemberSignature Language="ILAsm" Value=".field public bool BestFitMapping" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping" />
      <MemberSignature Language="VB.NET" Value="Public BestFitMapping As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool BestFitMapping;" />
      <MemberSignature Language="F#" Value="val mutable BestFitMapping : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.BestFitMapping" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="febde-120">Включает или отключает поведение наилучшего сопоставления при преобразовании знаков Юникода в знаки ANSI.</span><span class="sxs-lookup"><span data-stu-id="febde-120">Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="febde-121">Если `true`— наилучшее сопоставление включено; в противном случае — наилучшее сопоставление отключено.</span><span class="sxs-lookup"><span data-stu-id="febde-121">If `true`, best-fit mapping behavior is enabled; otherwise, best-fit mapping is disabled.</span></span> <span data-ttu-id="febde-122"><xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> Поле является `true` по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="febde-122">The <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> field is `true` by default.</span></span> <span data-ttu-id="febde-123">Параметры для этого поля переопределяют любые параметры уровня для <xref:System.Runtime.InteropServices.BestFitMappingAttribute?displayProperty=nameWithType> атрибута.</span><span class="sxs-lookup"><span data-stu-id="febde-123">Settings for this field override the any level settings for the <xref:System.Runtime.InteropServices.BestFitMappingAttribute?displayProperty=nameWithType> attribute.</span></span>  
  
 <span data-ttu-id="febde-124">Среда CLR преобразует в знаки ANSI все управляемые знаки Юникода, переданные в неуправляемый метод, выполняемый в Windows 98 или Windows Me.</span><span class="sxs-lookup"><span data-stu-id="febde-124">The common language runtime converts to ANSI characters any managed Unicode characters passed to an unmanaged method executing on Windows 98 or Windows Me.</span></span> <span data-ttu-id="febde-125">Наилучшее сопоставление позволяет упаковщик взаимодействия для предоставления наиболее подходящий знак, если точного соответствия не существует.</span><span class="sxs-lookup"><span data-stu-id="febde-125">Best-fit mapping enables the interop marshaler to provide a close-matching character when no exact match exists.</span></span> <span data-ttu-id="febde-126">Например упаковщик преобразует об авторских правах знак Юникода, который «c» для неуправляемых методов, которые принимают символы ANSI.</span><span class="sxs-lookup"><span data-stu-id="febde-126">For example, the marshaler converts the Unicode copyright character to 'c' for unmanaged methods that accept ANSI characters.</span></span> <span data-ttu-id="febde-127">Некоторые символы, не хватает наилучшее представление; Эти символы называются несопоставимыми.</span><span class="sxs-lookup"><span data-stu-id="febde-127">Some characters lack a best-fit representation; these characters are called unmappable.</span></span> <span data-ttu-id="febde-128">Неотображаемые символы преобразуются в значения по умолчанию "?" Символ ANSI.</span><span class="sxs-lookup"><span data-stu-id="febde-128">Unmappable characters are usually converted to the default '?' ANSI character.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="febde-129">Некоторые символы Юникода преобразуются в опасные символы, такие как обратная косая черта "\\" символ, который можно случайно изменить путь.</span><span class="sxs-lookup"><span data-stu-id="febde-129">Certain Unicode characters are converted to dangerous characters, such as the backslash '\\' character, which can inadvertently change a path.</span></span> <span data-ttu-id="febde-130">Установив <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> поле `true`, вы можете давать наличие несопоставимого символа вызывающему, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="febde-130">By setting the <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> field to `true`, you can signal the presence of an unmappable character to the caller by throwing an exception.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="febde-131">Невозможно изменить значения по умолчанию, предоставляемые <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> и <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> полей при передаче управляемого массива, элементы которого являются ANSI или LPSTR неуправляемый безопасный массив.</span><span class="sxs-lookup"><span data-stu-id="febde-131">You cannot change the default values provided by the <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> and <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> fields when passing a managed array whose elements are ANSI Chars or LPSTRs to an unmanaged safe array.</span></span> <span data-ttu-id="febde-132">Всегда включена наилучшего сопоставления и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="febde-132">Best-fit mapping is always enabled and no exception is thrown.</span></span> <span data-ttu-id="febde-133">Имейте в виду, что это сочетание может скомпрометировать модели безопасности.</span><span class="sxs-lookup"><span data-stu-id="febde-133">Be aware that this combination can compromise your security model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="febde-134">В некоторых случаях разработчики Visual Basic используют <xref:System.Runtime.InteropServices.DllImportAttribute>, а не `Declare` инструкции, для определения функции DLL в управляемом коде.</span><span class="sxs-lookup"><span data-stu-id="febde-134">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="febde-135">Параметр <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> поле является один из таких случаев.</span><span class="sxs-lookup"><span data-stu-id="febde-135">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> field is one of those cases.</span></span> <span data-ttu-id="febde-136">В следующем примере показано, как применение строгой безопасности сопоставления знаков на платформу неуправляемого метода путем указания набора символов ANSI, отключение наилучшего сопоставления и исключение для несопоставимых знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="febde-136">The following example shows how to apply the strictest character mapping security to a platform invoke method definitions by specifying the ANSI character set, disabling best fit mapping behavior, and throwing an exception on unmapped Unicode characters.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#3)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#3)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" />
        <altmember cref="T:System.Runtime.InteropServices.BestFitMappingAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/115f7a2f-d422-4605-ab36-13a8dd28142a"><span data-ttu-id="febde-137">Маршалинг взаимодействия</span><span class="sxs-lookup"><span data-stu-id="febde-137">Interop Marshaling</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CallingConvention">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.CallingConvention CallingConvention;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Runtime.InteropServices.CallingConvention CallingConvention" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.CallingConvention" />
      <MemberSignature Language="VB.NET" Value="Public CallingConvention As CallingConvention " />
      <MemberSignature Language="C++ CLI" Value="public: System::Runtime::InteropServices::CallingConvention CallingConvention;" />
      <MemberSignature Language="F#" Value="val mutable CallingConvention : System.Runtime.InteropServices.CallingConvention" Usage="System.Runtime.InteropServices.DllImportAttribute.CallingConvention" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CallingConvention</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="febde-138">Показывает соглашение о вызове для точки входа.</span><span class="sxs-lookup"><span data-stu-id="febde-138">Indicates the calling convention of an entry point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="febde-139">Это поле задано одно из <xref:System.Runtime.InteropServices.CallingConvention> членов перечисления.</span><span class="sxs-lookup"><span data-stu-id="febde-139">You set this field to one of the <xref:System.Runtime.InteropServices.CallingConvention> enumeration members.</span></span> <span data-ttu-id="febde-140">Значение по умолчанию для <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention> поле является <xref:System.Runtime.InteropServices.CallingConvention.Winapi>, который в свою очередь по умолчанию <xref:System.Runtime.InteropServices.CallingConvention.StdCall> соглашение.</span><span class="sxs-lookup"><span data-stu-id="febde-140">The default value for the <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention> field is <xref:System.Runtime.InteropServices.CallingConvention.Winapi>, which in turn defaults to <xref:System.Runtime.InteropServices.CallingConvention.StdCall> convention.</span></span>  
  
 <span data-ttu-id="febde-141">Дополнительные сведения см. в разделе о вызовах в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="febde-141">For more information, see Calling Convention in the MSDN library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="febde-142">В некоторых случаях разработчики Visual Basic используют <xref:System.Runtime.InteropServices.DllImportAttribute>, а не `Declare` инструкции, для определения функции DLL в управляемом коде.</span><span class="sxs-lookup"><span data-stu-id="febde-142">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="febde-143">Параметр <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention> поле является один из таких случаев.</span><span class="sxs-lookup"><span data-stu-id="febde-143">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention> field is one of those cases.</span></span>  
  
 <span data-ttu-id="febde-144">System.Runtime.InteropServices.DllImportAttribute#1</span><span class="sxs-lookup"><span data-stu-id="febde-144">System.Runtime.InteropServices.DllImportAttribute#1</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.CallingConvention" />
      </Docs>
    </Member>
    <Member MemberName="CharSet">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.CharSet CharSet;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Runtime.InteropServices.CharSet CharSet" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" />
      <MemberSignature Language="VB.NET" Value="Public CharSet As CharSet " />
      <MemberSignature Language="C++ CLI" Value="public: System::Runtime::InteropServices::CharSet CharSet;" />
      <MemberSignature Language="F#" Value="val mutable CharSet : System.Runtime.InteropServices.CharSet" Usage="System.Runtime.InteropServices.DllImportAttribute.CharSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CharSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="febde-145">Показывает способ маршалинга параметров строки для метода, а также управляет искажением имени.</span><span class="sxs-lookup"><span data-stu-id="febde-145">Indicates how to marshal string parameters to the method and controls name mangling.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="febde-146">Используйте это поле с членом <xref:System.Runtime.InteropServices.CharSet> перечисление для задания поведение маршалинга параметров строки и для задания имени точки входа для вызова (точное заданное имя или имя, заканчивающееся на «» или «W»).</span><span class="sxs-lookup"><span data-stu-id="febde-146">Use this field with a member of the <xref:System.Runtime.InteropServices.CharSet> enumeration to specify the marshaling behavior of string parameters and to specify which entry-point name to invoke (the exact name given or a name ending with "A" or "W").</span></span> <span data-ttu-id="febde-147">Элемент перечисления по умолчанию для C# и Visual Basic является `CharSet.Ansi` элемент перечисления по умолчанию для C++ — `CharSet.None`, что эквивалентно `CharSet.Ansi`.</span><span class="sxs-lookup"><span data-stu-id="febde-147">The default enumeration member for C# and Visual Basic is `CharSet.Ansi` and the default enumeration member for C++ is `CharSet.None`, which is equivalent to `CharSet.Ansi`.</span></span> <span data-ttu-id="febde-148">В Visual Basic используется `Declare` инструкцию, чтобы указать `CharSet` поля.</span><span class="sxs-lookup"><span data-stu-id="febde-148">In Visual Basic, you use the `Declare` statement to specify the `CharSet` field.</span></span>  
  
 <span data-ttu-id="febde-149"><xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> Поля влияет на поведение `CharSet` в определении какое имя точки входа для вызова.</span><span class="sxs-lookup"><span data-stu-id="febde-149">The <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> field influences the behavior of the `CharSet` field in determining which entry-point name to invoke.</span></span> <span data-ttu-id="febde-150">Подробное описание и примеры маршалинга строк, а также именем, соответствующим поведение, связанное с `CharSet` поле, см. в разделе [определение кодировки](~/docs/framework/interop/specifying-a-character-set.md).</span><span class="sxs-lookup"><span data-stu-id="febde-150">For a detailed description and examples of the string marshaling and name matching behavior associated with the `CharSet` field, see [Specifying a Character Set](~/docs/framework/interop/specifying-a-character-set.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="febde-151">В следующем примере кода показано, как использовать <xref:System.Runtime.InteropServices.DllImportAttribute> атрибут для импорта Win32 `MessageBox` функции.</span><span class="sxs-lookup"><span data-stu-id="febde-151">The following code example shows how to use the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to import the Win32 `MessageBox` function.</span></span>  <span data-ttu-id="febde-152">В примере кода затем вызывает метод импортированных.</span><span class="sxs-lookup"><span data-stu-id="febde-152">The code example then calls the imported method.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling" />
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public string EntryPoint;" />
      <MemberSignature Language="ILAsm" Value=".field public string EntryPoint" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public EntryPoint As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EntryPoint;" />
      <MemberSignature Language="F#" Value="val mutable EntryPoint : string" Usage="System.Runtime.InteropServices.DllImportAttribute.EntryPoint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="febde-153">Показывает имя или порядковый номер точки входа вызываемой динамической библиотеки (DLL).</span><span class="sxs-lookup"><span data-stu-id="febde-153">Indicates the name or ordinal of the DLL entry point to be called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="febde-154">Можно указать имя точки входа, указав строку, определяющую имя библиотеки DLL, содержащей точку входа, или точка входа можно определить по его порядковому номеру.</span><span class="sxs-lookup"><span data-stu-id="febde-154">You can specify the entry-point name by supplying a string indicating the name of the DLL containing the entry point, or you can identify the entry point by its ordinal.</span></span> <span data-ttu-id="febde-155">Порядковые номера начинаются со знака #, например, #1.</span><span class="sxs-lookup"><span data-stu-id="febde-155">Ordinals are prefixed with the # sign, for example, #1.</span></span> <span data-ttu-id="febde-156">Если это поле пропущено, среда CLR использует имя платформы.NET метод, помеченный <xref:System.Runtime.InteropServices.DllImportAttribute>.</span><span class="sxs-lookup"><span data-stu-id="febde-156">If you omit this field, the common language runtime uses the name of the.NET method marked with the <xref:System.Runtime.InteropServices.DllImportAttribute>.</span></span>  
  
 <span data-ttu-id="febde-157">Дополнительные сведения см. в разделе [Идентификация функций в библиотеках DLL](~/docs/framework/interop/identifying-functions-in-dlls.md).</span><span class="sxs-lookup"><span data-stu-id="febde-157">For additional information, see [Identifying Functions in DLLs](~/docs/framework/interop/identifying-functions-in-dlls.md).</span></span> <span data-ttu-id="febde-158">Примеры, в котором демонстрируется использование <xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint> поле, см. в разделе [задание точки входа](~/docs/framework/interop/specifying-an-entry-point.md).</span><span class="sxs-lookup"><span data-stu-id="febde-158">For examples showing how to use the <xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint> field, see [Specifying an Entry Point](~/docs/framework/interop/specifying-an-entry-point.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="febde-159">В следующем примере кода показано, как использовать <xref:System.Runtime.InteropServices.DllImportAttribute> атрибут для импорта Win32 `MessageBox` функции.</span><span class="sxs-lookup"><span data-stu-id="febde-159">The following code example shows how to use the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to import the Win32 `MessageBox` function.</span></span>  <span data-ttu-id="febde-160">В примере кода используется <xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint> свойство, чтобы указать функцию для импорта и затем изменяет имя `MyNewMessageBoxMethod`.</span><span class="sxs-lookup"><span data-stu-id="febde-160">The code example uses the <xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint> property to specify the function to import and then changes the name to `MyNewMessageBoxMethod`.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.DllImport.EntryPoint#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.EntryPoint/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImport.EntryPoint#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.EntryPoint/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.DllImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ExactSpelling">
      <MemberSignature Language="C#" Value="public bool ExactSpelling;" />
      <MemberSignature Language="ILAsm" Value=".field public bool ExactSpelling" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling" />
      <MemberSignature Language="VB.NET" Value="Public ExactSpelling As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool ExactSpelling;" />
      <MemberSignature Language="F#" Value="val mutable ExactSpelling : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.ExactSpelling" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="febde-161">Контролирует запуск поиска имен точек входа помимо заданной точки в неуправляемой динамической библиотеке (DLL), выполняемого средой CLR, полем <see cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" />.</span><span class="sxs-lookup"><span data-stu-id="febde-161">Controls whether the <see cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" /> field causes the common language runtime to search an unmanaged DLL for entry-point names other than the one specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="febde-162">Если `false`, имя точки входа, дополненный буквы A вызывается при <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet?displayProperty=nameWithType> полю присваивается `CharSet.Ansi`, и вызывается с буквой W имя точки входа при <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet?displayProperty=nameWithType> поля задается значение `CharSet.Unicode`.</span><span class="sxs-lookup"><span data-stu-id="febde-162">If `false`, the entry point name appended with the letter A is invoked when the <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet?displayProperty=nameWithType> field is set to `CharSet.Ansi`, and the entry-point name appended with the letter W is invoked when the <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet?displayProperty=nameWithType> field is set to the `CharSet.Unicode`.</span></span> <span data-ttu-id="febde-163">Как правило Компиляторы управляемого кода значение этого поля.</span><span class="sxs-lookup"><span data-stu-id="febde-163">Typically, managed compilers set this field.</span></span>  
  
 <span data-ttu-id="febde-164">В следующей таблице показаны связи между <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet> и <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> полей, в зависимости от значения по умолчанию, накладываемые на языке программирования.</span><span class="sxs-lookup"><span data-stu-id="febde-164">The following table shows the relationship between the <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet> and <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> fields, based on default values imposed by the programming language.</span></span> <span data-ttu-id="febde-165">Можно переопределить значение по умолчанию, но необходимо соблюдать осторожность.</span><span class="sxs-lookup"><span data-stu-id="febde-165">You can override the default setting, but do so with caution.</span></span>  
  
|<span data-ttu-id="febde-166">Язык</span><span class="sxs-lookup"><span data-stu-id="febde-166">Language</span></span>|<span data-ttu-id="febde-167">ANSI</span><span class="sxs-lookup"><span data-stu-id="febde-167">ANSI</span></span>|<span data-ttu-id="febde-168">Юникод</span><span class="sxs-lookup"><span data-stu-id="febde-168">Unicode</span></span>|<span data-ttu-id="febde-169">Авто</span><span class="sxs-lookup"><span data-stu-id="febde-169">Auto</span></span>|  
|--------------|----------|-------------|----------|  
|<span data-ttu-id="febde-170">Visual Basic</span><span class="sxs-lookup"><span data-stu-id="febde-170">Visual Basic</span></span>|<span data-ttu-id="febde-171">ExactSpelling:=True</span><span class="sxs-lookup"><span data-stu-id="febde-171">ExactSpelling:=True</span></span>|<span data-ttu-id="febde-172">ExactSpelling:=True</span><span class="sxs-lookup"><span data-stu-id="febde-172">ExactSpelling:=True</span></span>|<span data-ttu-id="febde-173">ExactSpelling:=False</span><span class="sxs-lookup"><span data-stu-id="febde-173">ExactSpelling:=False</span></span>|  
|<span data-ttu-id="febde-174">C#</span><span class="sxs-lookup"><span data-stu-id="febde-174">C#</span></span>|<span data-ttu-id="febde-175">ExactSpelling = false</span><span class="sxs-lookup"><span data-stu-id="febde-175">ExactSpelling=false</span></span>|<span data-ttu-id="febde-176">ExactSpelling = false</span><span class="sxs-lookup"><span data-stu-id="febde-176">ExactSpelling=false</span></span>|<span data-ttu-id="febde-177">ExactSpelling = false</span><span class="sxs-lookup"><span data-stu-id="febde-177">ExactSpelling=false</span></span>|  
|<span data-ttu-id="febde-178">C++</span><span class="sxs-lookup"><span data-stu-id="febde-178">C++</span></span>|<span data-ttu-id="febde-179">ExactSpelling = false</span><span class="sxs-lookup"><span data-stu-id="febde-179">ExactSpelling=false</span></span>|<span data-ttu-id="febde-180">ExactSpelling = false</span><span class="sxs-lookup"><span data-stu-id="febde-180">ExactSpelling=false</span></span>|<span data-ttu-id="febde-181">ExactSpelling = false</span><span class="sxs-lookup"><span data-stu-id="febde-181">ExactSpelling=false</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="febde-182">В некоторых случаях разработчики Visual Basic используют <xref:System.Runtime.InteropServices.DllImportAttribute>, вместо использования `Declare` инструкции, для определения функции DLL в управляемом коде.</span><span class="sxs-lookup"><span data-stu-id="febde-182">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of using the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="febde-183">Параметр <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> поле является один из таких случаев.</span><span class="sxs-lookup"><span data-stu-id="febde-183">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> field is one of those cases.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#4)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#4)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveSig">
      <MemberSignature Language="C#" Value="public bool PreserveSig;" />
      <MemberSignature Language="ILAsm" Value=".field public bool PreserveSig" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.PreserveSig" />
      <MemberSignature Language="VB.NET" Value="Public PreserveSig As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool PreserveSig;" />
      <MemberSignature Language="F#" Value="val mutable PreserveSig : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.PreserveSig" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="febde-184">Показывают, выполняется ли для методов с возвращаемыми значениями <see langword="HRESULT" /> или <see langword="retval" /> непосредственное преобразование, либо возвращаемые значения <see langword="HRESULT" /> или <see langword="retval" /> автоматически преобразуются в исключения.</span><span class="sxs-lookup"><span data-stu-id="febde-184">Indicates whether unmanaged methods that have <see langword="HRESULT" /> or <see langword="retval" /> return values are directly translated or whether <see langword="HRESULT" /> or <see langword="retval" /> return values are automatically converted to exceptions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="febde-185">Задайте <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> поле `true` напрямую преобразовать неуправляемые сигнатуры с `HRESULT` или `retval` значения; ему присвоено `false` автоматически преобразовать `HRESULT` или `retval` значения для исключения.</span><span class="sxs-lookup"><span data-stu-id="febde-185">Set the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field to `true` to directly translate unmanaged signatures with `HRESULT` or `retval` values; set it to `false` to automatically convert `HRESULT` or `retval` values to exceptions.</span></span> <span data-ttu-id="febde-186">По умолчанию <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> поле является `true`.</span><span class="sxs-lookup"><span data-stu-id="febde-186">By default, the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field is `true`.</span></span>  
  
 <span data-ttu-id="febde-187">Когда `true`, итоговую подпись метод возвращает значение типа integer, содержащее `HRESULT` значение.</span><span class="sxs-lookup"><span data-stu-id="febde-187">When `true`, the resulting method signature returns an integer value that contains the `HRESULT` value.</span></span>  <span data-ttu-id="febde-188">В этом случае необходимо вручную проверить возвращаемое значение и реагировать соответствующим образом в приложении.</span><span class="sxs-lookup"><span data-stu-id="febde-188">In this case, you must manually inspect the return value and respond accordingly in your application.</span></span>  
  
 <span data-ttu-id="febde-189">При задании <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> поле `false`, итоговую подпись метода содержит тип возвращаемого значения void вместо integer (`HRESULT`) тип возвращаемого значения.</span><span class="sxs-lookup"><span data-stu-id="febde-189">When you set the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field to `false`, the resulting method signature contains a void return type instead of an integer (`HRESULT`) return type.</span></span>  <span data-ttu-id="febde-190">Когда неуправляемый метод создает `HRESULT`, среда выполнения автоматически игнорирует возвращаемое значение `S_OK` (или 0) и не выдает исключение.</span><span class="sxs-lookup"><span data-stu-id="febde-190">When the unmanaged method produces an `HRESULT`, the runtime automatically ignores a return value of `S_OK` (or 0) and does not throw an exception.</span></span>  <span data-ttu-id="febde-191">Для `HRESULT`s, отличных от `S_OK`, среда выполнения автоматически создает исключение, которое соответствует `HRESULT`.</span><span class="sxs-lookup"><span data-stu-id="febde-191">For `HRESULT`s other than `S_OK`, the runtime automatically throws an exception that corresponds to the `HRESULT`.</span></span>  <span data-ttu-id="febde-192">Обратите внимание, что <xref:System.Runtime.InteropServices.DllImportAttribute> атрибут только выполняет это преобразование для методов, возвращающих `HRESULT`.</span><span class="sxs-lookup"><span data-stu-id="febde-192">Note that the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute only performs this conversion to methods that return an `HRESULT`.</span></span>  
  
 <span data-ttu-id="febde-193">Вы можете изменить значение по умолчанию отчеты об ошибках из `HRESULT`s на исключения в случаях, если исключения лучше соответствуют структуре приложения отчетов об ошибках.</span><span class="sxs-lookup"><span data-stu-id="febde-193">You might decide to change the default error reporting behavior from `HRESULT`s to exceptions in cases where exceptions better fit the error reporting structure of your application.</span></span>  
  
 <span data-ttu-id="febde-194">Это поле аналогичен <xref:System.Runtime.InteropServices.PreserveSigAttribute>; тем не менее, в отличие от к <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> поле, значение по умолчанию для атрибута является `false`.</span><span class="sxs-lookup"><span data-stu-id="febde-194">This field is similar to the <xref:System.Runtime.InteropServices.PreserveSigAttribute>; however, in contrast to the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field, the default value for the attribute is `false`.</span></span>  
  
 <span data-ttu-id="febde-195">В некоторых случаях разработчики Visual Basic используют <xref:System.Runtime.InteropServices.DllImportAttribute>, вместо использования `Declare` инструкции, для определения функции DLL в управляемом коде.</span><span class="sxs-lookup"><span data-stu-id="febde-195">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of using the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="febde-196">Параметр <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> поле является один из таких случаев.</span><span class="sxs-lookup"><span data-stu-id="febde-196">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field is one of those cases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="febde-197">В следующем примере кода используется <xref:System.Runtime.InteropServices.DllImportAttribute> для импорта неуправляемой `SHAutoComplete` функцию один раз с <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> поле "значение" `true` и еще раз с <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> поле "значение" `false`.</span><span class="sxs-lookup"><span data-stu-id="febde-197">The following code example uses the <xref:System.Runtime.InteropServices.DllImportAttribute> to import the unmanaged `SHAutoComplete` function once with the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field set to `true` and again with the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field set to `false`.</span></span>  <span data-ttu-id="febde-198">Этот пример кода вызывает `SHAutoComplete` функция создает ошибки с исключением один раз и `HRESULT` следующего.</span><span class="sxs-lookup"><span data-stu-id="febde-198">This code example causes the `SHAutoComplete` function to generate any errors with an exception one time and an `HRESULT` the next.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.PreserveSigAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.PreserveSigAttribute/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.PreserveSigAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.PreserveSigAttribute/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.PreserveSigAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetLastError">
      <MemberSignature Language="C#" Value="public bool SetLastError;" />
      <MemberSignature Language="ILAsm" Value=".field public bool SetLastError" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" />
      <MemberSignature Language="VB.NET" Value="Public SetLastError As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool SetLastError;" />
      <MemberSignature Language="F#" Value="val mutable SetLastError : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.SetLastError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="febde-199">Показывает, вызывает ли вызываемый объект функцию <see langword="SetLastError" /> интерфейса Win32 API перед возвращением из метода, использующего атрибуты.</span><span class="sxs-lookup"><span data-stu-id="febde-199">Indicates whether the callee calls the <see langword="SetLastError" /> Win32 API function before returning from the attributed method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="febde-200">`true` Чтобы указать, что вызываемый объект вызовет `SetLastError`; в противном случае `false`.</span><span class="sxs-lookup"><span data-stu-id="febde-200">`true` to indicate that the callee will call `SetLastError`; otherwise, `false`.</span></span> <span data-ttu-id="febde-201">Значение по умолчанию — `false`.</span><span class="sxs-lookup"><span data-stu-id="febde-201">The default is `false`.</span></span>  
  
 <span data-ttu-id="febde-202">Среда выполнения вызывает упаковщик `GetLastError` и кэширует значение, возвращаемое для предотвращения перезаписи другими вызовами API.</span><span class="sxs-lookup"><span data-stu-id="febde-202">The runtime marshaler calls `GetLastError` and caches the value returned to prevent it from being overwritten by other API calls.</span></span> <span data-ttu-id="febde-203">Код ошибки можно получить, вызвав <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A>.</span><span class="sxs-lookup"><span data-stu-id="febde-203">You can retrieve the error code by calling <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="febde-204">В некоторых случаях разработчики Visual Basic используют <xref:System.Runtime.InteropServices.DllImportAttribute>, вместо использования `Declare` инструкции, для определения функции DLL в управляемом коде.</span><span class="sxs-lookup"><span data-stu-id="febde-204">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of using the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="febde-205">Параметр <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> поле является один из таких случаев.</span><span class="sxs-lookup"><span data-stu-id="febde-205">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> field is one of those cases.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#5)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#5)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" />
      </Docs>
    </Member>
    <Member MemberName="ThrowOnUnmappableChar">
      <MemberSignature Language="C#" Value="public bool ThrowOnUnmappableChar;" />
      <MemberSignature Language="ILAsm" Value=".field public bool ThrowOnUnmappableChar" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar" />
      <MemberSignature Language="VB.NET" Value="Public ThrowOnUnmappableChar As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool ThrowOnUnmappableChar;" />
      <MemberSignature Language="F#" Value="val mutable ThrowOnUnmappableChar : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="febde-206">Включает и отключает возникновение исключений для неотображаемых символов Юникода, преобразующихся в знаки вопроса ("?") ANSI.</span><span class="sxs-lookup"><span data-stu-id="febde-206">Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI "?" character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="febde-207">`true` Чтобы указать, что исключение каждый раз, упаковщик взаимодействия преобразует несопоставимого символа; `false` указывает, что <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> это поле будет отключено.</span><span class="sxs-lookup"><span data-stu-id="febde-207">`true` to indicate that an exception is thrown each time the interop marshaler converts an unmappable character; `false` to indicate that the <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> field is disabled.</span></span> <span data-ttu-id="febde-208">Это поле является `false` по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="febde-208">This field is `false` by default.</span></span>  
  
 <span data-ttu-id="febde-209">Среда CLR преобразует в знаки ANSI все управляемые знаки Юникода, переданные в неуправляемый метод, выполняемый в Windows 98 или Windows Me.</span><span class="sxs-lookup"><span data-stu-id="febde-209">The common language runtime converts to ANSI characters any managed Unicode characters passed to an unmanaged method executing on Windows 98 or Windows Me.</span></span> <span data-ttu-id="febde-210">Наилучшее сопоставление позволяет упаковщик взаимодействия для предоставления наиболее подходящий знак, если точного соответствия не существует.</span><span class="sxs-lookup"><span data-stu-id="febde-210">Best-fit mapping enables the interop marshaler to provide a close-matching character when no exact match exists.</span></span> <span data-ttu-id="febde-211">Например упаковщик преобразует об авторских правах знак Юникода, который «c» для неуправляемых методов, которые принимают символы ANSI.</span><span class="sxs-lookup"><span data-stu-id="febde-211">For example, the marshaler converts the Unicode copyright character to 'c' for unmanaged methods that accept ANSI characters.</span></span> <span data-ttu-id="febde-212">Некоторые символы, не хватает наилучшее представление; Эти символы называются несопоставимыми.</span><span class="sxs-lookup"><span data-stu-id="febde-212">Some characters lack a best-fit representation; these characters are called unmappable.</span></span> <span data-ttu-id="febde-213">Неотображаемые символы преобразуются в значения по умолчанию "?" Символ ANSI.</span><span class="sxs-lookup"><span data-stu-id="febde-213">Unmappable characters are usually converted to the default '?' ANSI character.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="febde-214">Некоторые символы Юникода преобразуются в опасные символы, такие как обратная косая черта "\\" символ, который можно случайно изменить путь.</span><span class="sxs-lookup"><span data-stu-id="febde-214">Certain Unicode characters are converted to dangerous characters, such as the backslash '\\' character, which can inadvertently change a path.</span></span> <span data-ttu-id="febde-215">Установив <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> поле `true`, вы можете давать наличие несопоставимого символа вызывающему, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="febde-215">By setting the <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> field to `true`, you can signal the presence of an unmappable character to the caller by throwing an exception.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="febde-216">Невозможно изменить значения по умолчанию, предоставляемые <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> и <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> полей при передаче управляемого массива, элементы которого являются ANSI или LPSTR неуправляемый безопасный массив.</span><span class="sxs-lookup"><span data-stu-id="febde-216">You cannot change the default values provided by the <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> and <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> fields when passing a managed array whose elements are ANSI Chars or LPSTRs to an unmanaged safe array.</span></span> <span data-ttu-id="febde-217">Всегда включена наилучшего сопоставления и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="febde-217">Best-fit mapping is always enabled and no exception is thrown.</span></span> <span data-ttu-id="febde-218">Имейте в виду, что это сочетание может скомпрометировать модели безопасности.</span><span class="sxs-lookup"><span data-stu-id="febde-218">Be aware that this combination can compromise your security model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="febde-219">В некоторых случаях разработчики Visual Basic используют <xref:System.Runtime.InteropServices.DllImportAttribute> для определения функции DLL в управляемом коде, вместо использования `Declare` инструкции.</span><span class="sxs-lookup"><span data-stu-id="febde-219">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute> to define a DLL function in managed code, instead of using the `Declare` statement.</span></span> <span data-ttu-id="febde-220">Параметр <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> поле является один из таких случаев.</span><span class="sxs-lookup"><span data-stu-id="febde-220">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> field is one of those cases.</span></span> <span data-ttu-id="febde-221">В следующем примере показано, как применение строгой безопасности сопоставления знаков на платформу неуправляемого метода путем указания набора символов ANSI, отключение наилучшего сопоставления и исключение для несопоставимых знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="febde-221">The following example shows how to apply the strictest character mapping security to a platform invoke method definitions by specifying the ANSI character set, disabling best fit mapping behavior, and throwing an exception on unmapped Unicode characters.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#3)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#3)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" />
        <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping" />
        <related type="Article" href="https://msdn.microsoft.com/library/115f7a2f-d422-4605-ab36-13a8dd28142a"><span data-ttu-id="febde-222">Маршалинг взаимодействия</span><span class="sxs-lookup"><span data-stu-id="febde-222">Interop Marshaling</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.DllImportAttribute.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Runtime.InteropServices.DllImportAttribute.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="febde-223">Возвращает имя динамической библиотеки (DLL), содержащей точку входа.</span><span class="sxs-lookup"><span data-stu-id="febde-223">Gets the name of the DLL file that contains the entry point.</span></span></summary>
        <value><span data-ttu-id="febde-224">Имя файла динамической библиотеки (DLL), содержащей точку входа.</span><span class="sxs-lookup"><span data-stu-id="febde-224">The name of the DLL file that contains the entry point.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="febde-225">Можно указать полный или относительный путь.</span><span class="sxs-lookup"><span data-stu-id="febde-225">You can provide a full or relative path.</span></span> <span data-ttu-id="febde-226">Если путь не задан, библиотеки DLL должна находиться в текущем пути во время выполнения, если библиотека DLL загружается другими средствами.</span><span class="sxs-lookup"><span data-stu-id="febde-226">If you provide no path, the DLL must be in the current path at run time, unless the DLL is loaded by some other means.</span></span> <span data-ttu-id="febde-227">Имейте в виду, что использование полный URL-адрес можно привести неточность, при перемещении библиотеки DLL.</span><span class="sxs-lookup"><span data-stu-id="febde-227">Be aware, however, that using a fully qualified path can introduce inaccuracy if the DLL is moved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>