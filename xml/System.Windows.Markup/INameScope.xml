<Type Name="INameScope" FullName="System.Windows.Markup.INameScope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="29b9eb9fa99fed54bf96e19b877f4570f609f006" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57962970" /></Metadata><TypeSignature Language="C#" Value="public interface INameScope" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INameScope" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.INameScope" />
  <TypeSignature Language="VB.NET" Value="Public Interface INameScope" />
  <TypeSignature Language="C++ CLI" Value="public interface class INameScope" />
  <TypeSignature Language="F#" Value="type INameScope = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5cc5d-101">Определяет контракт для способа доступа к именам элементов в определенной области имен XAML, а также способа обеспечения уникальности имен в этой области имен XAML.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-101">Defines a contract for how names of elements should be accessed within a particular XAML namescope, and how to enforce uniqueness of names within that XAML namescope.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cc5d-102">Этот интерфейс реализуется классами, которые имеют дочерние элементы, которые предполагается использовать повторно с помощью шаблона или отложить метафора.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-102">This interface is implemented by classes that have child elements that are intended to be reused through the template or defer metaphor.</span></span> <span data-ttu-id="5cc5d-103">Шаблоны, фабрики и аналогичные конструкции должен иметь уникальный области имен XAML, отделены от основной диаграммы объектов и корневых XAML.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-103">Templates, factories and similar constructs must have unique XAML namescopes that are separate from a main object graph and root XAML.</span></span> <span data-ttu-id="5cc5d-104">Принцип заключается в том, должны быть без конфликтов имен при добавлении объекты, созданные из этих дочерних элементов графа объектов приложения, и таким образом, чтобы операции DOM и методиках создания ссылок XAML, которые зависят от идентификатора имени могут зависеть от имени уникальность данных в каждой области видимости имен XAML.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-104">The principle here is that there should be no name collisions when objects created from those child elements are introduced to an application's object graph, and so that DOM operations and XAML reference techniques that rely on the name identifier can rely on name uniqueness in each XAML namescope.</span></span>  
  
 <span data-ttu-id="5cc5d-105">В предыдущих версиях .NET Framework этот интерфейс существовали в сборке WindowsBase относящихся к WPF.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-105">In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="5cc5d-106">В [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.INameScope> находится в сборке System.Xaml.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-106">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.INameScope> is in the System.Xaml assembly.</span></span> <span data-ttu-id="5cc5d-107">Для получения дополнительной информации см. [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="5cc5d-107">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="5cc5d-108">Примечания об использовании WPF</span><span class="sxs-lookup"><span data-stu-id="5cc5d-108">WPF Usage Notes</span></span>  
 <span data-ttu-id="5cc5d-109">Этот интерфейс реализуется с помощью класса WPF <xref:System.Windows.NameScope>.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-109">This interface is implemented by the WPF class <xref:System.Windows.NameScope>.</span></span> <span data-ttu-id="5cc5d-110">Большинство операций области видимости имен XAML в [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] работы посредством <xref:System.Windows.NameScope> экземпляров, но данные время от времени передается внутренним образом с помощью <xref:System.Windows.Markup.INameScope> ссылки.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-110">Most XAML namescope operations in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] operate by using <xref:System.Windows.NameScope> instances, but information is occasionally communicated internally by using <xref:System.Windows.Markup.INameScope> references.</span></span>  
  
 <span data-ttu-id="5cc5d-111">Примеры классов WPF, использующие фабрику или отложить метафоры, вместе с представлением XAML: <xref:System.Windows.Style> и <xref:System.Windows.FrameworkTemplate>.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-111">Examples of WPF classes that use a factory or defer metaphor combined with XAML representation are <xref:System.Windows.Style> and <xref:System.Windows.FrameworkTemplate>.</span></span> <span data-ttu-id="5cc5d-112">Эти реализации обычно полагаются на явные версии методов интерфейса, доступные из <xref:System.Windows.NameScope> класса.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-112">These implementations usually rely on the explicit versions of the interface methods available from the <xref:System.Windows.NameScope> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.NameScope" />
    <altmember cref="T:System.Windows.Markup.INameScopeDictionary" />
    <related type="Article" href="https://msdn.microsoft.com/library/b7e61222-e8cf-48d2-acd0-6df3b7685d48"><span data-ttu-id="5cc5d-113">Атрибут x: Name</span><span class="sxs-lookup"><span data-stu-id="5cc5d-113">x:Name Attribute</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="FindName">
      <MemberSignature Language="C#" Value="public object FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindName (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member FindName : string -&gt; obj" Usage="iNameScope.FindName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5cc5d-114">Идентификатор имени для запрашиваемого объекта.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-114">The name identifier for the object being requested.</span></span></param>
        <summary><span data-ttu-id="5cc5d-115">Возвращает объект, имеющий предоставленное идентифицирующее имя.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-115">Returns an object that has the provided identifying name.</span></span></summary>
        <returns><span data-ttu-id="5cc5d-116">Данный объект, если он найден.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-116">The object, if found.</span></span> <span data-ttu-id="5cc5d-117">Возвращает <see langword="null" />, если объект с таким именем не найден.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-117">Returns <see langword="null" /> if no object of that name was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cc5d-118">Допустимое имя строки в разметке XAML должен соответствовать требованиям, описанным в [Грамматика XamlName](~/docs/framework/xaml-services/xamlname-grammar.md).</span><span class="sxs-lookup"><span data-stu-id="5cc5d-118">Valid name strings in XAML markup must match the requirements documented in [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.NameScope" />
        <related type="Article" href="https://msdn.microsoft.com/library/b7e61222-e8cf-48d2-acd0-6df3b7685d48"><span data-ttu-id="5cc5d-119">Атрибут x: Name</span><span class="sxs-lookup"><span data-stu-id="5cc5d-119">x:Name Attribute</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberSignature Language="F#" Value="abstract member RegisterName : string * obj -&gt; unit" Usage="iNameScope.RegisterName (name, scopedElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="scopedElement" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5cc5d-120">Регистрируемое имя.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-120">The name to register.</span></span></param>
        <param name="scopedElement"><span data-ttu-id="5cc5d-121">Элемент, на который ссылается предоставленное имя <paramref name="name" />.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-121">The specific element that the provided <paramref name="name" /> refers to.</span></span></param>
        <summary><span data-ttu-id="5cc5d-122">Регистрирует предоставленное имя в текущей области имен XAML.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-122">Registers the provided name into the current XAML namescope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cc5d-123">Дублирование имен в области видимости имен XAML не разрешены.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-123">Duplicate names in a XAML namescope are not permitted.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5cc5d-124">Не допускают повторяющиеся имена для регистрации.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-124">Do not permit duplicate names to be registered.</span></span> <span data-ttu-id="5cc5d-125">Если входные данные <paramref name="name" /> уже назначен для существующего элемента в области видимости имен XAML-представлении внутренней коллекции (даже если это так же, как <paramref name="scopedElement" />), исключение.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-125">If the input <paramref name="name" /> is already assigned to an existing element in the internal collection representation of the XAML namescope (even if it is the same as <paramref name="scopedElement" />), throw an exception.</span></span>  
  
<span data-ttu-id="5cc5d-126">Также рассмотрите возможность создания исключения, если предоставленное имя не соответствует [Грамматика XamlName](~/docs/framework/xaml-services/xamlname-grammar.md).</span><span class="sxs-lookup"><span data-stu-id="5cc5d-126">Also consider throwing an exception if the provided name does not conform to [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span></para></block>
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterName : string -&gt; unit" Usage="iNameScope.UnregisterName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5cc5d-127">Имя, регистрация которого отменяется.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-127">The name to unregister.</span></span></param>
        <summary><span data-ttu-id="5cc5d-128">Отменяет регистрацию предоставленного имени в текущей области имен XAML.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-128">Unregisters the provided name from the current XAML namescope.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5cc5d-129">Если входное имя не существует, исключение.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-129">If the input name does not exist, throw an exception.</span></span>  
  
<span data-ttu-id="5cc5d-130">Имя и ранее зарегистрированный элемент, который оно указывает, из представления области имен XAML в виде коллекции следует удалить, чтобы тем же именем потенциально можно было снова зарегистрировать в будущем.</span><span class="sxs-lookup"><span data-stu-id="5cc5d-130">You should remove the name and the previously registered element it refers to from the collection representation of the XAML namescope, so that the same name could potentially be registered again in the future.</span></span></para></block>
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
  </Members>
</Type>