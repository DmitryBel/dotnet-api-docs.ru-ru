<Type Name="CustomAttributeData" FullName="System.Reflection.CustomAttributeData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eef538980d8bacfc4974fe5bc0403805756d47ae" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57915247" /></Metadata><TypeSignature Language="C#" Value="public class CustomAttributeData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CustomAttributeData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeData" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomAttributeData" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomAttributeData" />
  <TypeSignature Language="F#" Value="type CustomAttributeData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b8e4a-101">Обеспечивает доступ к данным настраиваемых атрибутов для сборок, модулей, типов, членов и параметров, загруженных в контекст, предназначенный только для отражения.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-101">Provides access to custom attribute data for assemblies, modules, types, members and parameters that are loaded into the reflection-only context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8e4a-102">Код, который анализируется в контексте только для отражения не может быть выполнена, поэтому не всегда можно просмотреть пользовательские атрибуты, создав экземпляров их и проверки их свойства, используя методы, такие как <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, и так далее .</span><span class="sxs-lookup"><span data-stu-id="b8e4a-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="b8e4a-103">Код для самого типа атрибута загружается в контекст только для отражения, не может быть выполнена.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="b8e4a-104"><xref:System.Reflection.CustomAttributeData> Класс позволяет осмысленно изучать настраиваемых атрибутов в контексте только для отражения, предоставляя абстракцию для атрибутов.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-104">The <xref:System.Reflection.CustomAttributeData> class allows examination of custom attributes in the reflection-only context by providing an abstraction for attributes.</span></span> <span data-ttu-id="b8e4a-105">Члены этого класса можно использовать для получения позиционные аргументы и именованные аргументы атрибута.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-105">The members of this class can be used to obtain the positional arguments and named arguments of the attribute.</span></span> <span data-ttu-id="b8e4a-106">Используйте <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> свойство для получения списка <xref:System.Reflection.CustomAttributeTypedArgument> структур, представляющих позиционные аргументы и используйте <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> свойство для получения списка <xref:System.Reflection.CustomAttributeNamedArgument> структур, представляющих именованные аргументы.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-106">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeTypedArgument> structures that represent the positional arguments, and use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeNamedArgument> structures that represent the named arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b8e4a-107"><xref:System.Reflection.CustomAttributeNamedArgument> Структура только предоставляет сведения о свойстве атрибут, используемый для получения и установки значения аргумента.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-107">The <xref:System.Reflection.CustomAttributeNamedArgument> structure only provides information about the attribute property used to get and set the argument value.</span></span> <span data-ttu-id="b8e4a-108">Чтобы определить тип и значение аргумента, используйте <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> свойство для получения <xref:System.Reflection.CustomAttributeTypedArgument> структуры.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-108">To obtain the type and value of the argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span></span>  
  
 <span data-ttu-id="b8e4a-109">При наличии <xref:System.Reflection.CustomAttributeTypedArgument> структуры для аргумента, ли именованные или позиционные, использовать <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> свойство для получения типа и <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> свойство, чтобы получить это значение.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-109">When you have a <xref:System.Reflection.CustomAttributeTypedArgument> structure for an argument, whether named or positional, use the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> property to get the type and the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property to get the value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b8e4a-110">Для аргумента массива <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> свойство возвращает универсальный <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> из <xref:System.Reflection.CustomAttributeTypedArgument> объектов.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-110">For an array argument, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects.</span></span> <span data-ttu-id="b8e4a-111">Каждый <xref:System.Reflection.CustomAttributeTypedArgument> соответствующий элемент массива представляет объект в коллекции.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-111">Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.</span></span>  
  
 <span data-ttu-id="b8e4a-112"><xref:System.Reflection.CustomAttributeData> можно использовать в контексте выполнения, а также как и в контекст только для отражения.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-112"><xref:System.Reflection.CustomAttributeData> can be used in the execution context as well as in the reflection-only context.</span></span> <span data-ttu-id="b8e4a-113">Например можно избежать загрузки сборки, содержащей код для настраиваемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-113">For example, you might want to avoid loading the assembly that contains the code for a custom attribute.</span></span> <span data-ttu-id="b8e4a-114">С помощью <xref:System.Reflection.CustomAttributeData> класс отличается от использования методы, такие как <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="b8e4a-114">Using the <xref:System.Reflection.CustomAttributeData> class is different from using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span></span>  
  
-   <span data-ttu-id="b8e4a-115">Свойства и методы <xref:System.Reflection.CustomAttributeData> только предоставляют значения, которые были указаны для экземпляра атрибута, не семантику конструктора.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-115">The properties and methods of <xref:System.Reflection.CustomAttributeData> only provide you with the values that were specified for the attribute instance, not the semantics of the constructor.</span></span> <span data-ttu-id="b8e4a-116">Например строковый аргумент атрибута может быть внутреннее преобразование в другое представление и возвращен в канонической форме; или свойство может иметь побочные эффекты при выполнении кода используется атрибут.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-116">For example, a string argument of an attribute might be converted internally to some other representation, and returned in a canonical form; or a property might have side effects when the actual attribute code is executed.</span></span>  
  
-   <span data-ttu-id="b8e4a-117">Свойства и методы <xref:System.Reflection.CustomAttributeData> не позволяют получить настраиваемые атрибуты, унаследованные от базовых классов.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-117">The properties and methods of <xref:System.Reflection.CustomAttributeData> do not allow you to retrieve the custom attributes inherited from base classes.</span></span>  
  
 <span data-ttu-id="b8e4a-118">Для создания экземпляров <xref:System.Reflection.CustomAttributeData> , используйте `static` (`Shared` в Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> фабричные методы.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-118">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8e4a-119">В следующем примере определяется пользовательский атрибут с четырьмя конструкторами и четыре свойства.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-119">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b8e4a-120">Два свойства доступны только для чтения, а также задаются с помощью позиционных параметров из конструкторов.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-120">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b8e4a-121">Другие свойства доступны для чтения/записи и может быть только путем использования именованных аргументов.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-121">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b8e4a-122">Одно свойство позиционные представляет собой массив строк, и одно именованное свойство представляет собой массив целых чисел.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-122">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b8e4a-123">Данный атрибут применяется к сборке, к объявленному в ней типу, к методу типа и к параметру этого метода.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-123">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b8e4a-124">В этих случаях используются различные конструкторы.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-124">Different constructors are used for these cases.</span></span> <span data-ttu-id="b8e4a-125">Во время выполнения сборка загружает себя в контекст только для отражения и отображает сведения о настраиваемых атрибутах, которые были применены к ней, типу и члены, содержащиеся в ней.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-125">When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</span></span>  
  
 <span data-ttu-id="b8e4a-126">Атрибут, который применяется к типу демонстрирует свойства массива, с помощью позиционные и именованные аргументы.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-126">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
    <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomAttributeData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomAttributeData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8e4a-127">Инициализирует новый экземпляр класса <see cref="T:System.Reflection.CustomAttributeData" />.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-127">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8e4a-128">Этот конструктор вызывается производными классами во время создания <xref:System.Reflection.CustomAttributeData> объектов.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-128">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.CustomAttributeData> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="b8e4a-129">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-129">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="b8e4a-130">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-130">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AttributeType">
      <MemberSignature Language="C#" Value="public Type AttributeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AttributeType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.AttributeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AttributeType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeType : Type" Usage="System.Reflection.CustomAttributeData.AttributeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e4a-131">Получает тип атрибута.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-131">Gets the type of the attribute.</span></span></summary>
        <value><span data-ttu-id="b8e4a-132">Тип атрибута.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-132">The type of the attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constructor">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ConstructorInfo Constructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ConstructorInfo Constructor" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.Constructor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Constructor As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ConstructorInfo ^ Constructor { System::Reflection::ConstructorInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Constructor : System.Reflection.ConstructorInfo" Usage="System.Reflection.CustomAttributeData.Constructor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e4a-133">Возвращает объект <see cref="T:System.Reflection.ConstructorInfo" />, представляющий конструктор, предназначенный для инициализации настраиваемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-133">Gets a <see cref="T:System.Reflection.ConstructorInfo" /> object that represents the constructor that would have initialized the custom attribute.</span></span></summary>
        <value><span data-ttu-id="b8e4a-134">Объект, представляющий конструктор, предназначенный для инициализации настраиваемого атрибута, представленного текущим экземпляром класса <see cref="T:System.Reflection.CustomAttributeData" />.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-134">An object that represents the constructor that would have initialized the custom attribute represented by the current instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8e4a-135">Если тип атрибута имеет несколько конструкторов, это свойство возвращает только конкретный конструктор, предназначенный для инициализации экземпляра атрибута, представленного текущим <xref:System.Reflection.CustomAttributeData> объекта.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-135">If an attribute type has multiple constructors, this property returns only the particular constructor that would have initialized the attribute instance represented by the current <xref:System.Reflection.CustomAttributeData> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8e4a-136">В следующем примере определяется пользовательский атрибут с четырьмя конструкторами и четыре свойства.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-136">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b8e4a-137">Два свойства доступны только для чтения, а также задаются с помощью позиционных параметров из конструкторов.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-137">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b8e4a-138">Другие свойства доступны для чтения/записи и может быть только путем использования именованных аргументов.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-138">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b8e4a-139">Одно свойство позиционные представляет собой массив строк, и одно именованное свойство представляет собой массив целых чисел.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-139">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b8e4a-140">Данный атрибут применяется к сборке, к объявленному в ней типу, к методу типа и к параметру этого метода.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-140">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b8e4a-141">В этих случаях используются различные конструкторы.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-141">Different constructors are used for these cases.</span></span> <span data-ttu-id="b8e4a-142">Во время выполнения сборка загружает себя в контекст только для отражения и отображает пользовательские атрибуты.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-142">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b8e4a-143">Атрибут, который применяется к типу демонстрирует свойства массива, с помощью позиционные и именованные аргументы.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-143">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b8e4a-144"><xref:System.Reflection.CustomAttributeData.Constructor%2A> Свойство используется в `ShowAttributeData` метод, который отображает данные настраиваемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-144">The <xref:System.Reflection.CustomAttributeData.Constructor%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="b8e4a-145">В этом примере кода <xref:System.Reflection.ConstructorInfo> возвращаемый этим свойством используется для отображения текста строку, описывающую конструктор, демонстрирующий, что свойство Возвращает конструктор, который будет инициализировать атрибута.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-145">In this code example, the <xref:System.Reflection.ConstructorInfo> returned by this property is used to display a text string that describes the constructor, demonstrating that the property returns the constructor that would initialize the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ConstructorArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConstructorArguments As IList(Of CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ ConstructorArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructorArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;" Usage="System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e4a-146">Возвращает список позиционных аргументов, заданных для экземпляра атрибута, который представлен объектом <see cref="T:System.Reflection.CustomAttributeData" />.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-146">Gets the list of positional arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span></span></summary>
        <value><span data-ttu-id="b8e4a-147">Коллекция структур, представляющих позиционные аргументы, заданные для экземпляра настраиваемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-147">A collection of structures that represent the positional arguments specified for the custom attribute instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8e4a-148">Этот метод возвращает позиционные аргументы, заданные для экземпляра настраиваемого атрибута, не выполняя код настраиваемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-148">This method gets the positional arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="b8e4a-149">Таким образом он может использоваться в контексте только для отражения.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-149">Thus, it can be used in the reflection-only context.</span></span>  
  
 <span data-ttu-id="b8e4a-150">Используйте <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> метод для получения именованных аргументов, заданных для экземпляра атрибута.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-150">Use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> method to get the named arguments specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8e4a-151">В следующем примере определяется пользовательский атрибут с четырьмя конструкторами и четыре свойства.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-151">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b8e4a-152">Два свойства доступны только для чтения, а также задаются с помощью позиционных параметров из конструкторов.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-152">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b8e4a-153">Другие свойства доступны для чтения/записи и может быть только путем использования именованных аргументов.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-153">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b8e4a-154">Одно свойство позиционные представляет собой массив строк, и одно именованное свойство представляет собой массив целых чисел.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-154">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b8e4a-155">Данный атрибут применяется к сборке, к объявленному в ней типу, к методу типа и к параметру этого метода.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-155">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b8e4a-156">В этих случаях используются различные конструкторы.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-156">Different constructors are used for these cases.</span></span> <span data-ttu-id="b8e4a-157">Во время выполнения сборка загружает себя в контекст только для отражения и отображает пользовательские атрибуты.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-157">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b8e4a-158">Атрибут, который применяется к типу демонстрирует свойства массива, с помощью позиционные и именованные аргументы.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-158">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b8e4a-159"><xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> Свойство используется в `ShowAttributeData` метод, который отображает данные настраиваемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-159">The <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="b8e4a-160">В этом примере кода это свойство используется для отображения списка аргументов, передаваемых в конструктор, для инициализации атрибута.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-160">In this code example, this property is used to display the list of arguments passed to the constructor that initialized the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.NamedArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeData.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b8e4a-161">Объект, сравниваемый с этим экземпляром, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-161">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="b8e4a-162">Возвращает значение, показывающее, равен ли экземпляр указанному объекту.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-162">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="b8e4a-163">Значение <see langword="true" />, если значение <paramref name="obj" /> равно текущему экземпляру; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-163"><see langword="true" /> if <paramref name="obj" /> is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b8e4a-164">Возвращает список объектов <see cref="T:System.Reflection.CustomAttributeData" />, представляющих данные об атрибутах, которые были применены к целевому объекту.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-164">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Assembly target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Assembly target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Assembly) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="b8e4a-165">Сборка, данные настраиваемого атрибута которой требуется извлечь.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-165">The assembly whose custom attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="b8e4a-166">Возвращает список объектов <see cref="T:System.Reflection.CustomAttributeData" />, представляющих данные об атрибутах, примененных к целевой сборке.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-166">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target assembly.</span></span></summary>
        <returns><span data-ttu-id="b8e4a-167">Список объектов, представляющих данные об атрибутах, примененных к целевой сборке.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-167">A list of objects that represent data about the attributes that have been applied to the target assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8e4a-168">Этот метод предоставляет альтернативу <xref:System.Reflection.Assembly.GetCustomAttributes%2A> метод, который всегда можно использовать в контексте только для отражения.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-168">This method provides an alternative to the <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8e4a-169">В следующем примере определяется пользовательский атрибут с четырьмя конструкторами и четыре свойства.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-169">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b8e4a-170">Два свойства доступны только для чтения, а также задаются с помощью позиционных параметров из конструкторов.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-170">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b8e4a-171">Другие свойства доступны для чтения/записи и может быть только путем использования именованных аргументов.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-171">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b8e4a-172">Одно свойство позиционные представляет собой массив строк, и одно именованное свойство представляет собой массив целых чисел.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-172">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b8e4a-173">Данный атрибут применяется к сборке, к объявленному в ней типу, к методу типа и к параметру этого метода.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-173">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b8e4a-174">В этих случаях используются различные конструкторы.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-174">Different constructors are used for these cases.</span></span> <span data-ttu-id="b8e4a-175">Во время выполнения сборка загружает себя в контекст только для отражения и отображает пользовательские атрибуты.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-175">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b8e4a-176">Атрибут, который применяется к типу демонстрирует свойства массива, с помощью позиционные и именованные аргументы.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-176">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b8e4a-177"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> Метод используется в `Main()` для получения настраиваемых атрибутов, примененных к сборке.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-177">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes applied to the assembly.</span></span> <span data-ttu-id="b8e4a-178">Возвращаемое значение метода передается `ShowAttributeData` метод.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-178">The return value of the method is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b8e4a-179"><paramref name="target" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-179"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.MemberInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.MemberInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As MemberInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="b8e4a-180">Элемент, данные об атрибутах которого требуется извлечь.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-180">The member whose attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="b8e4a-181">Возвращает список объектов <see cref="T:System.Reflection.CustomAttributeData" />, представляющих данные об атрибутах, примененных к целевому элементу.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-181">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target member.</span></span></summary>
        <returns><span data-ttu-id="b8e4a-182">Список объектов, представляющих данные об атрибутах, примененных к целевому элементу.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-182">A list of objects that represent data about the attributes that have been applied to the target member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8e4a-183">Эта перегрузка метода возвращает данные настраиваемых атрибутов для типы, вложенные типы и члены типов, так как <xref:System.Type> класс и классы в <xref:System.Reflection> пространство имен, представляющие члены типов, которые являются производными от класса <xref:System.Reflection.MemberInfo>.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-183">This method overload gets custom attribute data for types, nested types, and type members, because the <xref:System.Type> class and the classes in the <xref:System.Reflection> namespace that represent type members all derive from <xref:System.Reflection.MemberInfo>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8e4a-184">В следующем примере определяется пользовательский атрибут с четырьмя конструкторами и четыре свойства.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-184">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b8e4a-185">Два свойства доступны только для чтения, а также задаются с помощью позиционных параметров из конструкторов.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-185">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b8e4a-186">Другие свойства доступны для чтения/записи и может быть только путем использования именованных аргументов.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-186">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b8e4a-187">Одно свойство позиционные представляет собой массив строк, и одно именованное свойство представляет собой массив целых чисел.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-187">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b8e4a-188">Данный атрибут применяется к сборке, к объявленному в ней типу, к методу типа и к параметру этого метода.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-188">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b8e4a-189">В этих случаях используются различные конструкторы.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-189">Different constructors are used for these cases.</span></span> <span data-ttu-id="b8e4a-190">Во время выполнения сборка загружает себя в контекст только для отражения и отображает пользовательские атрибуты.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-190">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b8e4a-191">Атрибут, который применяется к типу демонстрирует свойства массива, с помощью позиционные и именованные аргументы.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-191">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b8e4a-192"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> Метод используется в `Main()` получить настраиваемые атрибуты, которые были применены к типу, к методу теста (<xref:System.Type> является производным от <xref:System.Reflection.MemberInfo>).</span><span class="sxs-lookup"><span data-stu-id="b8e4a-192">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes that were applied to a type and to a test method (<xref:System.Type> derives from <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="b8e4a-193">Возвращаемое значение <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> передается `ShowAttributeData` метод.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-193">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b8e4a-194"><paramref name="target" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-194"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Module target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Module target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Module) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Module" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="b8e4a-195">Модуль, данные настраиваемого атрибута которого требуется извлечь.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-195">The module whose custom attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="b8e4a-196">Возвращает список объектов <see cref="T:System.Reflection.CustomAttributeData" />, представляющих данные об атрибутах, примененных к целевому модулю.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-196">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target module.</span></span></summary>
        <returns><span data-ttu-id="b8e4a-197">Список объектов, представляющих данные об атрибутах, примененных к целевому модулю.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-197">A list of objects that represent data about the attributes that have been applied to the target module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b8e4a-198"><paramref name="target" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-198"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.ParameterInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.ParameterInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As ParameterInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.ParameterInfo" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="b8e4a-199">Параметр, данные об атрибутах которого требуется извлечь.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-199">The parameter whose attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="b8e4a-200">Возвращает список объектов <see cref="T:System.Reflection.CustomAttributeData" />, представляющих данные об атрибутах, примененных к целевому параметру.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-200">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target parameter.</span></span></summary>
        <returns><span data-ttu-id="b8e4a-201">Список объектов, представляющих данные об атрибутах, примененных к целевому параметру.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-201">A list of objects that represent data about the attributes that have been applied to the target parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8e4a-202">Этот метод предоставляет альтернативу <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> метод, который всегда можно использовать в контексте только для отражения.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-202">This method provides an alternative to the <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8e4a-203">В следующем примере определяется пользовательский атрибут с четырьмя конструкторами и четыре свойства.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-203">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b8e4a-204">Два свойства доступны только для чтения, а также задаются с помощью позиционных параметров из конструкторов.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-204">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b8e4a-205">Другие свойства доступны для чтения/записи и может быть только путем использования именованных аргументов.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-205">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b8e4a-206">Одно свойство позиционные представляет собой массив строк, и одно именованное свойство представляет собой массив целых чисел.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-206">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b8e4a-207">Данный атрибут применяется к сборке, к объявленному в ней типу, к методу типа и к параметру этого метода.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-207">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b8e4a-208">В этих случаях используются различные конструкторы.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-208">Different constructors are used for these cases.</span></span> <span data-ttu-id="b8e4a-209">Во время выполнения сборка загружает себя в контекст только для отражения и отображает пользовательские атрибуты.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-209">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b8e4a-210">Атрибут, который применяется к типу демонстрирует свойства массива, с помощью позиционные и именованные аргументы.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-210">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b8e4a-211"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> Метод используется в `Main()` для извлечения настраиваемых атрибутов, примененных к параметру метода теста.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-211">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to retrieve the custom attributes applied to a parameter of a test method.</span></span> <span data-ttu-id="b8e4a-212">Возвращаемое значение <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> передается `ShowAttributeData` метод.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-212">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b8e4a-213"><paramref name="target" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-213"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeData.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8e4a-214">Служит хэш-функцией для определенного типа.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-214">Serves as a hash function for a particular type.</span></span></summary>
        <returns><span data-ttu-id="b8e4a-215">Хэш-код для текущего объекта <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-215">A hash code for the current <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="NamedArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamedArguments As IList(Of CustomAttributeNamedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ NamedArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamedArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;" Usage="System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e4a-216">Возвращает список именованных аргументов, заданных для экземпляра атрибута, представленного объектом <see cref="T:System.Reflection.CustomAttributeData" />.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-216">Gets the list of named arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span></span></summary>
        <value><span data-ttu-id="b8e4a-217">Коллекция структур, представляющих именованные аргументы, заданные для экземпляра настраиваемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-217">A collection of structures that represent the named arguments specified for the custom attribute instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8e4a-218">Этот метод получает именованные аргументы, заданные для экземпляра настраиваемого атрибута, не выполняя код настраиваемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-218">This method gets the named arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="b8e4a-219">Таким образом он может использоваться в контексте только для отражения.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-219">Thus, it can be used in the Reflection-only context.</span></span>  
  
 <span data-ttu-id="b8e4a-220">Возвращаемый список содержит только именованные аргументы, заданные для экземпляра атрибута.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-220">The list that is returned contains only the named arguments that were specified for the attribute instance.</span></span>  
  
 <span data-ttu-id="b8e4a-221">Используйте <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> метод для получения позиционные аргументы, заданные для экземпляра атрибута.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-221">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> method to get the positional arguments that were specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8e4a-222">В следующем примере определяется пользовательский атрибут с четырьмя конструкторами и четыре свойства.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-222">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b8e4a-223">Два свойства доступны только для чтения, а также задаются с помощью позиционных параметров из конструкторов.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-223">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b8e4a-224">Другие свойства доступны для чтения/записи и может быть только путем использования именованных аргументов.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-224">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b8e4a-225">Одно свойство позиционные представляет собой массив строк, и одно именованное свойство представляет собой массив целых чисел.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-225">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b8e4a-226">Данный атрибут применяется к сборке, к объявленному в ней типу, к методу типа и к параметру этого метода.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-226">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b8e4a-227">В этих случаях используются различные конструкторы.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-227">Different constructors are used for these cases.</span></span> <span data-ttu-id="b8e4a-228">Во время выполнения сборка загружает себя в контекст только для отражения и отображает пользовательские атрибуты.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-228">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b8e4a-229">Атрибут, который применяется к типу демонстрирует свойства массива, с помощью позиционные и именованные аргументы.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-229">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b8e4a-230"><xref:System.Reflection.CustomAttributeData.NamedArguments%2A> Свойство используется в `ShowAttributeData` метод, который отображает данные настраиваемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-230">The <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="b8e4a-231">В этом примере кода это свойство используется для отображения списка именованных аргументов, заданных для атрибута.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-231">In this code example, this property is used to display the list of named arguments specified for the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeData.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8e4a-232">Возвращает строковое представление настраиваемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-232">Returns a string representation of the custom attribute.</span></span></summary>
        <returns><span data-ttu-id="b8e4a-233">Строковое значение, которое представляет настраиваемый атрибут.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-233">A string value that represents the custom attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8e4a-234">Строковое значение содержит тип атрибута, параметры атрибута и именованные параметры.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-234">The string value includes the attribute type, the attribute parameters, and the named parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8e4a-235">В следующем примере определяется пользовательский атрибут с четырьмя конструкторами и четыре свойства.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-235">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b8e4a-236">Два свойства доступны только для чтения, а также задаются с помощью позиционных параметров из конструкторов.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-236">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b8e4a-237">Другие свойства доступны для чтения/записи и может быть только путем использования именованных аргументов.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-237">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b8e4a-238">Одно свойство позиционные представляет собой массив строк, и одно именованное свойство представляет собой массив целых чисел.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-238">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b8e4a-239">Данный атрибут применяется к сборке, к объявленному в ней типу, к методу типа и к параметру этого метода.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-239">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b8e4a-240">В этих случаях используются различные конструкторы.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-240">Different constructors are used for these cases.</span></span> <span data-ttu-id="b8e4a-241">Во время выполнения сборка загружает себя в контекст только для отражения и отображает пользовательские атрибуты.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-241">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b8e4a-242">Атрибут, который применяется к типу демонстрирует свойства массива, с помощью позиционные и именованные аргументы.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-242">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b8e4a-243">В этом примере <xref:System.Reflection.CustomAttributeData.ToString%2A> метод используется в `ShowAttributeData` метод, чтобы определить атрибут, данные которого отображается.</span><span class="sxs-lookup"><span data-stu-id="b8e4a-243">In this example, the <xref:System.Reflection.CustomAttributeData.ToString%2A> method is used in the `ShowAttributeData` method, to identify the attribute whose data is being displayed.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>