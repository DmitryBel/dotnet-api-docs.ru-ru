<Type Name="PageAsyncTask" FullName="System.Web.UI.PageAsyncTask">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cbe5bbb726a4d46f54614f590f36d516103affde" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57934097" /></Metadata><TypeSignature Language="C#" Value="public sealed class PageAsyncTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PageAsyncTask extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageAsyncTask" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PageAsyncTask" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAsyncTask sealed" />
  <TypeSignature Language="F#" Value="type PageAsyncTask = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b0e26-101">Содержит информацию относительно асинхронной задачи, зарегистрированной на странице.</span><span class="sxs-lookup"><span data-stu-id="b0e26-101">Contains information about an asynchronous task registered to a page.</span></span> <span data-ttu-id="b0e26-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="b0e26-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0e26-103">ASP.NET версии 2.0 можно зарегистрировать несколько задач на страницу и выполнять их асинхронно до отображения страницы.</span><span class="sxs-lookup"><span data-stu-id="b0e26-103">ASP.NET version 2.0 allows you to register multiple tasks to a page and run them asynchronously prior to rendering the page.</span></span> <span data-ttu-id="b0e26-104">Можно указать, что задача должна выполняться асинхронно Если очень медленно и других процессов ко блокировали выполнения не требуется.</span><span class="sxs-lookup"><span data-stu-id="b0e26-104">You might specify that a task be run asynchronously if it is a slow process and you do not want other processes to be tied up while it is executing.</span></span> <span data-ttu-id="b0e26-105">Асинхронные задачи могут выполняться параллельно или последовательно.</span><span class="sxs-lookup"><span data-stu-id="b0e26-105">The asynchronous tasks can be executed in parallel or sequentially.</span></span>  
  
 <span data-ttu-id="b0e26-106">Объект <xref:System.Web.UI.PageAsyncTask> объект должен быть зарегистрирован на страницу через <xref:System.Web.UI.Page.RegisterAsyncTask%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b0e26-106">A <xref:System.Web.UI.PageAsyncTask> object must be registered to the page through the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method.</span></span> <span data-ttu-id="b0e26-107">Сама страница не обрабатываться асинхронно для выполнения асинхронных задач.</span><span class="sxs-lookup"><span data-stu-id="b0e26-107">The page itself does not have to be processed asynchronously to execute asynchronous tasks.</span></span> <span data-ttu-id="b0e26-108">Можно задать `Async` атрибут либо `true` (как показано в следующем примере кода) или `false` на странице директива и асинхронные задачи будут по-прежнему обрабатываться асинхронно:</span><span class="sxs-lookup"><span data-stu-id="b0e26-108">You can set the `Async` attribute to either `true` (as shown in the following code example) or `false` on the page directive and the asynchronous tasks will still be processed asynchronously:</span></span>  
  
 `<%@ Page Async="true" %>`  
  
 <span data-ttu-id="b0e26-109">Когда `Async` атрибут имеет значение `false`, поток, который выполняет страницу будет блокироваться до завершения всех асинхронных задачах.</span><span class="sxs-lookup"><span data-stu-id="b0e26-109">When the `Async` attribute is set to `false`, the thread that executes the page will be blocked until all asynchronous tasks are complete.</span></span>  
  
 <span data-ttu-id="b0e26-110">Все асинхронные задачи, зарегистрированные до <xref:System.Web.UI.Page.PreRenderComplete> событий будет автоматически выполняться страницы, если они еще не были выполнены.</span><span class="sxs-lookup"><span data-stu-id="b0e26-110">Any asynchronous tasks registered before the <xref:System.Web.UI.Page.PreRenderComplete> event will be executed automatically by the page if they have not already been executed.</span></span> <span data-ttu-id="b0e26-111">Зарегистрированы этих асинхронных задач после завершения <xref:System.Web.UI.Page.PreRenderComplete> событий должна выполняться явно с помощью <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b0e26-111">Those asynchronous tasks registered after the <xref:System.Web.UI.Page.PreRenderComplete> event must be executed explicitly through the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method.</span></span> <span data-ttu-id="b0e26-112"><xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> Метод может также использоваться для запуска задач перед <xref:System.Web.UI.Page.PreRenderComplete> событий.</span><span class="sxs-lookup"><span data-stu-id="b0e26-112">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method can also be used to start tasks before the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span> <span data-ttu-id="b0e26-113"><xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> Метод выполняет все зарегистрированные асинхронные задачи на странице, которая еще не выполнялись.</span><span class="sxs-lookup"><span data-stu-id="b0e26-113">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method executes all the registered asynchronous tasks on the page that have not been executed.</span></span>  
  
 <span data-ttu-id="b0e26-114">По умолчанию это асинхронная задача истечет время ожидания, если оно не было завершено в течение 45 секунд.</span><span class="sxs-lookup"><span data-stu-id="b0e26-114">By default, an asynchronous task will time out if it has not completed within 45 seconds.</span></span> <span data-ttu-id="b0e26-115">Можно указать другое значение в файле Web.config или в директиве страницы.</span><span class="sxs-lookup"><span data-stu-id="b0e26-115">You can specify a different time-out value in either the Web.config file or the page directive.</span></span> <span data-ttu-id="b0e26-116">`<pages>` Раздел в файл Web.config содержит `asyncTimeout` атрибута, как показано ниже.</span><span class="sxs-lookup"><span data-stu-id="b0e26-116">The `<pages>` section of the Web.config file contains an `asyncTimeout` attribute, as shown below.</span></span>  
  
 `<system.web>`  
  
 `<pages asyncTimeout="30">`  
  
 `</pages>`  
  
 `</system.web>`  
  
 <span data-ttu-id="b0e26-117">Директива страницы содержит `AsyncTimeout` атрибута.</span><span class="sxs-lookup"><span data-stu-id="b0e26-117">The page directive contains an `AsyncTimeout` attribute.</span></span>  
  
 `<%@ Page AsyncTimeout="30" %>`  
  
   
  
## Examples  
 <span data-ttu-id="b0e26-118">В следующем примере кода регистрируется три асинхронные задачи на страницу и выполняет их параллельно.</span><span class="sxs-lookup"><span data-stu-id="b0e26-118">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="b0e26-119">Каждая задача вызывает метод, который переводит поток в спящий режим в течение 5 секунд.</span><span class="sxs-lookup"><span data-stu-id="b0e26-119">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b0e26-120">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.PageAsyncTask" />.</span><span class="sxs-lookup"><span data-stu-id="b0e26-120">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of CancellationToken, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::CancellationToken, System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="b0e26-121">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="b0e26-121">An event handler.</span></span></param>
        <summary><span data-ttu-id="b0e26-122">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.PageAsyncTask" />, используя обработчик событий, позволяющий отменить задачу.</span><span class="sxs-lookup"><span data-stu-id="b0e26-122">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0e26-123">Этот конструктор создает оболочку <xref:System.Web.TaskEventHandler> делегата, чтобы <xref:System.Web.UI.PageAsyncTask> объекта можно интегрировать асинхронный код (на основе <xref:System.Threading.Tasks.Task> объектов) с существующей функции асинхронных страниц веб-форм ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="b0e26-123">This constructor wraps a <xref:System.Web.TaskEventHandler> delegate so that the <xref:System.Web.UI.PageAsyncTask> object can integrate asynchronous code (based on <xref:System.Threading.Tasks.Task> objects) with the existing ASP.NET Web Forms asynchronous pages feature.</span></span> <span data-ttu-id="b0e26-124">Сигнал, ASP.NET <xref:System.Threading.CancellationToken> объект, который передается <xref:System.Web.TaskEventHandler> делегата для отмены на основе <xref:System.Web.UI.Page.AsyncTimeout%2A> атрибут задан `@ Page` директив веб-страницы.</span><span class="sxs-lookup"><span data-stu-id="b0e26-124">ASP.NET will signal the <xref:System.Threading.CancellationToken> object that is passed to a <xref:System.Web.TaskEventHandler> delegate for cancellation based on the <xref:System.Web.UI.Page.AsyncTimeout%2A> attribute set in the `@ Page` directive of the Web page.</span></span> <span data-ttu-id="b0e26-125">Когда <xref:System.Web.UI.Page.AsyncTimeout%2A> достигает значения, <xref:System.Threading.CancellationToken> будет передаваться объект.</span><span class="sxs-lookup"><span data-stu-id="b0e26-125">When the <xref:System.Web.UI.Page.AsyncTimeout%2A> value has been reached, the <xref:System.Threading.CancellationToken> object will be signaled.</span></span> <span data-ttu-id="b0e26-126">`CancellationToken` Параметра должны быть переданы асинхронные интерфейсы API, вызываемых реализацией <xref:System.Web.TaskEventHandler> класса.</span><span class="sxs-lookup"><span data-stu-id="b0e26-126">The `CancellationToken` parameter must be passed to any asynchronous APIs that are called by your implementation of the <xref:System.Web.TaskEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : Func&lt;System.Threading.Tasks.Task&gt; -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="b0e26-127">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="b0e26-127">An event handler.</span></span></param>
        <summary><span data-ttu-id="b0e26-128">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.PageAsyncTask" />, используя обработчик событий, позволяющий обработать задачу.</span><span class="sxs-lookup"><span data-stu-id="b0e26-128">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be handled.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : System.Web.BeginEventHandler * System.Web.EndEventHandler * System.Web.EndEventHandler * obj -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask (beginHandler, endHandler, timeoutHandler, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler"><span data-ttu-id="b0e26-129">Обработчик для вызова при запуске асинхронной задачи.</span><span class="sxs-lookup"><span data-stu-id="b0e26-129">The handler to call when beginning an asynchronous task.</span></span></param>
        <param name="endHandler"><span data-ttu-id="b0e26-130">Обработчик для вызова при успешном завершении задачи до истечения времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="b0e26-130">The handler to call when the task is completed successfully within the time-out period.</span></span></param>
        <param name="timeoutHandler"><span data-ttu-id="b0e26-131">Обработчик для вызова в случае, если задача не завершилась успешно до истечения времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="b0e26-131">The handler to call when the task is not completed successfully within the time-out period.</span></span></param>
        <param name="state"><span data-ttu-id="b0e26-132">Объект, который представляет состояние задачи.</span><span class="sxs-lookup"><span data-stu-id="b0e26-132">The object that represents the state of the task.</span></span></param>
        <summary><span data-ttu-id="b0e26-133">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.PageAsyncTask" /> с использованием заданного по умолчанию значения для параллельного выполнения.</span><span class="sxs-lookup"><span data-stu-id="b0e26-133">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the default value for executing in parallel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0e26-134">Эта реализация конструктора задает <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> свойства `false` , асинхронная задача не обрабатывается параллельно с другими задачами на странице.</span><span class="sxs-lookup"><span data-stu-id="b0e26-134">This implementation of the constructor sets the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property to `false` so the asynchronous task is not processed in parallel with other tasks on the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b0e26-135">Не указан параметр <paramref name="beginHandler" /> или параметр <paramref name="endHandler" />.</span><span class="sxs-lookup"><span data-stu-id="b0e26-135">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object, executeInParallel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state, bool executeInParallel);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : System.Web.BeginEventHandler * System.Web.EndEventHandler * System.Web.EndEventHandler * obj * bool -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask (beginHandler, endHandler, timeoutHandler, state, executeInParallel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="executeInParallel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="beginHandler"><span data-ttu-id="b0e26-136">Обработчик для вызова при запуске асинхронной задачи.</span><span class="sxs-lookup"><span data-stu-id="b0e26-136">The handler to call when beginning an asynchronous task.</span></span></param>
        <param name="endHandler"><span data-ttu-id="b0e26-137">Обработчик для вызова при успешном завершении задачи до истечения времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="b0e26-137">The handler to call when the task is completed successfully within the time-out period.</span></span></param>
        <param name="timeoutHandler"><span data-ttu-id="b0e26-138">Обработчик для вызова в случае, если задача не завершилась успешно до истечения времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="b0e26-138">The handler to call when the task is not completed successfully within the time-out period.</span></span></param>
        <param name="state"><span data-ttu-id="b0e26-139">Объект, который представляет состояние задачи.</span><span class="sxs-lookup"><span data-stu-id="b0e26-139">The object that represents the state of the task.</span></span></param>
        <param name="executeInParallel"><span data-ttu-id="b0e26-140">Значение, показывающее, может ли данная задача обрабатываться параллельно с другими задачами.</span><span class="sxs-lookup"><span data-stu-id="b0e26-140">The value that indicates whether the task can be processed in parallel with other tasks.</span></span></param>
        <summary><span data-ttu-id="b0e26-141">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.PageAsyncTask" /> с использованием указанного значения для параллельного выполнения.</span><span class="sxs-lookup"><span data-stu-id="b0e26-141">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the specified value for executing in parallel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0e26-142">Эта реализация конструктора позволяет задать ли асинхронная задача будет выполняться параллельно с другими задачами на странице.</span><span class="sxs-lookup"><span data-stu-id="b0e26-142">This implementation of the constructor allows you to set whether the asynchronous task will be processed in parallel with other tasks on the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0e26-143">В следующем примере кода создает три асинхронные задачи, которые обрабатываются параллельно друг с другом.</span><span class="sxs-lookup"><span data-stu-id="b0e26-143">The following code example creates three asynchronous tasks that are processed in parallel to each other.</span></span> <span data-ttu-id="b0e26-144">Этот пример является частью большого примера, приведенного в <xref:System.Web.UI.PageAsyncTask> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="b0e26-144">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b0e26-145">Не указан параметр <paramref name="beginHandler" /> или параметр <paramref name="endHandler" />.</span><span class="sxs-lookup"><span data-stu-id="b0e26-145">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginHandler">
      <MemberSignature Language="C#" Value="public System.Web.BeginEventHandler BeginHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.BeginEventHandler BeginHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.BeginHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginHandler As BeginEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::BeginEventHandler ^ BeginHandler { System::Web::BeginEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BeginHandler : System.Web.BeginEventHandler" Usage="System.Web.UI.PageAsyncTask.BeginHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.BeginEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0e26-146">Возвращает метод для вызова при запуске асинхронной задачи.</span><span class="sxs-lookup"><span data-stu-id="b0e26-146">Gets the method to call when beginning an asynchronous task.</span></span></summary>
        <value><span data-ttu-id="b0e26-147">Делегат <see cref="T:System.Web.BeginEventHandler" />, который представляет метод для вызова при запуске при запуске асинхронной задачи.</span><span class="sxs-lookup"><span data-stu-id="b0e26-147">A <see cref="T:System.Web.BeginEventHandler" /> delegate that represents the method to call when beginning the asynchronous task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0e26-148"><xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> Делегата задается в конструкторе.</span><span class="sxs-lookup"><span data-stu-id="b0e26-148">The <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0e26-149">В следующем примере кода регистрируется три асинхронные задачи на страницу и выполняет их параллельно.</span><span class="sxs-lookup"><span data-stu-id="b0e26-149">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="b0e26-150">Каждая задача вызывает метод, который переводит поток в спящий режим в течение 5 секунд.</span><span class="sxs-lookup"><span data-stu-id="b0e26-150">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="b0e26-151">Объект <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> делегат определяется для каждой задачи.</span><span class="sxs-lookup"><span data-stu-id="b0e26-151">A <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler EndHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler EndHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.EndHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ EndHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndHandler : System.Web.EndEventHandler" Usage="System.Web.UI.PageAsyncTask.EndHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0e26-152">Возвращает метод для вызова при успешном завершении задачи до истечения времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="b0e26-152">Gets the method to call when the task completes successfully within the time-out period.</span></span></summary>
        <value><span data-ttu-id="b0e26-153">Делегат <see cref="T:System.Web.EndEventHandler" />, который представляет метод для вызова при успешном завершении задачи до истечения времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="b0e26-153">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task completes successfully within the time-out period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0e26-154"><xref:System.Web.UI.PageAsyncTask.EndHandler%2A> Делегата задается в конструкторе.</span><span class="sxs-lookup"><span data-stu-id="b0e26-154">The <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0e26-155">В следующем примере кода регистрируется три асинхронные задачи на страницу и выполняет их параллельно.</span><span class="sxs-lookup"><span data-stu-id="b0e26-155">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="b0e26-156">Каждая задача вызывает метод, который переводит поток в спящий режим в течение 5 секунд.</span><span class="sxs-lookup"><span data-stu-id="b0e26-156">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="b0e26-157"><xref:System.Web.UI.PageAsyncTask.EndHandler%2A> Делегат определяется для каждой задачи.</span><span class="sxs-lookup"><span data-stu-id="b0e26-157">An <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteInParallel">
      <MemberSignature Language="C#" Value="public bool ExecuteInParallel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExecuteInParallel" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.ExecuteInParallel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecuteInParallel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExecuteInParallel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ExecuteInParallel : bool" Usage="System.Web.UI.PageAsyncTask.ExecuteInParallel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0e26-158">Возвращает значение, показывающее, может ли данная задача обрабатываться параллельно с другими задачами.</span><span class="sxs-lookup"><span data-stu-id="b0e26-158">Gets a value that indicates whether the task can be processed in parallel with other tasks.</span></span></summary>
        <value><span data-ttu-id="b0e26-159">Значение <see langword="true" />, если данная задача может обрабатываться параллельно с другими задачами, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b0e26-159"><see langword="true" /> if the task should be processed in parallel with other tasks; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0e26-160"><xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> Задано в конструкторе.</span><span class="sxs-lookup"><span data-stu-id="b0e26-160">The <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set in the constructor.</span></span> <span data-ttu-id="b0e26-161">Когда несколько задач регистрируются на странице и <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> свойство имеет значение `true`, а затем эти задачи выполняются одновременно.</span><span class="sxs-lookup"><span data-stu-id="b0e26-161">When multiple tasks are registered in a page and the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `true`, then those tasks are processed concurrently.</span></span> <span data-ttu-id="b0e26-162">Тем не менее если <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> свойству `false`, а затем эти задачи обрабатываются последовательно.</span><span class="sxs-lookup"><span data-stu-id="b0e26-162">However, if the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `false`, then those tasks are processed sequentially.</span></span> <span data-ttu-id="b0e26-163">Например, если страница содержит две асинхронные задачи, каждый заняло до 5 секунд и <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> присваивается `true`, обе задачи будут завершены в течение 5 секунд.</span><span class="sxs-lookup"><span data-stu-id="b0e26-163">For example, if a page contained two asynchronous tasks that each took 5 seconds to complete and <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `true`, both tasks will complete in 5 seconds.</span></span> <span data-ttu-id="b0e26-164">Если <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> присваивается `false` эти одним и тем же две задачи, а затем первая задача завершается в течение 5 секунд и вторая задача завершится 5 секунд после завершения первой задачи.</span><span class="sxs-lookup"><span data-stu-id="b0e26-164">If <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `false` for these same two tasks, then the first task will complete in 5 seconds and the second task will complete 5 seconds after the completion of the first task.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0e26-165">В следующем примере кода определяется три асинхронные задачи, для которых задается для обработки в параллельном режиме.</span><span class="sxs-lookup"><span data-stu-id="b0e26-165">The following code example defines three asynchronous tasks that are each set to be processed in parallel.</span></span> <span data-ttu-id="b0e26-166">Этот пример является частью большого примера, приведенного в <xref:System.Web.UI.PageAsyncTask> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="b0e26-166">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public object State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object State" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ State { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.State : obj" Usage="System.Web.UI.PageAsyncTask.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0e26-167">Возвращает объект, который представляет состояние задачи.</span><span class="sxs-lookup"><span data-stu-id="b0e26-167">Gets an object that represents the state of the task.</span></span></summary>
        <value><span data-ttu-id="b0e26-168">Объект <see cref="T:System.Object" />, который представляет состояние задачи.</span><span class="sxs-lookup"><span data-stu-id="b0e26-168">An <see cref="T:System.Object" /> that represents the state of the task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0e26-169"><xref:System.Web.UI.PageAsyncTask.State%2A> Свойство задается в конструкторе и не может быть изменен во время выполнения асинхронной задачи.</span><span class="sxs-lookup"><span data-stu-id="b0e26-169">The <xref:System.Web.UI.PageAsyncTask.State%2A> property is set in the constructor and cannot be modified during execution of the asynchronous task.</span></span> <span data-ttu-id="b0e26-170">Может различать асинхронные задачи на странице путем назначения соответствующих им уникальные строковые значения <xref:System.Web.UI.PageAsyncTask.State%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="b0e26-170">You can differentiate asynchronous tasks in a page by assigning unique string values to their respective <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0e26-171">В следующем примере кода создаются три асинхронные задачи и присваивает им уникальные значения для их <xref:System.Web.UI.PageAsyncTask.State%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="b0e26-171">The following code example creates three asynchronous tasks and gives them unique values for their <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span> <span data-ttu-id="b0e26-172">Этот пример является частью большого примера, приведенного в <xref:System.Web.UI.PageAsyncTask> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="b0e26-172">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler TimeoutHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler TimeoutHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.TimeoutHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ TimeoutHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeoutHandler : System.Web.EndEventHandler" Usage="System.Web.UI.PageAsyncTask.TimeoutHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0e26-173">Возвращает метод для вызова в случае, если задача не завершилась успешно до истечения времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="b0e26-173">Gets the method to call when the task does not complete successfully within the time-out period.</span></span></summary>
        <value><span data-ttu-id="b0e26-174">Делегат <see cref="T:System.Web.EndEventHandler" />, который представляет метод для вызова в случае, если задача не завершилась успешно до истечения времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="b0e26-174">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task does not complete successfully within the time-out period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0e26-175"><xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> Делегата задается в конструкторе.</span><span class="sxs-lookup"><span data-stu-id="b0e26-175">The <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0e26-176">В следующем примере кода регистрируется три асинхронные задачи на страницу и выполняет их параллельно.</span><span class="sxs-lookup"><span data-stu-id="b0e26-176">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="b0e26-177">Каждая задача вызывает метод, который переводит поток в спящий режим в течение 5 секунд.</span><span class="sxs-lookup"><span data-stu-id="b0e26-177">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="b0e26-178">Объект <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> делегат определяется для каждой задачи.</span><span class="sxs-lookup"><span data-stu-id="b0e26-178">A <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>