<Type Name="Timer" FullName="System.Windows.Forms.Timer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="acefedf83552288f40d51824ecb85c7056139fd1" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56386096" /></Metadata><TypeSignature Language="C#" Value="public class Timer : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Timer extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Timer" />
  <TypeSignature Language="VB.NET" Value="Public Class Timer&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type Timer = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Tick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Interval")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b6b0e-101">Реализует таймер, который вызывает событие через определенные пользователем интервалы времени.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-101">Implements a timer that raises an event at user-defined intervals.</span></span> <span data-ttu-id="b6b0e-102">Данный таймер оптимизирован для приложений формы Windows Forms и должен использоваться в окне.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-102">This timer is optimized for use in Windows Forms applications and must be used in a window.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6b0e-103">Объект <xref:System.Windows.Forms.Timer> используется для вызова события через определенные пользователем интервалы времени.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-103">A <xref:System.Windows.Forms.Timer> is used to raise an event at user-defined intervals.</span></span> <span data-ttu-id="b6b0e-104">Этот таймер Windows предназначен для однопоточная среда, где потоки пользовательского интерфейса используются для выполнения обработки.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-104">This Windows timer is designed for a single-threaded environment where UI threads are used to perform processing.</span></span> <span data-ttu-id="b6b0e-105">Он требует пользовательский код имеет доступные обработки сообщений пользовательского интерфейса и всегда работал в том же потоке или маршалировать вызов к другому потоку.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-105">It requires that the user code have a UI message pump available and always operate from the same thread, or marshal the call onto another thread.</span></span>  
  
 <span data-ttu-id="b6b0e-106">При использовании этого таймера, использовать <xref:System.Windows.Forms.Timer.Tick> событий для выполнения операции опроса или для отображения экрана-заставки для указанного периода времени.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-106">When you use this timer, use the <xref:System.Windows.Forms.Timer.Tick> event to perform a polling operation or to display a splash screen for a specified period of time.</span></span> <span data-ttu-id="b6b0e-107">Каждый раз, когда <xref:System.Windows.Forms.Timer.Enabled%2A> свойству `true` и <xref:System.Windows.Forms.Timer.Interval%2A> свойства не равно нулю, <xref:System.Windows.Forms.Timer.Tick> события с интервалами, на основе <xref:System.Windows.Forms.Timer.Interval%2A> значение свойства.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-107">Whenever the <xref:System.Windows.Forms.Timer.Enabled%2A> property is set to `true` and the <xref:System.Windows.Forms.Timer.Interval%2A> property is greater than zero, the <xref:System.Windows.Forms.Timer.Tick> event is raised at intervals based on the <xref:System.Windows.Forms.Timer.Interval%2A> property setting.</span></span>  
  
 <span data-ttu-id="b6b0e-108">Этот класс предоставляет методы для задания интервала, а также для запуска и остановки таймера.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-108">This class provides methods to set the interval, and to start and stop the timer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b6b0e-109">Компонент Windows Forms Timer является однопоточным и ограничен точностью 55 миллисекунд.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-109">The Windows Forms Timer component is single-threaded, and is limited to an accuracy of 55 milliseconds.</span></span> <span data-ttu-id="b6b0e-110">Если требуется многопоточных таймер с более высокой точностью используйте <xref:System.Timers.Timer> в класс <xref:System.Timers> пространства имен.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-110">If you require a multithreaded timer with greater accuracy, use the <xref:System.Timers.Timer> class in the <xref:System.Timers> namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6b0e-111">Следующий пример реализует простой интервальный таймер, оповещение каждые пять секунд.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-111">The following example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="b6b0e-112">Когда будильник срабатывает, <xref:System.Windows.Forms.MessageBox> отображает число раз, вызывавшую оповещение, запуска и запрашивает пользователя о том, является ли таймер должны продолжать работу.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-112">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user as to whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b6b0e-113">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-113">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6b0e-114">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6b0e-115">Когда создается новый таймер, она будет отключена; то есть <xref:System.Windows.Forms.Timer.Enabled%2A> присваивается `false`.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-115">When a new timer is created, it is disabled; that is, <xref:System.Windows.Forms.Timer.Enabled%2A> is set to `false`.</span></span> <span data-ttu-id="b6b0e-116">Чтобы включить таймер, вызовите <xref:System.Windows.Forms.Timer.Start%2A> метода или набора <xref:System.Windows.Forms.Timer.Enabled%2A> для `true`.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-116">To enable the timer, call the <xref:System.Windows.Forms.Timer.Start%2A> method or set <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="b6b0e-117">Если таймер отключен и находится вне области, таймер удаляется, когда происходит сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-117">If the timer is disabled and the timer is out of scope, the timer will be disposed when garbage collection occurs.</span></span> <span data-ttu-id="b6b0e-118">Если таймер включен, даже если он выходит из области действия, не подвергаются сборке мусора.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-118">If the timer is enabled, even if it is out of scope, it is not subject to garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Timer : System.ComponentModel.IContainer -&gt; System.Windows.Forms.Timer" Usage="new System.Windows.Forms.Timer container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="b6b0e-119">Объект <see cref="T:System.ComponentModel.IContainer" />, представляющий контейнер таймера.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-119">An <see cref="T:System.ComponentModel.IContainer" /> that represents the container for the timer.</span></span></param>
        <summary><span data-ttu-id="b6b0e-120">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Timer" /> вместе с указанным контейнером.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-120">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class together with the specified container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6b0e-121"><xref:System.Windows.Forms.Timer> Конструктор дает возможность связать <xref:System.Windows.Forms.Timer> с любым <xref:System.ComponentModel.Container> объекта.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-121">The <xref:System.Windows.Forms.Timer> constructor enables you to associate a <xref:System.Windows.Forms.Timer> with any <xref:System.ComponentModel.Container> object.</span></span> <span data-ttu-id="b6b0e-122">Связав <xref:System.Windows.Forms.Timer> наподобие этого, можно передать контроль времени существования <xref:System.Windows.Forms.Timer> для <xref:System.ComponentModel.Container>.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-122">By associating the <xref:System.Windows.Forms.Timer> like this, you hand over control of the lifetime of the <xref:System.Windows.Forms.Timer> to the <xref:System.ComponentModel.Container>.</span></span> <span data-ttu-id="b6b0e-123">Это может быть полезно, если вы используете несколько компонентов в приложении и требуется освободить их все одновременно.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-123">This can be useful if you use a number of components in your application and want to dispose of all of them simultaneously.</span></span> <span data-ttu-id="b6b0e-124">Например, если вы связываете <xref:System.Windows.Forms.ToolTip>, <xref:System.Windows.Forms.ImageList>и <xref:System.Windows.Forms.Timer> с <xref:System.ComponentModel.Container>, вызов <xref:System.ComponentModel.Container.Dispose%2A> на <xref:System.ComponentModel.Container> заставит все эти компоненты, а также реализации.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-124">For example, if you associate a <xref:System.Windows.Forms.ToolTip>, an <xref:System.Windows.Forms.ImageList>, and a <xref:System.Windows.Forms.Timer> with a <xref:System.ComponentModel.Container>, calling <xref:System.ComponentModel.Container.Dispose%2A> on the <xref:System.ComponentModel.Container> will force disposal of all of these components as well.</span></span>  
  
 <span data-ttu-id="b6b0e-125">Когда создается новый таймер, она будет отключена; то есть <xref:System.Windows.Forms.Timer.Enabled%2A> присваивается `false`.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-125">When a new timer is created, it is disabled; that is, <xref:System.Windows.Forms.Timer.Enabled%2A> is set to `false`.</span></span> <span data-ttu-id="b6b0e-126">Чтобы включить таймер, вызовите <xref:System.Windows.Forms.Timer.Start%2A> метода или набора <xref:System.Windows.Forms.Timer.Enabled%2A> для `true`.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-126">To enable the timer, call the <xref:System.Windows.Forms.Timer.Start%2A> method or set <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="b6b0e-127">Этот экземпляр будет существовать до ее снятия контейнера для сбора мусора.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-127">This instance will exist until its container releases it to garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="timer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="b6b0e-128">Значение <see langword="true" />, чтобы освободить управляемые и неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-128"><see langword="true" /> to release both managed and unmanaged resources.</span></span> <span data-ttu-id="b6b0e-129">Значение <see langword="false" /> для освобождения только неуправляемых ресурсов.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-129"><see langword="false" /> to release only the unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="b6b0e-130">Освобождает используемые таймером ресурсы, кроме памяти.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-130">Disposes of the resources, other than memory, used by the timer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6b0e-131">Вызовите <xref:System.Windows.Forms.Timer.Dispose%2A> когда вы закончите, с помощью таймера.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-131">Call <xref:System.Windows.Forms.Timer.Dispose%2A> when you are finished using the timer.</span></span> <span data-ttu-id="b6b0e-132"><xref:System.Windows.Forms.Timer.Dispose%2A> Метод оставляет таймер окажется в неработоспособном состоянии.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-132">The <xref:System.Windows.Forms.Timer.Dispose%2A> method leaves the timer in an unusable state.</span></span> <span data-ttu-id="b6b0e-133">После вызова метода <xref:System.Windows.Forms.Timer.Dispose%2A>, необходимо освободить все ссылки на таймер, занимаемая ими память может быть освобожден при коллекцией мусора.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-133">After you call <xref:System.Windows.Forms.Timer.Dispose%2A>, you must release all references to the timer so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b6b0e-134">Всегда вызывайте метод <xref:System.Windows.Forms.Timer.Dispose%2A> перед освобождением последней ссылки на таймер.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-134">Always call <xref:System.Windows.Forms.Timer.Dispose%2A> before you release your last reference to the timer.</span></span> <span data-ttu-id="b6b0e-135">В противном случае ресурсы таймера, не должна освобождаться до сбора мусора вызывает деструктор объекта таймера.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-135">Otherwise, the resources the timer is using will not be freed until garbage collection calls the destructor of the timer object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.Timer.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6b0e-136">Возвращает или задает признак активности таймера.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-136">Gets or sets whether the timer is running.</span></span></summary>
        <value><span data-ttu-id="b6b0e-137">Значение <see langword="true" />, если данный таймер включен; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-137"><see langword="true" /> if the timer is currently enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b6b0e-138">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-138">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6b0e-139">Таймер не подвергаются сборке мусора при значении `true`.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-139">The timer is not subject to garbage collection when the value is `true`.</span></span>  
  
 <span data-ttu-id="b6b0e-140">Вызов <xref:System.Windows.Forms.Timer.Start%2A> метод совпадает со значением параметра <xref:System.Windows.Forms.Timer.Enabled%2A> для `true`.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-140">Calling the <xref:System.Windows.Forms.Timer.Start%2A> method is the same as setting <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span> <span data-ttu-id="b6b0e-141">Аналогично, вызов <xref:System.Windows.Forms.Timer.Stop%2A> метод совпадает со значением параметра <xref:System.Windows.Forms.Timer.Enabled%2A> для `false`.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-141">Likewise, calling the <xref:System.Windows.Forms.Timer.Stop%2A> method is the same as setting <xref:System.Windows.Forms.Timer.Enabled%2A> to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6b0e-142">Следующий пример реализует простой интервальный таймер, оповещение каждые пять секунд.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-142">The following example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="b6b0e-143">Когда будильник срабатывает, <xref:System.Windows.Forms.MessageBox> отображает число раз сигнала запущен и пользователю будет ли таймер должны продолжать работу.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-143">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public int Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Interval { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : int with get, set" Usage="System.Windows.Forms.Timer.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6b0e-144">Возвращает или задает время в миллисекундах до вызова события <see cref="E:System.Windows.Forms.Timer.Tick" /> относительно момента, когда событие <see cref="E:System.Windows.Forms.Timer.Tick" /> произошло последний раз.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-144">Gets or sets the time, in milliseconds, before the <see cref="E:System.Windows.Forms.Timer.Tick" /> event is raised relative to the last occurrence of the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span></span></summary>
        <value><span data-ttu-id="b6b0e-145">Объект <see cref="T:System.Int32" />, задающий количество миллисекунд до вызова события <see cref="E:System.Windows.Forms.Timer.Tick" /> относительно момента, когда событие <see cref="E:System.Windows.Forms.Timer.Tick" /> произошло последний раз.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-145">An <see cref="T:System.Int32" /> specifying the number of milliseconds before the <see cref="E:System.Windows.Forms.Timer.Tick" /> event is raised relative to the last occurrence of the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span></span> <span data-ttu-id="b6b0e-146">Значение не может быть меньше единицы.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-146">The value cannot be less than one.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6b0e-147">Чтобы получить число секунд в интервале, разделите это число на 1000.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-147">To get the number of seconds in the interval, divide this number by 1,000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6b0e-148">В следующем примере кода реализуется простой интервальный таймер, оповещение каждые пять секунд.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-148">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="b6b0e-149">Когда будильник срабатывает, <xref:System.Windows.Forms.MessageBox> отображает число раз сигнала запущен и пользователю будет ли таймер должны продолжать работу.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-149">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTick">
      <MemberSignature Language="C#" Value="protected virtual void OnTick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTick : EventArgs -&gt; unit&#xA;override this.OnTick : EventArgs -&gt; unit" Usage="timer.OnTick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b6b0e-150">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-150">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span> <span data-ttu-id="b6b0e-151">Данный параметр всегда имеет значение <see cref="F:System.EventArgs.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-151">This is always <see cref="F:System.EventArgs.Empty" />.</span></span></param>
        <summary><span data-ttu-id="b6b0e-152">Создает событие <see cref="E:System.Windows.Forms.Timer.Tick" />.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-152">Raises the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6b0e-153">Этот метод вызывается для каждом такте таймера.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-153">This method is called for each timer tick.</span></span> <span data-ttu-id="b6b0e-154">Он вызывает методы, которые добавляются с помощью <xref:System.Windows.Forms.Timer.Tick>.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-154">It calls any methods that are added through <xref:System.Windows.Forms.Timer.Tick>.</span></span> <span data-ttu-id="b6b0e-155">Если вы наследуете от <xref:System.Windows.Forms.Timer>, могут переопределять этот метод.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-155">If you are inheriting from <xref:System.Windows.Forms.Timer>, you can override this method.</span></span>  
  
 <span data-ttu-id="b6b0e-156">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-156">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b6b0e-157">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="b6b0e-157">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b6b0e-158">При переопределении метода <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> в производном классе, убедитесь, что вызывать базовый класс <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> метод.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-158">When overriding <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> in a derived class, make sure that you call the base class's <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="timer.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6b0e-159">Запускает таймер.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-159">Starts the timer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6b0e-160">Можно также запустить таймер, задав <xref:System.Windows.Forms.Timer.Enabled%2A> свойства `true`.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-160">You can also start the timer by setting the <xref:System.Windows.Forms.Timer.Enabled%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6b0e-161">В следующем примере кода реализуется простой интервальный таймер, оповещение каждые пять секунд.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-161">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="b6b0e-162">Когда будильник срабатывает, <xref:System.Windows.Forms.MessageBox> отображает число раз сигнала запущен и пользователю будет ли таймер должны продолжать работу.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-162">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="timer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6b0e-163">Останавливает таймер.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-163">Stops the timer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6b0e-164">Вы также можете остановить таймер, задав <xref:System.Windows.Forms.Timer.Enabled%2A> свойства `false`.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-164">You can also stop the timer by setting the <xref:System.Windows.Forms.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="b6b0e-165">Объект <xref:System.Windows.Forms.Timer> объект может включать и отключать несколько раз в пределах одного сеанса приложения.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-165">A <xref:System.Windows.Forms.Timer> object may be enabled and disabled multiple times within the same application session.</span></span>  
  
 <span data-ttu-id="b6b0e-166">Вызов <xref:System.Windows.Forms.Timer.Start%2A> после отключения <xref:System.Windows.Forms.Timer> путем вызова <xref:System.Windows.Forms.Timer.Stop%2A> вызовет <xref:System.Windows.Forms.Timer> перезапустить прерванную интервал.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-166">Calling <xref:System.Windows.Forms.Timer.Start%2A> after you have disabled a <xref:System.Windows.Forms.Timer> by calling <xref:System.Windows.Forms.Timer.Stop%2A> will cause the <xref:System.Windows.Forms.Timer> to restart the interrupted interval.</span></span> <span data-ttu-id="b6b0e-167">Если ваш <xref:System.Windows.Forms.Timer> имеет значение для интервала 5000 миллисекунд, и вызывать <xref:System.Windows.Forms.Timer.Stop%2A> в около 3000 миллисекунд, вызвав <xref:System.Windows.Forms.Timer.Start%2A> приведет к <xref:System.Windows.Forms.Timer> ожидать перед порождением 5000 миллисекунд <xref:System.Windows.Forms.Timer.Tick> событий.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-167">If your <xref:System.Windows.Forms.Timer> is set for a 5000-millisecond interval, and you call <xref:System.Windows.Forms.Timer.Stop%2A> at around 3000 milliseconds, calling <xref:System.Windows.Forms.Timer.Start%2A> will cause the <xref:System.Windows.Forms.Timer> to wait 5000 milliseconds before raising the <xref:System.Windows.Forms.Timer.Tick> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b6b0e-168">Вызов Stop на любом <xref:System.Windows.Forms.Timer> в формах Windows приложение может вызвать сообщения от других <xref:System.Windows.Forms.Timer> компонентов в приложении, чтобы обрабатывать немедленно, так как все <xref:System.Windows.Forms.Timer> компоненты работают на основной поток приложения.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-168">Calling Stop on any <xref:System.Windows.Forms.Timer> within a Windows Forms application can cause messages from other <xref:System.Windows.Forms.Timer> components in the application to be processed immediately, because all <xref:System.Windows.Forms.Timer> components operate on the main application thread.</span></span> <span data-ttu-id="b6b0e-169">Если у вас есть два <xref:System.Windows.Forms.Timer> компоненты, один на 700 миллисекундах и один набор для 500 миллисекунд, а вы вызовите <xref:System.Windows.Forms.Timer.Stop%2A> на первом <xref:System.Windows.Forms.Timer>, приложения могут получать обратный вызов события для второй компонент сначала.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-169">If you have two <xref:System.Windows.Forms.Timer> components, one set to 700 milliseconds and one set to 500 milliseconds, and you call <xref:System.Windows.Forms.Timer.Stop%2A> on the first <xref:System.Windows.Forms.Timer>, your application may receive an event callback for the second component first.</span></span> <span data-ttu-id="b6b0e-170">Если это доказывает, проблемы, рассмотрите возможность использования <xref:System.Threading.Timer> в класс <xref:System.Threading> пространства имен вместо этого.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-170">If this proves problematic, consider using the <xref:System.Threading.Timer> class in the <xref:System.Threading> namespace instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6b0e-171">В следующем примере кода реализуется простой интервальный таймер, оповещение каждые пять секунд.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-171">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="b6b0e-172">Когда будильник срабатывает, <xref:System.Windows.Forms.MessageBox> отображает число раз сигнала запущен и пользователю будет ли таймер должны продолжать работу.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-172">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.Timer.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6b0e-173">Возвращает или задает произвольную строку, представляющую некоторый тип состояния пользователя.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-173">Gets or sets an arbitrary string representing some type of user state.</span></span></summary>
        <value><span data-ttu-id="b6b0e-174">Произвольная строка, представляющая некоторый тип состояния пользователя.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-174">An arbitrary string representing some type of user state.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Tick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Timer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Tick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Tick;" />
      <MemberSignature Language="F#" Value="member this.Tick : EventHandler " Usage="member this.Tick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6b0e-175">Происходит по истечении заданного интервала таймера при условии, что таймер включен.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-175">Occurs when the specified timer interval has elapsed and the timer is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6b0e-176">Вызов <xref:System.Diagnostics.Debug.Assert%2A> метод <xref:System.Diagnostics.Debug> класс изнутри <xref:System.Windows.Forms.Timer.Tick> событий могут работать не так, должным образом, как отображение диалогового окна утверждения поле может привести к Windows для вызова <xref:System.Windows.Forms.Timer.Tick> события несколько раз.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-176">Calling the <xref:System.Diagnostics.Debug.Assert%2A> method on the <xref:System.Diagnostics.Debug> class from within the <xref:System.Windows.Forms.Timer.Tick> event may not behave as expected, as displaying the assertion dialog box may cause Windows to raise the <xref:System.Windows.Forms.Timer.Tick> event repeatedly.</span></span> <span data-ttu-id="b6b0e-177">Рекомендуется воздержаться от тестирования утверждения в рамках этого события и использовать <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, или <xref:System.Diagnostics.Debug.WriteLineIf%2A> методы вместо этого.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-177">We recommend that you refrain from testing assertions within this event, and use the <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, or <xref:System.Diagnostics.Debug.WriteLineIf%2A> methods instead.</span></span>  
  
 <span data-ttu-id="b6b0e-178">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="b6b0e-178">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6b0e-179">В следующем примере кода реализуется простой интервальный таймер, оповещение каждые пять секунд.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-179">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="b6b0e-180">Когда будильник срабатывает, <xref:System.Windows.Forms.MessageBox> отображает число раз сигнала запущен и пользователю будет ли таймер должны продолжать работу.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-180">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="timer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6b0e-181">Возвращает строку, представляющую объект <see cref="T:System.Windows.Forms.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-181">Returns a string that represents the <see cref="T:System.Windows.Forms.Timer" />.</span></span></summary>
        <returns><span data-ttu-id="b6b0e-182">Строка, представляющая текущий <see cref="T:System.Windows.Forms.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-182">A string that represents the current <see cref="T:System.Windows.Forms.Timer" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6b0e-183"><xref:System.Windows.Forms.Timer.ToString%2A> Метод возвращает строку, содержащую значение <xref:System.Windows.Forms.Timer.Interval%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="b6b0e-183">The <xref:System.Windows.Forms.Timer.ToString%2A> method returns a string that includes the value of the <xref:System.Windows.Forms.Timer.Interval%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>