<Type Name="AccessibleObject" FullName="System.Windows.Forms.AccessibleObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="14b686f479793cbb7e6fd25b1bc140eeb0bda8e4" /><Meta Name="ms.sourcegitcommit" Value="3efce15f3841385ee3ba24bd71ff0c0cf9a47815" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/03/2019" /><Meta Name="ms.locfileid" Value="58874999" /></Metadata><TypeSignature Language="C#" Value="public class AccessibleObject : System.Runtime.InteropServices.StandardOleMarshalObject, Accessibility.IAccessible, System.Reflection.IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessibleObject extends System.Runtime.InteropServices.StandardOleMarshalObject implements class Accessibility.IAccessible, class System.Reflection.IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.AccessibleObject" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessibleObject&#xA;Inherits StandardOleMarshalObject&#xA;Implements IAccessible, IReflect" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessibleObject : System::Runtime::InteropServices::StandardOleMarshalObject, Accessibility::IAccessible, System::Reflection::IReflect" />
  <TypeSignature Language="F#" Value="type AccessibleObject = class&#xA;    inherit StandardOleMarshalObject&#xA;    interface IReflect&#xA;    interface IAccessible" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.StandardOleMarshalObject</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Accessibility.IAccessible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Reflection.IReflect</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c99e3-101">Предоставляет сведения, которые приложения, предоставляющие специальные возможности, используют при настройке пользовательского интерфейса приложения для пользователей с ограниченными возможностями.</span><span class="sxs-lookup"><span data-stu-id="c99e3-101">Provides information that accessibility applications use to adjust an application's user interface (UI) for users with impairments.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-102">Приложениями специальных возможностей могут настраивать функциональные возможности приложения, чтобы упростить работу пользователей с ограниченными возможностями.</span><span class="sxs-lookup"><span data-stu-id="c99e3-102">Accessibility applications can adjust features of the application to improve usability for users with disabilities.</span></span>  
  
 <span data-ttu-id="c99e3-103">Для пользователей с нарушениями зрения можно настроить компоненты операционной системы и программного обеспечения в соответствии с их потребностями.</span><span class="sxs-lookup"><span data-stu-id="c99e3-103">For users who are visually impaired, you can adjust software and operating system features to comply with their needs.</span></span> <span data-ttu-id="c99e3-104">Например можно увеличить размер текста и изображений и сделать их более контрастными.</span><span class="sxs-lookup"><span data-stu-id="c99e3-104">For example, you can enlarge text and images and render them with a contrast.</span></span> <span data-ttu-id="c99e3-105">Кроме того вы можете дальтонизмом с соответствующее использование цветов.</span><span class="sxs-lookup"><span data-stu-id="c99e3-105">In addition, you can accommodate color-blindness with the appropriate use of colors.</span></span> <span data-ttu-id="c99e3-106">Для пользователей, с серьезными нарушениями зрения, доступны компьютеры с поддержкой обзора экрана, на экране преобразования текста в речь, или динамически обновляемый экран шрифта Брайля.</span><span class="sxs-lookup"><span data-stu-id="c99e3-106">For users who are severely visually impaired, computers are accessible with screen review aids that translate on-screen text to speech or to a dynamic, refreshable, Braille display.</span></span>  
  
 <span data-ttu-id="c99e3-107">Для пользователей, слуха можно разработать программы, использующие визуальные подсказки, например мигающую панель инструментов; или можно отобразить голосовые сообщения как текст.</span><span class="sxs-lookup"><span data-stu-id="c99e3-107">For users who are hard of hearing, you can design programs that use visual cues, such as a flashing toolbar; or you can display spoken messages as text.</span></span> <span data-ttu-id="c99e3-108">Например, в случае включения `SoundSentry` , параметр доступа на панели управления позволяет получить визуальное предупреждение каждый раз, когда система воспроизводит звуковой сигнал.</span><span class="sxs-lookup"><span data-stu-id="c99e3-108">For example, when turned on, the `SoundSentry` feature, an accessibility option in Control Panel, provides a visual warning whenever the system makes an alarm sound.</span></span>  
  
 <span data-ttu-id="c99e3-109">Для пользователей с ограниченными возможностями движения можно создать элементы управления, уточнить или исключить использование клавиатуры и мыши, тем самым повышая доступность.</span><span class="sxs-lookup"><span data-stu-id="c99e3-109">For users with motion disabilities, you can design controls that refine or eliminate keyboard and mouse use, thereby improving computer accessibility.</span></span> <span data-ttu-id="c99e3-110">Панель управления в этом помочь.</span><span class="sxs-lookup"><span data-stu-id="c99e3-110">Control Panel offers assistance.</span></span> <span data-ttu-id="c99e3-111">Например альтернативой будет использовать клавиатуру вместо мыши для навигации.</span><span class="sxs-lookup"><span data-stu-id="c99e3-111">For example, one alternative is to use the numeric keypad instead of the mouse for navigation.</span></span> <span data-ttu-id="c99e3-112">Другой параметр, называемый `StickyKeys`, позволяет пользователям, которые не может удерживать несколько клавиш одновременно (например, CTRL + P) получить тот же результат, нажимая клавиши одновременно.</span><span class="sxs-lookup"><span data-stu-id="c99e3-112">Another option, called `StickyKeys`, enables users who cannot hold down two or more keys at a time (such as CTRL+P) to get the same result by typing one key at a time.</span></span>  
  
 <span data-ttu-id="c99e3-113">Для пользователей с когнитивными и ограниченными возможностями языка, можно разрабатывать программы можно подобрать для своих потребностей.</span><span class="sxs-lookup"><span data-stu-id="c99e3-113">For users with cognitive and language disabilities, you can design software programs to better accommodate their needs.</span></span> <span data-ttu-id="c99e3-114">Например с помощью явных или снабженные виртуализации, упрощенное отображение, меньшее количество слов и удобочитаемости, нацеленных на начальную школу могут воспользоваться этим пользователям.</span><span class="sxs-lookup"><span data-stu-id="c99e3-114">For example, using conspicuous or cued sequencing, uncomplicated displays, fewer words, and a reading level targeted to elementary school standards can benefit these users.</span></span>  
  
 <span data-ttu-id="c99e3-115">Для пользователей с эпилепсией можно разрабатывать программы во избежание перехвата спровоцировать шаблонов.</span><span class="sxs-lookup"><span data-stu-id="c99e3-115">For users with seizure disorders, you can design software programs to eliminate seizure provoking patterns.</span></span>  
  
 <span data-ttu-id="c99e3-116">Дополнительные сведения о специальных возможностях, включая сведения о приложениями со специальными возможностями см. в документации для специальных возможностей корпорации Майкрософт в библиотеке MSDN или на веб-сайте Майкрософт.</span><span class="sxs-lookup"><span data-stu-id="c99e3-116">For more information about accessibility, including information about accessibility applications, see the documentation for Microsoft Accessibility in the MSDN library or at the Microsoft Web site.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c99e3-117">Чтобы использовать <xref:System.Windows.Forms.AccessibleObject>, необходимо добавить ссылку на `Accessibility` сборки, установленной с [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="c99e3-117">To use the <xref:System.Windows.Forms.AccessibleObject>, you must add a reference to the `Accessibility` assembly installed with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="c99e3-118">Windows Forms поддерживает только Active 2.0 специальных возможностей.</span><span class="sxs-lookup"><span data-stu-id="c99e3-118">Windows Forms only supports Active Accessibility 2.0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c99e3-119">В следующем примере кода демонстрируется создание диаграммы с поддержкой специальных возможностей управления, с помощью <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> классов для отображения доступных сведений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-119">The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="c99e3-120">Элемент управления отображает две кривые, а также условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-120">The control plots two curves along with a legend.</span></span> <span data-ttu-id="c99e3-121">`ChartControlAccessibleObject` Класс, который является производным от `ControlAccessibleObject`, используется в <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> метод для предоставления пользовательских доступных сведений для элемента управления диаграммы.</span><span class="sxs-lookup"><span data-stu-id="c99e3-121">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="c99e3-122">Так как условные обозначения диаграммы фактически не являются <xref:System.Windows.Forms.Control> -управление на основе, а также отображаются в элементе управления диаграммы не имеет встроенных данных доступны.</span><span class="sxs-lookup"><span data-stu-id="c99e3-122">Because the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="c99e3-123">По этой причине `ChartControlAccessibleObject` класса переопределения <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод для возврата `CurveLegendAccessibleObject` , представляющий доступных сведений для каждой части условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-123">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="c99e3-124">При специальными приложение использует этот элемент управления, элемент управления можно предоставить необходимые сведения доступны.</span><span class="sxs-lookup"><span data-stu-id="c99e3-124">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#1)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#1)]
 [!code-vb[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="c99e3-125">При наследовании от этого класса можно переопределить все члены.</span><span class="sxs-lookup"><span data-stu-id="c99e3-125">When you inherit from this class, you can override all the members.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessibleObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessibleObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c99e3-126">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.AccessibleObject" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-126">Initializes a new instance of the <see cref="T:System.Windows.Forms.AccessibleObject" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-127">Как правило при использовании этого метода для создания объекта со специальными возможностями, вы предоставляете собственные реализации свойств и методов класса, чтобы обеспечить функциональные возможности для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="c99e3-127">Typically, when you use this method to create an accessible object, you are providing your own implementations of the properties and methods of the class to provide functionality specific to your application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accChildCount">
      <MemberSignature Language="C#" Value="int Accessibility.IAccessible.accChildCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Accessibility.IAccessible.accChildCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accChildCount As Integer Implements IAccessible.accChildCount" />
      <MemberSignature Language="C++ CLI" Value="property int Accessibility::IAccessible::accChildCount { int get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accChildCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accChildCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c99e3-128">Получает число дочерних интерфейсов, принадлежащих этому объекту.</span><span class="sxs-lookup"><span data-stu-id="c99e3-128">Gets the number of child interfaces that belong to this object.</span></span> <span data-ttu-id="c99e3-129">Описание этого члена см. в разделе <see cref="P:Accessibility.IAccessible.accChildCount" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-129">For a description of this member, see <see cref="P:Accessibility.IAccessible.accChildCount" />.</span></span></summary>
        <value><span data-ttu-id="c99e3-130">Число дочерних объектов со специальными возможностями, принадлежащих этому объекту.</span><span class="sxs-lookup"><span data-stu-id="c99e3-130">The number of child accessible objects that belong to this object.</span></span> <span data-ttu-id="c99e3-131">Если у объекта отсутствуют дочерние объекты, значение равно 0.</span><span class="sxs-lookup"><span data-stu-id="c99e3-131">If the object has no child objects, this value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-132">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-132">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-133">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-133">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accDoDefaultAction">
      <MemberSignature Language="C#" Value="void IAccessible.accDoDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accDoDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accDoDefaultAction (childID As Object) Implements IAccessible.accDoDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accDoDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::accDoDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accDoDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID"><span data-ttu-id="c99e3-134">Идентификатор дочернего объекта в паре "интерфейс-идентификатор дочернего элемента" <see cref="T:Accessibility.IAccessible" />, которая представляет объект со специальными возможностями.</span><span class="sxs-lookup"><span data-stu-id="c99e3-134">The child ID in the <see cref="T:Accessibility.IAccessible" /> interface/child ID pair that represents the accessible object.</span></span></param>
        <summary><span data-ttu-id="c99e3-135">Выполняет действие по умолчанию для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-135">Performs the specified object's default action.</span></span> <span data-ttu-id="c99e3-136">Не все объекты имеют действия по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="c99e3-136">Not all objects have a default action.</span></span> <span data-ttu-id="c99e3-137">Описание этого члена см. в разделе <see cref="M:Accessibility.IAccessible.accDoDefaultAction(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-137">For a description of this member, see <see cref="M:Accessibility.IAccessible.accDoDefaultAction(System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-138">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-138">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-139">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-139">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accFocus">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accFocus As Object Implements IAccessible.accFocus" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accFocus { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accFocus" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c99e3-140">Получает объект, получивший фокус ввода.</span><span class="sxs-lookup"><span data-stu-id="c99e3-140">Gets the object that has the keyboard focus.</span></span> <span data-ttu-id="c99e3-141">Описание этого члена см. в разделе <see cref="P:Accessibility.IAccessible.accFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-141">For a description of this member, see <see cref="P:Accessibility.IAccessible.accFocus" />.</span></span></summary>
        <value><span data-ttu-id="c99e3-142">Объект, имеющий фокус ввода.</span><span class="sxs-lookup"><span data-stu-id="c99e3-142">The object that has keyboard focus.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-143">Тип возвращаемого значения <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> свойство зависит от объекта, имеющий фокус клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="c99e3-143">The return value type of the <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> property depends on the object that has keyboard focus.</span></span> <span data-ttu-id="c99e3-144">В следующей таблице описаны объект типы, которые <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> возвращает.</span><span class="sxs-lookup"><span data-stu-id="c99e3-144">The following table describes the object types that the <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> property returns.</span></span>  
  
|<span data-ttu-id="c99e3-145">Тип</span><span class="sxs-lookup"><span data-stu-id="c99e3-145">Type</span></span>|<span data-ttu-id="c99e3-146">Описание</span><span class="sxs-lookup"><span data-stu-id="c99e3-146">Description</span></span>|  
|----------|-----------------|  
|`null`|<span data-ttu-id="c99e3-147">Этот объект не имеет фокуса и не содержит дочерний элемент, который имеет фокус клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="c99e3-147">This object does not have the keyboard focus itself and does not contain a child that has the keyboard focus.</span></span>|  
|<span data-ttu-id="c99e3-148">целочисленный</span><span class="sxs-lookup"><span data-stu-id="c99e3-148">integer</span></span>|<span data-ttu-id="c99e3-149">0, если текущий объект имеет фокус клавиатуры; в противном случае — идентификатор дочернего объекта специальных возможностей дочернего с фокусом клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="c99e3-149">0 if the current object has keyboard focus; otherwise, the child ID of the child accessible object with keyboard focus.</span></span>|  
|<xref:Accessibility.IAccessible>|<span data-ttu-id="c99e3-150">Дочерний объект со специальными, имеющий фокус клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="c99e3-150">The child accessible object that has the keyboard focus.</span></span>|  
  
 <span data-ttu-id="c99e3-151">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-151">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-152">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-152">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accHitTest">
      <MemberSignature Language="C#" Value="object IAccessible.accHitTest (int xLeft, int yTop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accHitTest(int32 xLeft, int32 yTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function accHitTest (xLeft As Integer, yTop As Integer) As Object Implements IAccessible.accHitTest" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accHitTest(int xLeft, int yTop) = Accessibility::IAccessible::accHitTest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xLeft" Type="System.Int32" />
        <Parameter Name="yTop" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xLeft"><span data-ttu-id="c99e3-153">Горизонтальная координата.</span><span class="sxs-lookup"><span data-stu-id="c99e3-153">The horizontal coordinate.</span></span></param>
        <param name="yTop"><span data-ttu-id="c99e3-154">Вертикальная координата.</span><span class="sxs-lookup"><span data-stu-id="c99e3-154">The vertical coordinate.</span></span></param>
        <summary><span data-ttu-id="c99e3-155">Получает дочерний объект с указанными экранными координатами.</span><span class="sxs-lookup"><span data-stu-id="c99e3-155">Gets the child object at the specified screen coordinates.</span></span> <span data-ttu-id="c99e3-156">Описание этого члена см. в разделе <see cref="M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-156">For a description of this member, see <see cref="M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)" />.</span></span></summary>
        <returns><span data-ttu-id="c99e3-157">Объект со специальными возможностями, расположенный в точке, заданной параметрами <paramref name="xLeft" /> и <paramref name="yTop" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-157">The accessible object at the point specified by <paramref name="xLeft" /> and <paramref name="yTop" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-158">В следующей таблице описаны объект типы, которые <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accHitTest%2A> метод может возвращать.</span><span class="sxs-lookup"><span data-stu-id="c99e3-158">The following table describes the object types that the <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accHitTest%2A> method can return.</span></span>  
  
|<span data-ttu-id="c99e3-159">Тип</span><span class="sxs-lookup"><span data-stu-id="c99e3-159">Type</span></span>|<span data-ttu-id="c99e3-160">Описание</span><span class="sxs-lookup"><span data-stu-id="c99e3-160">Description</span></span>|  
|----------|-----------------|  
|<xref:Accessibility.IAccessible>|<span data-ttu-id="c99e3-161">Объект со специальными в указанном направлении.</span><span class="sxs-lookup"><span data-stu-id="c99e3-161">The accessible object at the specified direction.</span></span>|  
|<span data-ttu-id="c99e3-162">целочисленный</span><span class="sxs-lookup"><span data-stu-id="c99e3-162">integer</span></span>|<span data-ttu-id="c99e3-163">0, если указанная точка находится текущий объект или за пределами границ объекта; в противном случае — идентификатор дочернего объекта специальных возможностей в указанном направлении.</span><span class="sxs-lookup"><span data-stu-id="c99e3-163">0 if the point specified is either the current object or outside the object's boundaries; otherwise, the child ID that identifies the accessible object at the specified direction.</span></span>|  
  
 <span data-ttu-id="c99e3-164">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-164">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-165">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-165">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accLocation">
      <MemberSignature Language="C#" Value="void IAccessible.accLocation (out int pxLeft, out int pyTop, out int pcxWidth, out int pcyHeight, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accLocation([out] int32&amp; pxLeft, [out] int32&amp; pyTop, [out] int32&amp; pcxWidth, [out] int32&amp; pcyHeight, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accLocation (ByRef pxLeft As Integer, ByRef pyTop As Integer, ByRef pcxWidth As Integer, ByRef pcyHeight As Integer, childID As Object) Implements IAccessible.accLocation" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accLocation([Runtime::InteropServices::Out] int % pxLeft, [Runtime::InteropServices::Out] int % pyTop, [Runtime::InteropServices::Out] int % pcxWidth, [Runtime::InteropServices::Out] int % pcyHeight, System::Object ^ childID) = Accessibility::IAccessible::accLocation;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pxLeft" Type="System.Int32" RefType="out" />
        <Parameter Name="pyTop" Type="System.Int32" RefType="out" />
        <Parameter Name="pcxWidth" Type="System.Int32" RefType="out" />
        <Parameter Name="pcyHeight" Type="System.Int32" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pxLeft"><span data-ttu-id="c99e3-166">При возвращении этот метод содержит координату x левого края объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-166">When this method returns, contains the x-coordinate of the object's left edge.</span></span> <span data-ttu-id="c99e3-167">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="c99e3-167">This parameter is passed uninitialized.</span></span></param>
        <param name="pyTop"><span data-ttu-id="c99e3-168">При возвращении этот метод содержит координату y верхнего края объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-168">When this method returns, contains the y-coordinate of the object's top edge.</span></span> <span data-ttu-id="c99e3-169">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="c99e3-169">This parameter is passed uninitialized.</span></span></param>
        <param name="pcxWidth"><span data-ttu-id="c99e3-170">При возвращении этот метод содержит ширину объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-170">When this method returns, contains the width of the object.</span></span> <span data-ttu-id="c99e3-171">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="c99e3-171">This parameter is passed uninitialized.</span></span></param>
        <param name="pcyHeight"><span data-ttu-id="c99e3-172">При возвращении этот метод содержит высоту объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-172">When this method returns, contains the height of the object.</span></span> <span data-ttu-id="c99e3-173">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="c99e3-173">This parameter is passed uninitialized.</span></span></param>
        <param name="childID"><span data-ttu-id="c99e3-174">Идентификационный номер объекта со специальными возможностями.</span><span class="sxs-lookup"><span data-stu-id="c99e3-174">The ID number of the accessible object.</span></span> <span data-ttu-id="c99e3-175">Задайте для этого параметра значение 0, чтобы получить расположение объекта, или идентификатор дочернего объекта, чтобы получить расположение одного из дочерних объектов данного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-175">This parameter is 0 to get the location of the object, or a child ID to get the location of one of the object's child objects.</span></span></param>
        <summary><span data-ttu-id="c99e3-176">Получает текущее расположение объекта на экране.</span><span class="sxs-lookup"><span data-stu-id="c99e3-176">Gets the object's current screen location.</span></span> <span data-ttu-id="c99e3-177">Описание этого члена см. в разделе <see cref="M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-177">For a description of this member, see <see cref="M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-178">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-178">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-179">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-179">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accNavigate">
      <MemberSignature Language="C#" Value="object IAccessible.accNavigate (int navDir, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accNavigate(int32 navDir, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function accNavigate (navDir As Integer, childID As Object) As Object Implements IAccessible.accNavigate" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accNavigate(int navDir, System::Object ^ childID) = Accessibility::IAccessible::accNavigate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navDir" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navDir"><span data-ttu-id="c99e3-180">Одно из значений перечисления <see cref="T:System.Windows.Forms.AccessibleNavigation" />, которое указывает направление перехода.</span><span class="sxs-lookup"><span data-stu-id="c99e3-180">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation" /> enumerations that specifies the direction to navigate.</span></span></param>
        <param name="childID"><span data-ttu-id="c99e3-181">Идентификационный номер объекта со специальными возможностями.</span><span class="sxs-lookup"><span data-stu-id="c99e3-181">The ID number of the accessible object.</span></span> <span data-ttu-id="c99e3-182">Задайте для этого параметра значение 0, чтобы начать с данного объекта, или идентификатор дочернего объекта, чтобы начать перемещение с одного из дочерних объектов данного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-182">This parameter is 0 to start from the object, or a child ID to start from one of the object's child objects.</span></span></param>
        <summary><span data-ttu-id="c99e3-183">Переходит к объекту со специальными возможностями, расположение которого задается относительно текущего объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-183">Navigates to an accessible object relative to the current object.</span></span> <span data-ttu-id="c99e3-184">Описание этого члена см. в разделе <see cref="M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-184">For a description of this member, see <see cref="M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="c99e3-185">Объект со специальными возможностями, расположение которого задается значением <paramref name="navDir" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-185">The accessible object positioned at the value specified by <paramref name="navDir" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-186">В следующей таблице описаны объект типы, которые <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accNavigate%2A> метод может возвращать.</span><span class="sxs-lookup"><span data-stu-id="c99e3-186">The following table describes the object types that the <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accNavigate%2A> method can return.</span></span>  
  
|<span data-ttu-id="c99e3-187">Тип</span><span class="sxs-lookup"><span data-stu-id="c99e3-187">Type</span></span>|<span data-ttu-id="c99e3-188">Описание</span><span class="sxs-lookup"><span data-stu-id="c99e3-188">Description</span></span>|  
|----------|-----------------|  
|`null`|<span data-ttu-id="c99e3-189">В указанном направлении не объекту со специальными возможностями.</span><span class="sxs-lookup"><span data-stu-id="c99e3-189">There is not an accessible object at the specified direction.</span></span>|  
|<xref:Accessibility.IAccessible>|<span data-ttu-id="c99e3-190">Объект со специальными в указанном направлении.</span><span class="sxs-lookup"><span data-stu-id="c99e3-190">The accessible object at the specified direction.</span></span>|  
|<span data-ttu-id="c99e3-191">целочисленный</span><span class="sxs-lookup"><span data-stu-id="c99e3-191">integer</span></span>|<span data-ttu-id="c99e3-192">Идентификатор дочернего, который определяет доступный объект, находящийся в указанном направлении.</span><span class="sxs-lookup"><span data-stu-id="c99e3-192">The child ID that identifies the accessible object at the specified direction.</span></span> <span data-ttu-id="c99e3-193">Использовать родительский <xref:Accessibility.IAccessible> и идентификатор дочернего для доступа к доступному объекту.</span><span class="sxs-lookup"><span data-stu-id="c99e3-193">Use the parent <xref:Accessibility.IAccessible> and the child ID to access the accessible object.</span></span>|  
  
 <span data-ttu-id="c99e3-194">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-194">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-195">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-195">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accParent">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accParent As Object Implements IAccessible.accParent" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accParent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accParent" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accParent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c99e3-196">Получает родительский объект со специальными возможностями для данного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-196">Gets the parent accessible object of this object.</span></span> <span data-ttu-id="c99e3-197">Описание этого члена см. в разделе <see cref="P:Accessibility.IAccessible.accParent" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-197">For a description of this member, see <see cref="P:Accessibility.IAccessible.accParent" />.</span></span></summary>
        <value><span data-ttu-id="c99e3-198">Объект <see cref="T:Accessibility.IAccessible" />, представляющий родительский объект для объекта со специальными возможностями, или значение <see langword="null" />, если родительский объект отсутствует.</span><span class="sxs-lookup"><span data-stu-id="c99e3-198">An <see cref="T:Accessibility.IAccessible" /> that represents the parent of the accessible object, or <see langword="null" /> if there is no parent object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-199">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-199">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-200">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-200">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span> 
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelect">
      <MemberSignature Language="C#" Value="void IAccessible.accSelect (int flagsSelect, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accSelect(int32 flagsSelect, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accSelect (flagsSelect As Integer, childID As Object) Implements IAccessible.accSelect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accSelect(int flagsSelect, System::Object ^ childID) = Accessibility::IAccessible::accSelect;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flagsSelect" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="flagsSelect"><span data-ttu-id="c99e3-201">Поразрядное сочетание значений <see cref="T:System.Windows.Forms.AccessibleSelection" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-201">A bitwise combination of the <see cref="T:System.Windows.Forms.AccessibleSelection" /> values.</span></span></param>
        <param name="childID"><span data-ttu-id="c99e3-202">Идентификационный номер доступного объекта, для которого изменяется выделение.</span><span class="sxs-lookup"><span data-stu-id="c99e3-202">The ID number of the accessible object on which to change the selection.</span></span> <span data-ttu-id="c99e3-203">Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-203">This parameter is 0 to select the object, or a child ID to select one of the object's child objects.</span></span></param>
        <summary><span data-ttu-id="c99e3-204">Изменяет выделение или перемещает фокус ввода объекта со специальными возможностями.</span><span class="sxs-lookup"><span data-stu-id="c99e3-204">Modifies the selection or moves the keyboard focus of the accessible object.</span></span> <span data-ttu-id="c99e3-205">Описание этого члена см. в разделе <see cref="M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-205">For a description of this member, see <see cref="M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-206">Далее показано, какие <xref:System.Windows.Forms.AccessibleSelection> значения следует задать при вызове `Select` для выполнения сложных операций выделения.</span><span class="sxs-lookup"><span data-stu-id="c99e3-206">The following describes which <xref:System.Windows.Forms.AccessibleSelection> values to specify when calling `Select` to perform complex selection operations.</span></span>  
  
|<span data-ttu-id="c99e3-207">Операция</span><span class="sxs-lookup"><span data-stu-id="c99e3-207">Operation</span></span>|<span data-ttu-id="c99e3-208">Комбинация флагов</span><span class="sxs-lookup"><span data-stu-id="c99e3-208">Flag Combination</span></span>|  
|---------------|----------------------|  
|<span data-ttu-id="c99e3-209">Для имитации нажатия</span><span class="sxs-lookup"><span data-stu-id="c99e3-209">To simulate a click</span></span>|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> <span data-ttu-id="c99e3-210">OR</span><span class="sxs-lookup"><span data-stu-id="c99e3-210">OR</span></span> <xref:System.Windows.Forms.AccessibleSelection.TakeSelection>|  
|<span data-ttu-id="c99e3-211">Чтобы выбрать целевой элемент, имитируя CTRL + щелчок</span><span class="sxs-lookup"><span data-stu-id="c99e3-211">To select a target item by simulating CTRL+click</span></span>|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> <span data-ttu-id="c99e3-212">OR</span><span class="sxs-lookup"><span data-stu-id="c99e3-212">OR</span></span> <xref:System.Windows.Forms.AccessibleSelection.AddSelection>|  
|<span data-ttu-id="c99e3-213">Чтобы отменить выделение целевого элемента, имитируя CTRL + щелчок</span><span class="sxs-lookup"><span data-stu-id="c99e3-213">To cancel selection of a target item by simulating CTRL+click</span></span>|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> <span data-ttu-id="c99e3-214">OR</span><span class="sxs-lookup"><span data-stu-id="c99e3-214">OR</span></span> <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection>|  
|<span data-ttu-id="c99e3-215">Чтобы имитировать SHIFT + щелчок</span><span class="sxs-lookup"><span data-stu-id="c99e3-215">To simulate SHIFT+click</span></span>|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> <span data-ttu-id="c99e3-216">OR</span><span class="sxs-lookup"><span data-stu-id="c99e3-216">OR</span></span> <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection>|  
|<span data-ttu-id="c99e3-217">Чтобы выбрать диапазон объектов и поместить фокус на последний объект</span><span class="sxs-lookup"><span data-stu-id="c99e3-217">To select a range of objects and put focus on the last object</span></span>|<span data-ttu-id="c99e3-218">Укажите <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> для начального объекта, чтобы задать точку привязки выделения.</span><span class="sxs-lookup"><span data-stu-id="c99e3-218">Specify <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> on the starting object to set the selection anchor.</span></span> <span data-ttu-id="c99e3-219">Повторный вызов Select и указать <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> или <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection> на последний объект.</span><span class="sxs-lookup"><span data-stu-id="c99e3-219">Then call Select again and specify <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection> on the last object.</span></span>|  
|<span data-ttu-id="c99e3-220">Чтобы отменить выделение всех объектов</span><span class="sxs-lookup"><span data-stu-id="c99e3-220">To deselect all objects</span></span>|<span data-ttu-id="c99e3-221">Укажите <xref:System.Windows.Forms.AccessibleSelection.TakeSelection> для любого объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-221">Specify <xref:System.Windows.Forms.AccessibleSelection.TakeSelection> on any object.</span></span> <span data-ttu-id="c99e3-222">Этот флаг отменяет выбор всех выбранных объектов, кроме выбранной.</span><span class="sxs-lookup"><span data-stu-id="c99e3-222">This flag deselects all selected objects except the one just selected.</span></span> <span data-ttu-id="c99e3-223">Повторный вызов Select и указать <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection> того же объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-223">Then call Select again and specify <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection> on the same object.</span></span>|  
  
 <span data-ttu-id="c99e3-224">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-224">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-225">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-225">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelection">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accSelection As Object Implements IAccessible.accSelection" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accSelection { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accSelection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accSelection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c99e3-226">Получает выбранные дочерние объекты для объекта со специальными возможностями.</span><span class="sxs-lookup"><span data-stu-id="c99e3-226">Gets the selected child objects of an accessible object.</span></span> <span data-ttu-id="c99e3-227">Описание этого члена см. в разделе <see cref="P:Accessibility.IAccessible.accSelection" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-227">For a description of this member, see <see cref="P:Accessibility.IAccessible.accSelection" />.</span></span></summary>
        <value><span data-ttu-id="c99e3-228">Выбранные дочерние объекты для объекта со специальными возможностями.</span><span class="sxs-lookup"><span data-stu-id="c99e3-228">The selected child objects of an accessible object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-229">В следующей таблице описаны объект типы, которые <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accSelection%2A> возвращает</span><span class="sxs-lookup"><span data-stu-id="c99e3-229">The following table describes the object types that the <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accSelection%2A> property returns</span></span>  
  
|<span data-ttu-id="c99e3-230">Тип</span><span class="sxs-lookup"><span data-stu-id="c99e3-230">Type</span></span>|<span data-ttu-id="c99e3-231">Описание</span><span class="sxs-lookup"><span data-stu-id="c99e3-231">Description</span></span>|  
|----------|-----------------|  
|`null`|<span data-ttu-id="c99e3-232">Дочерние объекты не выбираются.</span><span class="sxs-lookup"><span data-stu-id="c99e3-232">No child objects are selected.</span></span>|  
|<xref:Accessibility.IAccessible>|<span data-ttu-id="c99e3-233">Дочерний объект со специальными, выбран.</span><span class="sxs-lookup"><span data-stu-id="c99e3-233">The child accessible object that is selected.</span></span>|  
|<span data-ttu-id="c99e3-234">целочисленный</span><span class="sxs-lookup"><span data-stu-id="c99e3-234">integer</span></span>|<span data-ttu-id="c99e3-235">Идентификатор дочернего, который определяет, выбранного объекта специальных возможностей.</span><span class="sxs-lookup"><span data-stu-id="c99e3-235">The child ID that identifies the accessible object that is selected.</span></span> <span data-ttu-id="c99e3-236">Использовать родительский <xref:Accessibility.IAccessible> и идентификатор дочернего для доступа к доступному объекту.</span><span class="sxs-lookup"><span data-stu-id="c99e3-236">Use the parent <xref:Accessibility.IAccessible> and the child ID to access the accessible object.</span></span>|  
|`IEnumVARIANT`|<span data-ttu-id="c99e3-237">Список дочерних объектов, которые выбираются.</span><span class="sxs-lookup"><span data-stu-id="c99e3-237">A list of child objects that are selected.</span></span>|  
  
 <span data-ttu-id="c99e3-238">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-238">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-239">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-239">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accChild">
      <MemberSignature Language="C#" Value="object IAccessible.get_accChild (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accChild(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accChild (childID As Object) As Object Implements IAccessible.get_accChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accChild(System::Object ^ childID) = Accessibility::IAccessible::get_accChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID"><span data-ttu-id="c99e3-240">Идентификатор извлекаемого дочернего объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-240">The ID number of the child object to retrieve.</span></span></param>
        <summary><span data-ttu-id="c99e3-241">Извлекает указанный дочерний объект.</span><span class="sxs-lookup"><span data-stu-id="c99e3-241">Retrieves a specified child object.</span></span></summary>
        <returns><span data-ttu-id="c99e3-242">Указанный дочерний объект, если он существует, или <see langword="null" />, если не существует.</span><span class="sxs-lookup"><span data-stu-id="c99e3-242">The specified child object, if it exists, or <see langword="null" /> if it does not exist.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDefaultAction">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDefaultAction (childID As Object) As String Implements IAccessible.get_accDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::get_accDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID"><span data-ttu-id="c99e3-243">Идентификационный номер доступного объекта, для которого нужно получить действие по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="c99e3-243">The ID number of the accessible object for which to get the default action.</span></span> <span data-ttu-id="c99e3-244">Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-244">This parameter is 0 to select the object, or a child ID to select one of the object's child objects.</span></span></param>
        <summary><span data-ttu-id="c99e3-245">Возвращает строку, которая описывает выполняемое по умолчанию действие заданного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-245">Returns a string that indicates the specified object's default action.</span></span></summary>
        <returns><span data-ttu-id="c99e3-246">Строка, которая указывает действие по умолчанию для <paramref name="childID" />, или <see langword="name" />, если для <paramref name="childID" /> не настроено действие по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="c99e3-246">A string that indicates the default action of <paramref name="childID" />, or <see langword="name" /> if <paramref name="childID" /> has no default action.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDescription">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDescription (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDescription(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDescription (childID As Object) As String Implements IAccessible.get_accDescription" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDescription(System::Object ^ childID) = Accessibility::IAccessible::get_accDescription;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDescription(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID"><span data-ttu-id="c99e3-247">Идентификационный номер доступного объекта, для которого нужно получить описание.</span><span class="sxs-lookup"><span data-stu-id="c99e3-247">The ID number of the accessible object for which to get a description.</span></span> <span data-ttu-id="c99e3-248">Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-248">This parameter is 0 to select the object, or a child ID to select one of the object's child objects.</span></span></param>
        <summary><span data-ttu-id="c99e3-249">Возвращает строку, которая описывает внешний вид указанного доступного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-249">Returns a string that describes the visual appearance of the specified accessible object.</span></span></summary>
        <returns><span data-ttu-id="c99e3-250">Локализованная строка, которая описывает внешний вид указанного доступного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-250">A localized string that describes the specified accessible object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelp">
      <MemberSignature Language="C#" Value="string IAccessible.get_accHelp (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accHelp(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelp (childID As Object) As String Implements IAccessible.get_accHelp" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accHelp(System::Object ^ childID) = Accessibility::IAccessible::get_accHelp;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelp(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID"><span data-ttu-id="c99e3-251">Идентификационный номер доступного объекта, для которого нужно получить информацию.</span><span class="sxs-lookup"><span data-stu-id="c99e3-251">The ID number of the accessible object for which to get help information.</span></span> <span data-ttu-id="c99e3-252">Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-252">This parameter is 0 to select the object, or a child ID to select one of the object's child objects.</span></span></param>
        <summary><span data-ttu-id="c99e3-253">Получает полный путь файла WinHelp, который связан с указанным доступным объектом.</span><span class="sxs-lookup"><span data-stu-id="c99e3-253">Retrieves the full path of the WinHelp file that is associated with the specified accessible object.</span></span></summary>
        <returns><span data-ttu-id="c99e3-254">Полный путь файла WinHelp, который связан с <paramref name="childID" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-254">The full path of the WinHelp file that is associated with <paramref name="childID" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelpTopic">
      <MemberSignature Language="C#" Value="int IAccessible.get_accHelpTopic (out string pszHelpFile, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Accessibility.IAccessible.get_accHelpTopic([out] string&amp; pszHelpFile, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelpTopic (ByRef pszHelpFile As String, childID As Object) As Integer Implements IAccessible.get_accHelpTopic" />
      <MemberSignature Language="C++ CLI" Value=" virtual int Accessibility.IAccessible.get_accHelpTopic([Runtime::InteropServices::Out] System::String ^ % pszHelpFile, System::Object ^ childID) = Accessibility::IAccessible::get_accHelpTopic;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelpTopic(System.String@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pszHelpFile" Type="System.String" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pszHelpFile"><span data-ttu-id="c99e3-255">При возврате метода — полный путь к файлу WinHelp, который связан с указанным объектом.</span><span class="sxs-lookup"><span data-stu-id="c99e3-255">When the method returns, the full path of the WinHelp file associated with the specified object.</span></span></param>
        <param name="childID"><span data-ttu-id="c99e3-256">Идентификационный номер доступного объекта, для которого нужно получить раздел справки.</span><span class="sxs-lookup"><span data-stu-id="c99e3-256">The ID number of the accessible object for which to retrieve a help topic.</span></span> <span data-ttu-id="c99e3-257">Задайте для этого параметра значение 0, чтобы выбрать этот объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов этого объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-257">This parameter is 0 to select the object, or a child ID to select one of the object's child objects..</span></span></param>
        <summary><span data-ttu-id="c99e3-258">Извлекает полный путь к файлу WinHelp, который связан с указанным объектом, а также идентификатор определенного раздела в этом файле.</span><span class="sxs-lookup"><span data-stu-id="c99e3-258">Retrieves the full path of a WinHelp file that is associated with the specified object along with the identifier of a specific topic in the file.</span></span></summary>
        <returns><span data-ttu-id="c99e3-259">Идентификатор определенного раздела в <paramref name="pszHelpFile" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-259">The identifier of a specific topic in <paramref name="pszHelpFile" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accKeyboardShortcut">
      <MemberSignature Language="C#" Value="string IAccessible.get_accKeyboardShortcut (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accKeyboardShortcut(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accKeyboardShortcut (childID As Object) As String Implements IAccessible.get_accKeyboardShortcut" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accKeyboardShortcut(System::Object ^ childID) = Accessibility::IAccessible::get_accKeyboardShortcut;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accKeyboardShortcut(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID"><span data-ttu-id="c99e3-260">Идентификационный номер доступного объекта, для которого нужно получить сочетание клавиш.</span><span class="sxs-lookup"><span data-stu-id="c99e3-260">The ID number of the accessible object for which to get a keyboard shortcut.</span></span> <span data-ttu-id="c99e3-261">Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-261">This parameter is 0 to select the object, or a child ID to select one of the object's child objects.</span></span></param>
        <summary><span data-ttu-id="c99e3-262">Извлекает сочетание клавиш или клавишу доступа для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-262">Retrieves the specified object's keyboard shortcut or access key.</span></span></summary>
        <returns><span data-ttu-id="c99e3-263">Локализованная строка, которая определяет сочетание клавиш, или значение <see langword="null" />, если с указанным объектом не связано сочетание клавиш.</span><span class="sxs-lookup"><span data-stu-id="c99e3-263">A localized string that identifies the keyboard shortcut, or <see langword="null" /> if no keyboard shortcut is associated with the specified object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accName">
      <MemberSignature Language="C#" Value="string IAccessible.get_accName (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accName(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accName (childID As Object) As String Implements IAccessible.get_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accName(System::Object ^ childID) = Accessibility::IAccessible::get_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accName(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID"><span data-ttu-id="c99e3-264">Идентификационный номер доступного объекта, для которого требуется получить имя.</span><span class="sxs-lookup"><span data-stu-id="c99e3-264">The ID number of the accessible object whose name is to be retrieved.</span></span> <span data-ttu-id="c99e3-265">Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-265">This parameter is 0 to select the object, or a child ID to select one of the object's child objects.</span></span></param>
        <summary><span data-ttu-id="c99e3-266">Извлекает имя указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-266">Retrieves the name of the specified object.</span></span></summary>
        <returns><span data-ttu-id="c99e3-267">Имя указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-267">The name of the specified object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accRole">
      <MemberSignature Language="C#" Value="object IAccessible.get_accRole (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accRole(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accRole (childID As Object) As Object Implements IAccessible.get_accRole" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accRole(System::Object ^ childID) = Accessibility::IAccessible::get_accRole;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accRole(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID"><span data-ttu-id="c99e3-268">Идентификационный номер доступного объекта, для которого нужно получить информацию о ролях.</span><span class="sxs-lookup"><span data-stu-id="c99e3-268">The ID number of the accessible object for which to get role information.</span></span> <span data-ttu-id="c99e3-269">Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-269">This parameter is 0 to select the object, or a child ID to select one of the object's child objects.</span></span></param>
        <summary><span data-ttu-id="c99e3-270">Получает информацию, которая описывает роль указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-270">Retrieves information that describes the role of the specified object.</span></span></summary>
        <returns><span data-ttu-id="c99e3-271">Объект, который предоставляет сведения о роли указанного доступного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-271">An object that provides role information about the specified accessible object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accState">
      <MemberSignature Language="C#" Value="object IAccessible.get_accState (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accState(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accState (childID As Object) As Object Implements IAccessible.get_accState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accState(System::Object ^ childID) = Accessibility::IAccessible::get_accState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID"><span data-ttu-id="c99e3-272">Идентификационный номер доступного объекта, для которого нужно получить информацию о состоянии.</span><span class="sxs-lookup"><span data-stu-id="c99e3-272">The ID number of the accessible object for which to get state information.</span></span> <span data-ttu-id="c99e3-273">Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-273">This parameter is 0 to select the object, or a child ID to select one of the object's child objects.</span></span></param>
        <summary><span data-ttu-id="c99e3-274">Извлекает текущее состояние указанного доступного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-274">Retrieves the current state of the specified accessible object.</span></span></summary>
        <returns><span data-ttu-id="c99e3-275">Объект, который описывает текущее состояние указанного доступного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-275">An object that describes the current state of the specified accessible object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accValue">
      <MemberSignature Language="C#" Value="string IAccessible.get_accValue (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accValue(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accValue (childID As Object) As String Implements IAccessible.get_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accValue(System::Object ^ childID) = Accessibility::IAccessible::get_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accValue(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID"><span data-ttu-id="c99e3-276">Идентификационный номер доступного объекта, для которого требуется получить значение.</span><span class="sxs-lookup"><span data-stu-id="c99e3-276">The ID number of the accessible object whose value is to be retrieved.</span></span> <span data-ttu-id="c99e3-277">Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-277">This parameter is 0 to select the object, or a child ID to select one of the object's child objects.</span></span></param>
        <summary><span data-ttu-id="c99e3-278">Извлекает значение указанного доступного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-278">Retrieves the value of the specified accessible object.</span></span> <span data-ttu-id="c99e3-279">Не все объекты имеют значение.</span><span class="sxs-lookup"><span data-stu-id="c99e3-279">Not all objects have a value.</span></span></summary>
        <returns><span data-ttu-id="c99e3-280">Значение <paramref name="childID" /> или <see langword="null" />, если объект не имеет значение.</span><span class="sxs-lookup"><span data-stu-id="c99e3-280">The value of <paramref name="childID" />, or <see langword="null" /> if the object has no value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accName">
      <MemberSignature Language="C#" Value="void IAccessible.set_accName (object childID, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accName(object childID, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accName (childID As Object, newName As String) Implements IAccessible.set_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accName(System::Object ^ childID, System::String ^ newName) = Accessibility::IAccessible::set_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accName(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID"><span data-ttu-id="c99e3-281">Идентификационный номер доступного объекта, которому нужно присвоить новое имя.</span><span class="sxs-lookup"><span data-stu-id="c99e3-281">The ID number of the accessible object to which to assign a new name.</span></span> <span data-ttu-id="c99e3-282">Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-282">This parameter is 0 to select the object, or a child ID to select one of the object's child objects.</span></span></param>
        <param name="newName"><span data-ttu-id="c99e3-283">Новое имя, которое нужно присвоить <paramref name="childID" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-283">The new name to assign to <paramref name="childID" />.</span></span></param>
        <summary><span data-ttu-id="c99e3-284">Присваивает новое доступное имя указанному элементу.</span><span class="sxs-lookup"><span data-stu-id="c99e3-284">Assigns a new accessible name to the specified element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accValue">
      <MemberSignature Language="C#" Value="void IAccessible.set_accValue (object childID, string newValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accValue(object childID, string newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accValue (childID As Object, newValue As String) Implements IAccessible.set_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accValue(System::Object ^ childID, System::String ^ newValue) = Accessibility::IAccessible::set_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accValue(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID"><span data-ttu-id="c99e3-285">Идентификационный номер доступного объекта, которому нужно присвоить новое значение.</span><span class="sxs-lookup"><span data-stu-id="c99e3-285">The ID number of the accessible object to which to assign a new value.</span></span> <span data-ttu-id="c99e3-286">Задайте для этого параметра значение 0, чтобы выбрать данный объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов данного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-286">This parameter is 0 to select the object, or a child ID to select one of the object's child objects.</span></span></param>
        <param name="newValue"><span data-ttu-id="c99e3-287">Новое имя, которое будет присвоено указанному доступному объекту.</span><span class="sxs-lookup"><span data-stu-id="c99e3-287">The new value to assign to the specified accessible object.</span></span></param>
        <summary><span data-ttu-id="c99e3-288">Присваивает новое значение указанному элементу.</span><span class="sxs-lookup"><span data-stu-id="c99e3-288">Assigns a new value to the specified element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c99e3-289">Возвращает расположение и размер доступного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-289">Gets the location and size of the accessible object.</span></span></summary>
        <value><span data-ttu-id="c99e3-290">Структура <see cref="T:System.Drawing.Rectangle" />, представляющая границы объекта специальных возможностей.</span><span class="sxs-lookup"><span data-stu-id="c99e3-290">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the accessible object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-291"><xref:System.Windows.Forms.AccessibleObject.Bounds%2A> Свойство извлекает ограничивающий прямоугольник в экранных координатах.</span><span class="sxs-lookup"><span data-stu-id="c99e3-291">The <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> property retrieves the object's bounding rectangle in screen coordinates.</span></span> <span data-ttu-id="c99e3-292">Если объект имеет прямоугольной форму, то это свойство представляет наименьший прямоугольник, полностью охватывает всю область объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-292">If the object has a nonrectangular shape, then this property represents the smallest rectangle that completely encompasses the entire object region.</span></span> <span data-ttu-id="c99e3-293">Таким образом, для создания непрямоугольных объектов, таких как элементы списка, координаты ограничивающего прямоугольника объекта могут отклоняться, тестирование, путем вызова <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> метод, так как <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> определяет границы объекта на основе по пикселю.</span><span class="sxs-lookup"><span data-stu-id="c99e3-293">Therefore, for nonrectangular objects such as list view items, the coordinates of the object's bounding rectangle can fail, if tested, by calling the <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> method, because <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> determines the object's boundaries on a pixel-by-pixel basis.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c99e3-294">В следующем примере показано создание диаграммы с поддержкой специальных возможностей управления, с помощью <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> классов для отображения доступных сведений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-294">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="c99e3-295">Элемент управления отображает две кривые, а также условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-295">The control plots two curves along with a legend.</span></span> <span data-ttu-id="c99e3-296">`ChartControlAccessibleObject` Класс, который является производным от `ControlAccessibleObject`, используется в <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> метод для предоставления пользовательских доступных сведений для элемента управления диаграммы.</span><span class="sxs-lookup"><span data-stu-id="c99e3-296">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="c99e3-297">Так как условные обозначения диаграммы фактически не являются <xref:System.Windows.Forms.Control> -управление на основе, а также отображаются в элементе управления диаграммы не имеет встроенных доступных данных.</span><span class="sxs-lookup"><span data-stu-id="c99e3-297">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="c99e3-298">По этой причине `ChartControlAccessibleObject` класса переопределения <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод для возврата `CurveLegendAccessibleObject` , представляющий доступных сведений для каждой части условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-298">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="c99e3-299">При специальными приложение использует этот элемент управления, элемент управления можно предоставить необходимые сведения доступны.</span><span class="sxs-lookup"><span data-stu-id="c99e3-299">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="c99e3-300">Этот фрагмент кода демонстрирует переопределение <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-300">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> property.</span></span> <span data-ttu-id="c99e3-301">См. в разделе <xref:System.Windows.Forms.AccessibleObject> пример полного кода.</span><span class="sxs-lookup"><span data-stu-id="c99e3-301">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="c99e3-302">Не удалось получить границы элемента управления.</span><span class="sxs-lookup"><span data-stu-id="c99e3-302">The bounds of control cannot be retrieved.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c99e3-303">Реализация по умолчанию возвращает объекта специальных возможностей ограничивающего прямоугольника, если объект охватывает элемент управления; в противном случае возвращается <see cref="F:System.Drawing.Rectangle.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-303">The default implementation returns the accessible object's bounding rectangle if the object wraps a system control; otherwise, it returns <see cref="F:System.Drawing.Rectangle.Empty" />.</span></span> <span data-ttu-id="c99e3-304">Все видимые доступные объекты должны поддерживать этот метод.</span><span class="sxs-lookup"><span data-stu-id="c99e3-304">All visible accessible objects must support this method.</span></span> <span data-ttu-id="c99e3-305">Звуковые объекты не поддерживают этот метод.</span><span class="sxs-lookup"><span data-stu-id="c99e3-305">Sound objects do not support this method.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DefaultAction">
      <MemberSignature Language="C#" Value="public virtual string DefaultAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultAction { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAction : string" Usage="System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c99e3-306">Получает строку, описывающую выполняемое по умолчанию действие объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-306">Gets a string that describes the default action of the object.</span></span> <span data-ttu-id="c99e3-307">Не все объекты имеют действия по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="c99e3-307">Not all objects have a default action.</span></span></summary>
        <value><span data-ttu-id="c99e3-308">Описание действия по умолчанию для объекта или значение <see langword="null" />, если этот объект не имеет действия по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="c99e3-308">A description of the default action for an object, or <see langword="null" /> if this object has no default action.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-309">Строка описывает действие, выполняемое для объекта, не выполняет в результате.</span><span class="sxs-lookup"><span data-stu-id="c99e3-309">The string describes the action that is performed on an object, not what the object does as a result.</span></span> <span data-ttu-id="c99e3-310">То есть кнопки панели инструментов, печать документа по умолчанию действие «Press», а не «Печать текущего документа».</span><span class="sxs-lookup"><span data-stu-id="c99e3-310">That is, a toolbar button that prints a document has a default action of "Press" rather than "Prints the current document."</span></span> <span data-ttu-id="c99e3-311">Не путайте действие объекта по умолчанию его значение.</span><span class="sxs-lookup"><span data-stu-id="c99e3-311">Do not confuse an object's default action with its value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="c99e3-312">Не удалось получить выполняемое по умолчанию действие для элемента управления.</span><span class="sxs-lookup"><span data-stu-id="c99e3-312">The default action for the control cannot be retrieved.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c99e3-313">Реализация по умолчанию возвращает действие по умолчанию для объекта специальных возможностей, если объект охватывает элемент управления, имеющий действие по умолчанию; в противном случае возвращается <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-313">The default implementation returns the accessible object's default action if the object wraps a system control that has a default action; otherwise, it returns <see langword="null" />.</span></span> <span data-ttu-id="c99e3-314">Только элементы управления, которые выполняют действия, должны поддерживать этот метод.</span><span class="sxs-lookup"><span data-stu-id="c99e3-314">Only controls that perform actions should support this method.</span></span> <span data-ttu-id="c99e3-315">Не все объекты имеют действия по умолчанию, а некоторые объекты имеют действие по умолчанию, который связан с его <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> свойства, как показано в следующих примерах: Установленный флажок имеет действие по умолчанию «Снять» и значение «Установлен».</span><span class="sxs-lookup"><span data-stu-id="c99e3-315">Not all objects have default actions, and some objects might have a default action that is related to its <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> property, such as in the following examples: A selected check box has a default action of "Uncheck" and a value of "Checked."</span></span> <span data-ttu-id="c99e3-316">Снятый флажок имеет действие по умолчанию «Установить» и значение «Снят».</span><span class="sxs-lookup"><span data-stu-id="c99e3-316">A cleared check box has a default action of "Check" and a value of "Unchecked."</span></span> <span data-ttu-id="c99e3-317">Кнопка с надписью «Печать» по умолчанию действие «Нажать» не имеет значения.</span><span class="sxs-lookup"><span data-stu-id="c99e3-317">A button labeled "Print" has a default action of "Press," with no value.</span></span> <span data-ttu-id="c99e3-318">Управление статическим текстом или элемент управления редактирования, отображающий «Принтер» не действует по умолчанию, но будет иметь значение «Принтер».</span><span class="sxs-lookup"><span data-stu-id="c99e3-318">A static text control or an edit control that shows "Printer" has no default action, but would have a value of "Printer."</span></span> <span data-ttu-id="c99e3-319">Объекта <see cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" /> свойство следует глагол или короткие глагольное словосочетание.</span><span class="sxs-lookup"><span data-stu-id="c99e3-319">An object's <see cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" /> property should be a verb or a short verb phrase.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Windows.Forms.AccessibleObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c99e3-320">Получает строку, описывающую внешний вид указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-320">Gets a string that describes the visual appearance of the specified object.</span></span> <span data-ttu-id="c99e3-321">Не все объекты имеют описание.</span><span class="sxs-lookup"><span data-stu-id="c99e3-321">Not all objects have a description.</span></span></summary>
        <value><span data-ttu-id="c99e3-322">Описание внешнего вида объекта для пользователя или значение <see langword="null" />, если объект не имеет описания.</span><span class="sxs-lookup"><span data-stu-id="c99e3-322">A description of the object's visual appearance to the user, or <see langword="null" /> if the object does not have a description.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-323">Это свойство описывает внешний вид объекта для пользователя.</span><span class="sxs-lookup"><span data-stu-id="c99e3-323">This property describes the object's visual appearance to the user.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="c99e3-324">Не удалось получить описание для элемента управления.</span><span class="sxs-lookup"><span data-stu-id="c99e3-324">The description for the control cannot be retrieved.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c99e3-325">Реализация по умолчанию возвращает доступных описание объекта, если объект охватывает элемент управления; в противном случае возвращается <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-325">The default implementation returns the accessible object's description if the object wraps a system control; otherwise, it returns <see langword="null" />.</span></span> <span data-ttu-id="c99e3-326">Описание обычно используется для предоставления больший контекст для пользователей с ослабленным зрением или людей с нарушениями зрения.</span><span class="sxs-lookup"><span data-stu-id="c99e3-326">The description is typically used to provide greater context for low-vision or blind users.</span></span> <span data-ttu-id="c99e3-327">Он также может использоваться для контекстного поиска или других приложений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-327">It can also be used for context searching or other applications.</span></span> <span data-ttu-id="c99e3-328">Серверы должны поддерживать <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> свойство Если описание не является очевидным, или если она является избыточной в зависимости от объекта <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />, <see cref="P:System.Windows.Forms.AccessibleObject.State" />, и <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> свойства.</span><span class="sxs-lookup"><span data-stu-id="c99e3-328">Servers need to support the <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> property if the description is not obvious, or if it is redundant based on the object's <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />, <see cref="P:System.Windows.Forms.AccessibleObject.State" />, and <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> properties.</span></span> <span data-ttu-id="c99e3-329">Например кнопку «ОК», дополнительные данные не требуются, но от кнопки изображением кактуса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-329">For example, a button with "OK" does not need additional information, but a button that shows a picture of a cactus would.</span></span> <span data-ttu-id="c99e3-330"><see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />И, возможно, <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> свойства для кнопки с кактусом описания его назначения, но <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> свойство передает сведения, которые менее ощутимые, как «Кнопка изображением кактуса».</span><span class="sxs-lookup"><span data-stu-id="c99e3-330">The <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />, and perhaps <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> properties for the cactus button describe its purpose, but the <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> property conveys information that is less tangible, like "A button that shows a picture of a cactus".</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoDefaultAction();" />
      <MemberSignature Language="F#" Value="abstract member DoDefaultAction : unit -&gt; unit&#xA;override this.DoDefaultAction : unit -&gt; unit" Usage="accessibleObject.DoDefaultAction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c99e3-331">Выполняет действие по умолчанию, сопоставленное с объектом со специальными возможностями.</span><span class="sxs-lookup"><span data-stu-id="c99e3-331">Performs the default action associated with this accessible object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-332">Клиенты могут получать действие объекта по умолчанию, проверяя объекта <xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-332">Clients can retrieve the object's default action by inspecting an object's <xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A> property.</span></span> <span data-ttu-id="c99e3-333">Клиент может использовать службы автоматизации (если поддерживается) вместо <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> для выполнения действия по умолчанию для объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-333">A client can use automation (if supported) instead of <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> to perform an object's default action.</span></span> <span data-ttu-id="c99e3-334">Тем не менее <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> предоставляет простой способ выполнения объекта наиболее часто используемое действие.</span><span class="sxs-lookup"><span data-stu-id="c99e3-334">However, <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> provides an easy way to perform an object's most commonly used action.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="c99e3-335">Не удалось выполнить действие по умолчанию для элемента управления.</span><span class="sxs-lookup"><span data-stu-id="c99e3-335">The default action for the control cannot be performed.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c99e3-336">Действия по умолчанию системные элементы интерфейса зависит от состояния клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="c99e3-336">The default action performed by system-provided user interface elements depends on the keyboard state.</span></span> <span data-ttu-id="c99e3-337">То есть если клавиша-модификатор, например SHIFT, ALT или CTRL не работает (либо действием пользователя или программным способом) при <see cref="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" /> вызывается по умолчанию действие не может быть таким же, как при этих ключей не вниз.</span><span class="sxs-lookup"><span data-stu-id="c99e3-337">That is, if a modifier key such as SHIFT, ALT, or CTRL is down (either by a user action or programmatically) when <see cref="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" /> is called, the default action might not be the same as when those keys are not down.</span></span> <span data-ttu-id="c99e3-338">Не все объекты имеют действия по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="c99e3-338">Not all objects have a default action.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetChild">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChild (index As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetChild(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetChild : int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetChild : int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c99e3-339">Отсчитываемый от нуля индекс доступного дочернего элемента.</span><span class="sxs-lookup"><span data-stu-id="c99e3-339">The zero-based index of the accessible child.</span></span></param>
        <summary><span data-ttu-id="c99e3-340">Извлекает доступный дочерний элемент, соответствующий указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="c99e3-340">Retrieves the accessible child corresponding to the specified index.</span></span></summary>
        <returns><span data-ttu-id="c99e3-341">Класс <see cref="T:System.Windows.Forms.AccessibleObject" />, который представляет доступный дочерний элемент, соответствующий указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="c99e3-341">An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the accessible child corresponding to the specified index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c99e3-342">В следующем примере показано создание диаграммы с поддержкой специальных возможностей управления, с помощью <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> классов для отображения доступных сведений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-342">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="c99e3-343">Элемент управления отображает две кривые, а также условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-343">The control plots two curves along with a legend.</span></span> <span data-ttu-id="c99e3-344">`ChartControlAccessibleObject` Класс, который является производным от `ControlAccessibleObject`, используется в <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> метод для предоставления пользовательских доступных сведений для элемента управления диаграммы.</span><span class="sxs-lookup"><span data-stu-id="c99e3-344">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="c99e3-345">Так как условные обозначения диаграммы фактически не являются <xref:System.Windows.Forms.Control> -управление на основе, а также отображаются в элементе управления диаграммы не имеет встроенных доступных данных.</span><span class="sxs-lookup"><span data-stu-id="c99e3-345">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="c99e3-346">По этой причине `ChartControlAccessibleObject` класса переопределения <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод для возврата `CurveLegendAccessibleObject` , представляющий доступных сведений для каждой части условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-346">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="c99e3-347">При специальными приложение использует этот элемент управления, элемент управления можно предоставить необходимые сведения доступны.</span><span class="sxs-lookup"><span data-stu-id="c99e3-347">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="c99e3-348">Этот фрагмент кода демонстрирует переопределение <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="c99e3-348">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method.</span></span> <span data-ttu-id="c99e3-349">См. в разделе <xref:System.Windows.Forms.AccessibleObject> пример полного кода.</span><span class="sxs-lookup"><span data-stu-id="c99e3-349">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c99e3-350">Все доступные объекты должны поддерживать это свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-350">All accessible objects must support this property.</span></span> <span data-ttu-id="c99e3-351">Если метод не переопределен, он возвращает <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-351">If the method is not overridden, it returns <see langword="null" />.</span></span> <span data-ttu-id="c99e3-352">Переопределите этот метод, когда объекту со специальными возможностями необходимо предоставить пользовательский дочерние объекты.</span><span class="sxs-lookup"><span data-stu-id="c99e3-352">Override this method when an accessible object needs to provide custom accessible children.</span></span> <span data-ttu-id="c99e3-353">Если индекс является недопустимым, то этот метод должен возвращать <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-353">If the index is invalid, then this method should return <see langword="null" />.</span></span> <span data-ttu-id="c99e3-354">При переопределении этого метода необходимо также переопределить <see cref="M:System.Windows.Forms.AccessibleObject.GetChildCount" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-354">When you override this method, you must also override <see cref="M:System.Windows.Forms.AccessibleObject.GetChildCount" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetChildCount">
      <MemberSignature Language="C#" Value="public virtual int GetChildCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChildCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChildCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChildCount();" />
      <MemberSignature Language="F#" Value="abstract member GetChildCount : unit -&gt; int&#xA;override this.GetChildCount : unit -&gt; int" Usage="accessibleObject.GetChildCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c99e3-355">Извлекает число дочерних объектов, принадлежащих доступному объекту.</span><span class="sxs-lookup"><span data-stu-id="c99e3-355">Retrieves the number of children belonging to an accessible object.</span></span></summary>
        <returns><span data-ttu-id="c99e3-356">Число дочерних объектов, принадлежащих доступному объекту.</span><span class="sxs-lookup"><span data-stu-id="c99e3-356">The number of children belonging to an accessible object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c99e3-357">В следующем примере показано создание диаграммы с поддержкой специальных возможностей управления, с помощью <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> классов для отображения доступных сведений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-357">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="c99e3-358">Элемент управления отображает две кривые, а также условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-358">The control plots two curves along with a legend.</span></span> <span data-ttu-id="c99e3-359">`ChartControlAccessibleObject` Класс, который является производным от `ControlAccessibleObject`, используется в <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> метод для предоставления пользовательских доступных сведений для элемента управления диаграммы.</span><span class="sxs-lookup"><span data-stu-id="c99e3-359">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="c99e3-360">Так как условные обозначения диаграммы фактически не являются <xref:System.Windows.Forms.Control> -управление на основе, а также отображаются в элементе управления диаграммы не имеет встроенных доступных данных.</span><span class="sxs-lookup"><span data-stu-id="c99e3-360">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="c99e3-361">По этой причине `ChartControlAccessibleObject` класса переопределения <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод для возврата `CurveLegendAccessibleObject` , представляющий доступных сведений для каждой части условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-361">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="c99e3-362">При специальными приложение использует этот элемент управления, элемент управления можно предоставить необходимые сведения доступны.</span><span class="sxs-lookup"><span data-stu-id="c99e3-362">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="c99e3-363">Этот примере кода показано переопределение <xref:System.Windows.Forms.AccessibleObject.GetChildCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="c99e3-363">This code demonstrates shows overriding the <xref:System.Windows.Forms.AccessibleObject.GetChildCount%2A> method.</span></span> <span data-ttu-id="c99e3-364">См. в разделе <xref:System.Windows.Forms.AccessibleObject> пример полного кода.</span><span class="sxs-lookup"><span data-stu-id="c99e3-364">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c99e3-365">Все объекты должны поддерживать это свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-365">All objects must support this property.</span></span> <span data-ttu-id="c99e3-366">Реализация по умолчанию возвращает значение -1.</span><span class="sxs-lookup"><span data-stu-id="c99e3-366">The default implementation returns -1.</span></span> <span data-ttu-id="c99e3-367">Переопределите этот метод, когда объекту со специальными возможностями необходимо предоставить пользовательский дочерние объекты.</span><span class="sxs-lookup"><span data-stu-id="c99e3-367">Override this method when an accessible object needs to provide custom accessible children.</span></span> <span data-ttu-id="c99e3-368">При переопределении этого метода необходимо также переопределить <see cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-368">When you override this method, you must also override <see cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetFocused">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetFocused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetFocused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetFocused" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFocused () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetFocused();" />
      <MemberSignature Language="F#" Value="abstract member GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetFocused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c99e3-369">Извлекает объект, получивший фокус ввода.</span><span class="sxs-lookup"><span data-stu-id="c99e3-369">Retrieves the object that has the keyboard focus.</span></span></summary>
        <returns><span data-ttu-id="c99e3-370">Объект <see cref="T:System.Windows.Forms.AccessibleObject" />, который указывает дочерний объект, имеющий фокус в настоящий момент.</span><span class="sxs-lookup"><span data-stu-id="c99e3-370">An <see cref="T:System.Windows.Forms.AccessibleObject" /> that specifies the currently focused child.</span></span> <span data-ttu-id="c99e3-371">Данный метод возвращает вызывающий объект, если сам объект имеет фокус.</span><span class="sxs-lookup"><span data-stu-id="c99e3-371">This method returns the calling object if the object itself is focused.</span></span> <span data-ttu-id="c99e3-372">Возвращает значение <see langword="null" />, если отсутствует объект, имеющий фокус.</span><span class="sxs-lookup"><span data-stu-id="c99e3-372">Returns <see langword="null" /> if no object has focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-373">Концепция фокус клавиатуры относится активного окна.</span><span class="sxs-lookup"><span data-stu-id="c99e3-373">The concept of keyboard focus is related to that of an active window.</span></span> <span data-ttu-id="c99e3-374">Активное окно — окно переднего плана, в которой работает пользователь.</span><span class="sxs-lookup"><span data-stu-id="c99e3-374">An active window is the foreground window in which the user is working.</span></span> <span data-ttu-id="c99e3-375">Объект с фокусом клавиатуры является активным окном или дочернего объекта активного окна.</span><span class="sxs-lookup"><span data-stu-id="c99e3-375">The object with the keyboard focus is either the active window or a child object of the active window.</span></span>  
  
 <span data-ttu-id="c99e3-376">Только один объект или элемент в контейнере может иметь фокус в любой момент времени.</span><span class="sxs-lookup"><span data-stu-id="c99e3-376">Only one object or item within a container can have the focus at any one time.</span></span> <span data-ttu-id="c99e3-377">Объект с фокусом клавиатуры не обязательно выбранного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-377">The object with the keyboard focus is not necessarily the selected object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="c99e3-378">Не удалось получить элемент управления.</span><span class="sxs-lookup"><span data-stu-id="c99e3-378">The control cannot be retrieved.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c99e3-379">Все объекты, которые могут получать фокус клавиатуры должен поддерживать это свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-379">All objects that can receive the keyboard focus must support this property.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetHelpTopic">
      <MemberSignature Language="C#" Value="public virtual int GetHelpTopic (out string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHelpTopic([out] string&amp; fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHelpTopic (ByRef fileName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHelpTopic([Runtime::InteropServices::Out] System::String ^ % fileName);" />
      <MemberSignature Language="F#" Value="abstract member GetHelpTopic :  -&gt; int&#xA;override this.GetHelpTopic :  -&gt; int" Usage="accessibleObject.GetHelpTopic fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="c99e3-380">После возвращения это свойство содержит путь к файлу справки, связанному с данным объектом со специальными возможностями.</span><span class="sxs-lookup"><span data-stu-id="c99e3-380">On return, this property contains the path to the Help file associated with this accessible object.</span></span></param>
        <summary><span data-ttu-id="c99e3-381">Получает идентификатор для идентификатора раздела справки и путь к файлу справки, связанному с данным объектом со специальными возможностями.</span><span class="sxs-lookup"><span data-stu-id="c99e3-381">Gets an identifier for a Help topic identifier and the path to the Help file associated with this accessible object.</span></span></summary>
        <returns><span data-ttu-id="c99e3-382">Идентификатор для раздела справки или значение -1, если раздел справки отсутствует.</span><span class="sxs-lookup"><span data-stu-id="c99e3-382">An identifier for a Help topic, or -1 if there is no Help topic.</span></span> <span data-ttu-id="c99e3-383">После возвращения параметр <paramref name="fileName" /> содержит путь к файлу справки, связанному с данным объектом со специальными возможностями.</span><span class="sxs-lookup"><span data-stu-id="c99e3-383">On return, the <paramref name="fileName" /> parameter contains the path to the Help file associated with this accessible object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-384">Чтобы вывести справку для <xref:System.Windows.Forms.AccessibleObject> в системе справки Windows, можно передать файл имя и идентификационный номер раздела в соответствующую <xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=nameWithType> метод <xref:System.Windows.Forms.Help>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-384">To display help for the <xref:System.Windows.Forms.AccessibleObject> using the Windows Help system, you can pass the file name and topic ID to the appropriate <xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=nameWithType> method of <xref:System.Windows.Forms.Help>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="c99e3-385">Не удалось получить раздел справки для элемента управления.</span><span class="sxs-lookup"><span data-stu-id="c99e3-385">The Help topic for the control cannot be retrieved.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c99e3-386">Не все объекты должны поддерживать это свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-386">Not all objects need to support this property.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
      </Docs>
    </Member>
    <Member MemberName="GetSelected">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetSelected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetSelected() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetSelected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelected () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetSelected();" />
      <MemberSignature Language="F#" Value="abstract member GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetSelected " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c99e3-387">Извлекает выбранный в данный момент дочерний объект.</span><span class="sxs-lookup"><span data-stu-id="c99e3-387">Retrieves the currently selected child.</span></span></summary>
        <returns><span data-ttu-id="c99e3-388">Объект <see cref="T:System.Windows.Forms.AccessibleObject" />, который представляет выбранный в данный момент дочерний объект.</span><span class="sxs-lookup"><span data-stu-id="c99e3-388">An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the currently selected child.</span></span> <span data-ttu-id="c99e3-389">Данный метод возвращает вызывающий объект, если выделен сам объект.</span><span class="sxs-lookup"><span data-stu-id="c99e3-389">This method returns the calling object if the object itself is selected.</span></span> <span data-ttu-id="c99e3-390">Возвращает значение <see langword="null" />, если ни один из дочерних объектов в данный момент не выделен, а сам объект не имеет фокус.</span><span class="sxs-lookup"><span data-stu-id="c99e3-390">Returns <see langword="null" /> if is no child is currently selected and the object itself does not have focus.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="c99e3-391">Не удалось получить выделенный дочерний объект.</span><span class="sxs-lookup"><span data-stu-id="c99e3-391">The selected child cannot be retrieved.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c99e3-392">Все объекты, которые могут быть выбраны должен поддерживать это свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-392">All objects that can be selected should support this property.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public virtual string Help { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Help" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Help" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Help As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Help { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Help : string" Usage="System.Windows.Forms.AccessibleObject.Help" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c99e3-393">Получает описание действий, выполняемых объектом, и порядка его использования.</span><span class="sxs-lookup"><span data-stu-id="c99e3-393">Gets a description of what the object does or how the object is used.</span></span></summary>
        <value><span data-ttu-id="c99e3-394">Объект <see cref="T:System.String" />, который содержит описание действий, выполняемых объектом, и порядка его использования.</span><span class="sxs-lookup"><span data-stu-id="c99e3-394">A <see cref="T:System.String" /> that contains the description of what the object does or how the object is used.</span></span> <span data-ttu-id="c99e3-395">Возвращает значение <see langword="null" />, если справка не определена.</span><span class="sxs-lookup"><span data-stu-id="c99e3-395">Returns <see langword="null" /> if no help is defined.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="c99e3-396">Не удалось получить строку справки для элемента управления.</span><span class="sxs-lookup"><span data-stu-id="c99e3-396">The help string for the control cannot be retrieved.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c99e3-397">Не все объекты должны поддерживать это свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-397">Not all objects need to support this property.</span></span> <span data-ttu-id="c99e3-398">Как правило, это свойство содержит сведения о стиле подсказки, используются для описания того, что выполняет объект, и способы ее использования.</span><span class="sxs-lookup"><span data-stu-id="c99e3-398">Typically, this property contains ToolTip style information that is used either to describe what the object does or how to use it.</span></span> <span data-ttu-id="c99e3-399">Например <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> свойства для кнопки панели инструментов, показывающий, принтер, может быть «Печать текущего документа.»</span><span class="sxs-lookup"><span data-stu-id="c99e3-399">For example, the <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> property for a toolbar button that shows a printer might be "Prints the current document."</span></span> <span data-ttu-id="c99e3-400">Текст для <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> свойства не быть уникальным в пределах пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-400">The text for the <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> property does not have to be unique within the user interface.</span></span> <span data-ttu-id="c99e3-401">Серверы не обязательно должны поддерживать <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> свойство Если другие свойства предоставляют достаточно сведений об объекте цели и какие действия может выполнять объект.</span><span class="sxs-lookup"><span data-stu-id="c99e3-401">Servers do not need to support the <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> property if other properties provide sufficient information about the object's purpose and what actions the object might perform.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HitTest (x As Integer, y As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c99e3-402">Горизонтальная экранная координата.</span><span class="sxs-lookup"><span data-stu-id="c99e3-402">The horizontal screen coordinate.</span></span></param>
        <param name="y"><span data-ttu-id="c99e3-403">Вертикальная экранная координата.</span><span class="sxs-lookup"><span data-stu-id="c99e3-403">The vertical screen coordinate.</span></span></param>
        <summary><span data-ttu-id="c99e3-404">Получает дочерний объект с указанными экранными координатами.</span><span class="sxs-lookup"><span data-stu-id="c99e3-404">Retrieves the child object at the specified screen coordinates.</span></span></summary>
        <returns><span data-ttu-id="c99e3-405">Класс <see cref="T:System.Windows.Forms.AccessibleObject" />, представляющий дочерний объект с указанными экранными координатами.</span><span class="sxs-lookup"><span data-stu-id="c99e3-405">An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the child object at the given screen coordinates.</span></span> <span data-ttu-id="c99e3-406">Данный метод возвращает вызывающий объект, если сам объект находится в указанном местоположении.</span><span class="sxs-lookup"><span data-stu-id="c99e3-406">This method returns the calling object if the object itself is at the location specified.</span></span> <span data-ttu-id="c99e3-407">Возвращает значение <see langword="null" />, если в проверяемом местоположении нет объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-407">Returns <see langword="null" /> if no object is at the tested location.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-408">Для создания непрямоугольных объектов, таких как элементы списка, координаты объекта прямоугольника, ограничивающего полученных <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> может завершиться ошибкой, если тестирование с <xref:System.Windows.Forms.AccessibleObject.HitTest%2A>, так как <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> определяет границы объекта на основе по пикселю.</span><span class="sxs-lookup"><span data-stu-id="c99e3-408">For nonrectangular objects such as list view items, the coordinates of the object's bounding rectangle retrieved by <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> can fail if tested with <xref:System.Windows.Forms.AccessibleObject.HitTest%2A>, because <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> determines the object's boundaries on a pixel-by-pixel basis.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="c99e3-409">Не удалось проверить попадание курсора в элемент управления.</span><span class="sxs-lookup"><span data-stu-id="c99e3-409">The control cannot be hit tested.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c99e3-410">Все визуальные объекты должны поддерживать этот метод; звуковые объекты не поддерживают его.</span><span class="sxs-lookup"><span data-stu-id="c99e3-410">All visual objects must support this method; sound objects do not support it.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="KeyboardShortcut">
      <MemberSignature Language="C#" Value="public virtual string KeyboardShortcut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyboardShortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyboardShortcut As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyboardShortcut { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardShortcut : string" Usage="System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c99e3-411">Получает сочетание клавиш или клавишу доступа для объекта со специальными возможностями.</span><span class="sxs-lookup"><span data-stu-id="c99e3-411">Gets the shortcut key or access key for the accessible object.</span></span></summary>
        <value><span data-ttu-id="c99e3-412">Сочетание клавиш или клавиша доступа для объекта со специальными возможностями либо значение <see langword="null" />, если отсутствует сочетание клавиш, связанное с объектом.</span><span class="sxs-lookup"><span data-stu-id="c99e3-412">The shortcut key or access key for the accessible object, or <see langword="null" /> if there is no shortcut key associated with the object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-413">Ключ доступа, также известный как мнемонический символ — это подчеркнутый символ в тексте элемента меню, пункт меню, метки кнопки или другого элемента управления.</span><span class="sxs-lookup"><span data-stu-id="c99e3-413">An access key, also known as a mnemonic, is an underlined character in the text of a menu, menu item, label of a button, or some other control.</span></span> <span data-ttu-id="c99e3-414">Например, пользователь может отобразить меню, нажав клавишу ALT одновременно с указанной подчеркнутой клавишей, например ALT + F, чтобы открыть `File` меню.</span><span class="sxs-lookup"><span data-stu-id="c99e3-414">For example, a user can display a menu by pressing the ALT key while also pressing the indicated underlined key, such as ALT+F, to open the `File` menu.</span></span> <span data-ttu-id="c99e3-415">Чтобы использовать ключ доступа для пункта меню, меню, содержащее элемент, необходимо активировать.</span><span class="sxs-lookup"><span data-stu-id="c99e3-415">To use the access key of a menu item, the menu containing the item must be active.</span></span> <span data-ttu-id="c99e3-416">Элементы управления, такие как кнопки панели инструментов и элементы меню часто имеют сочетанием клавиш.</span><span class="sxs-lookup"><span data-stu-id="c99e3-416">Controls such as toolbar buttons and menu items often have an associated shortcut key.</span></span> <span data-ttu-id="c99e3-417">Пункт меню может иметь ключ доступа и сочетания клавиш, связанные с ней.</span><span class="sxs-lookup"><span data-stu-id="c99e3-417">A menu item can have both an access key and a shortcut key associated with it.</span></span> <span data-ttu-id="c99e3-418">Если значение <xref:System.Windows.Forms.AccessibleObject.KeyboardShortcut%2A> свойство — это символ, то это ключ доступа.</span><span class="sxs-lookup"><span data-stu-id="c99e3-418">If the value of the <xref:System.Windows.Forms.AccessibleObject.KeyboardShortcut%2A> property is a single character, you can assume it is an access key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="c99e3-419">Не удалось получить сочетание клавиш для элемента управления.</span><span class="sxs-lookup"><span data-stu-id="c99e3-419">The shortcut for the control cannot be retrieved.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c99e3-420">Все объекты, которые имеют сочетания клавиш или клавиша доступа должен поддерживать это свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-420">All objects that have a shortcut key or access key should support this property.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c99e3-421">Получает или задает имя объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-421">Gets or sets the object name.</span></span></summary>
        <value><span data-ttu-id="c99e3-422">Имя объекта или значение <see langword="null" />, если свойство не было задано.</span><span class="sxs-lookup"><span data-stu-id="c99e3-422">The object name, or <see langword="null" /> if the property has not been set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-423"><xref:System.Windows.Forms.AccessibleObject.Name%2A> Свойство содержит строку, используется клиентами для определения, поиска или объявления объекта для пользователя.</span><span class="sxs-lookup"><span data-stu-id="c99e3-423">The <xref:System.Windows.Forms.AccessibleObject.Name%2A> property is a string used by clients to identify, find, or announce an object for the user.</span></span> <span data-ttu-id="c99e3-424">Чтобы получить доступ к имя дочернего объекта, необходимо сначала вызвать <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> с индекс дочернего элемента, имя которого необходимо извлечь.</span><span class="sxs-lookup"><span data-stu-id="c99e3-424">To access the name of a child object, you must first call <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> with the index of the child whose name you are retrieving.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c99e3-425">В следующем примере показано создание диаграммы с поддержкой специальных возможностей управления, с помощью <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> классов для отображения доступных сведений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-425">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="c99e3-426">Элемент управления отображает две кривые, а также условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-426">The control plots two curves along with a legend.</span></span> <span data-ttu-id="c99e3-427">`ChartControlAccessibleObject` Класс, который является производным от `ControlAccessibleObject`, используется в <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> метод для предоставления пользовательских доступных сведений для элемента управления диаграммы.</span><span class="sxs-lookup"><span data-stu-id="c99e3-427">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="c99e3-428">Так как условные обозначения диаграммы фактически не являются <xref:System.Windows.Forms.Control> -управление на основе, а также отображаются в элементе управления диаграммы не имеет встроенных доступных данных.</span><span class="sxs-lookup"><span data-stu-id="c99e3-428">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="c99e3-429">По этой причине `ChartControlAccessibleObject` класса переопределения <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод для возврата `CurveLegendAccessibleObject` , представляющий доступных сведений для каждой части условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-429">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="c99e3-430">При специальными приложение использует этот элемент управления, элемент управления можно предоставить необходимые сведения доступны.</span><span class="sxs-lookup"><span data-stu-id="c99e3-430">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="c99e3-431">Этот фрагмент кода демонстрирует переопределение <xref:System.Windows.Forms.AccessibleObject.Name%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-431">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.AccessibleObject.Name%2A> property.</span></span> <span data-ttu-id="c99e3-432">См. в разделе <xref:System.Windows.Forms.AccessibleObject> пример полного кода.</span><span class="sxs-lookup"><span data-stu-id="c99e3-432">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="c99e3-433">Не удалось получить или задать имя элемента управления.</span><span class="sxs-lookup"><span data-stu-id="c99e3-433">The name of the control cannot be retrieved or set.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c99e3-434">Все объекты должны поддерживать это свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-434">All objects should support this property.</span></span> <span data-ttu-id="c99e3-435">Имя объекта должно быть наглядным, чтобы было понятно значение или цель объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-435">An object's name should be intuitive so that users understand the object's meaning or purpose.</span></span> <span data-ttu-id="c99e3-436">Кроме того, убедитесь, что <see langword="Name" /> свойство уникален относительно объектов того же уровня в родительском объекте.</span><span class="sxs-lookup"><span data-stu-id="c99e3-436">Also, ensure that the <see langword="Name" /> property is unique relative to any sibling objects in the parent.</span></span> <span data-ttu-id="c99e3-437">Перемещение по таблицам представляется особенно трудно проблемы для некоторых пользователей.</span><span class="sxs-lookup"><span data-stu-id="c99e3-437">Navigation within tables presents especially difficult problems for some users.</span></span> <span data-ttu-id="c99e3-438">Таким образом разработчикам серверов следует делать названия ячеек таблицы как можно более описательным.</span><span class="sxs-lookup"><span data-stu-id="c99e3-438">Therefore, server developers should make table cell names as descriptive as possible.</span></span> <span data-ttu-id="c99e3-439">Например можно создать имя ячейки, объединяя имена строк и столбцов, занимаемых им, например «A1».</span><span class="sxs-lookup"><span data-stu-id="c99e3-439">For example, you might create a cell name by combining the names of the row and column it occupies, such as "A1."</span></span> <span data-ttu-id="c99e3-440">Тем не менее обычно лучше использовать более описательные имена, такие как «Елена, февраль.»</span><span class="sxs-lookup"><span data-stu-id="c99e3-440">However, it is generally better to use more descriptive names, such as "Karin, February."</span></span> <span data-ttu-id="c99e3-441">Многие объекты, например значки, меню, флажки, раскрывающиеся списки и другие элементы управления, имеющих метки, отображаются для пользователей.</span><span class="sxs-lookup"><span data-stu-id="c99e3-441">Many objects, such as icons, menus, check boxes, combo boxes, and other controls, have labels that are displayed to users.</span></span> <span data-ttu-id="c99e3-442">Любую метку, отображаемое пользователям следует использовать для объекта <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-442">Any label displayed to users should be used for the object's <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> property.</span></span> <span data-ttu-id="c99e3-443">Дополнительные сведения см. в разделе <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-443">For more information, see the <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> Property.</span></span>  
  
<span data-ttu-id="c99e3-444">Если вы используете текста кнопки или меню для <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> свойства амперсанды (&amp;), пометить назначенные клавиши.</span><span class="sxs-lookup"><span data-stu-id="c99e3-444">If you are using menu or button text for the <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> property, strip out the ampersands (&amp;) that mark the keyboard access keys.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Navigate (System.Windows.Forms.AccessibleNavigation navdir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject Navigate(valuetype System.Windows.Forms.AccessibleNavigation navdir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Navigate (navdir As AccessibleNavigation) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ Navigate(System::Windows::Forms::AccessibleNavigation navdir);" />
      <MemberSignature Language="F#" Value="abstract member Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.Navigate navdir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navdir" Type="System.Windows.Forms.AccessibleNavigation" />
      </Parameters>
      <Docs>
        <param name="navdir"><span data-ttu-id="c99e3-445">Одно из значений <see cref="T:System.Windows.Forms.AccessibleNavigation" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-445">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation" /> values.</span></span></param>
        <summary><span data-ttu-id="c99e3-446">Переходит к другому доступному объекту.</span><span class="sxs-lookup"><span data-stu-id="c99e3-446">Navigates to another accessible object.</span></span></summary>
        <returns><span data-ttu-id="c99e3-447">Объект <see cref="T:System.Windows.Forms.AccessibleObject" />, который представляет одно из значений <see cref="T:System.Windows.Forms.AccessibleNavigation" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-447">An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents one of the <see cref="T:System.Windows.Forms.AccessibleNavigation" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-448">Навигация и Пространственные, так и логический, всегда ограничен элементы пользовательского интерфейса в контейнере.</span><span class="sxs-lookup"><span data-stu-id="c99e3-448">Navigation, both spatial and logical, is always restricted to the user interface elements within a container.</span></span> <span data-ttu-id="c99e3-449">С пространственная Навигация клиентов можно перейти только общего родителя с начальным объектом.</span><span class="sxs-lookup"><span data-stu-id="c99e3-449">With spatial navigation, clients can navigate only to a sibling of the starting object.</span></span> <span data-ttu-id="c99e3-450">В зависимости от флага перехода, использовании логического перехода клиенты могут перейти либо к дочернему или общего родителя с начальным объектом.</span><span class="sxs-lookup"><span data-stu-id="c99e3-450">Depending on the navigational flag used with logical navigation, clients can navigate to either a child or to a sibling of the starting object.</span></span> <span data-ttu-id="c99e3-451">Этот метод не изменяет выделение или фокус.</span><span class="sxs-lookup"><span data-stu-id="c99e3-451">This method does not change the selection or focus.</span></span> <span data-ttu-id="c99e3-452">Для изменения фокуса или выберите объект, используйте <xref:System.Windows.Forms.AccessibleObject.Select%2A>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-452">To change the focus or to select an object, use <xref:System.Windows.Forms.AccessibleObject.Select%2A>.</span></span> <span data-ttu-id="c99e3-453"><xref:System.Windows.Forms.AccessibleObject.Navigate%2A> Метод извлекает только элементы пользовательского интерфейса, которые имеют определенное расположение на экране.</span><span class="sxs-lookup"><span data-stu-id="c99e3-453">The <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> method retrieves only user interface elements that have a defined screen location.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c99e3-454">В следующем примере показано создание диаграммы с поддержкой специальных возможностей управления, с помощью <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> классов для отображения доступных сведений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-454">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="c99e3-455">Элемент управления отображает две кривые, а также условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-455">The control plots two curves along with a legend.</span></span> <span data-ttu-id="c99e3-456">`ChartControlAccessibleObject` Класс, который является производным от `ControlAccessibleObject`, используется в <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> метод для предоставления пользовательских доступных сведений для элемента управления диаграммы.</span><span class="sxs-lookup"><span data-stu-id="c99e3-456">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="c99e3-457">Так как условные обозначения диаграммы фактически не являются <xref:System.Windows.Forms.Control> -управление на основе, а также отображаются в элементе управления диаграммы не имеет встроенных доступных данных.</span><span class="sxs-lookup"><span data-stu-id="c99e3-457">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="c99e3-458">По этой причине `ChartControlAccessibleObject` класса переопределения <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод для возврата `CurveLegendAccessibleObject` , представляющий доступных сведений для каждой части условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-458">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="c99e3-459">При специальными приложение использует этот элемент управления, элемент управления можно предоставить необходимые сведения доступны.</span><span class="sxs-lookup"><span data-stu-id="c99e3-459">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="c99e3-460">Этот примере кода показано переопределение <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="c99e3-460">This code demonstrates shows overriding the <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> method.</span></span> <span data-ttu-id="c99e3-461">См. в разделе <xref:System.Windows.Forms.AccessibleObject> пример полного кода.</span><span class="sxs-lookup"><span data-stu-id="c99e3-461">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="c99e3-462">Не удается выполнить попытку перехода.</span><span class="sxs-lookup"><span data-stu-id="c99e3-462">The navigation attempt fails.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c99e3-463">Все визуальные объекты должны поддерживать этот метод.</span><span class="sxs-lookup"><span data-stu-id="c99e3-463">All visual objects must support this method.</span></span> <span data-ttu-id="c99e3-464">Если объект имеет состояние <see cref="F:System.Windows.Forms.AccessibleStates.Invisible" />, может произойти сбой навигации, чтобы это скрытый объект.</span><span class="sxs-lookup"><span data-stu-id="c99e3-464">If an object has the state <see cref="F:System.Windows.Forms.AccessibleStates.Invisible" />, navigation to this hidden object might fail.</span></span> <span data-ttu-id="c99e3-465">Некоторые элементы интерфейса, определенный системой, такие как меню, пункты меню и контекстные меню позволяют переходить к объектам, которые не видны.</span><span class="sxs-lookup"><span data-stu-id="c99e3-465">Some system-defined interface elements such as menus, menu items, and pop-up menus allow navigation to objects that are not visible.</span></span> <span data-ttu-id="c99e3-466">Однако другие системные элементы интерфейса не поддерживают такую возможность.</span><span class="sxs-lookup"><span data-stu-id="c99e3-466">However, other system-defined user interface elements do not support this.</span></span> <span data-ttu-id="c99e3-467">Если возможно серверы должны поддерживать переход к объектам, которые не видны, но эта поддержка не является обязательным и клиенты не стоит ожидать его.</span><span class="sxs-lookup"><span data-stu-id="c99e3-467">If possible, servers should support navigation to objects that are not visible, but this support is not required and clients should not expect it.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ Parent { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.AccessibleObject.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c99e3-468">Возвращает родительский объект доступного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-468">Gets the parent of an accessible object.</span></span></summary>
        <value><span data-ttu-id="c99e3-469">Объект <see cref="T:System.Windows.Forms.AccessibleObject" />, который представляет родительский элемент доступного объекта или <see langword="null" />, если родительский объект отсутствует.</span><span class="sxs-lookup"><span data-stu-id="c99e3-469">An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the parent of an accessible object, or <see langword="null" /> if there is no parent object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c99e3-470">В следующем примере показано создание диаграммы с поддержкой специальных возможностей управления, с помощью <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> классов для отображения доступных сведений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-470">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="c99e3-471">Элемент управления отображает две кривые, а также условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-471">The control plots two curves along with a legend.</span></span> <span data-ttu-id="c99e3-472">`ChartControlAccessibleObject` Класс, который является производным от `ControlAccessibleObject`, используется в <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> метод для предоставления пользовательских доступных сведений для элемента управления диаграммы.</span><span class="sxs-lookup"><span data-stu-id="c99e3-472">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="c99e3-473">Так как условные обозначения диаграммы фактически не являются <xref:System.Windows.Forms.Control> -управление на основе, а также отображаются в элементе управления диаграммы не имеет встроенных доступных данных.</span><span class="sxs-lookup"><span data-stu-id="c99e3-473">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="c99e3-474">По этой причине `ChartControlAccessibleObject` класса переопределения <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод для возврата `CurveLegendAccessibleObject` , представляющий доступных сведений для каждой части условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-474">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="c99e3-475">При специальными приложение использует этот элемент управления, элемент управления можно предоставить необходимые сведения доступны.</span><span class="sxs-lookup"><span data-stu-id="c99e3-475">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="c99e3-476">Этот фрагмент кода демонстрирует переопределение <xref:System.Windows.Forms.AccessibleObject.Parent%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-476">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.AccessibleObject.Parent%2A> property.</span></span> <span data-ttu-id="c99e3-477">См. в разделе <xref:System.Windows.Forms.AccessibleObject> пример полного кода.</span><span class="sxs-lookup"><span data-stu-id="c99e3-477">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c99e3-478">Все объекты должны поддерживать это свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-478">All objects should support this property.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="RaiseAutomationNotification">
      <MemberSignature Language="C#" Value="public bool RaiseAutomationNotification (System.Windows.Forms.Automation.AutomationNotificationKind notificationKind, System.Windows.Forms.Automation.AutomationNotificationProcessing notificationProcessing, string notificationText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RaiseAutomationNotification(valuetype System.Windows.Forms.Automation.AutomationNotificationKind notificationKind, valuetype System.Windows.Forms.Automation.AutomationNotificationProcessing notificationProcessing, string notificationText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.RaiseAutomationNotification(System.Windows.Forms.Automation.AutomationNotificationKind,System.Windows.Forms.Automation.AutomationNotificationProcessing,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RaiseAutomationNotification (notificationKind As AutomationNotificationKind, notificationProcessing As AutomationNotificationProcessing, notificationText As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RaiseAutomationNotification(System::Windows::Forms::Automation::AutomationNotificationKind notificationKind, System::Windows::Forms::Automation::AutomationNotificationProcessing notificationProcessing, System::String ^ notificationText);" />
      <MemberSignature Language="F#" Value="member this.RaiseAutomationNotification : System.Windows.Forms.Automation.AutomationNotificationKind * System.Windows.Forms.Automation.AutomationNotificationProcessing * string -&gt; bool" Usage="accessibleObject.RaiseAutomationNotification (notificationKind, notificationProcessing, notificationText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notificationKind" Type="System.Windows.Forms.Automation.AutomationNotificationKind" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.8" />
        <Parameter Name="notificationProcessing" Type="System.Windows.Forms.Automation.AutomationNotificationProcessing" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.8" />
        <Parameter Name="notificationText" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="notificationKind"><span data-ttu-id="c99e3-479">Тип уведомления.</span><span class="sxs-lookup"><span data-stu-id="c99e3-479">The type of notification.</span></span></param>
        <param name="notificationProcessing"><span data-ttu-id="c99e3-480">Указывает способ обработки уведомлений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-480">An indicator of how to process notifications.</span></span></param>
        <param name="notificationText"><span data-ttu-id="c99e3-481">Текст уведомления.</span><span class="sxs-lookup"><span data-stu-id="c99e3-481">The text of the notification.</span></span></param>
        <summary><span data-ttu-id="c99e3-482">Вызывает событие уведомления автоматизации пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-482">Raises the UI automation notification event.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="c99e3-483">, если операция прошла успешно; значение <see langword="false" />, если базовая инфраструктура Windows недоступна или произошел сбой операции.</span><span class="sxs-lookup"><span data-stu-id="c99e3-483">if the operation succeeds; <see langword="false" /> if the underlying Windows infrastructure is not available or the operation failed.</span></span> <span data-ttu-id="c99e3-484">Для получения подробных сведений вызовите <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-484">Call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" /> for details.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="c99e3-485">Это событие доступна, начиная с Windows 10 версии 1709.</span><span class="sxs-lookup"><span data-stu-id="c99e3-485">This event is available starting with Windows 10, version 1709.</span></span>
  
       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseLiveRegionChanged">
      <MemberSignature Language="C#" Value="public virtual bool RaiseLiveRegionChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RaiseLiveRegionChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.RaiseLiveRegionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RaiseLiveRegionChanged () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RaiseLiveRegionChanged();" />
      <MemberSignature Language="F#" Value="abstract member RaiseLiveRegionChanged : unit -&gt; bool&#xA;override this.RaiseLiveRegionChanged : unit -&gt; bool" Usage="accessibleObject.RaiseLiveRegionChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c99e3-486">Вызывает событие автоматизации пользовательского интерфейса LiveRegionChanged.</span><span class="sxs-lookup"><span data-stu-id="c99e3-486">Raises the LiveRegionChanged UI automation event.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="c99e3-487">, если операция прошла успешно; в противном случае — значение <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-487">if the operation succeeds; <see langword="False" /> otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="c99e3-488">Этот метод должен переопределяться в производных классах, поддерживающих функцию динамической области автоматизации пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-488">This method must be overridden in derived classes that support the UI automation live region feature.</span></span>
  
     ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c99e3-489">Динамические области объекта специальных возможностей, не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="c99e3-489">Accessibility object live regions are not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleRole Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleRole Role" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Role" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Role As AccessibleRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleRole Role { System::Windows::Forms::AccessibleRole get(); };" />
      <MemberSignature Language="F#" Value="member this.Role : System.Windows.Forms.AccessibleRole" Usage="System.Windows.Forms.AccessibleObject.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c99e3-490">Возвращает роль данного доступного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-490">Gets the role of this accessible object.</span></span></summary>
        <value><span data-ttu-id="c99e3-491">Одно из значений перечисления <see cref="T:System.Windows.Forms.AccessibleRole" /> или член <see cref="F:System.Windows.Forms.AccessibleRole.None" />, если роль не была указана.</span><span class="sxs-lookup"><span data-stu-id="c99e3-491">One of the <see cref="T:System.Windows.Forms.AccessibleRole" /> values, or <see cref="F:System.Windows.Forms.AccessibleRole.None" /> if no role has been specified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-492">Роль объекта помогает описать функцию объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-492">The role of the object helps describe the function of the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c99e3-493">В следующем примере показано создание диаграммы с поддержкой специальных возможностей управления, с помощью <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> классов для отображения доступных сведений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-493">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="c99e3-494">Элемент управления отображает две кривые, а также условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-494">The control plots two curves along with a legend.</span></span> <span data-ttu-id="c99e3-495">`ChartControlAccessibleObject` Класс, который является производным от `ControlAccessibleObject`, используется в <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> метод для предоставления пользовательских доступных сведений для элемента управления диаграммы.</span><span class="sxs-lookup"><span data-stu-id="c99e3-495">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="c99e3-496">Так как условные обозначения диаграммы фактически не являются <xref:System.Windows.Forms.Control> -управление на основе, а также отображаются в элементе управления диаграммы не имеет встроенных доступных данных.</span><span class="sxs-lookup"><span data-stu-id="c99e3-496">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="c99e3-497">По этой причине `ChartControlAccessibleObject` класса переопределения <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод для возврата `CurveLegendAccessibleObject` , представляющий доступных сведений для каждой части условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-497">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="c99e3-498">При специальными приложение использует этот элемент управления, элемент управления можно предоставить необходимые сведения доступны.</span><span class="sxs-lookup"><span data-stu-id="c99e3-498">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="c99e3-499">Этот фрагмент кода демонстрирует переопределение <xref:System.Windows.Forms.AccessibleObject.Role%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-499">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.AccessibleObject.Role%2A> property.</span></span> <span data-ttu-id="c99e3-500">См. в разделе <xref:System.Windows.Forms.AccessibleObject> пример полного кода.</span><span class="sxs-lookup"><span data-stu-id="c99e3-500">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c99e3-501">Все объекты должны поддерживать это свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-501">All objects should support this property.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="RuntimeIDFirstItem">
      <MemberSignature Language="C#" Value="protected const int RuntimeIDFirstItem = 42;" />
      <MemberSignature Language="ILAsm" Value=".field family static literal int32 RuntimeIDFirstItem = (42)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.AccessibleObject.RuntimeIDFirstItem" />
      <MemberSignature Language="VB.NET" Value="Protected Const RuntimeIDFirstItem As Integer  = 42" />
      <MemberSignature Language="C++ CLI" Value="protected: int RuntimeIDFirstItem = 42;" />
      <MemberSignature Language="F#" Value="val mutable RuntimeIDFirstItem : int" Usage="System.Windows.Forms.AccessibleObject.RuntimeIDFirstItem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>42</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Windows.Forms.AccessibleSelection flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(valuetype System.Windows.Forms.AccessibleSelection flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (flags As AccessibleSelection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Windows::Forms::AccessibleSelection flags);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Windows.Forms.AccessibleSelection -&gt; unit&#xA;override this.Select : System.Windows.Forms.AccessibleSelection -&gt; unit" Usage="accessibleObject.Select flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Windows.Forms.AccessibleSelection" />
      </Parameters>
      <Docs>
        <param name="flags"><span data-ttu-id="c99e3-502">Одно из значений <see cref="T:System.Windows.Forms.AccessibleSelection" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-502">One of the <see cref="T:System.Windows.Forms.AccessibleSelection" /> values.</span></span></param>
        <summary><span data-ttu-id="c99e3-503">Изменяет выделение или перемещает фокус ввода объекта со специальными возможностями.</span><span class="sxs-lookup"><span data-stu-id="c99e3-503">Modifies the selection or moves the keyboard focus of the accessible object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-504">Приложения могут использовать этот метод для выполнения сложных операций выделения.</span><span class="sxs-lookup"><span data-stu-id="c99e3-504">Applications can use this method to perform complex selection operations.</span></span>  
  
 <span data-ttu-id="c99e3-505">Далее показано, какие <xref:System.Windows.Forms.AccessibleSelection> значения следует задать при вызове <xref:System.Windows.Forms.AccessibleObject.Select%2A> для выполнения сложных операций выделения.</span><span class="sxs-lookup"><span data-stu-id="c99e3-505">The following describes which <xref:System.Windows.Forms.AccessibleSelection> values to specify when calling <xref:System.Windows.Forms.AccessibleObject.Select%2A> to perform complex selection operations.</span></span>  
  
|<span data-ttu-id="c99e3-506">Операция</span><span class="sxs-lookup"><span data-stu-id="c99e3-506">Operation</span></span>|<span data-ttu-id="c99e3-507">Комбинация флагов</span><span class="sxs-lookup"><span data-stu-id="c99e3-507">Flag Combination</span></span>|  
|---------------|----------------------|  
|<span data-ttu-id="c99e3-508">Для имитации нажатия</span><span class="sxs-lookup"><span data-stu-id="c99e3-508">To simulate a click</span></span>|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> **Note:**  This combination will not select the desired control if called from within your own ap<span data-ttu-id="c99e3-509">**Примечание.**  Это сочетание не выберет необходимый элемент управления, при вызове из в вашем приложении.</span><span class="sxs-lookup"><span data-stu-id="c99e3-509">**Note:**  This combination will not select the desired control if called from within your own application.</span></span><span data-ttu-id="c99e3-510">Он будет иметь нужный эффект, тем не менее, если вызывается из внешнего приложения.</span><span class="sxs-lookup"><span data-stu-id="c99e3-510">It will have the desired effect, however, if called from an external application.</span></span>|  
|<span data-ttu-id="c99e3-511">Чтобы выбрать целевой элемент, имитируя CTRL + щелчок</span><span class="sxs-lookup"><span data-stu-id="c99e3-511">To select a target item by simulating CTRL + click</span></span>|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.AddSelection?displayProperty=nameWithType>|  
|<span data-ttu-id="c99e3-512">Чтобы отменить выделение целевого элемента, имитируя CTRL + щелчок</span><span class="sxs-lookup"><span data-stu-id="c99e3-512">To cancel selection of a target item by simulating CTRL + click</span></span>|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType>|  
|<span data-ttu-id="c99e3-513">Чтобы имитировать SHIFT + щелчок</span><span class="sxs-lookup"><span data-stu-id="c99e3-513">To simulate SHIFT + click</span></span>|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType>|  
|<span data-ttu-id="c99e3-514">Чтобы выбрать диапазон объектов и поместить фокус на последний объект</span><span class="sxs-lookup"><span data-stu-id="c99e3-514">To select a range of objects and put focus on the last object</span></span>|<span data-ttu-id="c99e3-515">Укажите <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> для начального объекта, чтобы задать точку привязки выделения.</span><span class="sxs-lookup"><span data-stu-id="c99e3-515">Specify <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> on the starting object to set the selection anchor.</span></span> <span data-ttu-id="c99e3-516">Затем вызовите <xref:System.Windows.Forms.AccessibleObject.Select%2A> еще раз и укажите <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType>`OR`<xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType> на последний объект.</span><span class="sxs-lookup"><span data-stu-id="c99e3-516">Then call <xref:System.Windows.Forms.AccessibleObject.Select%2A> again and specify <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType>`OR`<xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType> on the last object.</span></span>|  
|<span data-ttu-id="c99e3-517">Чтобы отменить выделение всех объектов</span><span class="sxs-lookup"><span data-stu-id="c99e3-517">To deselect all objects</span></span>|<span data-ttu-id="c99e3-518">Укажите <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> для любого объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-518">Specify <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> on any object.</span></span> <span data-ttu-id="c99e3-519">Этот флаг отменяет выбор всех выбранных объектов, кроме выбранной.</span><span class="sxs-lookup"><span data-stu-id="c99e3-519">This flag deselects all selected objects except the one just selected.</span></span> <span data-ttu-id="c99e3-520">Затем вызовите <xref:System.Windows.Forms.AccessibleObject.Select%2A> еще раз и укажите <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType> того же объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-520">Then call <xref:System.Windows.Forms.AccessibleObject.Select%2A> again and specify <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType> on the same object.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c99e3-521">В следующем примере показано создание диаграммы с поддержкой специальных возможностей управления, с помощью <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> классов для отображения доступных сведений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-521">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="c99e3-522">Элемент управления отображает две кривые, а также условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-522">The control plots two curves along with a legend.</span></span> <span data-ttu-id="c99e3-523">`ChartControlAccessibleObject` Класс, который является производным от `ControlAccessibleObject`, используется в <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> метод для предоставления пользовательских доступных сведений для элемента управления диаграммы.</span><span class="sxs-lookup"><span data-stu-id="c99e3-523">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="c99e3-524">Так как условные обозначения диаграммы фактически не являются <xref:System.Windows.Forms.Control> -управление на основе, а также отображаются в элементе управления диаграммы не имеет встроенных доступных данных.</span><span class="sxs-lookup"><span data-stu-id="c99e3-524">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="c99e3-525">По этой причине `ChartControlAccessibleObject` класса переопределения <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод для возврата `CurveLegendAccessibleObject` , представляющий доступных сведений для каждой части условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-525">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="c99e3-526">При специальными приложение использует этот элемент управления, элемент управления можно предоставить необходимые сведения доступны.</span><span class="sxs-lookup"><span data-stu-id="c99e3-526">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="c99e3-527">Этот примере кода показано переопределение <xref:System.Windows.Forms.AccessibleObject.Select%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="c99e3-527">This code demonstrates shows overriding the <xref:System.Windows.Forms.AccessibleObject.Select%2A> method.</span></span> <span data-ttu-id="c99e3-528">См. в разделе <xref:System.Windows.Forms.AccessibleObject> пример полного кода.</span><span class="sxs-lookup"><span data-stu-id="c99e3-528">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="c99e3-529">Не удалось выполнить выделение.</span><span class="sxs-lookup"><span data-stu-id="c99e3-529">The selection cannot be performed.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c99e3-530">Все объекты, которые могут быть выбраны или получать фокус клавиатуры должен поддерживать этот метод.</span><span class="sxs-lookup"><span data-stu-id="c99e3-530">All objects that can be selected or receive the keyboard focus must support this method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.State" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property State As AccessibleStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleStates State { System::Windows::Forms::AccessibleStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.AccessibleStates" Usage="System.Windows.Forms.AccessibleObject.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c99e3-531">Получает состояние данного доступного объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-531">Gets the state of this accessible object.</span></span></summary>
        <value><span data-ttu-id="c99e3-532">Одно из значений <see cref="T:System.Windows.Forms.AccessibleStates" /> или значение <see cref="F:System.Windows.Forms.AccessibleStates.None" />, если состояние не было задано.</span><span class="sxs-lookup"><span data-stu-id="c99e3-532">One of the <see cref="T:System.Windows.Forms.AccessibleStates" /> values, or <see cref="F:System.Windows.Forms.AccessibleStates.None" />, if no state has been set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c99e3-533">В следующем примере показано создание диаграммы с поддержкой специальных возможностей управления, с помощью <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> классов для отображения доступных сведений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-533">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="c99e3-534">Элемент управления отображает две кривые, а также условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-534">The control plots two curves along with a legend.</span></span> <span data-ttu-id="c99e3-535">`ChartControlAccessibleObject` Класс, который является производным от `ControlAccessibleObject`, используется в <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> метод для предоставления пользовательских доступных сведений для элемента управления диаграммы.</span><span class="sxs-lookup"><span data-stu-id="c99e3-535">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="c99e3-536">Так как условные обозначения диаграммы фактически не являются <xref:System.Windows.Forms.Control> -управление на основе, а также отображаются в элементе управления диаграммы не имеет встроенных доступных данных.</span><span class="sxs-lookup"><span data-stu-id="c99e3-536">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="c99e3-537">По этой причине `ChartControlAccessibleObject` класса переопределения <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод для возврата `CurveLegendAccessibleObject` , представляющий доступных сведений для каждой части условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="c99e3-537">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="c99e3-538">При специальными приложение использует этот элемент управления, элемент управления можно предоставить необходимые сведения доступны.</span><span class="sxs-lookup"><span data-stu-id="c99e3-538">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="c99e3-539">Этот фрагмент кода демонстрирует переопределение <xref:System.Windows.Forms.AccessibleObject.State%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-539">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.AccessibleObject.State%2A> property.</span></span> <span data-ttu-id="c99e3-540">См. в разделе <xref:System.Windows.Forms.AccessibleObject> пример полного кода.</span><span class="sxs-lookup"><span data-stu-id="c99e3-540">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c99e3-541">Все объекты должны поддерживать это свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-541">All objects should support this property.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetField">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo IReflect.GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo System.Reflection.IReflect.GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo Implements IReflect.GetField" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::FieldInfo ^ System.Reflection.IReflect.GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetField;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c99e3-542">Имя искомого поля.</span><span class="sxs-lookup"><span data-stu-id="c99e3-542">The name of the field to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="c99e3-543">Атрибуты привязки, используемые для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="c99e3-543">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="c99e3-544">Получает объект <see cref="T:System.Reflection.FieldInfo" />, соответствующий заданному полю и флагу привязки.</span><span class="sxs-lookup"><span data-stu-id="c99e3-544">Gets the <see cref="T:System.Reflection.FieldInfo" /> object corresponding to the specified field and binding flag.</span></span> <span data-ttu-id="c99e3-545">Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-545">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />.</span></span></summary>
        <returns><span data-ttu-id="c99e3-546">Объект <see cref="T:System.Reflection.FieldInfo" />, содержащий данные поля для именованного объекта, который удовлетворяет ограничениям поиска, задаваемым параметром <paramref name="bindingAttr" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-546">A <see cref="T:System.Reflection.FieldInfo" /> object containing the field information for the named object that meets the search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-547">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-547">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-548">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-548">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="c99e3-549">В объекте реализовано несколько полей с одним именем.</span><span class="sxs-lookup"><span data-stu-id="c99e3-549">The object implements multiple fields with the same name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetFields">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo[] IReflect.GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo[] System.Reflection.IReflect.GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetFields (bindingAttr As BindingFlags) As FieldInfo() Implements IReflect.GetFields" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ System.Reflection.IReflect.GetFields(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetFields;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="c99e3-550">Атрибуты привязки, используемые для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="c99e3-550">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="c99e3-551">Получает массив объектов <see cref="T:System.Reflection.FieldInfo" />, соответствующих всем полям текущего класса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-551">Gets an array of <see cref="T:System.Reflection.FieldInfo" /> objects corresponding to all fields of the current class.</span></span> <span data-ttu-id="c99e3-552">Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-552">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />.</span></span></summary>
        <returns><span data-ttu-id="c99e3-553">Массив объектов <see cref="T:System.Reflection.FieldInfo" />, содержащих все данные полей этого объекта отражения, который удовлетворяет ограничениям поиска, задаваемым параметром <paramref name="bindingAttr" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-553">An array of <see cref="T:System.Reflection.FieldInfo" /> objects containing all the field information for this reflection object that meets the search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-554">Каждое поле должно иметь уникальное имя.</span><span class="sxs-lookup"><span data-stu-id="c99e3-554">Each field must have a unique name.</span></span> <span data-ttu-id="c99e3-555"><xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> Флаг указывает, что закрытые поля включаются в поиск.</span><span class="sxs-lookup"><span data-stu-id="c99e3-555">The <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> flag specifies that nonpublic fields are included in the search.</span></span> <span data-ttu-id="c99e3-556"><xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> Флаг указывает, что открытые поля включаются в поиск.</span><span class="sxs-lookup"><span data-stu-id="c99e3-556">The <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> flag specifies that public fields are included in the search.</span></span>  
  
 <span data-ttu-id="c99e3-557">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-557">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-558">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-558">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMember">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMember" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c99e3-559">Имя искомого элемента.</span><span class="sxs-lookup"><span data-stu-id="c99e3-559">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="c99e3-560">Атрибуты привязки, используемые для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="c99e3-560">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="c99e3-561">Получает массив объектов <see cref="T:System.Reflection.MemberInfo" />, соответствующих всем открытым элементам или всем элементам, которые удовлетворяют заданному имени.</span><span class="sxs-lookup"><span data-stu-id="c99e3-561">Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects corresponding to all public members or to all members that match a specified name.</span></span> <span data-ttu-id="c99e3-562">Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-562">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />.</span></span></summary>
        <returns><span data-ttu-id="c99e3-563">Массив объектов <see cref="T:System.Reflection.MemberInfo" />, соответствующих параметру имени.</span><span class="sxs-lookup"><span data-stu-id="c99e3-563">An array of <see cref="T:System.Reflection.MemberInfo" /> objects matching the name parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-564">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-564">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-565">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-565">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMembers">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMembers (bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMembers" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMembers(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMembers;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="c99e3-566">Атрибуты привязки, используемые для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="c99e3-566">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="c99e3-567">Получает массив объектов <see cref="T:System.Reflection.MemberInfo" />, соответствующих всем открытым элементам или всем элементам текущего класса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-567">Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects corresponding either to all public members or to all members of the current class.</span></span> <span data-ttu-id="c99e3-568">Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-568">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />.</span></span></summary>
        <returns><span data-ttu-id="c99e3-569">Массив объектов <see cref="T:System.Reflection.MemberInfo" />, содержащих все данные элементов для этого объекта отражения.</span><span class="sxs-lookup"><span data-stu-id="c99e3-569">An array of <see cref="T:System.Reflection.MemberInfo" /> objects containing all the member information for this reflection object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-570">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-570">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-571">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-571">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo Implements IReflect.GetMethod" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c99e3-572">Имя искомого элемента.</span><span class="sxs-lookup"><span data-stu-id="c99e3-572">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="c99e3-573">Атрибуты привязки, используемые для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="c99e3-573">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="c99e3-574">Получает объект <see cref="T:System.Reflection.MethodInfo" />, соответствующий заданному методу при заданных ограничениях поиска.</span><span class="sxs-lookup"><span data-stu-id="c99e3-574">Gets a <see cref="T:System.Reflection.MethodInfo" /> object corresponding to a specified method under specified search constraints.</span></span> <span data-ttu-id="c99e3-575">Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-575">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />.</span></span></summary>
        <returns><span data-ttu-id="c99e3-576">Объект <see cref="T:System.Reflection.MethodInfo" />, содержащий данные метода, отвечающие имени метода и ограничениям поиска, задаваемым параметром <paramref name="bindingAttr" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-576">A <see cref="T:System.Reflection.MethodInfo" /> object containing the method information, with the match being based on the method name and search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-577">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-577">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-578">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-578">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="c99e3-579">В объекте реализовано несколько методов с одним именем.</span><span class="sxs-lookup"><span data-stu-id="c99e3-579">The object implements multiple methods with the same name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c99e3-580">Имя искомого элемента.</span><span class="sxs-lookup"><span data-stu-id="c99e3-580">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="c99e3-581">Атрибуты привязки, используемые для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="c99e3-581">The binding attributes used to control the search.</span></span></param>
        <param name="binder"><span data-ttu-id="c99e3-582">Объект, реализующий <see cref="T:System.Reflection.Binder" />, содержащий свойства, связанные с этим методом.</span><span class="sxs-lookup"><span data-stu-id="c99e3-582">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span></span></param>
        <param name="types"><span data-ttu-id="c99e3-583">Массив, используемый для выбора среди перегруженных версий метода.</span><span class="sxs-lookup"><span data-stu-id="c99e3-583">An array used to choose among overloaded methods.</span></span></param>
        <param name="modifiers"><span data-ttu-id="c99e3-584">Массив модификаторов параметров, используемый для работы привязки с подписями параметров, в которых были изменены типы.</span><span class="sxs-lookup"><span data-stu-id="c99e3-584">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="c99e3-585">Получает объект <see cref="T:System.Reflection.MethodInfo" />, соответствующий заданному методу, используя для выбора среди перегруженных версий метода массив Type.</span><span class="sxs-lookup"><span data-stu-id="c99e3-585">Gets a <see cref="T:System.Reflection.MethodInfo" /> object corresponding to a specified method, using a Type array to choose from among overloaded methods.</span></span> <span data-ttu-id="c99e3-586">Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-586">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />.</span></span></summary>
        <returns><span data-ttu-id="c99e3-587">Запрошенный метод, который соответствует всем заданным параметрам.</span><span class="sxs-lookup"><span data-stu-id="c99e3-587">The requested method that matches all the specified parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-588">Возвращаемое значение является совпадение в зависимости от имени метода, <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> перечисления, тип преобразования типов, заданные `binder` , перегрузки и <xref:System.Reflection.ParameterInfo?displayProperty=nameWithType> , описывающий сигнатуру метода.</span><span class="sxs-lookup"><span data-stu-id="c99e3-588">The return value is a match based on the method name, the <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> enumeration, the kind of type conversion specified by the `binder` parameter, the overload, and the <xref:System.Reflection.ParameterInfo?displayProperty=nameWithType> that describes the signature of the method.</span></span>  
  
 <span data-ttu-id="c99e3-589">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-589">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-590">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-590">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="c99e3-591">В объекте реализовано несколько методов с одним именем.</span><span class="sxs-lookup"><span data-stu-id="c99e3-591">The object implements multiple methods with the same name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethods">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo[] IReflect.GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo[] System.Reflection.IReflect.GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethods (bindingAttr As BindingFlags) As MethodInfo() Implements IReflect.GetMethods" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ System.Reflection.IReflect.GetMethods(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethods;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="c99e3-592">Атрибуты привязки, используемые для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="c99e3-592">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="c99e3-593">Получает массив объектов <see cref="T:System.Reflection.MethodInfo" /> со всеми открытыми методами или всеми методами текущего класса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-593">Gets an array of <see cref="T:System.Reflection.MethodInfo" /> objects with all public methods or all methods of the current class.</span></span> <span data-ttu-id="c99e3-594">Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-594">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />.</span></span></summary>
        <returns><span data-ttu-id="c99e3-595">Массив объектов <see cref="T:System.Reflection.MethodInfo" />, содержащих все методы, определенные для этого объекта отражения, который удовлетворяет ограничениям поиска, задаваемым параметром <see langword="bindingAttr" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-595">An array of <see cref="T:System.Reflection.MethodInfo" /> objects containing all the methods defined for this reflection object that meet the search constraints specified in <see langword="bindingAttr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-596">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-596">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-597">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-597">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperties">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo[] IReflect.GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] System.Reflection.IReflect.GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo() Implements IReflect.GetProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ System.Reflection.IReflect.GetProperties(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperties;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="c99e3-598">Атрибут привязки, используемый для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="c99e3-598">The binding attribute used to control the search.</span></span></param>
        <summary><span data-ttu-id="c99e3-599">Получает массив объектов <see cref="T:System.Reflection.PropertyInfo" />, соответствующих всем открытым свойствам или всем свойствам текущего класса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-599">Gets an array of <see cref="T:System.Reflection.PropertyInfo" /> objects corresponding to all public properties or to all properties of the current class.</span></span> <span data-ttu-id="c99e3-600">Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-600">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />.</span></span></summary>
        <returns><span data-ttu-id="c99e3-601">Массив объектов <see cref="T:System.Reflection.PropertyInfo" /> для всех свойств, определенных в объекте отражения.</span><span class="sxs-lookup"><span data-stu-id="c99e3-601">An array of <see cref="T:System.Reflection.PropertyInfo" /> objects for all the properties defined on the reflection object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-602">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-602">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-603">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-603">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo Implements IReflect.GetProperty" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c99e3-604">Имя искомого свойства.</span><span class="sxs-lookup"><span data-stu-id="c99e3-604">The name of the property to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="c99e3-605">Атрибуты привязки, используемые для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="c99e3-605">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="c99e3-606">Получает объект <see cref="T:System.Reflection.PropertyInfo" />, соответствующий заданному свойству при заданных ограничениях поиска.</span><span class="sxs-lookup"><span data-stu-id="c99e3-606">Gets a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property under specified search constraints.</span></span> <span data-ttu-id="c99e3-607">Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-607">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />.</span></span></summary>
        <returns><span data-ttu-id="c99e3-608">Объект <see cref="T:System.Reflection.PropertyInfo" /> для найденного свойства, которое удовлетворяет ограничениям поиска, заданным в параметре <paramref name="bindingAttr" />, или значение <see langword="null" />, если свойство не было найдено.</span><span class="sxs-lookup"><span data-stu-id="c99e3-608">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property that meets the search constraints specified in <paramref name="bindingAttr" />, or <see langword="null" /> if the property was not located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-609">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-609">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-610">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-610">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="c99e3-611">В объекте реализовано несколько методов с одним именем.</span><span class="sxs-lookup"><span data-stu-id="c99e3-611">The object implements multiple methods with the same name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c99e3-612">Имя искомого элемента.</span><span class="sxs-lookup"><span data-stu-id="c99e3-612">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="c99e3-613">Атрибуты привязки, используемые для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="c99e3-613">The binding attributes used to control the search.</span></span></param>
        <param name="binder"><span data-ttu-id="c99e3-614">Объект, который реализует класс Binder, содержащий свойства, связанные с этим методом.</span><span class="sxs-lookup"><span data-stu-id="c99e3-614">An object that implements Binder, containing properties related to this method.</span></span></param>
        <param name="returnType"><span data-ttu-id="c99e3-615">Массив, используемый для выбора среди перегруженных версий метода.</span><span class="sxs-lookup"><span data-stu-id="c99e3-615">An array used to choose among overloaded methods.</span></span></param>
        <param name="types"><span data-ttu-id="c99e3-616">Массив модификаторов параметров, используемый для работы привязки с подписями параметров, в которых были изменены типы.</span><span class="sxs-lookup"><span data-stu-id="c99e3-616">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</span></span></param>
        <param name="modifiers"><span data-ttu-id="c99e3-617">Массив, используемый для выбора модификаторов параметров.</span><span class="sxs-lookup"><span data-stu-id="c99e3-617">An array used to choose the parameter modifiers.</span></span></param>
        <summary><span data-ttu-id="c99e3-618">Получает объект <see cref="T:System.Reflection.PropertyInfo" />, соответствующий заданному свойству при заданных ограничениях поиска.</span><span class="sxs-lookup"><span data-stu-id="c99e3-618">Gets a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property with specified search constraints.</span></span> <span data-ttu-id="c99e3-619">Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-619">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />.</span></span></summary>
        <returns><span data-ttu-id="c99e3-620">Объект <see cref="T:System.Reflection.PropertyInfo" /> для найденного свойства, если свойство с заданным именем было найдено в данном объекте отражения, или значение <see langword="null" />, если свойство не было найдено.</span><span class="sxs-lookup"><span data-stu-id="c99e3-620">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property, if a property with the specified name was located in this reflection object, or <see langword="null" /> if the property was not located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-621">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-621">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-622">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-622">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.InvokeMember">
      <MemberSignature Language="C#" Value="object IReflect.InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Reflection.IReflect.InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Reflection.IReflect.InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters) = System::Reflection::IReflect::InvokeMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c99e3-623">Имя искомого элемента.</span><span class="sxs-lookup"><span data-stu-id="c99e3-623">The name of the member to find.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="c99e3-624">Один из атрибутов вызова <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-624">One of the <see cref="T:System.Reflection.BindingFlags" /> invocation attributes.</span></span></param>
        <param name="binder"><span data-ttu-id="c99e3-625">Один из битовых флагов <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-625">One of the <see cref="T:System.Reflection.BindingFlags" /> bit flags.</span></span> <span data-ttu-id="c99e3-626">Реализует класс Binder, содержащий свойства, связанные с этим методом.</span><span class="sxs-lookup"><span data-stu-id="c99e3-626">Implements Binder, containing properties related to this method.</span></span></param>
        <param name="target"><span data-ttu-id="c99e3-627">Объект, для которого следует вызвать указанный член.</span><span class="sxs-lookup"><span data-stu-id="c99e3-627">The object on which to invoke the specified member.</span></span> <span data-ttu-id="c99e3-628">Для статических элементов этот параметр не обрабатывается.</span><span class="sxs-lookup"><span data-stu-id="c99e3-628">This parameter is ignored for static members.</span></span></param>
        <param name="args"><span data-ttu-id="c99e3-629">Массив объектов, содержащих число, порядок и тип параметров вызываемого элемента.</span><span class="sxs-lookup"><span data-stu-id="c99e3-629">An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</span></span> <span data-ttu-id="c99e3-630">Если параметров нет, этот массив пуст.</span><span class="sxs-lookup"><span data-stu-id="c99e3-630">This is an empty array if there are no parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="c99e3-631">Массив объектов <see cref="T:System.Reflection.ParameterModifier" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-631">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects.</span></span></param>
        <param name="culture"><span data-ttu-id="c99e3-632">Экземпляр объекта <see cref="T:System.Globalization.CultureInfo" />, используемого для управления приведением типов.</span><span class="sxs-lookup"><span data-stu-id="c99e3-632">An instance of <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span></span></param>
        <param name="namedParameters"><span data-ttu-id="c99e3-633">Строковый массив параметров.</span><span class="sxs-lookup"><span data-stu-id="c99e3-633">A String array of parameters.</span></span></param>
        <summary><span data-ttu-id="c99e3-634">Вызывает заданный элемент.</span><span class="sxs-lookup"><span data-stu-id="c99e3-634">Invokes a specified member.</span></span> <span data-ttu-id="c99e3-635">Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-635">For a description of this member, see <see cref="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span></summary>
        <returns><span data-ttu-id="c99e3-636">Заданный член.</span><span class="sxs-lookup"><span data-stu-id="c99e3-636">The specified member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-637">Параметр `invokeAttr` может быть конструктором, методом, свойством или полем.</span><span class="sxs-lookup"><span data-stu-id="c99e3-637">The `invokeAttr` parameter may be a constructor, method, property, or field.</span></span> <span data-ttu-id="c99e3-638">Необходимо указать подходящий атрибут вызова.</span><span class="sxs-lookup"><span data-stu-id="c99e3-638">A suitable invocation attribute must be specified.</span></span> <span data-ttu-id="c99e3-639">Чтобы вызвать стандартный элемент класса, передайте в качестве имени элемента пустую строку ("").</span><span class="sxs-lookup"><span data-stu-id="c99e3-639">Invoke the default member of a class by passing the empty string ("") as the name of the member.</span></span>  
  
 <span data-ttu-id="c99e3-640">`modifiers` Параметр такой же длины, `args` параметра, предоставляющий атрибуты аргументов вызываемого члена в метаданных.</span><span class="sxs-lookup"><span data-stu-id="c99e3-640">The `modifiers` parameter has the same length as the `args` parameter, representing the invoked member's argument attributes in the metadata.</span></span> <span data-ttu-id="c99e3-641">Параметр может иметь следующие атрибуты: pdIn, pdOut, pdRetval, pdOptional и pdHasDefault.</span><span class="sxs-lookup"><span data-stu-id="c99e3-641">A parameter can have the following attributes: pdIn, pdOut, pdRetval, pdOptional, and pdHasDefault.</span></span> <span data-ttu-id="c99e3-642">Эти значения представляют, соответственно, параметры [In], [Out], [retval], [optional] и стандартный параметр.</span><span class="sxs-lookup"><span data-stu-id="c99e3-642">These represent [In], [Out], [retval], [optional], and a default parameter, respectively.</span></span>  
  
 <span data-ttu-id="c99e3-643">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-643">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-644">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-644">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="invokeAttr" /> <span data-ttu-id="c99e3-645">имеет значение <see cref="F:System.Reflection.BindingFlags.CreateInstance" />, и также установлен другой битовый флаг.</span><span class="sxs-lookup"><span data-stu-id="c99e3-645">is <see cref="F:System.Reflection.BindingFlags.CreateInstance" /> and another bit flag is also set.</span></span>

<span data-ttu-id="c99e3-646">- или - <paramref name="invokeAttr" /> не имеет значение <see cref="F:System.Reflection.BindingFlags.CreateInstance" />, а имя равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-646">-or- <paramref name="invokeAttr" /> is not <see cref="F:System.Reflection.BindingFlags.CreateInstance" /> and name is <see langword="null" />.</span></span>

<span data-ttu-id="c99e3-647">-или-</span><span class="sxs-lookup"><span data-stu-id="c99e3-647">-or-</span></span>

<paramref name="invokeAttr" /> <span data-ttu-id="c99e3-648">не является атрибутом вызова из объекта <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-648">is not an invocation attribute from <see cref="T:System.Reflection.BindingFlags" />.</span></span>

<span data-ttu-id="c99e3-649">-или-</span><span class="sxs-lookup"><span data-stu-id="c99e3-649">-or-</span></span>

<paramref name="invokeAttr" /> <span data-ttu-id="c99e3-650">одновременно задает методы get и set для свойства или поля.</span><span class="sxs-lookup"><span data-stu-id="c99e3-650">specifies both get and set for a property or field.</span></span>

<span data-ttu-id="c99e3-651">-или-</span><span class="sxs-lookup"><span data-stu-id="c99e3-651">-or-</span></span>

<paramref name="invokeAttr" /> <span data-ttu-id="c99e3-652">указывает как набор полей, так и метод Invoke.</span><span class="sxs-lookup"><span data-stu-id="c99e3-652">specifies both a field set and an Invoke method.</span></span><paramref name="args" /> <span data-ttu-id="c99e3-653">предоставляется для операции получения (Get) поля.</span><span class="sxs-lookup"><span data-stu-id="c99e3-653">is provided for a field get operation.</span></span>

<span data-ttu-id="c99e3-654">-или-</span><span class="sxs-lookup"><span data-stu-id="c99e3-654">-or-</span></span>

<span data-ttu-id="c99e3-655">Для операции set поля задано более одного аргумента.</span><span class="sxs-lookup"><span data-stu-id="c99e3-655">More than one argument is specified for a field set operation.</span></span></exception>
        <exception cref="T:System.MissingFieldException"><span data-ttu-id="c99e3-656">Невозможно найти поле или свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-656">The field or property cannot be found.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="c99e3-657">Не удается найти метод.</span><span class="sxs-lookup"><span data-stu-id="c99e3-657">The method cannot be found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c99e3-658">Закрытый элемент вызван без необходимого разрешения <see cref="T:System.Security.Permissions.ReflectionPermission" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-658">A private member is invoked without the necessary <see cref="T:System.Security.Permissions.ReflectionPermission" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.UnderlyingSystemType">
      <MemberSignature Language="C#" Value="Type System.Reflection.IReflect.UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property UnderlyingSystemType As Type Implements IReflect.UnderlyingSystemType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Reflection::IReflect::UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Reflection.IReflect.UnderlyingSystemType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c99e3-659">Получает базовый тип, представляющий объект <see cref="T:System.Reflection.IReflect" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-659">Gets the underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span></span> <span data-ttu-id="c99e3-660">Описание этого члена см. в разделе <see cref="P:System.Reflection.IReflect.UnderlyingSystemType" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-660">For a description of this member, see <see cref="P:System.Reflection.IReflect.UnderlyingSystemType" />.</span></span></summary>
        <value><span data-ttu-id="c99e3-661">Базовый тип, представляющий объект <see cref="T:System.Reflection.IReflect" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-661">The underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-662">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c99e3-662">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c99e3-663">Он может использоваться только при условии, что экземпляр класса <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.</span><span class="sxs-lookup"><span data-stu-id="c99e3-663">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UseStdAccessibleObjects">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c99e3-664">Сопоставляет объект с экземпляром объекта <see cref="T:System.Windows.Forms.AccessibleObject" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-664">Associates an object with an instance of an <see cref="T:System.Windows.Forms.AccessibleObject" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="c99e3-665">Объект <see cref="T:System.IntPtr" />, который содержит дескриптор объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-665">An <see cref="T:System.IntPtr" /> that contains the handle of the object.</span></span></param>
        <summary><span data-ttu-id="c99e3-666">Сопоставляет объект с экземпляром объекта <see cref="T:System.Windows.Forms.AccessibleObject" /> на основании дескриптора объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-666">Associates an object with an instance of an <see cref="T:System.Windows.Forms.AccessibleObject" /> based on the handle of the object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-667">Серверные приложения можно вызвать эту функцию, если они содержат пользовательского объекта пользовательского интерфейса, аналогичную системных объектов.</span><span class="sxs-lookup"><span data-stu-id="c99e3-667">Server applications can call this function when they contain a custom UI object that is similar to a system-provided object.</span></span> <span data-ttu-id="c99e3-668">Вызов сервера приложений `CreateStdAccessibleObject` и переопределить <xref:Accessibility.IAccessible> методы и свойства, как требуется в соответствии с их пользовательского объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-668">Server applications call `CreateStdAccessibleObject` and override the <xref:Accessibility.IAccessible> methods and properties as needed to match their custom object.</span></span> <span data-ttu-id="c99e3-669">Такой подход помогает существенно server разработчики работы по реализации все полностью <xref:Accessibility.IAccessible> свойства и методы.</span><span class="sxs-lookup"><span data-stu-id="c99e3-669">This approach saves server developers the work of fully implementing all the <xref:Accessibility.IAccessible> properties and methods.</span></span> <span data-ttu-id="c99e3-670">Эта функция аналогична `CreateStdAccessibleProxy`, за исключением того, что `CreateStdAccessibleProxy` позволяет указать имя класса в качестве параметра, тогда как `CreateStdAccessibleObject` использует имя класса, связанного с `hwnd`.</span><span class="sxs-lookup"><span data-stu-id="c99e3-670">This function is similar to `CreateStdAccessibleProxy`, except that `CreateStdAccessibleProxy` enables you to specify the class name as a parameter, whereas `CreateStdAccessibleObject` uses the class name associated with the `hwnd`.</span></span>  
  
 <span data-ttu-id="c99e3-671">Вызов этой версии `UseStdAccessible` является таким же, как вызывать версию два параметра с objid КЛИЕНТА.</span><span class="sxs-lookup"><span data-stu-id="c99e3-671">Calling this version of the `UseStdAccessible` is the same as calling the two parameter version with an objid of CLIENT.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle, int objid);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle, int32 objid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr, objid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle, int objid);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint * int -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects (handle, objid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="objid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="c99e3-672">Объект <see cref="T:System.IntPtr" />, который содержит дескриптор объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-672">An <see cref="T:System.IntPtr" /> that contains the handle of the object.</span></span></param>
        <param name="objid"><span data-ttu-id="c99e3-673">Значение Int, определяющее тип объекта, на который ссылается параметр <paramref name="handle" />.</span><span class="sxs-lookup"><span data-stu-id="c99e3-673">An Int that defines the type of object that the <paramref name="handle" /> parameter refers to.</span></span></param>
        <summary><span data-ttu-id="c99e3-674">Сопоставляет объект с экземпляром объекта<see cref="T:System.Windows.Forms.AccessibleObject" /> на основании дескриптора и идентификатора объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-674">Associates an object with an instance of an <see cref="T:System.Windows.Forms.AccessibleObject" /> based on the handle and the object id of the object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-675">Создает объект со специальными возможностями с методы и свойства для указанного типа элемента интерфейса пользователя, предоставляемых системой.</span><span class="sxs-lookup"><span data-stu-id="c99e3-675">Creates an accessible object with the methods and properties for the specified type of system-provided user interface element.</span></span>  
  
 <span data-ttu-id="c99e3-676">Серверные приложения можно вызвать эту функцию, если они содержат пользовательского объекта пользовательского интерфейса, аналогичную системных объектов.</span><span class="sxs-lookup"><span data-stu-id="c99e3-676">Server applications can call this function when they contain a custom UI object that is similar to a system-provided object.</span></span> <span data-ttu-id="c99e3-677">Вызов сервера приложений `CreateStdAccessibleObject` и переопределить <xref:Accessibility.IAccessible> методы и свойства, как требуется в соответствии с их пользовательского объекта.</span><span class="sxs-lookup"><span data-stu-id="c99e3-677">Server applications call `CreateStdAccessibleObject` and override the <xref:Accessibility.IAccessible> methods and properties as needed to match their custom object.</span></span> <span data-ttu-id="c99e3-678">Такой подход помогает существенно server разработчики работы по реализации все полностью <xref:Accessibility.IAccessible> свойства и методы.</span><span class="sxs-lookup"><span data-stu-id="c99e3-678">This approach saves server developers the work of fully implementing all the <xref:Accessibility.IAccessible> properties and methods.</span></span>  
  
 <span data-ttu-id="c99e3-679">Допустимые `objid` значения.</span><span class="sxs-lookup"><span data-stu-id="c99e3-679">Valid `objid` values.</span></span>  
  
|<span data-ttu-id="c99e3-680">Object</span><span class="sxs-lookup"><span data-stu-id="c99e3-680">Object</span></span>|<span data-ttu-id="c99e3-681">Значение</span><span class="sxs-lookup"><span data-stu-id="c99e3-681">Value</span></span>|<span data-ttu-id="c99e3-682">Описание</span><span class="sxs-lookup"><span data-stu-id="c99e3-682">Description</span></span>|  
|------------|-----------|-----------------|  
|<span data-ttu-id="c99e3-683">ПРЕДУПРЕЖДЕНИЯ</span><span class="sxs-lookup"><span data-stu-id="c99e3-683">ALERT</span></span>|<span data-ttu-id="c99e3-684">0xFFFFFFF6</span><span class="sxs-lookup"><span data-stu-id="c99e3-684">0xFFFFFFF6</span></span>|<span data-ttu-id="c99e3-685">Ссылается на сообщение, связанное с окном или приложения.</span><span class="sxs-lookup"><span data-stu-id="c99e3-685">Refers to a message associated with a window or application.</span></span>|  
|<span data-ttu-id="c99e3-686">КУРСОР</span><span class="sxs-lookup"><span data-stu-id="c99e3-686">CARET</span></span>|<span data-ttu-id="c99e3-687">0xFFFFFFF8</span><span class="sxs-lookup"><span data-stu-id="c99e3-687">0xFFFFFFF8</span></span>|<span data-ttu-id="c99e3-688">Ссылается на поместите курсор в окне.</span><span class="sxs-lookup"><span data-stu-id="c99e3-688">Refers to the text insertion bar (caret) in the window.</span></span>|  
|<span data-ttu-id="c99e3-689">КЛИЕНТ</span><span class="sxs-lookup"><span data-stu-id="c99e3-689">CLIENT</span></span>|<span data-ttu-id="c99e3-690">0xFFFFFFFC</span><span class="sxs-lookup"><span data-stu-id="c99e3-690">0xFFFFFFFC</span></span>|<span data-ttu-id="c99e3-691">Относится к клиентской области окна.</span><span class="sxs-lookup"><span data-stu-id="c99e3-691">Refers to the window's client area.</span></span> <span data-ttu-id="c99e3-692">В большинстве случаев операционная система управляет элементами рамки, а клиентский объект содержит все элементы, которыми управляет приложение.</span><span class="sxs-lookup"><span data-stu-id="c99e3-692">In most cases, the operating system controls the frame elements, and the client object contains all elements that the application controls.</span></span>|  
|<span data-ttu-id="c99e3-693">КУРСОР</span><span class="sxs-lookup"><span data-stu-id="c99e3-693">CURSOR</span></span>|<span data-ttu-id="c99e3-694">0xFFFFFFF7</span><span class="sxs-lookup"><span data-stu-id="c99e3-694">0xFFFFFFF7</span></span>|<span data-ttu-id="c99e3-695">Ссылается на указатель мыши.</span><span class="sxs-lookup"><span data-stu-id="c99e3-695">Refers to the mouse pointer.</span></span> <span data-ttu-id="c99e3-696">В системе имеется только один указатель мыши, и он не является дочерним окном.</span><span class="sxs-lookup"><span data-stu-id="c99e3-696">There is only one mouse pointer in the system and it is not a child of a window.</span></span>|  
|<span data-ttu-id="c99e3-697">HSCROLL</span><span class="sxs-lookup"><span data-stu-id="c99e3-697">HSCROLL</span></span>|<span data-ttu-id="c99e3-698">0xFFFFFFFA</span><span class="sxs-lookup"><span data-stu-id="c99e3-698">0xFFFFFFFA</span></span>|<span data-ttu-id="c99e3-699">Ссылается на окно горизонтальную полосу прокрутки.</span><span class="sxs-lookup"><span data-stu-id="c99e3-699">Refers to the window's horizontal scroll bar.</span></span>|  
|<span data-ttu-id="c99e3-700">MENU</span><span class="sxs-lookup"><span data-stu-id="c99e3-700">MENU</span></span>|<span data-ttu-id="c99e3-701">0xFFFFFFFD</span><span class="sxs-lookup"><span data-stu-id="c99e3-701">0xFFFFFFFD</span></span>|<span data-ttu-id="c99e3-702">Ссылается на панели меню окна.</span><span class="sxs-lookup"><span data-stu-id="c99e3-702">Refers to the window's menu bar.</span></span>|  
|<span data-ttu-id="c99e3-703">SIZEGRIP</span><span class="sxs-lookup"><span data-stu-id="c99e3-703">SIZEGRIP</span></span>|<span data-ttu-id="c99e3-704">0xFFFFFFF9</span><span class="sxs-lookup"><span data-stu-id="c99e3-704">0xFFFFFFF9</span></span>|<span data-ttu-id="c99e3-705">Ссылается на окно захвата для изменения размера, дополнительный компонент рамки расположенный в правом нижнем углу окна области.</span><span class="sxs-lookup"><span data-stu-id="c99e3-705">Refers to the window's size grip, an optional frame component located at the lower right corner of the window frame.</span></span>|  
|<span data-ttu-id="c99e3-706">ЗВУК</span><span class="sxs-lookup"><span data-stu-id="c99e3-706">SOUND</span></span>|<span data-ttu-id="c99e3-707">0xFFFFFFF5</span><span class="sxs-lookup"><span data-stu-id="c99e3-707">0xFFFFFFF5</span></span>|<span data-ttu-id="c99e3-708">Ссылается на звуковой объект.</span><span class="sxs-lookup"><span data-stu-id="c99e3-708">Refers to a sound object.</span></span> <span data-ttu-id="c99e3-709">Звуковые объекты не имеют места экрана или дочерние элементы, но имеют имена и атрибуты состояния.</span><span class="sxs-lookup"><span data-stu-id="c99e3-709">Sound objects do not have screen locations or children, but do have name and state attributes.</span></span> <span data-ttu-id="c99e3-710">Они представляют собой дочерние приложения, которое воспроизводит звук.</span><span class="sxs-lookup"><span data-stu-id="c99e3-710">They are children of the application playing the sound.</span></span>|  
|<span data-ttu-id="c99e3-711">SYSMENU</span><span class="sxs-lookup"><span data-stu-id="c99e3-711">SYSMENU</span></span>|<span data-ttu-id="c99e3-712">0xFFFFFFFF</span><span class="sxs-lookup"><span data-stu-id="c99e3-712">0xFFFFFFFF</span></span>|<span data-ttu-id="c99e3-713">Ссылается на системное меню окна.</span><span class="sxs-lookup"><span data-stu-id="c99e3-713">Refers to the window's system menu.</span></span>|  
|<span data-ttu-id="c99e3-714">СТРОКА ЗАГОЛОВКА</span><span class="sxs-lookup"><span data-stu-id="c99e3-714">TITLEBAR</span></span>|<span data-ttu-id="c99e3-715">0xFFFFFFFE</span><span class="sxs-lookup"><span data-stu-id="c99e3-715">0xFFFFFFFE</span></span>|<span data-ttu-id="c99e3-716">Ссылается на заголовок окна.</span><span class="sxs-lookup"><span data-stu-id="c99e3-716">Refers to the window's title bar.</span></span>|  
|<span data-ttu-id="c99e3-717">VSCROLL</span><span class="sxs-lookup"><span data-stu-id="c99e3-717">VSCROLL</span></span>|<span data-ttu-id="c99e3-718">0xFFFFFFFB</span><span class="sxs-lookup"><span data-stu-id="c99e3-718">0xFFFFFFFB</span></span>|<span data-ttu-id="c99e3-719">Ссылается на вертикальной прокрутки окна.</span><span class="sxs-lookup"><span data-stu-id="c99e3-719">Refers to the window's vertical scroll bar.</span></span>|  
|<span data-ttu-id="c99e3-720">ОКНО</span><span class="sxs-lookup"><span data-stu-id="c99e3-720">WINDOW</span></span>|<span data-ttu-id="c99e3-721">0x00000000</span><span class="sxs-lookup"><span data-stu-id="c99e3-721">0x00000000</span></span>|<span data-ttu-id="c99e3-722">Ссылается на само окно, а не к дочернему объекту.</span><span class="sxs-lookup"><span data-stu-id="c99e3-722">Refers to the window itself rather than to a child object.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c99e3-723">Получает или задает значение объекта с поддержкой специальных возможностей.</span><span class="sxs-lookup"><span data-stu-id="c99e3-723">Gets or sets the value of an accessible object.</span></span></summary>
        <value><span data-ttu-id="c99e3-724">Значение доступного объекта или значение <see langword="null" />, если значение для объекта не  задано.</span><span class="sxs-lookup"><span data-stu-id="c99e3-724">The value of an accessible object, or <see langword="null" /> if the object has no value set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c99e3-725">Как правило <xref:System.Windows.Forms.AccessibleObject.Value%2A> свойство представляет визуальные данные, содержащиеся в объекте.</span><span class="sxs-lookup"><span data-stu-id="c99e3-725">Typically, the <xref:System.Windows.Forms.AccessibleObject.Value%2A> property represents visual information contained by the object.</span></span> <span data-ttu-id="c99e3-726">Не все объекты поддерживают <xref:System.Windows.Forms.AccessibleObject.Value%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-726">Not all objects support the <xref:System.Windows.Forms.AccessibleObject.Value%2A> property.</span></span>  
  
 <span data-ttu-id="c99e3-727">В большинстве случаев <xref:System.Windows.Forms.AccessibleObject.Value%2A> позволяет сообщить клиенту, какие визуальные данные, объект содержит свойство.</span><span class="sxs-lookup"><span data-stu-id="c99e3-727">In most cases, the <xref:System.Windows.Forms.AccessibleObject.Value%2A> property is used to tell the client about what visual information an object contains.</span></span> <span data-ttu-id="c99e3-728">Например значение элемента управления редактирования является текстом, содержащиеся в ней, но элемент меню не имеет значения.</span><span class="sxs-lookup"><span data-stu-id="c99e3-728">For example, the value for an edit control is the text it contains, but a menu item has no value.</span></span>  
  
 <span data-ttu-id="c99e3-729"><xref:System.Windows.Forms.AccessibleObject.Value%2A> Свойство предоставляет иерархические данные в случаях, таких как элемент управления деревом.</span><span class="sxs-lookup"><span data-stu-id="c99e3-729">The <xref:System.Windows.Forms.AccessibleObject.Value%2A> property can provide hierarchical information in cases such as a tree view control.</span></span> <span data-ttu-id="c99e3-730">Несмотря на то, что родительский объект в элементе управления иерархического представления предоставляет данные в <xref:System.Windows.Forms.AccessibleObject.Value%2A> , каждый элемент в элементе управления имеет отсчитываемый от нуля значение, представляющее уровень в иерархии.</span><span class="sxs-lookup"><span data-stu-id="c99e3-730">Although the parent object in the tree view control does not provide information in the <xref:System.Windows.Forms.AccessibleObject.Value%2A> property, each item within the control has a zero-based value that represents its level within the hierarchy.</span></span> <span data-ttu-id="c99e3-731">Элементы верхнего уровня имеют нулевое значение, элементы второго уровня имеют значение 1 и так далее.</span><span class="sxs-lookup"><span data-stu-id="c99e3-731">Top-level items have a value of zero, second-level items have a value of one, and so on.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c99e3-732">Значения, возвращаемые полосы прокрутки и ползунка доступны, объекты указывают проценты и поэтому они являются целыми числами от 0 до 100 включительно.</span><span class="sxs-lookup"><span data-stu-id="c99e3-732">The values returned from scroll bar and trackbar accessible objects indicate percentages, so they are integers between 0 and 100, inclusive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="c99e3-733">Не удалось получить или задать значение.</span><span class="sxs-lookup"><span data-stu-id="c99e3-733">The value cannot be set or retrieved.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
      </Docs>
    </Member>
  </Members>
</Type>