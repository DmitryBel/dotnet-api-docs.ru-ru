<Type Name="PingReply" FullName="System.Net.NetworkInformation.PingReply">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2750e7a260fe829621cbe77b38b9b869d5350955" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58716092" /></Metadata><TypeSignature Language="C#" Value="public class PingReply" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PingReply extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.PingReply" />
  <TypeSignature Language="VB.NET" Value="Public Class PingReply" />
  <TypeSignature Language="C++ CLI" Value="public ref class PingReply" />
  <TypeSignature Language="F#" Value="type PingReply = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a0812-101">Предоставляет сведения о состоянии и о данных, полученных в результате операции <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> или <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</span><span class="sxs-lookup"><span data-stu-id="a0812-101">Provides information about the status and data resulting from a <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> or <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0812-102"><xref:System.Net.NetworkInformation.Ping> Класс пытается отправить запрос проверки связи Internet Control Message Protocol (ICMP) к удаленному компьютеру и получать сведения с компьютера с помощью сообщении ответа проверки связи ICMP.</span><span class="sxs-lookup"><span data-stu-id="a0812-102">The <xref:System.Net.NetworkInformation.Ping> class attempts to send an Internet Control Message Protocol (ICMP) echo request to a remote computer and receive information back from the computer via an ICMP echo reply message.</span></span> <span data-ttu-id="a0812-103"><xref:System.Net.NetworkInformation.Ping> Класс использует экземпляры <xref:System.Net.NetworkInformation.PingReply> класса для возвращения сведений об операции, такие как его состояние и время, необходимое для отправки запроса и получения ответа.</span><span class="sxs-lookup"><span data-stu-id="a0812-103">The <xref:System.Net.NetworkInformation.Ping> class uses instances of the <xref:System.Net.NetworkInformation.PingReply> class to return information about the operation, such as its status and the time taken to send the request and receive the reply.</span></span>  
  
 <span data-ttu-id="a0812-104"><xref:System.Net.NetworkInformation.Ping.Send%2A> Методы возвращают экземпляры <xref:System.Net.NetworkInformation.PingReply> класса напрямую.</span><span class="sxs-lookup"><span data-stu-id="a0812-104">The <xref:System.Net.NetworkInformation.Ping.Send%2A> methods return instances of the <xref:System.Net.NetworkInformation.PingReply> class directly.</span></span> <span data-ttu-id="a0812-105"><xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Методы возвращают <xref:System.Net.NetworkInformation.PingReply> в <xref:System.Net.NetworkInformation.PingCompletedEventHandler> метода <xref:System.Net.NetworkInformation.PingCompletedEventArgs> параметра.</span><span class="sxs-lookup"><span data-stu-id="a0812-105">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods return a <xref:System.Net.NetworkInformation.PingReply> in the <xref:System.Net.NetworkInformation.PingCompletedEventHandler> method's <xref:System.Net.NetworkInformation.PingCompletedEventArgs> parameter.</span></span> <span data-ttu-id="a0812-106"><xref:System.Net.NetworkInformation.PingReply> Осуществляется через <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="a0812-106">The <xref:System.Net.NetworkInformation.PingReply> is accessed through the <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A> property.</span></span>  
  
 <span data-ttu-id="a0812-107">Если значение <xref:System.Net.NetworkInformation.PingReply.Status%2A> не <xref:System.Net.NetworkInformation.IPStatus.Success>, не следует использовать значения, возвращаемые методом <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> или <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="a0812-107">If the value of <xref:System.Net.NetworkInformation.PingReply.Status%2A> is not <xref:System.Net.NetworkInformation.IPStatus.Success>, you should not use the values returned by the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> or <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties.</span></span> <span data-ttu-id="a0812-108"><xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> Свойство возвращает ноль, <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> свойство возвращает пустой массив и <xref:System.Net.NetworkInformation.PingReply.Options%2A> свойство возвратит `null`.</span><span class="sxs-lookup"><span data-stu-id="a0812-108">The <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> property will return zero, the <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> property will return an empty array, and the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property will return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0812-109">В следующем примере кода показано использование <xref:System.Net.NetworkInformation.Ping> класс отправлять запрос проверки связи ICMP синхронно, и отобразить ответ.</span><span class="sxs-lookup"><span data-stu-id="a0812-109">The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.</span></span>  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.Net.IPAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As IPAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPAddress ^ Address { System::Net::IPAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : System.Net.IPAddress" Usage="System.Net.NetworkInformation.PingReply.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0812-110">Возвращает адрес узла и отправляет ответ проверки связи ICMP.</span><span class="sxs-lookup"><span data-stu-id="a0812-110">Gets the address of the host that sends the Internet Control Message Protocol (ICMP) echo reply.</span></span></summary>
        <value><span data-ttu-id="a0812-111">Объект <see cref="T:System.Net.IPAddress" />, содержащий получателя сообщения проверки связи ICMP.</span><span class="sxs-lookup"><span data-stu-id="a0812-111">An <see cref="T:System.Net.IPAddress" /> containing the destination for the ICMP echo message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0812-112"><xref:System.Net.NetworkInformation.PingReply.Address%2A> Возвращаемые любым <xref:System.Net.NetworkInformation.Ping.Send%2A> перегрузки могут быть получены из вредоносных удаленного компьютера.</span><span class="sxs-lookup"><span data-stu-id="a0812-112">The <xref:System.Net.NetworkInformation.PingReply.Address%2A> returned by any of the <xref:System.Net.NetworkInformation.Ping.Send%2A> overloads can originate from a malicious remote computer.</span></span> <span data-ttu-id="a0812-113">Не подключиться к удаленному компьютеру, с помощью этого адреса.</span><span class="sxs-lookup"><span data-stu-id="a0812-113">Do not connect to the remote computer using this address.</span></span> <span data-ttu-id="a0812-114">Используйте DNS, чтобы определить IP-адрес компьютера, к которому необходимо подключиться.</span><span class="sxs-lookup"><span data-stu-id="a0812-114">Use DNS to determine the IP address of the machine to which you want to connect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0812-115">В следующем примере кода синхронно отправляет запрос проверки связи ICMP и отображает значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="a0812-115">The following code example sends an ICMP echo request synchronously and displays the value of this property.</span></span>  
  
 [!code-cpp[NclPingSampler#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#2)]
 [!code-csharp[NclPingSampler#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public byte[] Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Buffer { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : byte[]" Usage="System.Net.NetworkInformation.PingReply.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0812-116">Возвращает буфер данных, полученных в сообщении ответа проверки связи ICMP.</span><span class="sxs-lookup"><span data-stu-id="a0812-116">Gets the buffer of data received in an Internet Control Message Protocol (ICMP) echo reply message.</span></span></summary>
        <value><span data-ttu-id="a0812-117">Массив <see cref="T:System.Byte" />, в котором содержатся данные, полученные в сообщении ответа проверки связи ICMP, или пустой массив, если ответ не получен.</span><span class="sxs-lookup"><span data-stu-id="a0812-117">A <see cref="T:System.Byte" /> array containing the data received in an ICMP echo reply message, or an empty array, if no reply was received.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0812-118">Буфер данных, отправленный с запросом проверки связи ICMP возвращается отправителю в ответе, поэтому время в пути обмена данными для известного размера пакета может быть вычислено.</span><span class="sxs-lookup"><span data-stu-id="a0812-118">The data buffer sent with the ICMP echo request is returned to the sender in the echo reply so the roundtrip travel time for a packet of a known size can be computed.</span></span> <span data-ttu-id="a0812-119">Буфер данных, в сочетании с <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> , то можно использовать для обнаружения наибольший размер передаваемых данных для сетевой путь между исходный и конечный компьютеры.</span><span class="sxs-lookup"><span data-stu-id="a0812-119">The data buffer, combined with the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> option, can be used to discover the maximum transmission unit for the network path between the source and destination computers.</span></span> <span data-ttu-id="a0812-120">Дополнительные сведения см. в разделе «Traceroute» в 1574 RFC, в разделе 3.2, найти по адресу [ https://www.ietf.org ](https://www.ietf.org).</span><span class="sxs-lookup"><span data-stu-id="a0812-120">For additional information, see "Traceroute" in RFC 1574, Section 3.2, available at [https://www.ietf.org](https://www.ietf.org).</span></span>  
  
 <span data-ttu-id="a0812-121">По умолчанию буфера, используемого с <xref:System.Net.NetworkInformation.Ping.Send%2A> и <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> содержит 32 байт.</span><span class="sxs-lookup"><span data-stu-id="a0812-121">The default buffer used with <xref:System.Net.NetworkInformation.Ping.Send%2A> and <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> contains 32 bytes of data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0812-122">В следующем примере кода синхронно отправляет запрос проверки связи ICMP и отображает размер буфера, возвращенный этим свойством.</span><span class="sxs-lookup"><span data-stu-id="a0812-122">The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NclPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.PingOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As PingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkInformation::PingOptions ^ Options { System::Net::NetworkInformation::PingOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Net.NetworkInformation.PingOptions" Usage="System.Net.NetworkInformation.PingReply.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0812-123">Возвращает параметры, используемые для передачи ответа на запрос проверки связи ICMP.</span><span class="sxs-lookup"><span data-stu-id="a0812-123">Gets the options used to transmit the reply to an Internet Control Message Protocol (ICMP) echo request.</span></span></summary>
        <value><span data-ttu-id="a0812-124">Объект <see cref="T:System.Net.NetworkInformation.PingOptions" />, содержащий срок жизни и директиву фрагментации, которые используются для передачи ответа, если свойство <see cref="P:System.Net.NetworkInformation.PingReply.Status" /> имеет значение <see cref="F:System.Net.NetworkInformation.IPStatus.Success" />; в противном случае — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a0812-124">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object that contains the Time to Live (TTL) and the fragmentation directive used for transmitting the reply if <see cref="P:System.Net.NetworkInformation.PingReply.Status" /> is <see cref="F:System.Net.NetworkInformation.IPStatus.Success" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0812-125">Срок ЖИЗНИ определяет количество узлов можно переадресовать пакет на пути между источником и получателем.</span><span class="sxs-lookup"><span data-stu-id="a0812-125">The TTL defines the number of times nodes can forward a packet as it travels between its source and destination.</span></span> <span data-ttu-id="a0812-126">Если количество переадресаций, также известный как число прыжков, превышает значение срока ЖИЗНИ, пакет считается Недоставленное и отбрасывается.</span><span class="sxs-lookup"><span data-stu-id="a0812-126">If the number of forwards, also known as hops, exceeds the value specified for the TTL, the packet is deemed undeliverable and is discarded.</span></span>  
  
 <span data-ttu-id="a0812-127"><xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Значение, указанное в фрагментации пакетов для запроса элементов управления ICMP echo.</span><span class="sxs-lookup"><span data-stu-id="a0812-127">The <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> value specified in the ICMP echo request controls packet fragmentation.</span></span> <span data-ttu-id="a0812-128">Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> — `true` и размер пакета превышает наибольший размер передаваемых данных сетевого пути, выполняемое пакет, пакет отбрасывается и <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig> возвращается ошибка.</span><span class="sxs-lookup"><span data-stu-id="a0812-128">If <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the packet size exceeds the maximum transmission unit of the network path taken by the packet, the packet is discarded and the <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig> error is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0812-129">В следующем примере кода, синхронно отправляет запрос проверки связи ICMP и отображает значения, хранящиеся в <xref:System.Net.NetworkInformation.PingOptions> объект, возвращаемый этим свойством.</span><span class="sxs-lookup"><span data-stu-id="a0812-129">The following code example sends an ICMP echo request synchronously and displays the values stored in the <xref:System.Net.NetworkInformation.PingOptions> object returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#3)]
 [!code-csharp[NclPingSampler#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundtripTime">
      <MemberSignature Language="C#" Value="public long RoundtripTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RoundtripTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.RoundtripTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoundtripTime As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long RoundtripTime { long get(); };" />
      <MemberSignature Language="F#" Value="member this.RoundtripTime : int64" Usage="System.Net.NetworkInformation.PingReply.RoundtripTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0812-130">Возвращает время в миллисекундах, затрачиваемое на отправку запроса проверки связи ICMP и получение соответствующего сообщения ответа проверки связи ICMP.</span><span class="sxs-lookup"><span data-stu-id="a0812-130">Gets the number of milliseconds taken to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</span></span></summary>
        <value><span data-ttu-id="a0812-131">Значение типа <see cref="T:System.Int64" />, указывающее время прохождения пакета "туда и обратно" в миллисекундах.</span><span class="sxs-lookup"><span data-stu-id="a0812-131">An <see cref="T:System.Int64" /> that specifies the round trip time, in milliseconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0812-132">В случае сбоя запроса проверки связи <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> времени, которая считается 0, являющимся также является допустимым значением, если запрос выполнен успешно.</span><span class="sxs-lookup"><span data-stu-id="a0812-132">If the Echo request fails, the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> time is reported as 0, which is also a valid value when the request succeeds.</span></span> <span data-ttu-id="a0812-133">Необходимо проверить <xref:System.Net.NetworkInformation.PingReply.Status%2A> для определения, следует ли игнорировать значение, возвращаемое этим свойством.</span><span class="sxs-lookup"><span data-stu-id="a0812-133">You must check the <xref:System.Net.NetworkInformation.PingReply.Status%2A> to determine whether the value returned by this property should be ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0812-134">В следующем примере кода синхронно отправляет запрос проверки связи ICMP и отображает размер буфера, возвращенный этим свойством.</span><span class="sxs-lookup"><span data-stu-id="a0812-134">The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NclPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.IPStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.IPStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As IPStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkInformation::IPStatus Status { System::Net::NetworkInformation::IPStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.Status : System.Net.NetworkInformation.IPStatus" Usage="System.Net.NetworkInformation.PingReply.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0812-135">Возвращает состояние попытки отправки запроса проверки связи ICMP и получения соответствующего сообщения ответа проверки связи ICMP.</span><span class="sxs-lookup"><span data-stu-id="a0812-135">Gets the status of an attempt to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</span></span></summary>
        <value><span data-ttu-id="a0812-136">Значение <see cref="T:System.Net.NetworkInformation.IPStatus" />, показывающее результат запроса.</span><span class="sxs-lookup"><span data-stu-id="a0812-136">An <see cref="T:System.Net.NetworkInformation.IPStatus" /> value indicating the result of the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0812-137">Если значение <xref:System.Net.NetworkInformation.PingReply.Status%2A> не <xref:System.Net.NetworkInformation.IPStatus.Success>, не следует использовать значения, возвращаемые методом <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> или <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="a0812-137">If the value of <xref:System.Net.NetworkInformation.PingReply.Status%2A> is not <xref:System.Net.NetworkInformation.IPStatus.Success>, you should not use the values returned by the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> or <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties.</span></span> <span data-ttu-id="a0812-138"><xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> И <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> возвращает нуль, свойства и <xref:System.Net.NetworkInformation.PingReply.Options%2A> свойство возвратит `null`.</span><span class="sxs-lookup"><span data-stu-id="a0812-138">The <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> and <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties will return zero, and the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property will return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0812-139">В следующем примере кода показано использование <xref:System.Net.NetworkInformation.Ping> класс отправлять запрос проверки связи ICMP синхронно, и отобразить ответ.</span><span class="sxs-lookup"><span data-stu-id="a0812-139">The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.</span></span>  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>