<Type Name="X509Certificate2" FullName="System.Security.Cryptography.X509Certificates.X509Certificate2">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9649c12234bf49474209f1becd15429e6af3e34a" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58694306" /></Metadata><TypeSignature Language="C#" Value="public class X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit X509Certificate2 extends System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />
  <TypeSignature Language="VB.NET" Value="Public Class X509Certificate2&#xA;Inherits X509Certificate" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509Certificate2 : System::Security::Cryptography::X509Certificates::X509Certificate" />
  <TypeSignature Language="F#" Value="type X509Certificate2 = class&#xA;    inherit X509Certificate" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.X509Certificates.X509Certificate</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="81c0a-101">Представляет сертификат X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-101">Represents an X.509 certificate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-102">Структура X.509 создается в международной организации по стандартизации (ISO) рабочих группах.</span><span class="sxs-lookup"><span data-stu-id="81c0a-102">The X.509 structure originated in the International Organization for Standardization (ISO) working groups.</span></span> <span data-ttu-id="81c0a-103">Эта структура используется для представления различных типов информации, включая удостоверения, прав и владелец атрибутами (разрешения, возраст, пол, расположение, назначение и т. д).</span><span class="sxs-lookup"><span data-stu-id="81c0a-103">This structure can be used to represent various types of information including identity, entitlement, and holder attributes (permissions, age, sex, location, affiliation, and so forth).</span></span> <span data-ttu-id="81c0a-104">Несмотря на то, что спецификации ISO по структуре, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> класс предназначен для моделирования сценариев использования, определенный в спецификациях, выданный инфраструктуры открытых ключей Internet Engineering Task Force (IETF), X.509 (PKIX ) рабочую группу.</span><span class="sxs-lookup"><span data-stu-id="81c0a-104">Although the ISO specifications are most informative on the structure itself, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class is designed to model the usage scenarios defined in specifications issued by the Internet Engineering Task Force (IETF) Public Key Infrastructure, X.509 (PKIX) working group.</span></span> <span data-ttu-id="81c0a-105">Наиболее информативные этих спецификаций является RFC 3280 "[сертификата и профиля список ОТЗЫВА сертификатов отзыва](https://go.microsoft.com/fwlink/?LinkId=45286).»</span><span class="sxs-lookup"><span data-stu-id="81c0a-105">The most informative of these specifications is RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](https://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="81c0a-106">Начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)], этот тип реализует <xref:System.IDisposable> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="81c0a-106">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], this type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="81c0a-107">Когда вы закончите, используя тип, следует освободить его прямо или косвенно.</span><span class="sxs-lookup"><span data-stu-id="81c0a-107">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="81c0a-108">Чтобы удалить тип напрямую, вызовите его <xref:System.IDisposable.Dispose%2A> метод в `try` / `catch` блока.</span><span class="sxs-lookup"><span data-stu-id="81c0a-108">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="81c0a-109">Чтобы избавиться от его косвенно, используйте языковой конструкции, такие как `using` (в C#) или `Using` (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="81c0a-109">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="81c0a-110">Дополнительные сведения см. в разделе «С помощью объекта, реализует IDisposable» <xref:System.IDisposable> разделу интерфейса.</span><span class="sxs-lookup"><span data-stu-id="81c0a-110">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
>   
>  <span data-ttu-id="81c0a-111">Для приложений, предназначенных для [!INCLUDE[net_v452](~/includes/net-v452-md.md)] и более ранних версий <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> класс не реализует <xref:System.IDisposable> интерфейс и поэтому не `Dispose` метод.</span><span class="sxs-lookup"><span data-stu-id="81c0a-111">For apps that target the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class does not implement the <xref:System.IDisposable> interface and therefore does not have a `Dispose` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-112">Следующий пример демонстрирует, как использовать <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта для шифрования и расшифровки файла.</span><span class="sxs-lookup"><span data-stu-id="81c0a-112">The following example demonstrates how to use an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to encrypt and decrypt a file.</span></span>  
  
 [!code-csharp[X509Certificate2#1](~/samples/snippets/csharp/VS_Snippets_CLR/x509certificate2/cs/program.cs#1)]
 [!code-vb[X509Certificate2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/x509certificate2/vb/program.vb#1)]  
  
 <span data-ttu-id="81c0a-113">В следующем примере создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-113">The following example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="81c0a-114">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="81c0a-115">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-116">Этот конструктор создает пустой <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта, в отличие от других конструкторов для этого класса, используйте сведения о сертификате из массива байтов, указатель или файл сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-116">This constructor creates an empty <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object, unlike the other constructors for this class that use certificate information from a byte array, a pointer, or a certificate file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-117">В следующем примере кода открывает хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-117">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="81c0a-118">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="81c0a-118">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 rawData" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="81c0a-119">Массив байтов, содержащий данные сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-119">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="81c0a-120">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием информации из указанного массива байтов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-120">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using information from a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-121">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта, используя сведения о сертификате из массива байтов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-121">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using certificate information from a byte array.</span></span> <span data-ttu-id="81c0a-122">Массив байтов может быть бинарные (DER) или данные X.509 в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="81c0a-122">The byte array can be binary (DER) encoded or Base64-encoded X.509 data.</span></span> <span data-ttu-id="81c0a-123">Массив байтов может также быть PKCS7 (Authenticode) подписанному файлу; сертификат подписавшего используется для создания объекта.</span><span class="sxs-lookup"><span data-stu-id="81c0a-123">The byte array can also be a PKCS7 (Authenticode) signed file; the signer certificate is used to create the object.</span></span>  
  
 <span data-ttu-id="81c0a-124">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификата путем указания хранилища подписанного файла PKCS7 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="81c0a-124">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-125">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-125">An error with the certificate occurs.</span></span> <span data-ttu-id="81c0a-126">Например:</span><span class="sxs-lookup"><span data-stu-id="81c0a-126">For example:</span></span> 
<span data-ttu-id="81c0a-127">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="81c0a-127">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="81c0a-128">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-128">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="81c0a-129">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-129">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(IntPtr handle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : nativeint -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="81c0a-130">Указатель на контекст сертификата в неуправляемом коде.</span><span class="sxs-lookup"><span data-stu-id="81c0a-130">A pointer to a certificate context in unmanaged code.</span></span> <span data-ttu-id="81c0a-131">Структура на языке C вызывается <see langword="PCCERT_CONTEXT" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-131">The C structure is called <see langword="PCCERT_CONTEXT" />.</span></span></param>
        <summary><span data-ttu-id="81c0a-132">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с помощью неуправляемого дескриптора.</span><span class="sxs-lookup"><span data-stu-id="81c0a-132">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an unmanaged handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-133">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта, используя дескриптор для контекста сертификата Microsoft Cryptographic API, `PCCERT_CONTEXT`.</span><span class="sxs-lookup"><span data-stu-id="81c0a-133">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a handle for the Microsoft Cryptographic API certificate context, `PCCERT_CONTEXT`.</span></span> <span data-ttu-id="81c0a-134">Обратите внимание на то, что непосредственный вызывающий объект этого конструктора требует разрешение неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="81c0a-134">Note that the immediate caller of this constructor requires unmanaged code permission.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="81c0a-135">Конструктор создает копию контекста сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-135">The constructor creates a copy of the certificate context.</span></span> <span data-ttu-id="81c0a-136">Не следует предполагать, что структура контекста, который передается конструктору является допустимым; Возможно, он был выпущен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-136">Do not assume that the context structure you passed to the constructor is valid; it may have been released.</span></span> <span data-ttu-id="81c0a-137">Можно получить копию текущего `PCCERT_CONTEXT` структуры из <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> , однако оно допустимо только в течение времени существования <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта.</span><span class="sxs-lookup"><span data-stu-id="81c0a-137">You can get a copy of the current `PCCERT_CONTEXT` structure from the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> property, but it is valid only during the lifetime of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-138">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-138">An error with the certificate occurs.</span></span> <span data-ttu-id="81c0a-139">Например:</span><span class="sxs-lookup"><span data-stu-id="81c0a-139">For example:</span></span> 
<span data-ttu-id="81c0a-140">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="81c0a-140">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="81c0a-141">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-141">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="81c0a-142">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-142">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="81c0a-143">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="81c0a-143">for accessing unmanaged code.</span></span> <span data-ttu-id="81c0a-144">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-144">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="81c0a-145">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="81c0a-145">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 certificate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="81c0a-146">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-146">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span></span></param>
        <summary><span data-ttu-id="81c0a-147">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с помощью объекта <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-147">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-148">Этот метод создает новый экземпляр класса <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> используя <xref:System.Security.Cryptography.X509Certificates.X509Certificate> объекта.</span><span class="sxs-lookup"><span data-stu-id="81c0a-148">This method creates a new instance of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class using an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-149">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-149">An error with the certificate occurs.</span></span> <span data-ttu-id="81c0a-150">Например:</span><span class="sxs-lookup"><span data-stu-id="81c0a-150">For example:</span></span> 
<span data-ttu-id="81c0a-151">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="81c0a-151">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="81c0a-152">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-152">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="81c0a-153">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-153">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="81c0a-154">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="81c0a-154">for accessing unmanaged code.</span></span> <span data-ttu-id="81c0a-155">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-155">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="81c0a-156">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="81c0a-156">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="81c0a-157">Имя файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-157">The name of a certificate file.</span></span></param>
        <summary><span data-ttu-id="81c0a-158">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с помощью имени файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-158">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-159">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> с помощью имени файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-159">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name.</span></span> <span data-ttu-id="81c0a-160">Он поддерживает двоичного кодирования (DER) или кодировку Base64.</span><span class="sxs-lookup"><span data-stu-id="81c0a-160">It supports binary (DER) encoding or Base64 encoding.</span></span>  
  
 <span data-ttu-id="81c0a-161">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификата путем указания хранилища подписанного файла PKCS7 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="81c0a-161">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-162">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-162">An error with the certificate occurs.</span></span> <span data-ttu-id="81c0a-163">Например:</span><span class="sxs-lookup"><span data-stu-id="81c0a-163">For example:</span></span> 
<span data-ttu-id="81c0a-164">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="81c0a-164">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="81c0a-165">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-165">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="81c0a-166">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-166">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * System.Security.SecureString -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="81c0a-167">Массив байтов, содержащий данные из сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-167">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="81c0a-168">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-168">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="81c0a-169">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием массива байтов и пароля.</span><span class="sxs-lookup"><span data-stu-id="81c0a-169">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-170">Этот конструктор используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-170">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="81c0a-171">При вызове конструктора с правильным паролем расшифровывается закрытый ключ и сохраняет его в контейнер ключей.</span><span class="sxs-lookup"><span data-stu-id="81c0a-171">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="81c0a-172">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="81c0a-172">Never hard code a password within your source code.</span></span>  <span data-ttu-id="81c0a-173">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="81c0a-173">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="81c0a-174">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate> сертификата путем указания хранилища подписанного файла PKCS7 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="81c0a-174">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-175">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-175">An error with the certificate occurs.</span></span> <span data-ttu-id="81c0a-176">Например:</span><span class="sxs-lookup"><span data-stu-id="81c0a-176">For example:</span></span> 
<span data-ttu-id="81c0a-177">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="81c0a-177">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="81c0a-178">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-178">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="81c0a-179">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-179">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="81c0a-180">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="81c0a-180">for accessing unmanaged code.</span></span> <span data-ttu-id="81c0a-181">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-181">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="81c0a-182">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="81c0a-182">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="81c0a-183">Массив байтов, содержащий данные сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-183">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="81c0a-184">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-184">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="81c0a-185">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием массива байтов и пароля.</span><span class="sxs-lookup"><span data-stu-id="81c0a-185">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-186">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> с помощью массива байтов и пароля, который необходим для доступа к данным сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-186">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array and a password that is needed to access the certificate data.</span></span> <span data-ttu-id="81c0a-187">Он используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-187">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="81c0a-188">При вызове конструктора с правильным паролем расшифровывается закрытый ключ и сохраняет его в контейнер ключей.</span><span class="sxs-lookup"><span data-stu-id="81c0a-188">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="81c0a-189">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="81c0a-189">Never hard code a password within your source code.</span></span>  <span data-ttu-id="81c0a-190">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="81c0a-190">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="81c0a-191">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификата путем указания хранилища подписанного файла PKCS7 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="81c0a-191">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-192">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-192">An error with the certificate occurs.</span></span> <span data-ttu-id="81c0a-193">Например:</span><span class="sxs-lookup"><span data-stu-id="81c0a-193">For example:</span></span> 
<span data-ttu-id="81c0a-194">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="81c0a-194">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="81c0a-195">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-195">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="81c0a-196">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-196">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="81c0a-197">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="81c0a-197">for accessing unmanaged code.</span></span> <span data-ttu-id="81c0a-198">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-198">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="81c0a-199">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="81c0a-199">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected X509Certificate2 (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; X509Certificate2(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="81c0a-200">Сведения о сериализации, необходимые для десериализации нового объекта <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-200">The serialization information required to deserialize the new <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span></span></param>
        <param name="context"><span data-ttu-id="81c0a-201">Контекстные сведения об источнике десериализуемого потока.</span><span class="sxs-lookup"><span data-stu-id="81c0a-201">Contextual information about the source of the stream to be deserialized.</span></span></param>
        <summary><span data-ttu-id="81c0a-202">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, используя заданную информацию о сериализации и контексте потоков.</span><span class="sxs-lookup"><span data-stu-id="81c0a-202">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using the specified serialization and stream context information.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="81c0a-203">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="81c0a-203">for accessing unmanaged code.</span></span> <span data-ttu-id="81c0a-204">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-204">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="81c0a-205">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="81c0a-205">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * System.Security.SecureString -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="81c0a-206">Имя файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-206">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="81c0a-207">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-207">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="81c0a-208">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием имени файла сертификата и пароля.</span><span class="sxs-lookup"><span data-stu-id="81c0a-208">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-209">Этот конструктор используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-209">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="81c0a-210">При вызове конструктора с правильным паролем расшифровывается закрытый ключ и сохраняет его в контейнер ключей.</span><span class="sxs-lookup"><span data-stu-id="81c0a-210">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="81c0a-211">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="81c0a-211">Never hard code a password within your source code.</span></span>  <span data-ttu-id="81c0a-212">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="81c0a-212">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="81c0a-213">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate> сертификата путем указания хранилища подписанного файла PKCS7 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="81c0a-213">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-214">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-214">An error with the certificate occurs.</span></span> <span data-ttu-id="81c0a-215">Например:</span><span class="sxs-lookup"><span data-stu-id="81c0a-215">For example:</span></span> 
<span data-ttu-id="81c0a-216">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="81c0a-216">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="81c0a-217">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-217">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="81c0a-218">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-218">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="81c0a-219">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="81c0a-219">for accessing unmanaged code.</span></span> <span data-ttu-id="81c0a-220">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-220">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="81c0a-221">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="81c0a-221">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="81c0a-222">Имя файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-222">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="81c0a-223">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-223">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="81c0a-224">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, используя имя файла сертификата и пароль для доступа к сертификату.</span><span class="sxs-lookup"><span data-stu-id="81c0a-224">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password used to access the certificate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-225">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> с помощью имени файла сертификата и пароль, необходимый для доступа к сертификату.</span><span class="sxs-lookup"><span data-stu-id="81c0a-225">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name and a password needed to access the certificate.</span></span> <span data-ttu-id="81c0a-226">Он используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-226">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="81c0a-227">При вызове конструктора с правильным паролем расшифровывается закрытый ключ и сохраняет его в контейнер ключей.</span><span class="sxs-lookup"><span data-stu-id="81c0a-227">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="81c0a-228">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="81c0a-228">Never hard code a password within your source code.</span></span>  <span data-ttu-id="81c0a-229">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="81c0a-229">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="81c0a-230">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификата путем указания хранилища подписанного файла PKCS7 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="81c0a-230">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-231">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-231">An error with the certificate occurs.</span></span> <span data-ttu-id="81c0a-232">Например:</span><span class="sxs-lookup"><span data-stu-id="81c0a-232">For example:</span></span> 
<span data-ttu-id="81c0a-233">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="81c0a-233">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="81c0a-234">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-234">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="81c0a-235">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-235">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="81c0a-236">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="81c0a-236">for accessing unmanaged code.</span></span> <span data-ttu-id="81c0a-237">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-237">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="81c0a-238">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="81c0a-238">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="81c0a-239">Массив байтов, содержащий данные из сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-239">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="81c0a-240">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-240">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="81c0a-241">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span><span class="sxs-lookup"><span data-stu-id="81c0a-241">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="81c0a-242">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием массива байтов, пароля и флага хранилища ключей.</span><span class="sxs-lookup"><span data-stu-id="81c0a-242">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-243">Этот конструктор используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-243">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="81c0a-244">При вызове конструктора с правильным паролем расшифровывается закрытый ключ и сохраняет его в Microsoft API криптографических служб шифрования поставщика (CSP).</span><span class="sxs-lookup"><span data-stu-id="81c0a-244">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="81c0a-245">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="81c0a-245">Never hard code a password within your source code.</span></span>  <span data-ttu-id="81c0a-246">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="81c0a-246">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="81c0a-247">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate> сертификата путем указания хранилища подписанного файла PKCS7 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="81c0a-247">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-248">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-248">An error with the certificate occurs.</span></span> <span data-ttu-id="81c0a-249">Например:</span><span class="sxs-lookup"><span data-stu-id="81c0a-249">For example:</span></span> 
<span data-ttu-id="81c0a-250">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="81c0a-250">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="81c0a-251">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-251">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="81c0a-252">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-252">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="81c0a-253">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="81c0a-253">for accessing unmanaged code.</span></span> <span data-ttu-id="81c0a-254">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-254">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="81c0a-255">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="81c0a-255">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="81c0a-256">Массив байтов, содержащий данные сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-256">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="81c0a-257">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-257">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="81c0a-258">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span><span class="sxs-lookup"><span data-stu-id="81c0a-258">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="81c0a-259">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием массива байтов, пароля и флага хранилища ключей.</span><span class="sxs-lookup"><span data-stu-id="81c0a-259">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-260">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> массива объекта с помощью типа byte, пароль, необходимый для доступа к данных сертификата и флага хранилища ключей.</span><span class="sxs-lookup"><span data-stu-id="81c0a-260">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array, a password that is needed to access the certificate data, and a key storage flag.</span></span> <span data-ttu-id="81c0a-261">Он используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-261">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="81c0a-262">При вызове конструктора с правильным паролем расшифровывается закрытый ключ и сохраняет его в Microsoft API криптографических служб шифрования поставщика (CSP).</span><span class="sxs-lookup"><span data-stu-id="81c0a-262">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="81c0a-263">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="81c0a-263">Never hard code a password within your source code.</span></span>  <span data-ttu-id="81c0a-264">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="81c0a-264">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="81c0a-265">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификата путем указания хранилища подписанного файла PKCS7 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="81c0a-265">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-266">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-266">An error with the certificate occurs.</span></span> <span data-ttu-id="81c0a-267">Например:</span><span class="sxs-lookup"><span data-stu-id="81c0a-267">For example:</span></span> 
<span data-ttu-id="81c0a-268">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="81c0a-268">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="81c0a-269">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-269">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="81c0a-270">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-270">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="81c0a-271">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="81c0a-271">for accessing unmanaged code.</span></span> <span data-ttu-id="81c0a-272">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-272">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="81c0a-273">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="81c0a-273">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="81c0a-274">Имя файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-274">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="81c0a-275">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-275">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="81c0a-276">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span><span class="sxs-lookup"><span data-stu-id="81c0a-276">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="81c0a-277">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием имени файла сертификата, пароля и флага хранилища ключа.</span><span class="sxs-lookup"><span data-stu-id="81c0a-277">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-278">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate> сертификата путем указания хранилища подписанного файла PKCS7 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="81c0a-278">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-279">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-279">An error with the certificate occurs.</span></span> <span data-ttu-id="81c0a-280">Например:</span><span class="sxs-lookup"><span data-stu-id="81c0a-280">For example:</span></span> 
<span data-ttu-id="81c0a-281">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="81c0a-281">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="81c0a-282">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-282">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="81c0a-283">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-283">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="81c0a-284">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="81c0a-284">for accessing unmanaged code.</span></span> <span data-ttu-id="81c0a-285">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-285">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="81c0a-286">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="81c0a-286">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="81c0a-287">Имя файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-287">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="81c0a-288">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-288">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="81c0a-289">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span><span class="sxs-lookup"><span data-stu-id="81c0a-289">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="81c0a-290">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием имени файла сертификата и пароля для доступа к сертификату, а также флага хранилища ключа.</span><span class="sxs-lookup"><span data-stu-id="81c0a-290">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password used to access the certificate, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-291">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> имя объекта, используя файл сертификата, пароль, необходимый для доступа к сертификату, а также флага хранилища ключей.</span><span class="sxs-lookup"><span data-stu-id="81c0a-291">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name, a password needed to access the certificate, and a key storage flag.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="81c0a-292">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="81c0a-292">Never hard code a password within your source code.</span></span>  <span data-ttu-id="81c0a-293">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="81c0a-293">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="81c0a-294">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификата путем указания хранилища подписанного файла PKCS7 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="81c0a-294">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-295">Произошла ошибка сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-295">An error with the certificate occurs.</span></span> <span data-ttu-id="81c0a-296">Например:</span><span class="sxs-lookup"><span data-stu-id="81c0a-296">For example:</span></span> 
<span data-ttu-id="81c0a-297">– Заданный файл сертификата не существует.</span><span class="sxs-lookup"><span data-stu-id="81c0a-297">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="81c0a-298">— Сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-298">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="81c0a-299">— Пароль сертификата неверен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-299">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="81c0a-300">для доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="81c0a-300">for accessing unmanaged code.</span></span> <span data-ttu-id="81c0a-301">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-301">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="81c0a-302">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="81c0a-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Archived">
      <MemberSignature Language="C#" Value="public bool Archived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Archived" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived" />
      <MemberSignature Language="VB.NET" Value="Public Property Archived As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Archived { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Archived : bool with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Archived" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81c0a-303">Получает или задает значение, указывающее на архивирование сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-303">Gets or sets a value indicating that an X.509 certificate is archived.</span></span></summary>
        <value><span data-ttu-id="81c0a-304">Значение <see langword="true" />, если сертификат архивирован, значение<see langword="false" />, если сертификат не архивирован.</span><span class="sxs-lookup"><span data-stu-id="81c0a-304"><see langword="true" /> if the certificate is archived, <see langword="false" /> if the certificate is not archived.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-305">Это свойство имеет значение только для сертификата, связанного с хранилищем.</span><span class="sxs-lookup"><span data-stu-id="81c0a-305">This property is set only on a certificate that is associated with a store.</span></span> <span data-ttu-id="81c0a-306">Если свойство имеет значение и добавить сертификат в хранилище сертификатов, то значение сохраняется.</span><span class="sxs-lookup"><span data-stu-id="81c0a-306">If the property is set and the certificate is added to a certificate store, the value is persisted.</span></span> <span data-ttu-id="81c0a-307">Если свойство имеет значение для сертификата, извлекаются из хранилища, то значение сохраняется немедленно.</span><span class="sxs-lookup"><span data-stu-id="81c0a-307">If the property is set on a certificate retrieved from a store, the value is persisted immediately.</span></span>  
  
 <span data-ttu-id="81c0a-308">В хранилище X.509, архив сертификатов, не включаются в возвращаемом <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> Если <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> свойству `true`.</span><span class="sxs-lookup"><span data-stu-id="81c0a-308">In an X.509 store, archived certificates are not included in the returned <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> object unless the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> property is set to `true`.</span></span> <span data-ttu-id="81c0a-309">Не выполняются никакие физических архивных действия при <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> значение включать и отключать.</span><span class="sxs-lookup"><span data-stu-id="81c0a-309">No physical archival activity occurs when the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> value is set or unset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-310">В следующем примере кода открывает хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-310">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="81c0a-311">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="81c0a-311">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-312">Сертификат не читается.</span><span class="sxs-lookup"><span data-stu-id="81c0a-312">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public override byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Export(valuetype System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Export (contentType As X509ContentType, password As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Export(System::Security::Cryptography::X509Certificates::X509ContentType contentType, System::String ^ password);" />
      <MemberSignature Language="F#" Value="override this.Export : System.Security.Cryptography.X509Certificates.X509ContentType * string -&gt; byte[]" Usage="x509Certificate2.Export (contentType, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("X509ContentType.SerializedCert is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Security.Cryptography.X509Certificates.X509ContentType" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="password" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="contentType">To be added.</param>
        <param name="password">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As X509ExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ Extensions { System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Extensions : System.Security.Cryptography.X509Certificates.X509ExtensionCollection" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81c0a-313">Возвращает коллекцию объектов <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-313">Gets a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects.</span></span></summary>
        <value><span data-ttu-id="81c0a-314">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-314">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-315">Расширения, определенные в формат сертификата X.509 v3 разрешить дополнительные данные, которые будут включены в сертификате.</span><span class="sxs-lookup"><span data-stu-id="81c0a-315">The extensions defined in the X.509 v3 certificate format allow additional data to be included in the certificate.</span></span> <span data-ttu-id="81c0a-316">Большое число расширений определяются ISO в определении X.509 v3, так и по PKIX в RFC 3280 "[сертификата и профиля список ОТЗЫВА сертификатов отзыва](https://go.microsoft.com/fwlink/?LinkId=45286).»</span><span class="sxs-lookup"><span data-stu-id="81c0a-316">A number of extensions are defined by ISO in the X.509 v3 definition as well as by PKIX in RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](https://go.microsoft.com/fwlink/?LinkId=45286)."</span></span> <span data-ttu-id="81c0a-317">Распространенные расширения включают в себя сведения, касающиеся использования ключа (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>), ключевые идентификаторы (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>), сертификатов, политик, сведения об отзыве (расширение точки распространения списка отзыва Сертификатов) и других целей.</span><span class="sxs-lookup"><span data-stu-id="81c0a-317">Common extensions include information regarding key usage (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>), key identifiers (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>), certificate policies, revocation information (CRL Distribution Point extension), and other uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-318">В следующем примере кода открывает хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-318">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="81c0a-319">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="81c0a-319">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-320">Сертификат не читается.</span><span class="sxs-lookup"><span data-stu-id="81c0a-320">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FriendlyName">
      <MemberSignature Language="C#" Value="public string FriendlyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FriendlyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName" />
      <MemberSignature Language="VB.NET" Value="Public Property FriendlyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FriendlyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FriendlyName : string with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81c0a-321">Получает или задает связанный псевдоним для сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-321">Gets or sets the associated alias for a certificate.</span></span></summary>
        <value><span data-ttu-id="81c0a-322">Понятное имя сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-322">The certificate's friendly name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-323">Понятные имена являются свойствами в хранилище сертификатов X.509, который может быть задан.</span><span class="sxs-lookup"><span data-stu-id="81c0a-323">Friendly names are properties in the X.509 certificate store that can be set.</span></span> <span data-ttu-id="81c0a-324">Они используются, чтобы пользователь мог связать псевдонимы с сертификатами, поэтому их можно было легко идентифицировать.</span><span class="sxs-lookup"><span data-stu-id="81c0a-324">They are used to enable a user to associate aliases with certificates so they can be easily identified.</span></span>  
  
 <span data-ttu-id="81c0a-325">Если понятное имя не существует для сертификата, пустая строка ("») возвращается.</span><span class="sxs-lookup"><span data-stu-id="81c0a-325">If no friendly name exists for the certificate, an empty string ("") is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-326">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-326">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-327">Сертификат не читается.</span><span class="sxs-lookup"><span data-stu-id="81c0a-327">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCertContentType">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="81c0a-328">Показывает тип сертификата, содержащегося в массиве байтов или файле.</span><span class="sxs-lookup"><span data-stu-id="81c0a-328">Indicates the type of certificate contained in a byte array or file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (rawData As Byte()) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="static member GetCertContentType : byte[] -&gt; System.Security.Cryptography.X509Certificates.X509ContentType" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType rawData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12, Pkcs7 and Unknown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="81c0a-329">Массив байтов, содержащий данные сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-329">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="81c0a-330">Показывает тип сертификата, содержащегося в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-330">Indicates the type of certificate contained in a byte array.</span></span></summary>
        <returns><span data-ttu-id="81c0a-331">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-331">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-332">Этот метод позволяет определить тип сертификата в файле.</span><span class="sxs-lookup"><span data-stu-id="81c0a-332">This method enables you to discover the type of certificate in a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-333">В следующем примере кода открывает хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-333">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="81c0a-334">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="81c0a-334">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="81c0a-335">Параметр <paramref name="rawData" /> имеет нулевую длину, или его значение равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-335"><paramref name="rawData" /> has a zero length or is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (fileName As String) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member GetCertContentType : string -&gt; System.Security.Cryptography.X509Certificates.X509ContentType" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12 and Unknown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="81c0a-336">Имя файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-336">The name of a certificate file.</span></span></param>
        <summary><span data-ttu-id="81c0a-337">Показывает тип сертификата, содержащегося в файле.</span><span class="sxs-lookup"><span data-stu-id="81c0a-337">Indicates the type of certificate contained in a file.</span></span></summary>
        <returns><span data-ttu-id="81c0a-338">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-338">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-339">Этот метод позволяет определить тип сертификата в файле.</span><span class="sxs-lookup"><span data-stu-id="81c0a-339">This method enables you to discover the type of certificate in a file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81c0a-340"><paramref name="fileName" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-340"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="81c0a-341">для чтения сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-341">for reading the certificate.</span></span> <span data-ttu-id="81c0a-342">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-342">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="81c0a-343">Связанное перечисление: <see cref="F:System.IO.FileAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="81c0a-343">Associated enumeration: <see cref="F:System.IO.FileAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetNameInfo">
      <MemberSignature Language="C#" Value="public string GetNameInfo (System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetNameInfo(valuetype System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNameInfo (nameType As X509NameType, forIssuer As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetNameInfo(System::Security::Cryptography::X509Certificates::X509NameType nameType, bool forIssuer);" />
      <MemberSignature Language="F#" Value="member this.GetNameInfo : System.Security.Cryptography.X509Certificates.X509NameType * bool -&gt; string" Usage="x509Certificate2.GetNameInfo (nameType, forIssuer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("always return String.Empty for UpnName, DnsFromAlternativeName and UrlName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameType" Type="System.Security.Cryptography.X509Certificates.X509NameType" />
        <Parameter Name="forIssuer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nameType"><span data-ttu-id="81c0a-344">Значение <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> для субъекта.</span><span class="sxs-lookup"><span data-stu-id="81c0a-344">The <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> value for the subject.</span></span></param>
        <param name="forIssuer"><span data-ttu-id="81c0a-345">Значение <see langword="true" /> для включения имени поставщика; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-345"><see langword="true" /> to include the issuer name; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="81c0a-346">Получает имена субъекта и поставщика сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-346">Gets the subject and issuer names from a certificate.</span></span></summary>
        <returns><span data-ttu-id="81c0a-347">Имя сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-347">The name of the certificate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-348">Этот метод всегда должен использоваться вместо разбора сертификата, так как многие значения имени могут быть расположены в нескольких местах.</span><span class="sxs-lookup"><span data-stu-id="81c0a-348">This method should always be used instead of parsing the certificate, since many of the name values can be located in multiple locations.</span></span> <span data-ttu-id="81c0a-349">С помощью этого метода гарантирует, что возвращается соответствующее имя.</span><span class="sxs-lookup"><span data-stu-id="81c0a-349">Using this method ensures that the appropriate name is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-350">В следующем примере кода открывает хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-350">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="81c0a-351">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="81c0a-351">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrivateKey">
      <MemberSignature Language="C#" Value="public bool HasPrivateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPrivateKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPrivateKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasPrivateKey : bool" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81c0a-352">Возвращает значение, которое указывает, содержит ли объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> закрытый ключ.</span><span class="sxs-lookup"><span data-stu-id="81c0a-352">Gets a value that indicates whether an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key.</span></span></summary>
        <value><span data-ttu-id="81c0a-353">Значение <see langword="true" />, если объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> содержит закрытый ключ; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-353"><see langword="true" /> if the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-354">Недопустимый контекст сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-354">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Import">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="81c0a-355">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> предоставленными сведениями о сертификате.</span><span class="sxs-lookup"><span data-stu-id="81c0a-355">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with the certificate information provided.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="override this.Import : byte[] -&gt; unit" Usage="x509Certificate2.Import rawData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="81c0a-356">Массив байтов, содержащий данные сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-356">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="81c0a-357">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> данными из массива байтов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-357">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with data from a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-358">Этот метод можно использовать массив необработанных байтов сертификата X.509 и заполнить <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта, связанные с ним значения.</span><span class="sxs-lookup"><span data-stu-id="81c0a-358">This method can be used to take a raw byte array of an X.509 certificate and populate the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with its associated values.</span></span>  
  
 <span data-ttu-id="81c0a-359">Поскольку этот метод принимает только массив байтов, его можно использовать только для типов сертификатов, которые не требуют пароля, например, сертификат X.509 с кодировкой Base64 или DER или сертификата PFX/PKCS12.</span><span class="sxs-lookup"><span data-stu-id="81c0a-359">Since this method accepts only a byte array, it can be used only for certificate types that do not require a password, including a Base64-encoded or DER-encoded X.509 certificate or a PFX/PKCS12 certificate.</span></span> <span data-ttu-id="81c0a-360">Обратите внимание на то, что сертификат PFX/PKCS12 может содержать более одного сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-360">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="81c0a-361">В этом случае используется первый сертификат, связанный с закрытым ключом, или, если закрытый ключ не найден, используется первый сертификат.</span><span class="sxs-lookup"><span data-stu-id="81c0a-361">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="81c0a-362">для полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="81c0a-362">for full trust for the immediate caller.</span></span> <span data-ttu-id="81c0a-363">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="81c0a-363">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="81c0a-364">для полного доверия для разработчиков производных классов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-364">for full trust for inheritors.</span></span> <span data-ttu-id="81c0a-365">Этот член не может наследоваться кодом с частичным доверием.</span><span class="sxs-lookup"><span data-stu-id="81c0a-365">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="override this.Import : string -&gt; unit" Usage="x509Certificate2.Import fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="81c0a-366">Имя сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-366">The name of a certificate.</span></span></param>
        <summary><span data-ttu-id="81c0a-367">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> сведениями из файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-367">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-368">Этот метод использует файл сертификата, например файл с расширением CER-файл, который представляет сертификат X.509 и заполняет <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта с помощью сертификата, файл содержит.</span><span class="sxs-lookup"><span data-stu-id="81c0a-368">This method uses a certificate file, such as a file with a .cer extension, that represents an X.509 certificate and populates the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with the certificate the file contains.</span></span>  
  
 <span data-ttu-id="81c0a-369">Этот метод может использоваться с несколькими типами сертификатов, включая сертификаты X.509 в кодировке Base64 или DER-шифрование, сертификаты PFX/PKCS12 и сертификаты подписавшего, например Authenticode.</span><span class="sxs-lookup"><span data-stu-id="81c0a-369">This method can be used with several certificate types, including Base64-encoded or DER-encoded X.509 certificates, PFX/PKCS12 certificates, and signer certificates such as Authenticode.</span></span> <span data-ttu-id="81c0a-370">Обратите внимание на то, что сертификат PFX/PKCS12 может содержать более одного сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-370">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="81c0a-371">В этом случае используется первый сертификат, связанный с закрытым ключом, или, если закрытый ключ не найден, используется первый сертификат.</span><span class="sxs-lookup"><span data-stu-id="81c0a-371">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="81c0a-372">для полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="81c0a-372">for full trust for the immediate caller.</span></span> <span data-ttu-id="81c0a-373">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="81c0a-373">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="81c0a-374">для полного доверия для разработчиков производных классов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-374">for full trust for inheritors.</span></span> <span data-ttu-id="81c0a-375">Этот член не может наследоваться кодом с частичным доверием.</span><span class="sxs-lookup"><span data-stu-id="81c0a-375">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : byte[] * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (rawData, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("SecureString is incomplete")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="81c0a-376">Массив байтов, содержащий данные из сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-376">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="81c0a-377">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-377">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="81c0a-378">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span><span class="sxs-lookup"><span data-stu-id="81c0a-378">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="81c0a-379">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с помощью данных из массива данных, пароля и флага хранилища ключа.</span><span class="sxs-lookup"><span data-stu-id="81c0a-379">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-380">Этот метод можно использовать для типов сертификатов, такие как сертификаты X.509 в кодировке Base64 или DER или сертификаты PFX/PKCS12.</span><span class="sxs-lookup"><span data-stu-id="81c0a-380">You can use this method for certificate types such as Base64-encoded or DER-encoded X.509 certificates, or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="81c0a-381">Обратите внимание на то, что сертификат PFX/PKCS12 может содержать более одного сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-381">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="81c0a-382">В этом случае используется первый сертификат, связанный с закрытым ключом, или, если закрытый ключ не найден, используется первый сертификат.</span><span class="sxs-lookup"><span data-stu-id="81c0a-382">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="81c0a-383">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="81c0a-383">Never hard code a password within your source code.</span></span>  <span data-ttu-id="81c0a-384">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="81c0a-384">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="81c0a-385">для полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="81c0a-385">for full trust for the immediate caller.</span></span> <span data-ttu-id="81c0a-386">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="81c0a-386">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="81c0a-387">для полного доверия для разработчиков производных классов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-387">for full trust for inheritors.</span></span> <span data-ttu-id="81c0a-388">Этот член не может наследоваться кодом с частичным доверием.</span><span class="sxs-lookup"><span data-stu-id="81c0a-388">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : byte[] * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (rawData, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("missing KeyStorageFlags support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="81c0a-389">Массив байтов, содержащий данные сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-389">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="81c0a-390">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-390">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="81c0a-391">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span><span class="sxs-lookup"><span data-stu-id="81c0a-391">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="81c0a-392">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с помощью данных из массива данных, пароля и флагов, чтобы определить способ импорта закрытого ключа.</span><span class="sxs-lookup"><span data-stu-id="81c0a-392">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and flags for determining how to import the private key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-393">Этот метод можно использовать для заполнения <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта, используя пароль для сертификата, представленного массив байтов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-393">This method can be used to populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a password for the certificate represented by the byte array.</span></span> <span data-ttu-id="81c0a-394"><xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> Значение может использоваться для управления, где и как импорт закрытого ключа.</span><span class="sxs-lookup"><span data-stu-id="81c0a-394">The <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value can be used to control where and how to import the private key.</span></span>  
  
 <span data-ttu-id="81c0a-395">Этот метод принимает массив байтов и может использоваться для типов сертификатов, такие как сертификаты X.509 в кодировке Base64 или DER или сертификаты PFX/PKCS12.</span><span class="sxs-lookup"><span data-stu-id="81c0a-395">This method accepts a byte array and can be used for certificate types such as Base64-encoded or DER-encoded X.509 certificates or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="81c0a-396">Обратите внимание на то, что сертификат PFX/PKCS12 может содержать более одного сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-396">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="81c0a-397">В этом случае используется первый сертификат, связанный с закрытым ключом, или, если закрытый ключ не найден, используется первый сертификат.</span><span class="sxs-lookup"><span data-stu-id="81c0a-397">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="81c0a-398">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="81c0a-398">Never hard code a password within your source code.</span></span>  <span data-ttu-id="81c0a-399">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="81c0a-399">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-400">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-400">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="81c0a-401">для полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="81c0a-401">for full trust for the immediate caller.</span></span> <span data-ttu-id="81c0a-402">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="81c0a-402">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="81c0a-403">для полного доверия для разработчиков производных классов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-403">for full trust for inheritors.</span></span> <span data-ttu-id="81c0a-404">Этот член не может наследоваться кодом с частичным доверием.</span><span class="sxs-lookup"><span data-stu-id="81c0a-404">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : string * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("SecureString is incomplete")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="81c0a-405">Имя файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-405">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="81c0a-406">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-406">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="81c0a-407">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span><span class="sxs-lookup"><span data-stu-id="81c0a-407">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="81c0a-408">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> сведениями из файла сертификата, паролем и флагом хранилища ключа.</span><span class="sxs-lookup"><span data-stu-id="81c0a-408">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-409">**Примечание по безопасности** никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="81c0a-409">**Security Note** Never hard code a password within your source code.</span></span>  <span data-ttu-id="81c0a-410">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="81c0a-410">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="81c0a-411">для полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="81c0a-411">for full trust for the immediate caller.</span></span> <span data-ttu-id="81c0a-412">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="81c0a-412">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="81c0a-413">для полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="81c0a-413">for full trust for the immediate caller.</span></span> <span data-ttu-id="81c0a-414">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="81c0a-414">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : string * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("missing KeyStorageFlags support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="password" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="81c0a-415">Имя файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-415">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="81c0a-416">Пароль для доступа к данным сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-416">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="81c0a-417">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span><span class="sxs-lookup"><span data-stu-id="81c0a-417">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="81c0a-418">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> сведениями из файла сертификата, паролем и значением <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-418">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-419">Этот метод можно использовать заполнение <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сведениями из файла сертификата, паролем и <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> значение.</span><span class="sxs-lookup"><span data-stu-id="81c0a-419">This method can be used populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with information from a certificate file, a password, and an <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="81c0a-420">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="81c0a-420">Never hard code a password within your source code.</span></span>  <span data-ttu-id="81c0a-421">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="81c0a-421">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="81c0a-422">для полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="81c0a-422">for full trust for the immediate caller.</span></span> <span data-ttu-id="81c0a-423">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="81c0a-423">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="81c0a-424">для полного доверия для разработчиков производных классов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-424">for full trust for inheritors.</span></span> <span data-ttu-id="81c0a-425">Этот член не может наследоваться кодом с частичным доверием.</span><span class="sxs-lookup"><span data-stu-id="81c0a-425">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IssuerName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssuerName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ IssuerName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IssuerName : System.Security.Cryptography.X509Certificates.X500DistinguishedName" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81c0a-426">Получает различающееся имя поставщика сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-426">Gets the distinguished name of the certificate issuer.</span></span></summary>
        <value><span data-ttu-id="81c0a-427">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" />, содержащий имя поставщика сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-427">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that contains the name of the certificate issuer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-428">Это свойство содержит имя сертификации (ЦС), выдавшего сертификат.</span><span class="sxs-lookup"><span data-stu-id="81c0a-428">This property contains the name of the certificate authority (CA) that issued the certificate.</span></span> <span data-ttu-id="81c0a-429">Чтобы получить имя сертификата, используйте <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="81c0a-429">To obtain the name of a certificate, use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A> method.</span></span>  
  
 <span data-ttu-id="81c0a-430">Различающееся имя для сертификата является текстовым представлением субъекта или издателя сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-430">The distinguished name for the certificate is a textual representation of the certificate subject or issuer.</span></span> <span data-ttu-id="81c0a-431">Это представление состоит из атрибутов имени (например, «CN = MyName, OU = MyOrgUnit, C = US»).</span><span class="sxs-lookup"><span data-stu-id="81c0a-431">This representation consists of name attributes (for example, "CN=MyName, OU=MyOrgUnit, C=US").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-432">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-432">The following code example creates a command-line executable file that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-433">Недопустимый контекст сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-433">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotAfter">
      <MemberSignature Language="C#" Value="public DateTime NotAfter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotAfter" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotAfter As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotAfter { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.NotAfter : DateTime" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81c0a-434">Получает дату в формате местного времени, после которой сертификат недействителен.</span><span class="sxs-lookup"><span data-stu-id="81c0a-434">Gets the date in local time after which a certificate is no longer valid.</span></span></summary>
        <value><span data-ttu-id="81c0a-435">Объект <see cref="T:System.DateTime" />, представляющий дату окончания срока действия сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-435">A <see cref="T:System.DateTime" /> object that represents the expiration date for the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-436">Это свойство указывает дату окончания срока действия, в которой сертификат становится недействительным.</span><span class="sxs-lookup"><span data-stu-id="81c0a-436">This property indicates an expiration date on which the certificate becomes invalid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-437">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-437">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-438">Сертификат не читается.</span><span class="sxs-lookup"><span data-stu-id="81c0a-438">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotBefore">
      <MemberSignature Language="C#" Value="public DateTime NotBefore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotBefore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotBefore As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotBefore { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.NotBefore : DateTime" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81c0a-439">Получает дату в формате местного времени, после которой сертификат становится действительным.</span><span class="sxs-lookup"><span data-stu-id="81c0a-439">Gets the date in local time on which a certificate becomes valid.</span></span></summary>
        <value><span data-ttu-id="81c0a-440">Объект <see cref="T:System.DateTime" />, представляющий дату вступления в силу сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-440">A <see cref="T:System.DateTime" /> object that represents the effective date of the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-441">Это свойство указывает дату, на которой сертификат становится действительным.</span><span class="sxs-lookup"><span data-stu-id="81c0a-441">This property indicates the date on which the certificate becomes valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-442">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-442">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-443">Сертификат не читается.</span><span class="sxs-lookup"><span data-stu-id="81c0a-443">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PrivateKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.AsymmetricAlgorithm PrivateKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.AsymmetricAlgorithm PrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateKey As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::AsymmetricAlgorithm ^ PrivateKey { System::Security::Cryptography::AsymmetricAlgorithm ^ get(); void set(System::Security::Cryptography::AsymmetricAlgorithm ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrivateKey : System.Security.Cryptography.AsymmetricAlgorithm with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81c0a-444">Получает или задает объект <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />, который представляет закрытый ключ, связанный с сертификатом.</span><span class="sxs-lookup"><span data-stu-id="81c0a-444">Gets or sets the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object that represents the private key associated with a certificate.</span></span></summary>
        <value><span data-ttu-id="81c0a-445">Объект <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />, являющийся поставщиком служб шифрования RSA или DSA.</span><span class="sxs-lookup"><span data-stu-id="81c0a-445">An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object, which is either an RSA or DSA cryptographic service provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-446">В настоящее время это свойство поддерживает только RSA или DSA ключей, чтобы он возвращал либо <xref:System.Security.Cryptography.RSACryptoServiceProvider> или <xref:System.Security.Cryptography.DSACryptoServiceProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="81c0a-446">Currently this property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object.</span></span> <span data-ttu-id="81c0a-447">Если закрытый ключ не связано с сертификатом, он возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="81c0a-447">If no private key is associated with the certificate, it returns `null`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="81c0a-448">Если задано это свойство `null` или на другой ключ, не удаляя его, файл закрытого ключа, остается на диске.</span><span class="sxs-lookup"><span data-stu-id="81c0a-448">If you set this property to `null` or to another key without first deleting it, a private key file is left on the disk.</span></span>  
  
 <span data-ttu-id="81c0a-449">Чтобы правильно удалить закрытый ключ, связанный с этим свойством, задайте `PersistKeyInCsp` для `false`, а затем вызвать <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="81c0a-449">To properly delete the private key associated with this property, set `PersistKeyInCsp` to `false`, and then call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-450">В следующем примере кода открывает хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-450">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="81c0a-451">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="81c0a-451">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-452">Значение ключа не является значением RSA или DSA, или ключ не читается.</span><span class="sxs-lookup"><span data-stu-id="81c0a-452">The key value is not an RSA or DSA key, or the key is unreadable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81c0a-453">Для этого свойства устанавливается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-453">The value being set for this property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="81c0a-454">Алгоритм ключа для этого закрытого ключа не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="81c0a-454">The key algorithm for this private key is not supported.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException"><span data-ttu-id="81c0a-455">Ключи X.509 не совпадают.</span><span class="sxs-lookup"><span data-stu-id="81c0a-455">The X.509 keys do not match.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="81c0a-456">Значение ключа поставщика служб шифрования равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-456">The cryptographic service provider key is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.PublicKey PublicKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.PublicKey PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicKey As PublicKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::PublicKey ^ PublicKey { System::Security::Cryptography::X509Certificates::PublicKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PublicKey : System.Security.Cryptography.X509Certificates.PublicKey" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.PublicKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81c0a-457">Получает объект <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />, связанный с сертификатом.</span><span class="sxs-lookup"><span data-stu-id="81c0a-457">Gets a <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object associated with a certificate.</span></span></summary>
        <value><span data-ttu-id="81c0a-458">Объект <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-458">A <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-459">Это свойство возвращает <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> объект, содержащий идентификатор объекта (<xref:System.Security.Cryptography.Oid>) представляющий алгоритм открытого ключа, параметры кодировке ASN.1 и значение ключа кодировке ASN.1.</span><span class="sxs-lookup"><span data-stu-id="81c0a-459">This property returns a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> object, which contains the object identifier (<xref:System.Security.Cryptography.Oid>) representing the public key algorithm, the ASN.1-encoded parameters, and the ASN.1-encoded key value.</span></span>  
  
 <span data-ttu-id="81c0a-460">Вы также можете получить ключ как <xref:System.Security.Cryptography.AsymmetricAlgorithm> объекта, ссылаясь на <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="81c0a-460">You can also obtain the key as an <xref:System.Security.Cryptography.AsymmetricAlgorithm> object by referencing the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> property.</span></span> <span data-ttu-id="81c0a-461">Это свойство поддерживает только RSA или DSA ключей, чтобы он возвращал либо <xref:System.Security.Cryptography.RSACryptoServiceProvider> или <xref:System.Security.Cryptography.DSACryptoServiceProvider> , представляющий открытый ключ.</span><span class="sxs-lookup"><span data-stu-id="81c0a-461">This property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object that represents the public key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-462">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-462">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-463">Значение ключа не является значением RSA или DSA, или ключ не читается.</span><span class="sxs-lookup"><span data-stu-id="81c0a-463">The key value is not an RSA or DSA key, or the key is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RawData">
      <MemberSignature Language="C#" Value="public byte[] RawData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] RawData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.RawData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ RawData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawData : byte[]" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.RawData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81c0a-464">Получает необработанные данные сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-464">Gets the raw data of a certificate.</span></span></summary>
        <value><span data-ttu-id="81c0a-465">Необработанные данные сертификата в качестве массива байтов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-465">The raw data of the certificate as a byte array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81c0a-466">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-466">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="x509Certificate2.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="81c0a-467">Сбрасывает состояние объекта <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span><span class="sxs-lookup"><span data-stu-id="81c0a-467">Resets the state of an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-468">Этот метод может использоваться для сброса состояния сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-468">This method can be used to reset the state of the certificate.</span></span> <span data-ttu-id="81c0a-469">Она также освобождает все ресурсы, связанные с сертификатом.</span><span class="sxs-lookup"><span data-stu-id="81c0a-469">It also frees any resources associated with the certificate.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="81c0a-470">для полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="81c0a-470">for full trust for the immediate caller.</span></span> <span data-ttu-id="81c0a-471">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="81c0a-471">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="81c0a-472">для полного доверия для разработчиков производных классов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-472">for full trust for inheritors.</span></span> <span data-ttu-id="81c0a-473">Этот член не может наследоваться кодом с частичным доверием.</span><span class="sxs-lookup"><span data-stu-id="81c0a-473">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SerialNumber">
      <MemberSignature Language="C#" Value="public string SerialNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerialNumber" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerialNumber As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerialNumber { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerialNumber : string" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81c0a-474">Получает серийный номер сертификата в виде шестнадцатеричной строки в обратном порядке.</span><span class="sxs-lookup"><span data-stu-id="81c0a-474">Gets the serial number of a certificate as a big-endian hexadecimal string.</span></span></summary>
        <value><span data-ttu-id="81c0a-475">Серийный номер сертификата в виде шестнадцатеричной строки с обратным порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-475">The serial number of the certificate as a big-endian hexadecimal string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-476">Серийный номер сертификата является частью исходного протокола X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-476">The serial number of the certificate is part of the original X.509 protocol.</span></span> <span data-ttu-id="81c0a-477">Серийный номер — уникальный номер, выданный поставщиком сертификата, который также называется центра сертификации (ЦС).</span><span class="sxs-lookup"><span data-stu-id="81c0a-477">The serial number is a unique number issued by the certificate issuer, which is also called the Certificate Authority (CA).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-478">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-478">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureAlgorithm As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ SignatureAlgorithm { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureAlgorithm : System.Security.Cryptography.Oid" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81c0a-479">Получает алгоритм, используемый для создания подписи сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-479">Gets the algorithm used to create the signature of a certificate.</span></span></summary>
        <value><span data-ttu-id="81c0a-480">Идентификатор объекта алгоритма подписи.</span><span class="sxs-lookup"><span data-stu-id="81c0a-480">The object identifier of the signature algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-481">Идентификатор объекта (<xref:System.Security.Cryptography.Oid>) определяет тип алгоритма подписи, используемый в сертификате.</span><span class="sxs-lookup"><span data-stu-id="81c0a-481">The object identifier (<xref:System.Security.Cryptography.Oid>) identifies the type of signature algorithm used by the certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-482">В следующем примере кода открывает хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-482">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="81c0a-483">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="81c0a-483">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-484">Сертификат не читается.</span><span class="sxs-lookup"><span data-stu-id="81c0a-484">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubjectName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubjectName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ SubjectName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubjectName : System.Security.Cryptography.X509Certificates.X500DistinguishedName" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81c0a-485">Получает различающееся имя субъекта от сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-485">Gets the subject distinguished name from a certificate.</span></span></summary>
        <value><span data-ttu-id="81c0a-486">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" />, представляющий имя субъекта сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-486">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that represents the name of the certificate subject.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-487">Различающееся имя субъекта — это имя пользователя сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-487">The subject distinguished name is the name of the user of the certificate.</span></span> <span data-ttu-id="81c0a-488">Различающееся имя для сертификата является текстовым представлением субъекта или поставщика сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-488">The distinguished name for the certificate is a textual representation of the subject or issuer of the certificate.</span></span> <span data-ttu-id="81c0a-489">Это представление состоит из атрибуты имени, например, «CN = MyName, OU = MyOrgUnit, C = US».</span><span class="sxs-lookup"><span data-stu-id="81c0a-489">This representation consists of name attributes, for example, "CN=MyName, OU=MyOrgUnit, C=US".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-490">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-490">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-491">Недопустимый контекст сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-491">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Thumbprint">
      <MemberSignature Language="C#" Value="public string Thumbprint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Thumbprint" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Thumbprint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Thumbprint { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Thumbprint : string" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81c0a-492">Получает отпечаток сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-492">Gets the thumbprint of a certificate.</span></span></summary>
        <value><span data-ttu-id="81c0a-493">Отпечаток сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-493">The thumbprint of the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-494">Отпечаток динамически создается с помощью алгоритма SHA1 и физически не существует в сертификате.</span><span class="sxs-lookup"><span data-stu-id="81c0a-494">The thumbprint is dynamically generated using the SHA1 algorithm and does not physically exist in the certificate.</span></span> <span data-ttu-id="81c0a-495">Так как отпечаток — это уникальное значение для сертификата, он обычно используется для поиска определенного сертификата в хранилище сертификатов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-495">Since the thumbprint is a unique value for the certificate, it is commonly used to find a particular certificate in a certificate store.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-496">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-496">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="81c0a-497">Отображает сертификат X.509 в текстовом формате.</span><span class="sxs-lookup"><span data-stu-id="81c0a-497">Displays an X.509 certificate in text format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="x509Certificate2.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="81c0a-498">Отображает сертификат X.509 в текстовом формате.</span><span class="sxs-lookup"><span data-stu-id="81c0a-498">Displays an X.509 certificate in text format.</span></span></summary>
        <returns><span data-ttu-id="81c0a-499">Сведения о сертификате.</span><span class="sxs-lookup"><span data-stu-id="81c0a-499">The certificate information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-500">Как и во всех `ToString` методов, выходные данные могут быть несогласованными всех версий платформы .NET Framework, поэтому не следует проанализировать результаты метода для содержимого.</span><span class="sxs-lookup"><span data-stu-id="81c0a-500">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="81c0a-501">Используйте свойства <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта, чтобы получить точную информацию о содержимом или использовать <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A> метод, чтобы получить сведения о сертификате.</span><span class="sxs-lookup"><span data-stu-id="81c0a-501">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information about the content or use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A> method to obtain information about the certificate.</span></span>  
  
 <span data-ttu-id="81c0a-502">Этот метод отображает сертификат в текстовом формате.</span><span class="sxs-lookup"><span data-stu-id="81c0a-502">This method displays the certificate in text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-503">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-503">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString (bool verbose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString(bool verbose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString (verbose As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString(bool verbose);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool -&gt; string" Usage="x509Certificate2.ToString verbose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verbose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="verbose"><span data-ttu-id="81c0a-504">Значение <see langword="true" /> для отображения открытого ключа, закрытого ключа, расширений и т. д.; значение <see langword="false" /> для отображения сведений, аналогичных классу <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, в том числе отпечаток, серийный номер, имена субъекта и поставщика и т. д.</span><span class="sxs-lookup"><span data-stu-id="81c0a-504"><see langword="true" /> to display the public key, private key, extensions, and so forth; <see langword="false" /> to display information that is similar to the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class, including thumbprint, serial number, subject and issuer names, and so on.</span></span></param>
        <summary><span data-ttu-id="81c0a-505">Отображает сертификат X.509 в текстовом формате.</span><span class="sxs-lookup"><span data-stu-id="81c0a-505">Displays an X.509 certificate in text format.</span></span></summary>
        <returns><span data-ttu-id="81c0a-506">Сведения о сертификате.</span><span class="sxs-lookup"><span data-stu-id="81c0a-506">The certificate information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-507">Как и во всех `ToString` методов, выходные данные могут быть несогласованными всех версий платформы .NET Framework, поэтому не следует проанализировать результаты метода для содержимого.</span><span class="sxs-lookup"><span data-stu-id="81c0a-507">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="81c0a-508">Используйте свойства <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта, чтобы получить точную информацию.</span><span class="sxs-lookup"><span data-stu-id="81c0a-508">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information.</span></span>  
  
 <span data-ttu-id="81c0a-509">Этот метод отображает сертификат в текстовом формате.</span><span class="sxs-lookup"><span data-stu-id="81c0a-509">This method displays the certificate in text format.</span></span> <span data-ttu-id="81c0a-510">Если `verbose` параметр имеет значение `true`, текстовое отображение включает открытый ключ, закрытый ключ и расширения.</span><span class="sxs-lookup"><span data-stu-id="81c0a-510">If the `verbose` parameter is set to `true`, the text display includes the public key, private key, and extensions.</span></span> <span data-ttu-id="81c0a-511">Если `verbose` присваивается `false`, текстовое отображение включает поля, доступные в сертификате X.509, в том числе отпечаток, серийный номер, имена субъекта и поставщика и сведения о дате на допустимость.</span><span class="sxs-lookup"><span data-stu-id="81c0a-511">If `verbose` is set to `false`, the text display includes those fields available from the X.509 certificate, including thumbprint, serial number, subject and issuer names, and validity date information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-512">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-512">The following code example creates a command line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public bool Verify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Verify() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Verify" />
      <MemberSignature Language="VB.NET" Value="Public Function Verify () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Verify();" />
      <MemberSignature Language="F#" Value="member this.Verify : unit -&gt; bool" Usage="x509Certificate2.Verify " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("by default this depends on the incomplete X509Chain")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="81c0a-513">Выполняет проверку цепочки X.509 с использованием базовой политики проверки.</span><span class="sxs-lookup"><span data-stu-id="81c0a-513">Performs a X.509 chain validation using basic validation policy.</span></span></summary>
        <returns><span data-ttu-id="81c0a-514">Значение <see langword="true" />, если проверка прошла успешно; значение <see langword="false" />, если произошел сбой проверки.</span><span class="sxs-lookup"><span data-stu-id="81c0a-514"><see langword="true" /> if the validation succeeds; <see langword="false" /> if the validation fails.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-515">Этот метод создает простую цепочку для сертификата и применяет базовую политику для этой цепочки.</span><span class="sxs-lookup"><span data-stu-id="81c0a-515">This method builds a simple chain for the certificate and applies the base policy to that chain.</span></span> <span data-ttu-id="81c0a-516">Если требуются дополнительные сведения о сбое, проверить сертификат напрямую с помощью <xref:System.Security.Cryptography.X509Certificates.X509Chain> объекта.</span><span class="sxs-lookup"><span data-stu-id="81c0a-516">If you need more information about a failure, validate the certificate directly using the <xref:System.Security.Cryptography.X509Certificates.X509Chain> object.</span></span>  
  
 <span data-ttu-id="81c0a-517">Обратите внимание, что цепочки ядра по умолчанию можно переопределить с помощью <xref:System.Security.Cryptography.CryptoConfig> класса.</span><span class="sxs-lookup"><span data-stu-id="81c0a-517">Note that the default chaining engine can be overridden using the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span> <span data-ttu-id="81c0a-518">В Microsoft Windows Server 2003, система по умолчанию соответствует спецификации, описанные в RFC3280, "[сертификата и профиля список ОТЗЫВА сертификатов отзыва](https://go.microsoft.com/fwlink/?LinkId=45286).»</span><span class="sxs-lookup"><span data-stu-id="81c0a-518">On Microsoft Windows Server 2003, the default engine conforms to the specification described in RFC3280, "[Certificate and Certificate Revocation List (CRL) Profile](https://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-519">В следующем примере кода открывает хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="81c0a-519">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="81c0a-520">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="81c0a-520">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-521">Сертификат не читается.</span><span class="sxs-lookup"><span data-stu-id="81c0a-521">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : int" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81c0a-522">Получает версию формата сертификата X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-522">Gets the X.509 format version of a certificate.</span></span></summary>
        <value><span data-ttu-id="81c0a-523">Формат сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-523">The certificate format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81c0a-524">Существует несколько версий сертификатов X.509.</span><span class="sxs-lookup"><span data-stu-id="81c0a-524">There are several versions of X.509 certificates.</span></span> <span data-ttu-id="81c0a-525">Это свойство определяет формат использует сертификат.</span><span class="sxs-lookup"><span data-stu-id="81c0a-525">This property identifies which format the certificate uses.</span></span> <span data-ttu-id="81c0a-526">Например «3» возвращается для сертификата версии 3.</span><span class="sxs-lookup"><span data-stu-id="81c0a-526">For example, "3" is returned for a version 3 certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81c0a-527">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="81c0a-527">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81c0a-528">Сертификат не читается.</span><span class="sxs-lookup"><span data-stu-id="81c0a-528">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>