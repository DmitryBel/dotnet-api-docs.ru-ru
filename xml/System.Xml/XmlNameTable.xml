<Type Name="XmlNameTable" FullName="System.Xml.XmlNameTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="76c0bf7204acf4625cdc60ad69785ec23b3c807a" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58744861" /></Metadata><TypeSignature Language="C#" Value="public abstract class XmlNameTable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlNameTable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNameTable" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlNameTable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNameTable abstract" />
  <TypeSignature Language="F#" Value="type XmlNameTable = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0cd60-101">Таблица атомизированных объектов строки.</span><span class="sxs-lookup"><span data-stu-id="0cd60-101">Table of atomized string objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cd60-102">Несколько классов, таких как <xref:System.Xml.XmlDocument> и <xref:System.Xml.XmlReader>, использовать `XmlNameTable` класс внутренне, для хранения имен атрибутов и элементов.</span><span class="sxs-lookup"><span data-stu-id="0cd60-102">Several classes, such as <xref:System.Xml.XmlDocument> and <xref:System.Xml.XmlReader>, use the `XmlNameTable` class internally to store attribute and element names.</span></span> <span data-ttu-id="0cd60-103">При неоднократном появлении имени атрибута или элемента в XML-документе оно сохраняется в `XmlNameTable` только один раз.</span><span class="sxs-lookup"><span data-stu-id="0cd60-103">When an element or attribute name occurs multiple times in an XML document, it is stored only once in the `XmlNameTable`.</span></span>  
  
 <span data-ttu-id="0cd60-104">Имена хранятся как типы объектов среды CLR.</span><span class="sxs-lookup"><span data-stu-id="0cd60-104">The names are stored as common language runtime (CLR) object types.</span></span> <span data-ttu-id="0cd60-105">Это позволяет проводить сравнение объектов по этим строкам, а не выполнять построчное сравнение, на которое расходуется больше ресурсов.</span><span class="sxs-lookup"><span data-stu-id="0cd60-105">This enables you to do object comparisons on these strings rather than a more expensive string comparison.</span></span> <span data-ttu-id="0cd60-106">Эти строковые объекты называются «разделенные строки».</span><span class="sxs-lookup"><span data-stu-id="0cd60-106">These string objects are referred to as "atomized strings".</span></span>  
  
 <span data-ttu-id="0cd60-107">`XmlNameTable` реализуется в <xref:System.Xml.NameTable> класса.</span><span class="sxs-lookup"><span data-stu-id="0cd60-107">`XmlNameTable` is implemented in the <xref:System.Xml.NameTable> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cd60-108">В следующем примере сравниваются два имени элемента.</span><span class="sxs-lookup"><span data-stu-id="0cd60-108">The following example compares two element names.</span></span>  
  
 [!code-csharp[NameTable_v2#1](~/samples/snippets/csharp/VS_Snippets_Data/NameTable_v2/CS/nametable.cs#1)]
 [!code-vb[NameTable_v2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/NameTable_v2/VB/nametable.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.NameTable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlNameTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlNameTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0cd60-109">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="0cd60-109">Initializes a new instance of the <see cref="T:System.Xml.XmlNameTable" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0cd60-110">При переопределении в производном классе атомизирует заданную строку и добавляет ее в таблицу <see langword="XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="0cd60-110">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cd60-111">Дополнительные сведения об атомизированных строках см. в разделе <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="0cd60-111">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract string Add (string array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Add(string array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (array As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Add(System::String ^ array);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; string" Usage="xmlNameTable.Add array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="0cd60-112">Добавляемое имя.</span><span class="sxs-lookup"><span data-stu-id="0cd60-112">The name to add.</span></span></param>
        <summary><span data-ttu-id="0cd60-113">При переопределении в производном классе атомизирует заданную строку и добавляет ее в таблицу <see langword="XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="0cd60-113">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span></span></summary>
        <returns><span data-ttu-id="0cd60-114">Новая атомизированная строка или существующая строка, если таковая уже имеется.</span><span class="sxs-lookup"><span data-stu-id="0cd60-114">The new atomized string or the existing one if it already exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cd60-115">Дополнительные сведения об атомизированных строках см. в разделе <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="0cd60-115">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cd60-116"><paramref name="array" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cd60-116"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract string Add (char[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Add(char[] array, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (array As Char(), offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Add(cli::array &lt;char&gt; ^ array, int offset, int length);" />
      <MemberSignature Language="F#" Value="abstract member Add : char[] * int * int -&gt; string" Usage="xmlNameTable.Add (array, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="0cd60-117">Массив символов, содержащий добавляемое имя.</span><span class="sxs-lookup"><span data-stu-id="0cd60-117">The character array containing the name to add.</span></span></param>
        <param name="offset"><span data-ttu-id="0cd60-118">Отсчитываемый от нуля индекс в массиве, задающий первый символ имени.</span><span class="sxs-lookup"><span data-stu-id="0cd60-118">Zero-based index into the array specifying the first character of the name.</span></span></param>
        <param name="length"><span data-ttu-id="0cd60-119">Число символов в имени.</span><span class="sxs-lookup"><span data-stu-id="0cd60-119">The number of characters in the name.</span></span></param>
        <summary><span data-ttu-id="0cd60-120">При переопределении в производном классе атомизирует заданную строку и добавляет ее в таблицу <see langword="XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="0cd60-120">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span></span></summary>
        <returns><span data-ttu-id="0cd60-121">Новая атомизированная строка или существующая строка, если таковая уже имеется.</span><span class="sxs-lookup"><span data-stu-id="0cd60-121">The new atomized string or the existing one if it already exists.</span></span> <span data-ttu-id="0cd60-122">Если параметр length имеет значение нуль, возвращается String.Empty.</span><span class="sxs-lookup"><span data-stu-id="0cd60-122">If length is zero, String.Empty is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cd60-123">Дополнительные сведения об атомизированных строках см. в разделе <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="0cd60-123">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0cd60-124">0 &gt; <paramref name="offset" /></span><span class="sxs-lookup"><span data-stu-id="0cd60-124">0 &gt; <paramref name="offset" /></span></span>  
  
<span data-ttu-id="0cd60-125">-или-</span><span class="sxs-lookup"><span data-stu-id="0cd60-125">-or-</span></span> 
 <span data-ttu-id="0cd60-126"><paramref name="offset" /> &gt;= <paramref name="array" />.Length</span><span class="sxs-lookup"><span data-stu-id="0cd60-126"><paramref name="offset" /> &gt;= <paramref name="array" />.Length</span></span> 
<span data-ttu-id="0cd60-127">-или-</span><span class="sxs-lookup"><span data-stu-id="0cd60-127">-or-</span></span> 
 <span data-ttu-id="0cd60-128"><paramref name="length" /> &gt; <paramref name="array" />.Length</span><span class="sxs-lookup"><span data-stu-id="0cd60-128"><paramref name="length" /> &gt; <paramref name="array" />.Length</span></span> 
<span data-ttu-id="0cd60-129">Вышеприведенные условия не вызывают исключение, если значение <paramref name="length" /> =0.</span><span class="sxs-lookup"><span data-stu-id="0cd60-129">The above conditions do not cause an exception to be thrown if <paramref name="length" /> =0.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0cd60-130"><paramref name="length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="0cd60-130"><paramref name="length" /> &lt; 0.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0cd60-131">При переопределении в производном классе получает атомизированную строку.</span><span class="sxs-lookup"><span data-stu-id="0cd60-131">When overridden in a derived class, gets the atomized string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cd60-132">Дополнительные сведения об атомизированных строках см. в разделе <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="0cd60-132">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract string Get (string array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(string array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (array As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Get(System::String ^ array);" />
      <MemberSignature Language="F#" Value="abstract member Get : string -&gt; string" Usage="xmlNameTable.Get array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="0cd60-133">Искомое имя.</span><span class="sxs-lookup"><span data-stu-id="0cd60-133">The name to look up.</span></span></param>
        <summary><span data-ttu-id="0cd60-134">При переопределении в производном классе получает атомизированную строку, содержащую то же значение, что и заданная строка.</span><span class="sxs-lookup"><span data-stu-id="0cd60-134">When overridden in a derived class, gets the atomized string containing the same value as the specified string.</span></span></summary>
        <returns><span data-ttu-id="0cd60-135">Атомизированная строка или значение <see langword="null" />, если строка еще не атомизирована.</span><span class="sxs-lookup"><span data-stu-id="0cd60-135">The atomized string or <see langword="null" /> if the string has not already been atomized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cd60-136">Дополнительные сведения об атомизированных строках см. в разделе <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="0cd60-136">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cd60-137"><paramref name="array" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cd60-137"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract string Get (char[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(char[] array, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (array As Char(), offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Get(cli::array &lt;char&gt; ^ array, int offset, int length);" />
      <MemberSignature Language="F#" Value="abstract member Get : char[] * int * int -&gt; string" Usage="xmlNameTable.Get (array, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="0cd60-138">Массив символов, содержащий искомое имя.</span><span class="sxs-lookup"><span data-stu-id="0cd60-138">The character array containing the name to look up.</span></span></param>
        <param name="offset"><span data-ttu-id="0cd60-139">Отсчитываемый от нуля индекс в массиве, задающий первый символ имени.</span><span class="sxs-lookup"><span data-stu-id="0cd60-139">The zero-based index into the array specifying the first character of the name.</span></span></param>
        <param name="length"><span data-ttu-id="0cd60-140">Число символов в имени.</span><span class="sxs-lookup"><span data-stu-id="0cd60-140">The number of characters in the name.</span></span></param>
        <summary><span data-ttu-id="0cd60-141">При переопределении в производном классе получает атомизированную строку, содержащую те же символы, что и заданный диапазон символов в заданном массиве.</span><span class="sxs-lookup"><span data-stu-id="0cd60-141">When overridden in a derived class, gets the atomized string containing the same characters as the specified range of characters in the given array.</span></span></summary>
        <returns><span data-ttu-id="0cd60-142">Атомизированная строка или значение <see langword="null" />, если строка еще не атомизирована.</span><span class="sxs-lookup"><span data-stu-id="0cd60-142">The atomized string or <see langword="null" /> if the string has not already been atomized.</span></span> <span data-ttu-id="0cd60-143">Если параметр <paramref name="length" /> имеет значение нуль, возвращается String.Empty.</span><span class="sxs-lookup"><span data-stu-id="0cd60-143">If <paramref name="length" /> is zero, String.Empty is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cd60-144">Дополнительные сведения об атомизированных строках см. в разделе <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="0cd60-144">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0cd60-145">0 &gt; <paramref name="offset" /></span><span class="sxs-lookup"><span data-stu-id="0cd60-145">0 &gt; <paramref name="offset" /></span></span>  
  
<span data-ttu-id="0cd60-146">-или-</span><span class="sxs-lookup"><span data-stu-id="0cd60-146">-or-</span></span> 
 <span data-ttu-id="0cd60-147"><paramref name="offset" /> &gt;= <paramref name="array" />.Length</span><span class="sxs-lookup"><span data-stu-id="0cd60-147"><paramref name="offset" /> &gt;= <paramref name="array" />.Length</span></span> 
<span data-ttu-id="0cd60-148">-или-</span><span class="sxs-lookup"><span data-stu-id="0cd60-148">-or-</span></span> 
 <span data-ttu-id="0cd60-149"><paramref name="length" /> &gt; <paramref name="array" />.Length</span><span class="sxs-lookup"><span data-stu-id="0cd60-149"><paramref name="length" /> &gt; <paramref name="array" />.Length</span></span> 
<span data-ttu-id="0cd60-150">Вышеприведенные условия не вызывают исключение, если значение <paramref name="length" /> =0.</span><span class="sxs-lookup"><span data-stu-id="0cd60-150">The above conditions do not cause an exception to be thrown if <paramref name="length" /> =0.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0cd60-151"><paramref name="length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="0cd60-151"><paramref name="length" /> &lt; 0.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>