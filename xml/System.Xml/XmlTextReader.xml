<Type Name="XmlTextReader" FullName="System.Xml.XmlTextReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4b871a9f778531e939fd55d2e78ef52d0277f3eb" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58457774" /></Metadata><TypeSignature Language="C#" Value="public class XmlTextReader : System.Xml.XmlReader, System.Xml.IXmlLineInfo, System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextReader extends System.Xml.XmlReader implements class System.Xml.IXmlLineInfo, class System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlTextReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextReader&#xA;Inherits XmlReader&#xA;Implements IXmlLineInfo, IXmlNamespaceResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextReader : System::Xml::XmlReader, System::Xml::IXmlLineInfo, System::Xml::IXmlNamespaceResolver" />
  <TypeSignature Language="F#" Value="type XmlTextReader = class&#xA;    inherit XmlReader&#xA;    interface IXmlLineInfo&#xA;    interface IXmlNamespaceResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xml.IXmlLineInfo</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9c0e0-101">Предоставляет средство чтения, обеспечивающее быстрый прямой доступ (без кэширования) к данным XML.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-101">Represents a reader that provides fast, non-cached, forward-only access to XML data.</span></span>  
  
<span data-ttu-id="9c0e0-102">Начиная с .NET Framework версии 2.0 рекомендуется использовать класс <see cref="T:System.Xml.XmlReader" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlReader" /> class instead.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-103">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-103">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-104"><xref:System.Xml.XmlTextReader> предоставляет однопроходный, только для чтения доступ к потоку данных XML.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-104"><xref:System.Xml.XmlTextReader> provides forward-only, read-only access to a stream of XML data.</span></span> <span data-ttu-id="9c0e0-105">Текущим является узел, на котором расположен модуль чтения.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-105">The current node refers to the node on which the reader is positioned.</span></span> <span data-ttu-id="9c0e0-106">Модуль чтения расширен с помощью методов чтения и свойства отражают значение текущего узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-106">The reader is advanced using any of the read methods and properties reflect the value of the current node.</span></span>  
  
 <span data-ttu-id="9c0e0-107">Этот класс реализует <xref:System.Xml.XmlReader> и соответствует W3C языка (XML) 1.0 и пространств имен в рекомендации XML.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-107">This class implements <xref:System.Xml.XmlReader> and conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</span></span> <span data-ttu-id="9c0e0-108">`XmlTextReader` предоставляет следующие функциональные возможности:</span><span class="sxs-lookup"><span data-stu-id="9c0e0-108">`XmlTextReader` provides the following functionality:</span></span>  
  
-   <span data-ttu-id="9c0e0-109">Принудительно применяет правила корректный XML.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-109">Enforces the rules of well-formed XML.</span></span>  
  
-   <span data-ttu-id="9c0e0-110">`XmlTextReader` не поддерживает проверку данных.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-110">`XmlTextReader` does not provide data validation.</span></span>  
  
-   <span data-ttu-id="9c0e0-111">Проверяет, что `DocumentType` узлы имеют правильный формат.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-111">Checks that `DocumentType` nodes are well-formed.</span></span> <span data-ttu-id="9c0e0-112">`XmlTextReader` проверяет правильность формата DTD, но не проверяет с помощью DTD.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-112">`XmlTextReader` checks the DTD for well-formedness, but does not validate using the DTD.</span></span>  
  
-   <span data-ttu-id="9c0e0-113">Для узлов где <xref:System.Xml.XmlTextReader.NodeType%2A> — `XmlNodeType.EntityReference`, пустых `EntityReference` возвращается узел (то есть <xref:System.Xml.XmlTextReader.Value%2A> свойство `String.Empty`).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-113">For nodes where <xref:System.Xml.XmlTextReader.NodeType%2A> is `XmlNodeType.EntityReference`, a single empty `EntityReference` node is returned (that is, the <xref:System.Xml.XmlTextReader.Value%2A> property is `String.Empty`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-114">Реальные объявления сущностей в DTD, называются `Entity` узлов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-114">The actual declarations of entities in the DTD are called `Entity` nodes.</span></span> <span data-ttu-id="9c0e0-115">При ссылке на эти узлы данных, они называются `EntityReference` узлов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-115">When you refer to these nodes in your data, they are called `EntityReference` nodes.</span></span>  
  
-   <span data-ttu-id="9c0e0-116">Не расширяет атрибуты по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-116">Does not expand default attributes.</span></span>  
  
 <span data-ttu-id="9c0e0-117">Так как `XmlTextReader` не выполняет дополнительных проверок, требуемых для проверки данных, он предоставляет быстрое средство синтаксического анализа.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-117">Because the `XmlTextReader` does not perform the extra checks required for data validation, it provides a fast well-formedness parser.</span></span>  
  
 <span data-ttu-id="9c0e0-118">Чтобы выполнить проверку данных, используйте проверяющего <xref:System.Xml.XmlReader>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-118">To perform data validation, use a validating <xref:System.Xml.XmlReader>.</span></span>  
  
 <span data-ttu-id="9c0e0-119">Чтобы считать данные XML из <xref:System.Xml.XmlDocument>, используйте <xref:System.Xml.XmlNodeReader>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-119">To read XML data from an <xref:System.Xml.XmlDocument>, use <xref:System.Xml.XmlNodeReader>.</span></span>  
  
 <span data-ttu-id="9c0e0-120">`XmlTextReader` Создает <xref:System.Xml.XmlException> на XML ошибки синтаксического анализа.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-120">`XmlTextReader` throws an <xref:System.Xml.XmlException> on XML parse errors.</span></span> <span data-ttu-id="9c0e0-121">После выдачи исключения состояние средства чтения не является прогнозируемым.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-121">After an exception is thrown the state of the reader is not predictable.</span></span> <span data-ttu-id="9c0e0-122">Например тип узла может отличаться от фактического типа текущего узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-122">For example, the reported node type may be different than the actual node type of the current node.</span></span> <span data-ttu-id="9c0e0-123">Используйте <xref:System.Xml.XmlTextReader.ReadState%2A> свойство для проверки того, является ли модуль чтения в состоянии ошибки.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-123">Use the <xref:System.Xml.XmlTextReader.ReadState%2A> property to check whether a reader is in error state.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="9c0e0-124">Вопросы безопасности</span><span class="sxs-lookup"><span data-stu-id="9c0e0-124">Security Considerations</span></span>  
 <span data-ttu-id="9c0e0-125">Ниже приведены действия, которые следует учитывать при использовании <xref:System.Xml.XmlTextReader> класса.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-125">The following are things to consider when using the <xref:System.Xml.XmlTextReader> class.</span></span>  
  
-   <span data-ttu-id="9c0e0-126">Исключения <xref:System.Xml.XmlTextReader> , могут содержать сведения о пути, вы не хотите всплывает приложения.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-126">Exceptions thrown the <xref:System.Xml.XmlTextReader> can disclose path information that you do not want bubbled up to the application.</span></span> <span data-ttu-id="9c0e0-127">Приложения должны перехватывать исключения и обрабатывать их соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-127">Your applications must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="9c0e0-128">Обработка определения DTD по умолчанию включена.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-128">DTD processing is enabled by default.</span></span> <span data-ttu-id="9c0e0-129">Отключите обработку DTD, если вы беспокоитесь о отказ в обслуживании или при работе с ненадежными источниками.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-129">Disable DTD processing if you are concerned about Denial of Service issues or if you are dealing with untrusted sources.</span></span> <span data-ttu-id="9c0e0-130">Задайте <xref:System.Xml.XmlTextReader.DtdProcessing%2A> свойства <xref:System.Xml.DtdProcessing.Prohibit> отключение обработки DTD.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-130">Set the <xref:System.Xml.XmlTextReader.DtdProcessing%2A> property to <xref:System.Xml.DtdProcessing.Prohibit> to disable DTD processing.</span></span>  
  
     <span data-ttu-id="9c0e0-131">Если обработка DTD включена, то с помощью класса <xref:System.Xml.XmlSecureResolver> можно ограничить ресурсы, доступные для объекта <xref:System.Xml.XmlTextReader>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-131">If you have DTD processing enabled, you can use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlTextReader> can access.</span></span> <span data-ttu-id="9c0e0-132">Кроме того, можно создать собственное приложение, ограничивающее объем памяти и время, выделяемое на обработку XML.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-132">You can also design your application so that the XML processing is memory and time constrained.</span></span> <span data-ttu-id="9c0e0-133">Например, можно ограничить время ожидания в приложении ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-133">For example, configure time-out limits in your ASP.NET application.</span></span>  
  
-   <span data-ttu-id="9c0e0-134">XML-данные могут содержать ссылки на внешние ресурсы, например DTD-файл.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-134">XML data can include references to external resources such as a DTD file.</span></span> <span data-ttu-id="9c0e0-135">По умолчанию внешние ресурсы разрешаются с помощью объекта <xref:System.Xml.XmlUrlResolver> без пользовательских учетных данных.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-135">By default external resources are resolved using an <xref:System.Xml.XmlUrlResolver> object with no user credentials.</span></span> <span data-ttu-id="9c0e0-136">Это можно сделать еще более безопасным, выполнив одно из следующих действий.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-136">You can secure this further by doing one of the following:</span></span>  
  
    -   <span data-ttu-id="9c0e0-137">Ограничить ресурсы, к которым имеет доступ <xref:System.Xml.XmlTextReader>, установив в качестве значения свойства <xref:System.Xml.XmlTextReader.XmlResolver%2A> объект <xref:System.Xml.XmlSecureResolver>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-137">Restrict the resources that the <xref:System.Xml.XmlTextReader> can access by setting the <xref:System.Xml.XmlTextReader.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
  
    -   <span data-ttu-id="9c0e0-138">Не разрешать <xref:System.Xml.XmlReader> открывать какие-либо внешние ресурсы, установив для свойства <xref:System.Xml.XmlTextReader.XmlResolver%2A> значение `null`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-138">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlTextReader.XmlResolver%2A> property to `null`.</span></span>  
  
-   <span data-ttu-id="9c0e0-139">XML-данные могут содержать большое количество атрибутов, деклараций пространств имен, вложенных элементов и так далее, на обработку которых требуется значительное время.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-139">XML data can contain a large number of attributes, namespace declarations, nested elements and so on that require a substantial amount of time to process.</span></span> <span data-ttu-id="9c0e0-140">Чтобы ограничить размер входных данных, который отправляется <xref:System.Xml.XmlTextReader>, создать пользовательскую реализацию IStream и задать в нем <xref:System.Xml.XmlTextReader>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-140">To limit the size of the input that is sent to the <xref:System.Xml.XmlTextReader>, create a custom IStream implementation and supply it the <xref:System.Xml.XmlTextReader>.</span></span>  
  
-   <span data-ttu-id="9c0e0-141"><xref:System.Xml.XmlReader.ReadValueChunk%2A> Метод может использоваться для обработки больших потоков данных.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-141">The <xref:System.Xml.XmlReader.ReadValueChunk%2A> method can be used to handle large streams of data.</span></span> <span data-ttu-id="9c0e0-142">Этот метод за раз считывает небольшое число символов, а не выделяет одну строку для всего значения.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-142">This method reads a small number of characters at a time instead of allocating a single string for the whole value.</span></span>  
  
-   <span data-ttu-id="9c0e0-143">По умолчанию общие сущности не развертываются.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-143">By default general entities are not expanded.</span></span> <span data-ttu-id="9c0e0-144">Общие сущности раскрываются при вызове метода <xref:System.Xml.XmlTextReader.ResolveEntity%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-144">General entities are expanded when you call the <xref:System.Xml.XmlTextReader.ResolveEntity%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="9c0e0-145">Этот класс имеет требования наследования.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-145">This class has an inheritance demand.</span></span> <span data-ttu-id="9c0e0-146">Требуется полное доверие для наследования от <see langword="XmlTextReader" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-146">Full trust is required to inherit from <see langword="XmlTextReader" />.</span></span></para></block>
    <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="9c0e0-147">XML-документы и данные</span><span class="sxs-lookup"><span data-stu-id="9c0e0-147">XML Documents and Data</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9c0e0-148">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-148">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-149">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-149">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlTextReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlTextReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c0e0-150">Инициализирует новый экземпляр класса <see langword="XmlTextReader" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-150">Initializes a new instance of the <see langword="XmlTextReader" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (System.IO.Stream input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (input As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::IO::Stream ^ input);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.IO.Stream -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader input" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="9c0e0-151">Поток, содержащий считываемые XML-данные.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-151">The stream containing the XML data to read.</span></span></param>
        <summary><span data-ttu-id="9c0e0-152">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанным потоком.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-152">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-153">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-153">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-154"><xref:System.Xml.XmlTextReader> Декодирует поток с помощью <xref:System.Text.Encoding?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-154">The <xref:System.Xml.XmlTextReader> decodes the stream using <xref:System.Text.Encoding?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c0e0-155"><paramref name="input" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-155"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (System.IO.TextReader input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (input As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::IO::TextReader ^ input);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.IO.TextReader -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader input" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="9c0e0-156"><see langword="TextReader" />, содержащий считываемые XML-данные.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-156">The <see langword="TextReader" /> containing the XML data to read.</span></span></param>
        <summary><span data-ttu-id="9c0e0-157">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> указанным значением <see cref="T:System.IO.TextReader" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-157">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified <see cref="T:System.IO.TextReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-158">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-158">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-159">Предполагается, что для `TextReader` задана верная кодировка.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-159">It is assumed that the `TextReader` is already set to the correct encoding.</span></span> <span data-ttu-id="9c0e0-160">Используется клиентами, которые уже прочитали некоторые вещи из потока в случае нескольких частей MIME.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-160">This is used by clients that have already read some things from the stream in a multi-part MIME scenario.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-161">В следующем примере загружаются строку XML в `XmlTextReader` с помощью <xref:System.IO.StringReader> класса.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-161">The following example loads an XML string into the `XmlTextReader` object using the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[XmlTextReader.cctor1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.cctor1/CPP/rdrcctor1.cpp#1)]
 [!code-csharp[XmlTextReader.cctor1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.cctor1/CS/rdrcctor1.cs#1)]
 [!code-vb[XmlTextReader.cctor1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.cctor1/VB/rdrcctor1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader url" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="9c0e0-162">URL-адрес файла с XML-данными.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-162">The URL for the file containing the XML data.</span></span> <span data-ttu-id="9c0e0-163">Для свойства <see cref="P:System.Xml.XmlTextReader.BaseURI" /> задано это значение.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-163">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span></span></param>
        <summary><span data-ttu-id="9c0e0-164">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанным файлом.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-164">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-165">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-165">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-166">Если файл находится на ресурс, который требует учетные данные для доступа, используйте <xref:System.Xml.XmlTextReader.XmlResolver%2A> свойство, чтобы указать необходимые учетные данные.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-166">If the file is located on a resource that requires access credentials, use the <xref:System.Xml.XmlTextReader.XmlResolver%2A> property to specify the necessary credentials.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-167">В версии 1.1 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], частично доверенный код не удается задать `XmlResolver` свойства.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-167">In version 1.1 of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], partially trusted code cannot set the `XmlResolver` property.</span></span> <span data-ttu-id="9c0e0-168">Обходной путь заключается в создании <xref:System.Xml.XmlUrlResolver> с необходимыми учетными данными, передать URI в <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> метод, а затем создать `XmlTextReader` с помощью полученного <xref:System.IO.Stream> объекта.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-168">The workaround is to create an <xref:System.Xml.XmlUrlResolver> with the necessary credentials, pass the URI to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> method, and then construct the `XmlTextReader` using the resulting <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="9c0e0-169">Эта процедура описана в следующем коде C#.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-169">The workaround is described in the following C# code.</span></span>  
  
```csharp  
// Create a resolver with the necessary credentials.  
XmlUrlResolver resolver = new XmlUrlResolver();  
NetworkCredential nc = new NetworkCredential(SecurelyStoredUserName, SecurelyStoredPassword, SecurelyStoredDomain);  
resolver.Credentials = nc;   
// Get a Stream object containing the XML file.  
Uri myUri = new Uri ("http://myServer/data/books.xml");  
Stream s=(Stream)resolver.GetEntity(myUri, null, typeof(Stream));  
// Construct a reader using the Stream object.  
XmlTextReader reader = new XmlTextReader(s);  
```  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-170">В следующем примере считывает XML-файла и отображает всех узлов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-170">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9c0e0-171">В примере используется файл `items.xml`качестве входных данных.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-171">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="9c0e0-172">Не удается найти указанный файл.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-172">The specified file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="9c0e0-173">Не удается найти часть имени файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-173">Part of the filename or directory cannot be found.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c0e0-174">Параметр <paramref name="url" /> равен пустой строке.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-174"><paramref name="url" /> is an empty string.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="9c0e0-175">Не удается разрешить удаленное имя файла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-175">The remote filename cannot be resolved.</span></span>  
  
<span data-ttu-id="9c0e0-176">-или-</span><span class="sxs-lookup"><span data-stu-id="9c0e0-176">-or-</span></span> 
<span data-ttu-id="9c0e0-177">При обработке этого запроса возникла ошибка.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-177">An error occurred while processing the request.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="9c0e0-178"><paramref name="url" /> не является допустимым URI.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-178"><paramref name="url" /> is not a valid URI.</span></span></exception>
        <altmember cref="P:System.Xml.XmlTextReader.XmlResolver" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlTextReader (System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlTextReader(System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader nt" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nt"><span data-ttu-id="9c0e0-179">Используемый <see langword="XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-179">The <see langword="XmlNameTable" /> to use.</span></span></param>
        <summary><span data-ttu-id="9c0e0-180">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> указанным значением <see cref="T:System.Xml.XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-180">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-181">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-181">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (System.IO.Stream input, System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream input, class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (input As Stream, nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::IO::Stream ^ input, System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.IO.Stream * System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (input, nt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="9c0e0-182">Поток, содержащий считываемые XML-данные.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-182">The stream containing the XML data to read.</span></span></param>
        <param name="nt"><span data-ttu-id="9c0e0-183">Используемый <see langword="XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-183">The <see langword="XmlNameTable" /> to use.</span></span></param>
        <summary><span data-ttu-id="9c0e0-184">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанными потоком и <see cref="T:System.Xml.XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-184">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified stream and <see cref="T:System.Xml.XmlNameTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-185">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-185">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-186"><xref:System.Xml.XmlTextReader> Декодирует поток с помощью <xref:System.Text.Encoding?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-186">The <xref:System.Xml.XmlTextReader> decodes the stream using <xref:System.Text.Encoding?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9c0e0-187">Если указать имя таблицы, этот конструктор использует имена, уже определенные в этой таблице.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-187">If you specify a name table, this constructor uses the names defined already in that table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="9c0e0-188">Параметру <paramref name="input" /> или <paramref name="nt" /> задано значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-188">The <paramref name="input" /> or <paramref name="nt" /> value is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (System.IO.TextReader input, System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader input, class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (input As TextReader, nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::IO::TextReader ^ input, System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.IO.TextReader * System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (input, nt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="9c0e0-189"><see langword="TextReader" />, содержащий считываемые XML-данные.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-189">The <see langword="TextReader" /> containing the XML data to read.</span></span></param>
        <param name="nt"><span data-ttu-id="9c0e0-190">Используемый <see langword="XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-190">The <see langword="XmlNameTable" /> to use.</span></span></param>
        <summary><span data-ttu-id="9c0e0-191">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с заданными свойствами <see cref="T:System.IO.TextReader" /> и <see cref="T:System.Xml.XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-191">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified <see cref="T:System.IO.TextReader" /> and <see cref="T:System.Xml.XmlNameTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-192">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-192">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-193">Предполагается, что для `TextReader` задана верная кодировка.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-193">It is assumed that the `TextReader` is already set to the correct encoding.</span></span> <span data-ttu-id="9c0e0-194">Используется клиентами, которые уже прочитали некоторые вещи из потока в случае нескольких частей MIME.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-194">This is used by clients that have already read some things from the stream in a multi-part MIME scenario.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="9c0e0-195">Значение <paramref name="nt" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-195">The <paramref name="nt" /> value is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url, System.IO.Stream input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.IO.Stream input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, input As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url, System::IO::Stream ^ input);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.IO.Stream -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (url, input)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="input" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="9c0e0-196">URL-адрес, используемый для разрешения внешних ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-196">The URL to use for resolving external resources.</span></span> <span data-ttu-id="9c0e0-197">Для свойства <see cref="P:System.Xml.XmlTextReader.BaseURI" /> задано это значение.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-197">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span></span></param>
        <param name="input"><span data-ttu-id="9c0e0-198">Поток, содержащий считываемые XML-данные.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-198">The stream containing the XML data to read.</span></span></param>
        <summary><span data-ttu-id="9c0e0-199">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанным URL-адресом и потоком.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-199">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL and stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-200">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-200">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c0e0-201"><paramref name="input" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-201"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url, System.IO.TextReader input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.IO.TextReader input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, input As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url, System::IO::TextReader ^ input);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.IO.TextReader -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (url, input)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="input" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="9c0e0-202">URL-адрес, используемый для разрешения внешних ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-202">The URL to use for resolving external resources.</span></span> <span data-ttu-id="9c0e0-203">Для свойства <see cref="P:System.Xml.XmlTextReader.BaseURI" /> задано это значение.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-203">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span></span></param>
        <param name="input"><span data-ttu-id="9c0e0-204"><see langword="TextReader" />, содержащий считываемые XML-данные.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-204">The <see langword="TextReader" /> containing the XML data to read.</span></span></param>
        <summary><span data-ttu-id="9c0e0-205">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанным URL-адресом и <see cref="T:System.IO.TextReader" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-205">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL and <see cref="T:System.IO.TextReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-206">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-206">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-207">Предполагается, что для `TextReader` задана верная кодировка.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-207">It is assumed that the `TextReader` is already set to the correct encoding.</span></span> <span data-ttu-id="9c0e0-208">Используется клиентами, которые уже прочитали некоторые вещи из потока в случае нескольких частей MIME.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-208">This is used by clients that have already read some things from the stream in a multi-part MIME scenario.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url, System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url, System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (url, nt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="9c0e0-209">URL-адрес файла, содержащего считываемые данные XML.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-209">The URL for the file containing the XML data to read.</span></span></param>
        <param name="nt"><span data-ttu-id="9c0e0-210">Используемый <see langword="XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-210">The <see langword="XmlNameTable" /> to use.</span></span></param>
        <summary><span data-ttu-id="9c0e0-211">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанным файлом и <see cref="T:System.Xml.XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-211">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified file and <see cref="T:System.Xml.XmlNameTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-212">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-212">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="9c0e0-213">Значение <paramref name="nt" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-213">The <paramref name="nt" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="9c0e0-214">Не удается найти указанный файл.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-214">The specified file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="9c0e0-215">Не удается найти часть имени файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-215">Part of the filename or directory cannot be found.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c0e0-216">Параметр <paramref name="url" /> равен пустой строке.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-216"><paramref name="url" /> is an empty string.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="9c0e0-217">Не удается разрешить удаленное имя файла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-217">The remote filename cannot be resolved.</span></span>  
  
<span data-ttu-id="9c0e0-218">-или-</span><span class="sxs-lookup"><span data-stu-id="9c0e0-218">-or-</span></span> 
<span data-ttu-id="9c0e0-219">При обработке этого запроса возникла ошибка.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-219">An error occurred while processing the request.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="9c0e0-220"><paramref name="url" /> не является допустимым URI.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-220"><paramref name="url" /> is not a valid URI.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (System.IO.Stream xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream xmlFragment, valuetype System.Xml.XmlNodeType fragType, class System.Xml.XmlParserContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlFragment As Stream, fragType As XmlNodeType, context As XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::IO::Stream ^ xmlFragment, System::Xml::XmlNodeType fragType, System::Xml::XmlParserContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.IO.Stream * System.Xml.XmlNodeType * System.Xml.XmlParserContext -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (xmlFragment, fragType, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.IO.Stream" />
        <Parameter Name="fragType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="context" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlFragment"><span data-ttu-id="9c0e0-221">Поток, содержащий анализируемый фрагмент XML.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-221">The stream containing the XML fragment to parse.</span></span></param>
        <param name="fragType"><span data-ttu-id="9c0e0-222">Тип <see cref="T:System.Xml.XmlNodeType" /> фрагмента XML.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-222">The <see cref="T:System.Xml.XmlNodeType" /> of the XML fragment.</span></span> <span data-ttu-id="9c0e0-223">Также определяет содержимое фрагмента.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-223">This also determines what the fragment can contain.</span></span> <span data-ttu-id="9c0e0-224">(См. таблицу, приведенную ниже.)</span><span class="sxs-lookup"><span data-stu-id="9c0e0-224">(See table below.)</span></span></param>
        <param name="context"><span data-ttu-id="9c0e0-225"><see cref="T:System.Xml.XmlParserContext" />, в котором анализируется <paramref name="xmlFragment" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-225">The <see cref="T:System.Xml.XmlParserContext" /> in which the <paramref name="xmlFragment" /> is to be parsed.</span></span> <span data-ttu-id="9c0e0-226">Это включает в себя используемый класс <see cref="T:System.Xml.XmlNameTable" />, кодировку, область пространства имен, текущая область <c>xml:lang</c> и <c>xml:space</c>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-226">This includes the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c>, and the <c>xml:space</c> scope.</span></span></param>
        <summary><span data-ttu-id="9c0e0-227">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанными потоком, <see cref="T:System.Xml.XmlNodeType" /> и <see cref="T:System.Xml.XmlParserContext" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-227">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified stream, <see cref="T:System.Xml.XmlNodeType" />, and <see cref="T:System.Xml.XmlParserContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-228">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-228">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-229">Этот конструктор анализирует заданную строку как фрагмент XML.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-229">This constructor parses the given string as a fragment of XML.</span></span> <span data-ttu-id="9c0e0-230">Если фрагмент XML — элемент или атрибут, можно обойти правила корневого уровня для XML-документы правильного.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-230">If the XML fragment is an element or attribute, you can bypass the root level rules for well-formed XML documents.</span></span>  
  
 <span data-ttu-id="9c0e0-231">В следующей таблице перечислены допустимые значения для `fragType`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-231">The following table lists valid values for `fragType`.</span></span>  
  
|<span data-ttu-id="9c0e0-232">Тип узла XML</span><span class="sxs-lookup"><span data-stu-id="9c0e0-232">XmlNodeType</span></span>|<span data-ttu-id="9c0e0-233">Фрагмент может содержать</span><span class="sxs-lookup"><span data-stu-id="9c0e0-233">Fragment May Contain</span></span>|  
|-----------------|--------------------------|  
|`Element`|<span data-ttu-id="9c0e0-234">Любое допустимое содержимое элементов (например, любое сочетание элементов, комментарии, инструкции по обработке, разделы CDATA, текст и ссылки на сущности).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-234">Any valid element content (for example, any combination of elements, comments, processing instructions, CDATA sections, text, and entity references).</span></span><br /><br /> <span data-ttu-id="9c0e0-235">Также можно передавать XML-декларацию.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-235">An XML declaration can also be supplied.</span></span> <span data-ttu-id="9c0e0-236">Это позволяет указать кодировку XML-фрагмента, а не задать его на <xref:System.Xml.XmlParserContext> объекта.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-236">This allows you to specify the encoding for the XML fragment, rather than having to set it on the <xref:System.Xml.XmlParserContext> object.</span></span>|  
|`Attribute`|<span data-ttu-id="9c0e0-237">Значение атрибута (часть в кавычках).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-237">The value of an attribute (the part inside the quotes).</span></span>|  
|`Document`|<span data-ttu-id="9c0e0-238">Содержимое всего XML-документа.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-238">The contents of an entire XML document.</span></span> <span data-ttu-id="9c0e0-239">Это применяет правила на уровне документа.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-239">This enforces document level rules.</span></span>|  
  
 <span data-ttu-id="9c0e0-240">Средство чтения использует следующие, чтобы определить кодировку потока.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-240">The reader uses the following to determine the encoding of the stream.</span></span>  
  
1.  <span data-ttu-id="9c0e0-241">Проверяет <xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType> свойство, чтобы определить кодировку.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-241">Checks the <xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType> property to determine the encoding.</span></span>  
  
2.  <span data-ttu-id="9c0e0-242">Если `Encoding` свойство `null`, модуль чтения проверяет метку порядка следования байтов в начале потока.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-242">If the `Encoding` property is `null`, the reader checks for a byte-order mark at the beginning of the stream.</span></span>  
  
3.  <span data-ttu-id="9c0e0-243">Если `Encoding` свойство `null`и найти метка порядка байтов отсутствуют, средство чтения будет предполагать использование кодировки UTF-8.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-243">If the `Encoding` property is `null`, and no byte-order mark is found, the reader assumes the stream is encoded in UTF-8.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="9c0e0-244"><paramref name="fragType" /> не является элементом, атрибутом и документом <see langword="XmlNodeType" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-244"><paramref name="fragType" /> is not an Element, Attribute, or Document <see langword="XmlNodeType" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c0e0-245"><paramref name="xmlFragment" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-245"><paramref name="xmlFragment" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url, System.IO.Stream input, System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.IO.Stream input, class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, input As Stream, nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url, System::IO::Stream ^ input, System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.IO.Stream * System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (url, input, nt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="9c0e0-246">URL-адрес, используемый для разрешения внешних ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-246">The URL to use for resolving external resources.</span></span> <span data-ttu-id="9c0e0-247">Для свойства <see cref="P:System.Xml.XmlTextReader.BaseURI" /> задано это значение.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-247">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span></span> <span data-ttu-id="9c0e0-248">Если значение <paramref name="url" /> равно <see langword="null" />, то <see langword="BaseURI" /> присваивается значение <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-248">If <paramref name="url" /> is <see langword="null" />, <see langword="BaseURI" /> is set to <see langword="String.Empty" />.</span></span></param>
        <param name="input"><span data-ttu-id="9c0e0-249">Поток, содержащий считываемые XML-данные.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-249">The stream containing the XML data to read.</span></span></param>
        <param name="nt"><span data-ttu-id="9c0e0-250">Используемый <see langword="XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-250">The <see langword="XmlNameTable" /> to use.</span></span></param>
        <summary><span data-ttu-id="9c0e0-251">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанными URL-адресом, потоком и <see cref="T:System.Xml.XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-251">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL, stream and <see cref="T:System.Xml.XmlNameTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-252">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-252">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="9c0e0-253">Параметру <paramref name="input" /> или <paramref name="nt" /> задано значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-253">The <paramref name="input" /> or <paramref name="nt" /> value is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url, System.IO.TextReader input, System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.IO.TextReader input, class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, input As TextReader, nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url, System::IO::TextReader ^ input, System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.IO.TextReader * System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (url, input, nt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="9c0e0-254">URL-адрес, используемый для разрешения внешних ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-254">The URL to use for resolving external resources.</span></span> <span data-ttu-id="9c0e0-255">Для свойства <see cref="P:System.Xml.XmlTextReader.BaseURI" /> задано это значение.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-255">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span></span> <span data-ttu-id="9c0e0-256">Если значение <paramref name="url" /> равно <see langword="null" />, то <see langword="BaseURI" /> присваивается значение <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-256">If <paramref name="url" /> is <see langword="null" />, <see langword="BaseURI" /> is set to <see langword="String.Empty" />.</span></span></param>
        <param name="input"><span data-ttu-id="9c0e0-257"><see langword="TextReader" />, содержащий считываемые XML-данные.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-257">The <see langword="TextReader" /> containing the XML data to read.</span></span></param>
        <param name="nt"><span data-ttu-id="9c0e0-258">Используемый <see langword="XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-258">The <see langword="XmlNameTable" /> to use.</span></span></param>
        <summary><span data-ttu-id="9c0e0-259">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанным URL-адресом, <see cref="T:System.IO.TextReader" /> и <see cref="T:System.Xml.XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-259">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL, <see cref="T:System.IO.TextReader" /> and <see cref="T:System.Xml.XmlNameTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-260">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-260">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-261">Предполагается, что для `TextReader` задана верная кодировка.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-261">It is assumed that the `TextReader` is already set to the correct encoding.</span></span> <span data-ttu-id="9c0e0-262">Используется клиентами, которые уже прочитали некоторые вещи из потока в случае нескольких частей MIME.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-262">This is used by clients that have already read some things from the stream in a multi-part MIME scenario.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c0e0-263">Значение <paramref name="nt" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-263">The <paramref name="nt" /> value is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xmlFragment, valuetype System.Xml.XmlNodeType fragType, class System.Xml.XmlParserContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlFragment As String, fragType As XmlNodeType, context As XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ xmlFragment, System::Xml::XmlNodeType fragType, System::Xml::XmlParserContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.Xml.XmlNodeType * System.Xml.XmlParserContext -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (xmlFragment, fragType, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.String" />
        <Parameter Name="fragType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="context" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlFragment"><span data-ttu-id="9c0e0-264">Строка, содержащая анализируемый фрагмент XML.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-264">The string containing the XML fragment to parse.</span></span></param>
        <param name="fragType"><span data-ttu-id="9c0e0-265">Тип <see cref="T:System.Xml.XmlNodeType" /> фрагмента XML.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-265">The <see cref="T:System.Xml.XmlNodeType" /> of the XML fragment.</span></span> <span data-ttu-id="9c0e0-266">Также определяет содержимое строки фрагмента.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-266">This also determines what the fragment string can contain.</span></span> <span data-ttu-id="9c0e0-267">(См. таблицу, приведенную ниже.)</span><span class="sxs-lookup"><span data-stu-id="9c0e0-267">(See table below.)</span></span></param>
        <param name="context"><span data-ttu-id="9c0e0-268"><see cref="T:System.Xml.XmlParserContext" />, в котором анализируется <paramref name="xmlFragment" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-268">The <see cref="T:System.Xml.XmlParserContext" /> in which the <paramref name="xmlFragment" /> is to be parsed.</span></span> <span data-ttu-id="9c0e0-269">Это включает в себя используемый класс <see cref="T:System.Xml.XmlNameTable" />, кодировку, область пространства имен, текущая область <c>xml:lang</c> и <c>xml:space</c>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-269">This includes the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c>, and the <c>xml:space</c> scope.</span></span></param>
        <summary><span data-ttu-id="9c0e0-270">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанной строкой, <see cref="T:System.Xml.XmlNodeType" /> и <see cref="T:System.Xml.XmlParserContext" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-270">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified string, <see cref="T:System.Xml.XmlNodeType" />, and <see cref="T:System.Xml.XmlParserContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-271">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-271">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-272">Этот конструктор анализирует заданную строку как фрагмент XML.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-272">This constructor parses the given string as a fragment of XML.</span></span> <span data-ttu-id="9c0e0-273">Если фрагмент XML — элемент или атрибут, можно обойти правила корневого уровня для XML-документы правильного.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-273">If the XML fragment is an element or attribute, you can bypass the root level rules for well-formed XML documents.</span></span> <span data-ttu-id="9c0e0-274">Этот конструктор может обрабатывать строки, возвращаемые из <xref:System.Xml.XmlReader.ReadInnerXml%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-274">This constructor can handle strings returned from <xref:System.Xml.XmlReader.ReadInnerXml%2A>.</span></span>  
  
 <span data-ttu-id="9c0e0-275">В следующей таблице перечислены допустимые значения для `fragType` и как средство чтения анализирует каждый из различных типов узлов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-275">The following table lists valid values for `fragType` and how the reader parses each of the different node types.</span></span>  
  
|<span data-ttu-id="9c0e0-276">Тип узла XML</span><span class="sxs-lookup"><span data-stu-id="9c0e0-276">XmlNodeType</span></span>|<span data-ttu-id="9c0e0-277">Фрагмент может содержать</span><span class="sxs-lookup"><span data-stu-id="9c0e0-277">Fragment May Contain</span></span>|  
|-----------------|--------------------------|  
|<span data-ttu-id="9c0e0-278">Элемент</span><span class="sxs-lookup"><span data-stu-id="9c0e0-278">Element</span></span>|<span data-ttu-id="9c0e0-279">Любое допустимое содержимое элементов (например, любое сочетание элементов, комментарии, инструкции по обработке, разделы CDATA, текст и ссылки на сущности).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-279">Any valid element content (for example, any combination of elements, comments, processing instructions, CDATA sections, text, and entity references).</span></span><br /><br /> <span data-ttu-id="9c0e0-280">Также можно передавать XML-декларацию.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-280">An XML declaration can also be supplied.</span></span> <span data-ttu-id="9c0e0-281">Это позволяет указать кодировку XML-фрагмента, а не задать его на <xref:System.Xml.XmlParserContext> объекта.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-281">This allows you to specify the encoding for the XML fragment, rather than having to set it on the <xref:System.Xml.XmlParserContext> object.</span></span>|  
|<span data-ttu-id="9c0e0-282">Атрибут</span><span class="sxs-lookup"><span data-stu-id="9c0e0-282">Attribute</span></span>|<span data-ttu-id="9c0e0-283">Значение атрибута (часть в кавычках).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-283">The value of an attribute (the part inside the quotes).</span></span>|  
|<span data-ttu-id="9c0e0-284">Document</span><span class="sxs-lookup"><span data-stu-id="9c0e0-284">Document</span></span>|<span data-ttu-id="9c0e0-285">Содержимое всего XML-документа.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-285">The contents of an entire XML document.</span></span> <span data-ttu-id="9c0e0-286">Это применяет правила на уровне документа.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-286">This enforces document level rules.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-287">В следующем примере анализируется фрагмент XML.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-287">The following example parses an XML fragment.</span></span> <span data-ttu-id="9c0e0-288">Она использует `XmlParserContext` и его <xref:System.Xml.XmlNamespaceManager> для обработки разрешения имен.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-288">It uses the `XmlParserContext` and its <xref:System.Xml.XmlNamespaceManager> to handle namespace resolution.</span></span>  
  
 [!code-cpp[XmlTextReader.Cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.Cctor/CPP/readfrag.cpp#1)]
 [!code-csharp[XmlTextReader.Cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.Cctor/CS/readfrag.cs#1)]
 [!code-vb[XmlTextReader.Cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.Cctor/VB/readfrag.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="9c0e0-289"><paramref name="fragType" /> не является <see langword="Element" />, <see langword="Attribute" /> или <see langword="Document" /><see langword="XmlNodeType" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-289"><paramref name="fragType" /> is not an <see langword="Element" />, <see langword="Attribute" />, or <see langword="Document" /><see langword="XmlNodeType" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c0e0-290"><paramref name="xmlFragment" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-290"><paramref name="xmlFragment" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlParserContext" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="AttributeCount">
      <MemberSignature Language="C#" Value="public override int AttributeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AttributeCount" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.AttributeCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AttributeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AttributeCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeCount : int" Usage="System.Xml.XmlTextReader.AttributeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-291">Возвращает количество атрибутов текущего узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-291">Gets the number of attributes on the current node.</span></span></summary>
        <value><span data-ttu-id="9c0e0-292">Количество атрибутов текущего узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-292">The number of attributes on the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-293">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-293">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-294">Это свойство относится к `Element`, `DocumentType` и `XmlDeclaration` только узлы.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-294">This property is relevant to `Element`, `DocumentType` and `XmlDeclaration` nodes only.</span></span> <span data-ttu-id="9c0e0-295">(Другие типы узлов не имеют атрибутов).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-295">(Other node types do not have attributes.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-296">Следующий пример отображает все атрибуты на текущем узле.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-296">The following example displays all attributes on the current node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlTextReader.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-297">Возвращает базовый URI текущего узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-297">Gets the base URI of the current node.</span></span></summary>
        <value><span data-ttu-id="9c0e0-298">Базовый URI текущего узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-298">The base URI of the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-299">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-299">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-300">Сетевой документ XML состоит из блоков данных, объединяемых с помощью различных механизмов включения стандарта W3C и поэтому содержит узлы, полученные из различных мест.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-300">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="9c0e0-301">Примером этого являются сущности DTD, но это не только DTD.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-301">DTD entities are an example of this, but this is not limited to DTDs.</span></span> <span data-ttu-id="9c0e0-302">Базовый URI указывает откуда поступили эти узлы.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-302">The base URI tells you where these nodes came from.</span></span> <span data-ttu-id="9c0e0-303">Есть ли базовый URI для возвращаемых узлов отсутствует (например, они были извлечены из строки в памяти), `String.Empty` возвращается.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-303">If there is no base URI for the nodes being returned (for example, they were parsed from an in-memory string), `String.Empty` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-304">В следующем примере отображается базовый URI для каждого узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-304">The following example displays the base URI for each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.BaseURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.BaseURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.BaseURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.BaseURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.BaseURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.BaseURI Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9c0e0-305">В примере используется файл `baseuri.xml`качестве входных данных.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-305">The example uses the file, `baseuri.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.BaseURI Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.BaseURI Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanReadBinaryContent">
      <MemberSignature Language="C#" Value="public override bool CanReadBinaryContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadBinaryContent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.CanReadBinaryContent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanReadBinaryContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadBinaryContent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadBinaryContent : bool" Usage="System.Xml.XmlTextReader.CanReadBinaryContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-306">Получает значение, указывающее, реализует ли объект <see cref="T:System.Xml.XmlTextReader" /> методы чтения двоичного содержимого.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-306">Gets a value indicating whether the <see cref="T:System.Xml.XmlTextReader" /> implements the binary content read methods.</span></span></summary>
        <value><span data-ttu-id="9c0e0-307">Значение <see langword="true" />, если реализуются методы чтения двоичного содержимого; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-307"><see langword="true" /> if the binary content read methods are implemented; otherwise <see langword="false" />.</span></span> <span data-ttu-id="9c0e0-308">Класс <see cref="T:System.Xml.XmlTextReader" /> всегда возвращает значение <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-308">The <see cref="T:System.Xml.XmlTextReader" /> class always returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-309">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-309">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-310">Включить методы чтения двоичного содержимого <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlTextReader.ReadElementContentAsBase64%2A>, и <xref:System.Xml.XmlTextReader.ReadElementContentAsBinHex%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-310">The binary content read methods include the <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlTextReader.ReadElementContentAsBase64%2A>, and <xref:System.Xml.XmlTextReader.ReadElementContentAsBinHex%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanReadValueChunk">
      <MemberSignature Language="C#" Value="public override bool CanReadValueChunk { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadValueChunk" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.CanReadValueChunk" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanReadValueChunk As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadValueChunk { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadValueChunk : bool" Usage="System.Xml.XmlTextReader.CanReadValueChunk" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-311">Возвращает значение, указывающее, реализует ли объект <see cref="T:System.Xml.XmlTextReader" /> метод <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-311">Gets a value indicating whether the <see cref="T:System.Xml.XmlTextReader" /> implements the <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> method.</span></span></summary>
        <value><span data-ttu-id="9c0e0-312">Значение <see langword="true" />, если объект <see cref="T:System.Xml.XmlTextReader" /> реализует метод <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-312"><see langword="true" /> if the <see cref="T:System.Xml.XmlTextReader" /> implements the <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> method; otherwise <see langword="false" />.</span></span> <span data-ttu-id="9c0e0-313">Класс <see cref="T:System.Xml.XmlTextReader" /> всегда возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-313">The <see cref="T:System.Xml.XmlTextReader" /> class always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-314">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-314">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-315"><xref:System.Xml.XmlTextReader> Вызывает <xref:System.NotSupportedException> Если <xref:System.Xml.XmlReader.ReadValueChunk%2A> вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-315">The <xref:System.Xml.XmlTextReader> throws a <xref:System.NotSupportedException> if the <xref:System.Xml.XmlReader.ReadValueChunk%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanResolveEntity">
      <MemberSignature Language="C#" Value="public override bool CanResolveEntity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResolveEntity" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.CanResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanResolveEntity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanResolveEntity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResolveEntity : bool" Usage="System.Xml.XmlTextReader.CanResolveEntity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-316">Возвращает значение, определяющее, способно ли данное средство чтения выполнять синтаксический анализ и разрешение сущностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-316">Gets a value indicating whether this reader can parse and resolve entities.</span></span></summary>
        <value><span data-ttu-id="9c0e0-317">Значение <see langword="true" />, если средство чтения позволяет анализировать и разрешать сущности; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-317"><see langword="true" /> if the reader can parse and resolve entities; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="9c0e0-318">Класс <see langword="XmlTextReader" /> всегда возвращает значение <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-318">The <see langword="XmlTextReader" /> class always returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-319">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-319">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-320">Это изменение в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] выпуска.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-320">This is a change in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] release.</span></span> <span data-ttu-id="9c0e0-321">В предыдущих версиях `XmlTextReader` класс не может разрешить сущности и `CanResolveEntity` всегда возвращаются `false`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-321">In previous versions, the `XmlTextReader` class could not resolve entities and `CanResolveEntity` always returned `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlTextReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c0e0-322">Изменяет значение свойства <see cref="P:System.Xml.XmlReader.ReadState" /> на <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-322">Changes the <see cref="P:System.Xml.XmlReader.ReadState" /> to <see langword="Closed" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-323">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-323">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-324">Этот метод также освобождает все ресурсы, используемые при чтении.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-324">This method also releases any resources held while reading.</span></span> <span data-ttu-id="9c0e0-325">Если средство чтения было создано с помощью потока, этот метод также вызывает `Close` базового потока.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-325">If this reader was constructed using a stream, this method also calls `Close` on the underlying stream.</span></span>  
  
 <span data-ttu-id="9c0e0-326">Если `Close` уже был вызван, никакие действия не выполняются.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-326">If `Close` has already been called, no action is performed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Xml.XmlTextReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-327">Возвращает глубину текущего узла в XML-документе.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-327">Gets the depth of the current node in the XML document.</span></span></summary>
        <value><span data-ttu-id="9c0e0-328">Глубина текущего узла в XML-документе.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-328">The depth of the current node in the XML document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-329">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-329">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-330">В следующем примере отображается каждый узел, включая его глубину, номер строки и позиции строки.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-330">The following example displays each node including its depth, line number, and line position.</span></span>  
  
 [!code-cpp[XmlTextReader.LineNum#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.LineNum/CPP/readlinenum.cpp#1)]
 [!code-csharp[XmlTextReader.LineNum#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.LineNum/CS/readlinenum.cs#1)]
 [!code-vb[XmlTextReader.LineNum#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.LineNum/VB/readlinenum.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="DtdProcessing">
      <MemberSignature Language="C#" Value="public System.Xml.DtdProcessing DtdProcessing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.DtdProcessing DtdProcessing" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.DtdProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Property DtdProcessing As DtdProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::DtdProcessing DtdProcessing { System::Xml::DtdProcessing get(); void set(System::Xml::DtdProcessing value); };" />
      <MemberSignature Language="F#" Value="member this.DtdProcessing : System.Xml.DtdProcessing with get, set" Usage="System.Xml.XmlTextReader.DtdProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.DtdProcessing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-331">Получает или задает перечисление <see cref="T:System.Xml.DtdProcessing" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-331">Gets or sets the <see cref="T:System.Xml.DtdProcessing" /> enumeration.</span></span></summary>
        <value><span data-ttu-id="9c0e0-332">Перечисление <see cref="T:System.Xml.DtdProcessing" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-332">The <see cref="T:System.Xml.DtdProcessing" /> enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e0-333"><xref:System.Xml.DtdProcessing> Перечисление содержит <xref:System.Xml.DtdProcessing.Prohibit>, <xref:System.Xml.DtdProcessing.Ignore>, и <xref:System.Xml.DtdProcessing.Parse> перечислителей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-333">The <xref:System.Xml.DtdProcessing> enumeration contains the <xref:System.Xml.DtdProcessing.Prohibit>, <xref:System.Xml.DtdProcessing.Ignore>, and <xref:System.Xml.DtdProcessing.Parse> enumerators.</span></span> <span data-ttu-id="9c0e0-334"><xref:System.Xml.DtdProcessing.Parse> значение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-334"><xref:System.Xml.DtdProcessing.Parse> is the default behavior.</span></span> <span data-ttu-id="9c0e0-335"><xref:System.Xml.XmlTextReader.DtdProcessing%2A> Заменяет свойство `ProhibitDTD` свойство и добавляет возможность игнорировать элемент DOCTYPE.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-335">The <xref:System.Xml.XmlTextReader.DtdProcessing%2A> property replaces the `ProhibitDTD` property and adds the ability to ignore the DOCTYPE element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9c0e0-336">Если <xref:System.Xml.XmlTextReader.DtdProcessing%2A> свойству <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>, <xref:System.Xml.XmlTextReader> не сообщит о DTD.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-336">If the <xref:System.Xml.XmlTextReader.DtdProcessing%2A> property is set to <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>, the <xref:System.Xml.XmlTextReader> will not report the DTDs.</span></span> <span data-ttu-id="9c0e0-337">Это означает, что на выходные данные будут потеряны DTD и DOCTYPE.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-337">This means that the DTD/DOCTYPE will be lost on output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.Xml.XmlTextReader.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-338">Возвращает кодировку документа.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-338">Gets the encoding of the document.</span></span></summary>
        <value><span data-ttu-id="9c0e0-339">Значение кодировки.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-339">The encoding value.</span></span> <span data-ttu-id="9c0e0-340">Если атрибут кодировки и метка порядка байтов отсутствуют, по умолчанию используется кодировка UTF-8.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-340">If no encoding attribute exists, and there is no byte-order mark, this defaults to UTF-8.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-341">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-341">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-342">Так как <xref:System.Xml.XmlTextReader> использует <xref:System.Text.Encoding?displayProperty=nameWithType> класса `XmlTextReader` также поддерживает все кодировки, поддерживаемые этим классом.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-342">Because <xref:System.Xml.XmlTextReader> uses the <xref:System.Text.Encoding?displayProperty=nameWithType> class, `XmlTextReader` also supports all encodings supported by that class.</span></span> <span data-ttu-id="9c0e0-343">Исключением из этого является любой кодировке, например UTF-7 и EBCDIC, которая сопоставляет `<?xml` последовательности другими байтовыми значениями, чем UTF-8.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-343">The exception to this is any encoding, such as UTF-7 or EBCDIC, that maps the `<?xml` sequence to different byte values than UTF-8.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityHandling">
      <MemberSignature Language="C#" Value="public System.Xml.EntityHandling EntityHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.EntityHandling EntityHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.EntityHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityHandling As EntityHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::EntityHandling EntityHandling { System::Xml::EntityHandling get(); void set(System::Xml::EntityHandling value); };" />
      <MemberSignature Language="F#" Value="member this.EntityHandling : System.Xml.EntityHandling with get, set" Usage="System.Xml.XmlTextReader.EntityHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.EntityHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-344">Возвращает или задает значение, определяющее способ обработки сущностей средством чтения.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-344">Gets or sets a value that specifies how the reader handles entities.</span></span></summary>
        <value><span data-ttu-id="9c0e0-345">Одно из значений <see cref="T:System.Xml.EntityHandling" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-345">One of the <see cref="T:System.Xml.EntityHandling" /> values.</span></span> <span data-ttu-id="9c0e0-346">Если <see langword="EntityHandling" /> не задан, по умолчанию для него используется значение <see langword="EntityHandling.ExpandCharEntities" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-346">If no <see langword="EntityHandling" /> is specified, it defaults to <see langword="EntityHandling.ExpandCharEntities" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-347">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-347">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-348">Это свойство может быть изменено в режиме реального времени и вступит в силу после следующего <xref:System.Xml.XmlTextReader.Read%2A> вызова.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-348">This property can be changed on the fly and takes effect after the next <xref:System.Xml.XmlTextReader.Read%2A> call.</span></span>  
  
 <span data-ttu-id="9c0e0-349">Когда `EntityHandling` присваивается `ExpandCharEntities`, значения атрибутов нормализуются лишь частично.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-349">When `EntityHandling` is set to `ExpandCharEntities`, attribute values are only partially normalized.</span></span> <span data-ttu-id="9c0e0-350">Средство чтения нормализует каждый отдельный текстовый узел, независимо от содержимого соседних узлов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-350">The reader normalizes each individual text node independently from the content of adjacent entity reference nodes.</span></span>  
  
 <span data-ttu-id="9c0e0-351">Для демонстрации разницы между сущностью режимами обработки, рассмотрим следующий код XML:</span><span class="sxs-lookup"><span data-stu-id="9c0e0-351">To illustrate the difference between the entity handling modes consider the following XML:</span></span>  
  
```  
<!DOCTYPE doc [<!ENTITY num "123">]>  
    <doc> &#65; &num; </doc>  
```  
  
 <span data-ttu-id="9c0e0-352">Когда `EntityHandling` присваивается `ExpandEntities` узел элемента «doc» содержит один текстовый узел с текстом расширенную сущность:</span><span class="sxs-lookup"><span data-stu-id="9c0e0-352">When `EntityHandling` is set to `ExpandEntities` the "doc" element node contains one text node with the expanded entity text:</span></span>  
  
|<span data-ttu-id="9c0e0-353">Глубина</span><span class="sxs-lookup"><span data-stu-id="9c0e0-353">Depth</span></span>|<span data-ttu-id="9c0e0-354">Тип узла</span><span class="sxs-lookup"><span data-stu-id="9c0e0-354">Node type</span></span>|<span data-ttu-id="9c0e0-355">name</span><span class="sxs-lookup"><span data-stu-id="9c0e0-355">Name</span></span>|<span data-ttu-id="9c0e0-356">Значение</span><span class="sxs-lookup"><span data-stu-id="9c0e0-356">Value</span></span>|  
|-----------|---------------|----------|-----------|  
|<span data-ttu-id="9c0e0-357">1</span><span class="sxs-lookup"><span data-stu-id="9c0e0-357">1</span></span>|`Text`||<span data-ttu-id="9c0e0-358">A 123</span><span class="sxs-lookup"><span data-stu-id="9c0e0-358">A 123</span></span>|  
  
 <span data-ttu-id="9c0e0-359">При `EntityHandling` присваивается `ExpandCharEntites`, и <xref:System.Xml.XmlTextReader.WhitespaceHandling%2A> присваивается `Significant` или `All`, элемент «doc» расширяет сущность знака и возвращает основную сущность в виде узла:</span><span class="sxs-lookup"><span data-stu-id="9c0e0-359">When `EntityHandling` is set to `ExpandCharEntites`, and <xref:System.Xml.XmlTextReader.WhitespaceHandling%2A> is set to `Significant` or `All`, the "doc" element expands the character entity and returns the general entity as a node:</span></span>  
  
|<span data-ttu-id="9c0e0-360">Глубина</span><span class="sxs-lookup"><span data-stu-id="9c0e0-360">Depth</span></span>|<span data-ttu-id="9c0e0-361">Тип узла</span><span class="sxs-lookup"><span data-stu-id="9c0e0-361">Node type</span></span>|<span data-ttu-id="9c0e0-362">name</span><span class="sxs-lookup"><span data-stu-id="9c0e0-362">Name</span></span>|<span data-ttu-id="9c0e0-363">Значение</span><span class="sxs-lookup"><span data-stu-id="9c0e0-363">Value</span></span>|  
|-----------|---------------|----------|-----------|  
|<span data-ttu-id="9c0e0-364">1</span><span class="sxs-lookup"><span data-stu-id="9c0e0-364">1</span></span>|`Text`||<span data-ttu-id="9c0e0-365">А</span><span class="sxs-lookup"><span data-stu-id="9c0e0-365">A</span></span>|  
|<span data-ttu-id="9c0e0-366">1</span><span class="sxs-lookup"><span data-stu-id="9c0e0-366">1</span></span>|`EntityReference`|<span data-ttu-id="9c0e0-367">num</span><span class="sxs-lookup"><span data-stu-id="9c0e0-367">num</span></span>||  
|<span data-ttu-id="9c0e0-368">1</span><span class="sxs-lookup"><span data-stu-id="9c0e0-368">1</span></span>|`SignificantWhitespace`|||  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public override bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.EOF" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EOF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EOF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EOF : bool" Usage="System.Xml.XmlTextReader.EOF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-369">Возвращает значение, определяющее, позиционировано ли средство чтения в конец потока.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-369">Gets a value indicating whether the reader is positioned at the end of the stream.</span></span></summary>
        <value><span data-ttu-id="9c0e0-370">Значение <see langword="true" />, если средство чтения установлено в конец потока; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-370"><see langword="true" /> if the reader is positioned at the end of the stream; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-371">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-371">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9c0e0-372">Возвращает значение атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-372">Gets the value of an attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-373">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-373">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(int i);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : int -&gt; string" Usage="xmlTextReader.GetAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="9c0e0-374">Индекс атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-374">The index of the attribute.</span></span> <span data-ttu-id="9c0e0-375">Индексация начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-375">The index is zero-based.</span></span> <span data-ttu-id="9c0e0-376">(Индекс первого атрибута равен нулю.)</span><span class="sxs-lookup"><span data-stu-id="9c0e0-376">(The first attribute has index 0.)</span></span></param>
        <summary><span data-ttu-id="9c0e0-377">Возвращает значение атрибута по заданному индексу.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-377">Gets the value of the attribute with the specified index.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-378">Значение указанного атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-378">The value of the specified attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-379">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-379">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-380">Этот метод не изменяет позицию средства чтения.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-380">This method does not move the reader.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9c0e0-381">Параметр <paramref name="i" /> меньше 0 или больше или равен <see cref="P:System.Xml.XmlTextReader.AttributeCount" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-381">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlTextReader.AttributeCount" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string -&gt; string" Usage="xmlTextReader.GetAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9c0e0-382">Полное имя атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-382">The qualified name of the attribute.</span></span></param>
        <summary><span data-ttu-id="9c0e0-383">Возвращает значение атрибута с указанным именем.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-383">Gets the value of the attribute with the specified name.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-384">Значение указанного атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-384">The value of the specified attribute.</span></span> <span data-ttu-id="9c0e0-385">Если атрибут не найден, возвращается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-385">If the attribute is not found, <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-386">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-386">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-387">Этот метод не изменяет позицию средства чтения.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-387">This method does not move the reader.</span></span>  
  
 <span data-ttu-id="9c0e0-388">Если средство чтения находится на `DocumentType` узла, этот метод можно использовать для получения PUBLIC и SYSTEM литералы, например, `reader.GetAttribute("PUBLIC")`</span><span class="sxs-lookup"><span data-stu-id="9c0e0-388">If the reader is positioned on a `DocumentType` node, this method can be used to get the PUBLIC and SYSTEM literals, for example, `reader.GetAttribute("PUBLIC")`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-389">Следующий пример возвращает значение атрибута ISBN.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-389">The following example gets the value of the ISBN attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.GetAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.GetAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.GetAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.GetAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.GetAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.GetAttribute1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9c0e0-390">В примере используется файл `attrs.xml`качестве входных данных.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-390">The example uses the file, `attrs.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.GetAttribute1 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.GetAttribute1 Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string * string -&gt; string" Usage="xmlTextReader.GetAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="9c0e0-391">Локальное имя атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-391">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="9c0e0-392">Универсальный код ресурса (URI) пространства имен атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-392">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="9c0e0-393">Возвращает значение атрибута с указанным локальным именем и универсальным кодом ресурса (URI) пространства имен.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-393">Gets the value of the attribute with the specified local name and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-394">Значение указанного атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-394">The value of the specified attribute.</span></span> <span data-ttu-id="9c0e0-395">Если атрибут не найден, возвращается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-395">If the attribute is not found, <see langword="null" /> is returned.</span></span> <span data-ttu-id="9c0e0-396">Этот метод не изменяет позицию средства чтения.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-396">This method does not move the reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-397">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-397">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-398">Следующий код XML содержит атрибут в пространстве имен:</span><span class="sxs-lookup"><span data-stu-id="9c0e0-398">The following XML contains an attribute in a specific namespace:</span></span>  
  
```xml  
<test xmlns:dt="urn:datatypes" dt:type="int"/>  
```  
  
 <span data-ttu-id="9c0e0-399">Для поиска `dt:type` атрибут, используя один аргумент (префикс и локальное имя) или два (локальное имя и URI пространства имен):</span><span class="sxs-lookup"><span data-stu-id="9c0e0-399">You can lookup the `dt:type` attribute using one argument (prefix and local name) or two arguments (local name and namespace URI):</span></span>  
  
```csharp  
String dt = reader.GetAttribute("dt:type");  
String dt2 = reader.GetAttribute("type","urn:datatypes");  
```  
  
 <span data-ttu-id="9c0e0-400">Для уточняющего запроса `xmlns:dt` атрибут, воспользуйтесь одним из следующих аргументов:</span><span class="sxs-lookup"><span data-stu-id="9c0e0-400">To lookup the `xmlns:dt` attribute, use one of the following arguments:</span></span>  
  
```csharp  
String dt3 = reader.GetAttribute("xmlns:dt");  
String dt4 = reader.GetAttribute("dt",http://www.w3.org/2000/xmlns/);  
```  
  
 <span data-ttu-id="9c0e0-401">Можно также получить эти сведения с помощью <xref:System.Xml.XmlTextReader.Prefix%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-401">You can also get this information using the <xref:System.Xml.XmlTextReader.Prefix%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetNamespacesInScope">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetNamespacesInScope(System::Xml::XmlNamespaceScope scope);" />
      <MemberSignature Language="F#" Value="member this.GetNamespacesInScope : System.Xml.XmlNamespaceScope -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="xmlTextReader.GetNamespacesInScope scope" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="9c0e0-402">С помощью значения <see cref="T:System.Xml.XmlNamespaceScope" /> указывается тип узлов пространства имен, которые следует возвратить.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-402">An <see cref="T:System.Xml.XmlNamespaceScope" /> value that specifies the type of namespace nodes to return.</span></span></param>
        <summary><span data-ttu-id="9c0e0-403">Возвращает коллекцию, содержащую все пространства имен, которые в настоящий момент находятся в области видимости.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-403">Gets a collection that contains all namespaces currently in-scope.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-404">Объект <see cref="T:System.Collections.IDictionary" />, содержащий все текущие пространства имен в области.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-404">An <see cref="T:System.Collections.IDictionary" /> object that contains all the current in-scope namespaces.</span></span> <span data-ttu-id="9c0e0-405">Если средство чтения не позиционировано на какой-либо элемент, возвращается пустой словарь (без пространств имен).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-405">If the reader is not positioned on an element, an empty dictionary (no namespaces) is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-406">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-406">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-407">Словарь состоит из коллекции имен пространств имен, ключами которой являются префиксы.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-407">The dictionary consists of a collection of namespace names keyed by prefix.</span></span> <span data-ttu-id="9c0e0-408">Его можно использовать для перечисления пространств имен в области.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-408">It can be used to enumerate the in-scope namespaces.</span></span> <span data-ttu-id="9c0e0-409">Словарь является отключенной копией списка пространств имен средства чтения.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-409">The dictionary is a disconnected copy of the namespace list of the reader.</span></span> <span data-ttu-id="9c0e0-410">Он остается неизменным при изменения текущего списка пространств имен в области позиция средства чтения.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-410">It remains unchanged as the reader position, current in-scope namespace list, changes.</span></span>  
  
 <span data-ttu-id="9c0e0-411">В следующей таблице описаны как <xref:System.Xml.XmlNamespaceScope> влияет на значение перечисления, является ли или не по умолчанию и встроенные пространства имен возвращаются с <xref:System.Xml.XmlTextReader.GetNamespacesInScope%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-411">The following table describes how the <xref:System.Xml.XmlNamespaceScope> enumeration value affects the whether or not the default and built-in namespaces are returned by <xref:System.Xml.XmlTextReader.GetNamespacesInScope%2A>.</span></span>  
  
|<span data-ttu-id="9c0e0-412">Значение XmlNamespaceScope</span><span class="sxs-lookup"><span data-stu-id="9c0e0-412">XmlNamespaceScope Value</span></span>|<span data-ttu-id="9c0e0-413">xmlns:xml</span><span class="sxs-lookup"><span data-stu-id="9c0e0-413">xmlns:xml</span></span>|<span data-ttu-id="9c0e0-414">xmlns:xmlns</span><span class="sxs-lookup"><span data-stu-id="9c0e0-414">xmlns:xmlns</span></span>|<span data-ttu-id="9c0e0-415">xmlns=""</span><span class="sxs-lookup"><span data-stu-id="9c0e0-415">xmlns=""</span></span>|  
|-----------------------------|---------------|-----------------|---------------|  
|`All`|<span data-ttu-id="9c0e0-416">да</span><span class="sxs-lookup"><span data-stu-id="9c0e0-416">yes</span></span>|<span data-ttu-id="9c0e0-417">Нет</span><span class="sxs-lookup"><span data-stu-id="9c0e0-417">no</span></span>|<span data-ttu-id="9c0e0-418">Нет</span><span class="sxs-lookup"><span data-stu-id="9c0e0-418">no</span></span>|  
|`ExcludeXml`|<span data-ttu-id="9c0e0-419">Нет</span><span class="sxs-lookup"><span data-stu-id="9c0e0-419">no</span></span>|<span data-ttu-id="9c0e0-420">Нет</span><span class="sxs-lookup"><span data-stu-id="9c0e0-420">no</span></span>|<span data-ttu-id="9c0e0-421">Нет</span><span class="sxs-lookup"><span data-stu-id="9c0e0-421">no</span></span>|  
|`Local`|<span data-ttu-id="9c0e0-422">Нет</span><span class="sxs-lookup"><span data-stu-id="9c0e0-422">no</span></span>|<span data-ttu-id="9c0e0-423">Нет</span><span class="sxs-lookup"><span data-stu-id="9c0e0-423">no</span></span>|<span data-ttu-id="9c0e0-424">да</span><span class="sxs-lookup"><span data-stu-id="9c0e0-424">yes</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetRemainder">
      <MemberSignature Language="C#" Value="public System.IO.TextReader GetRemainder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.TextReader GetRemainder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.GetRemainder" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRemainder () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::TextReader ^ GetRemainder();" />
      <MemberSignature Language="F#" Value="member this.GetRemainder : unit -&gt; System.IO.TextReader" Usage="xmlTextReader.GetRemainder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c0e0-425">Возвращает оставшуюся часть XML-кода, находящегося в буфере.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-425">Gets the remainder of the buffered XML.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-426">Объект <see cref="T:System.IO.TextReader" />, содержащий оставшуюся часть XML-кода, находящегося в буфере.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-426">A <see cref="T:System.IO.TextReader" /> containing the remainder of the buffered XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-427">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-427">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-428">Так как <xref:System.Xml.XmlTextReader> буферизованной `Read`, он должен иметь возможность получения остатка от неиспользуемых буфера, чтобы данные не будут утеряны.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-428">Because <xref:System.Xml.XmlTextReader> does a buffered `Read`, it must be able to return the remainder of the unused buffer so that no data is lost.</span></span> <span data-ttu-id="9c0e0-429">Это позволяет протоколов (например, нескольких частей MIME) пакет XML в одном потоке с другими данными.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-429">This allows protocols (such as multi-part MIME) to package XML in the same stream as other things.</span></span>  
  
 <span data-ttu-id="9c0e0-430">После вызова этого метода <xref:System.Xml.XmlTextReader.EOF%2A> присваивается `true`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-430">After calling this method, <xref:System.Xml.XmlTextReader.EOF%2A> is set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-431">Следующий пример считывает первую часть XML-документа, а затем использует `GetRemainder` для завершения чтения документа с помощью второго модуля чтения.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-431">The following example reads the first part of an XML document and then uses `GetRemainder` to complete reading the document using a second reader.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.GetRemainder Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.GetRemainder Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.GetRemainder Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.GetRemainder Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.GetRemainder Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.GetRemainder Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9c0e0-432">В примере используется входной файл `tworeads.xml`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-432">The example uses the input file `tworeads.xml`.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.GetRemainder Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.GetRemainder Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="HasLineInfo">
      <MemberSignature Language="C#" Value="public bool HasLineInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasLineInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.HasLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function HasLineInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasLineInfo();" />
      <MemberSignature Language="F#" Value="abstract member HasLineInfo : unit -&gt; bool&#xA;override this.HasLineInfo : unit -&gt; bool" Usage="xmlTextReader.HasLineInfo " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlLineInfo.HasLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c0e0-433">Возвращает значение, определяющее возможность возвращения классом сведений о строке.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-433">Gets a value indicating whether the class can return line information.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-434">Значение <see langword="true" />, если класс может возвратить сведения о строке, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-434"><see langword="true" /> if the class can return line information; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-435">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-435">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public override bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Xml.XmlTextReader.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-436">Возвращает значение, определяющие наличие у текущего узла свойства <see cref="P:System.Xml.XmlTextReader.Value" />, значение которого отличается от <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-436">Gets a value indicating whether the current node can have a <see cref="P:System.Xml.XmlTextReader.Value" /> other than <see langword="String.Empty" />.</span></span></summary>
        <value><span data-ttu-id="9c0e0-437">Значение <see langword="true" />, если узел, на котором расположено средство чтения, может иметь значение <see langword="Value" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-437"><see langword="true" /> if the node on which the reader is currently positioned can have a <see langword="Value" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-438">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-438">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-439">В следующей таблице представлен список возвращаемых типов узлов со значениями.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-439">The following table lists node types that have a value to return.</span></span>  
  
|<span data-ttu-id="9c0e0-440">Тип узла</span><span class="sxs-lookup"><span data-stu-id="9c0e0-440">Node type</span></span>|<span data-ttu-id="9c0e0-441">Значение</span><span class="sxs-lookup"><span data-stu-id="9c0e0-441">Value</span></span>|  
|---------------|-----------|  
|`Attribute`|<span data-ttu-id="9c0e0-442">Значение атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-442">The value of the attribute.</span></span>|  
|`CDATA`|<span data-ttu-id="9c0e0-443">Содержимое раздела CDATA.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-443">The content of the CDATA section.</span></span>|  
|`Comment`|<span data-ttu-id="9c0e0-444">Содержимое комментария.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-444">The content of the comment.</span></span>|  
|`DocumentType`|<span data-ttu-id="9c0e0-445">Внутреннее подмножество.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-445">The internal subset.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="9c0e0-446">Все содержимое, за исключением цели.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-446">The entire content, excluding the target.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="9c0e0-447">Пустое пространство в разметке модели со смешанным содержимым.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-447">The white space between markup in a mixed content model.</span></span>|  
|`Text`|<span data-ttu-id="9c0e0-448">Содержимое текстового узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-448">The content of the text node.</span></span>|  
|`Whitespace`|<span data-ttu-id="9c0e0-449">Пробелы между разметкой.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-449">The white space between markup.</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="9c0e0-450">Содержимое декларации.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-450">The content of the declaration.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-451">Следующий пример показывает значение для каждого узла, который может иметь значение.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-451">The following example displays the value for every node that can have a value.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.HasValue Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.HasValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.HasValue Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.HasValue Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.HasValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.HasValue Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9c0e0-452">В примере используется файл `book1.xml`качестве входных данных.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-452">The example uses the file, `book1.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.HasValue Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.HasValue Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public override bool IsDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDefault { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool" Usage="System.Xml.XmlTextReader.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-453">Возвращает значение, показывающее, является ли текущий узел атрибутом, который был создан из значения по умолчанию, определенного в определении DTD или в схеме.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-453">Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.</span></span></summary>
        <value><span data-ttu-id="9c0e0-454">Данное свойство всегда возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-454">This property always returns <see langword="false" />.</span></span> <span data-ttu-id="9c0e0-455">(<see cref="T:System.Xml.XmlTextReader" /> не расширяет атрибуты по умолчанию).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-455">(<see cref="T:System.Xml.XmlTextReader" /> does not expand default attributes.)</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-456">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-456">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-457">Это свойство применяется только к узлам атрибутов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-457">This property applies only to attribute nodes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public override bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.IsEmptyElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEmptyElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmptyElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmptyElement : bool" Usage="System.Xml.XmlTextReader.IsEmptyElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-458">Возвращает значение, определяющее, является ли текущий узел пустым элементом (например, <c>&lt;MyElement/&gt;</c>).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-458">Gets a value indicating whether the current node is an empty element (for example, <c>&lt;MyElement/&gt;</c>).</span></span></summary>
        <value><span data-ttu-id="9c0e0-459"><see langword="true" /> Если текущий узел является элементом (<see cref="P:System.Xml.XmlTextReader.NodeType" /> равно <see langword="XmlNodeType.Element" />), заканчивается <c>/ &gt;</c>; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-459"><see langword="true" /> if the current node is an element (<see cref="P:System.Xml.XmlTextReader.NodeType" /> equals <see langword="XmlNodeType.Element" />) that ends with <c>/&gt;</c>; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-460">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-460">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-461">Это свойство позволяет определить разницу между:</span><span class="sxs-lookup"><span data-stu-id="9c0e0-461">This property enables you to determine the difference between the following:</span></span>  
  
 <span data-ttu-id="9c0e0-462">`<item num="123"/>` (`IsEmptyElement` — `true`).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-462">`<item num="123"/>` (`IsEmptyElement` is `true`).</span></span>  
  
 <span data-ttu-id="9c0e0-463">`<item num="123">` (`IsEmptyElement` является `false`, несмотря на то, что содержимое элемента пусто).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-463">`<item num="123">` (`IsEmptyElement` is `false`, although element content is empty).</span></span>  
  
 <span data-ttu-id="9c0e0-464">Соответствующий `EndElement` узел для пустых элементов не создается.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-464">A corresponding `EndElement` node is not generated for empty elements.</span></span>  
  
 <span data-ttu-id="9c0e0-465">`IsEmptyElement` просто сообщает ли или элемент в исходном документе закрывающий тег.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-465">`IsEmptyElement` simply reports whether or not the element in the source document had an end element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-466">В следующем примере показано текстовое содержимое каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-466">The following example displays the text content of each element.</span></span>  
  
 [!code-cpp[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9c0e0-467">В примере используется файл `elems.xml`качестве входных данных.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-467">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlReader.IsStartElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[int] { System::String ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : string" Usage="System.Xml.XmlTextReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="i">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[string name, string namespaceURI] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^, System::String ^] { System::String ^ get(System::String ^ name, System::String ^ namespaceURI); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * string) : string" Usage="System.Xml.XmlTextReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="namespaceURI" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="namespaceURI">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int" Usage="System.Xml.XmlTextReader.LineNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xml.IXmlLineInfo.LineNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-468">Возвращает номер текущей строки.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-468">Gets the current line number.</span></span></summary>
        <value><span data-ttu-id="9c0e0-469">Текущий номер строки.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-469">The current line number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-470">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-470">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-471">Это свойство чаще всего используется для отчетов об ошибках, но может вызываться в любое время.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-471">This property is most commonly used for error reporting, but can be called at any time.</span></span> <span data-ttu-id="9c0e0-472">Начальное значение для этого свойства равно `1`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-472">The starting value for this property is `1`.</span></span>  
  
 <span data-ttu-id="9c0e0-473">В сочетании с <xref:System.Xml.XmlTextReader.LinePosition%2A>, значение `1,1` указывает на начало документа.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-473">Combined with <xref:System.Xml.XmlTextReader.LinePosition%2A>, a value of `1,1` indicates the start of the document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-474">В следующем примере отображается каждый узел, включая его глубину, номер строки и позиции строки.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-474">The following example displays each node including its depth, line number, and line position.</span></span>  
  
 [!code-cpp[XmlTextReader.LineNum#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.LineNum/CPP/readlinenum.cpp#1)]
 [!code-csharp[XmlTextReader.LineNum#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.LineNum/CS/readlinenum.cs#1)]
 [!code-vb[XmlTextReader.LineNum#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.LineNum/VB/readlinenum.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LinePosition">
      <MemberSignature Language="C#" Value="public int LinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePosition" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.LinePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinePosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LinePosition : int" Usage="System.Xml.XmlTextReader.LinePosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xml.IXmlLineInfo.LinePosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-475">Возвращает позицию в текущей строке.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-475">Gets the current line position.</span></span></summary>
        <value><span data-ttu-id="9c0e0-476">Позиция в текущей строке.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-476">The current line position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-477">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-477">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-478">Это свойство чаще всего используется для отчетов об ошибках, но может вызываться в любое время.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-478">This property is most commonly used for error reporting, but can be called at any time.</span></span> <span data-ttu-id="9c0e0-479">Начальное значение свойства является `1`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-479">The property's starting value is `1`.</span></span>  
  
 <span data-ttu-id="9c0e0-480">Указанное положение — первый символ текста в разметке.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-480">The position indicated is the first character of text in the markup.</span></span>  
  
```  
<root>  
abc<tag/>  
</root>  
```  
  
 <span data-ttu-id="9c0e0-481">В первой строке текста XML `LinePosition` из `2` соответствует символу `r`; на второй строке `LinePosition` из `5` соответствует символу `t`; и в третьей строке `LinePosition` из `3` соответствует символу `r`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-481">On the first line of the preceding XML text, a `LinePosition` of `2` corresponds to the character `r`; on the second line, a `LinePosition` of `5` corresponds to the character `t`; and on the third line, a `LinePosition` of `3` corresponds to the character `r`.</span></span>  
  
 <span data-ttu-id="9c0e0-482">В сочетании с <xref:System.Xml.XmlTextReader.LineNumber%2A>, значение `1,1` указывает на начало документа.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-482">Combined with <xref:System.Xml.XmlTextReader.LineNumber%2A>, a value of `1,1` indicates the start of the document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-483">В следующем примере отображается каждый узел, включая его глубину, номер строки и позиции строки.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-483">The following example displays each node including its depth, line number, and line position.</span></span>  
  
 [!code-cpp[XmlTextReader.LineNum#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.LineNum/CPP/readlinenum.cpp#1)]
 [!code-csharp[XmlTextReader.LineNum#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.LineNum/CS/readlinenum.cs#1)]
 [!code-vb[XmlTextReader.LineNum#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.LineNum/VB/readlinenum.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlTextReader.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-484">Возвращает локальное имя текущего узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-484">Gets the local name of the current node.</span></span></summary>
        <value><span data-ttu-id="9c0e0-485">Имя текущего узла с удаленным префиксом.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-485">The name of the current node with the prefix removed.</span></span> <span data-ttu-id="9c0e0-486">Например <see langword="LocalName" /> — <see langword="book" /> для элемента <c>&lt;bk: book&gt;</c>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-486">For example, <see langword="LocalName" /> is <see langword="book" /> for the element <c>&lt;bk:book&gt;</c>.</span></span>  
  
<span data-ttu-id="9c0e0-487">Для безымянных типов узлов (например, <see langword="Text" />, <see langword="Comment" /> и т. д.) данное свойство возвращает <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-487">For node types that do not have a name (like <see langword="Text" />, <see langword="Comment" />, and so on), this property returns <see langword="String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-488">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-488">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-489">В следующем примере отображается локальное имя каждого узла, и, если они существуют, префикс и URI пространства имен.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-489">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9c0e0-490">В примере используется файл `book2.xml`качестве входных данных.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-490">The example uses the file, `book2.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.LocalName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public override string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="override this.LookupNamespace : string -&gt; string" Usage="xmlTextReader.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="9c0e0-491">Префикс, для которого требуется разрешить URI пространства имен.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-491">The prefix whose namespace URI you want to resolve.</span></span> <span data-ttu-id="9c0e0-492">Чтобы сопоставить пространство имен по умолчанию, необходимо передать пустую строку.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-492">To match the default namespace, pass an empty string.</span></span> <span data-ttu-id="9c0e0-493">Эту строку не следует атомизировать.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-493">This string does not have to be atomized.</span></span></param>
        <summary><span data-ttu-id="9c0e0-494">Разрешает префикс пространства имен в области видимости текущего элемента.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-494">Resolves a namespace prefix in the current element's scope.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-495">URI пространства имен, которое отображает префикс, или значение <see langword="null" />, если соответствующий префикс не найден.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-495">The namespace URI to which the prefix maps or <see langword="null" /> if no matching prefix is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-496">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-496">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-497">В следующем XML, если средство чтения находится на `href` атрибут, префикс `a` разрешается путем вызова `reader.LookupNamespace("a")`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-497">In the following XML, if the reader is positioned on the `href` attribute, the prefix `a` is resolved by calling `reader.LookupNamespace("a")`.</span></span> <span data-ttu-id="9c0e0-498">Возвращается строка `urn:456`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-498">The returned string is `urn:456`.</span></span>  
  
```xml  
<root xmlns:a="urn:456">  
 <item>  
 <ref href="a:b"/>  
 </item>  
</root>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c0e0-499">Свойству <see cref="P:System.Xml.XmlTextReader.Namespaces" /> задано значение <see langword="true" />, а свойству <paramref name="prefix" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-499">The <see cref="P:System.Xml.XmlTextReader.Namespaces" /> property is set to <see langword="true" /> and the <paramref name="prefix" /> value is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9c0e0-500">Переходит к указанному атрибуту.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-500">Moves to the specified attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-501">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-501">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override void MoveToAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void MoveToAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub MoveToAttribute (i As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void MoveToAttribute(int i);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : int -&gt; unit" Usage="xmlTextReader.MoveToAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="9c0e0-502">Индекс атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-502">The index of the attribute.</span></span></param>
        <summary><span data-ttu-id="9c0e0-503">Переходит к атрибуту с указанным индексом.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-503">Moves to the attribute with the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-504">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-504">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-505">Следующий пример отображает все атрибуты на текущем узле.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-505">The following example displays all attributes on the current node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9c0e0-506">Параметр <paramref name="i" /> меньше 0 или больше или равен <see cref="P:System.Xml.XmlReader.AttributeCount" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-506">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlReader.AttributeCount" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string -&gt; bool" Usage="xmlTextReader.MoveToAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9c0e0-507">Полное имя атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-507">The qualified name of the attribute.</span></span></param>
        <summary><span data-ttu-id="9c0e0-508">Переходит к атрибуту с указанным именем.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-508">Moves to the attribute with the specified name.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-509">Значение <see langword="true" />, если атрибут найден; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-509"><see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="9c0e0-510">Если значение <see langword="false" />, позиция средства чтения не изменяется.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-510">If <see langword="false" />, the reader's position does not change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-511">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-511">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-512">После вызова метода `MoveToAttribute`, <xref:System.Xml.XmlTextReader.Name%2A>, <xref:System.Xml.XmlTextReader.NamespaceURI%2A>, и <xref:System.Xml.XmlTextReader.Prefix%2A> свойства отражают свойства этого атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-512">After calling `MoveToAttribute`, the <xref:System.Xml.XmlTextReader.Name%2A>, <xref:System.Xml.XmlTextReader.NamespaceURI%2A>, and <xref:System.Xml.XmlTextReader.Prefix%2A> properties reflects the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string * string -&gt; bool" Usage="xmlTextReader.MoveToAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="9c0e0-513">Локальное имя атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-513">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="9c0e0-514">Универсальный код ресурса (URI) пространства имен атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-514">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="9c0e0-515">Переходит к атрибуту с указанным локальным именем и URI пространства имен.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-515">Moves to the attribute with the specified local name and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-516">Значение <see langword="true" />, если атрибут найден; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-516"><see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="9c0e0-517">Если значение <see langword="false" />, позиция средства чтения не изменяется.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-517">If <see langword="false" />, the reader's position does not change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-518">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-518">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-519">После вызова метода `MoveToAttribute`, <xref:System.Xml.XmlTextReader.Name%2A>, <xref:System.Xml.XmlTextReader.NamespaceURI%2A>, и <xref:System.Xml.XmlTextReader.Prefix%2A> свойства отражают свойства этого атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-519">After calling `MoveToAttribute`, the <xref:System.Xml.XmlTextReader.Name%2A>, <xref:System.Xml.XmlTextReader.NamespaceURI%2A>, and <xref:System.Xml.XmlTextReader.Prefix%2A> properties reflects the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToElement">
      <MemberSignature Language="C#" Value="public override bool MoveToElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToElement();" />
      <MemberSignature Language="F#" Value="override this.MoveToElement : unit -&gt; bool" Usage="xmlTextReader.MoveToElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c0e0-520">Переходит к элементу, содержащему текущий узел атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-520">Moves to the element that contains the current attribute node.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-521">Значение <see langword="true" />, если средство чтения находится на атрибуте (средство чтения перемещается к элементу с этим атрибутом); в противном случае — <see langword="false" /> (позиция средства чтения не изменяется).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-521"><see langword="true" /> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <see langword="false" /> if the reader is not positioned on an attribute (the position of the reader does not change).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-522">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-522">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-523">Этот метод можно используйте для возврата элемента после просмотра его атрибутов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-523">Use this method to return to an element after navigating through its attributes.</span></span> <span data-ttu-id="9c0e0-524">Этот метод перемещает средство чтения к одному из узлы следующих типов: `Element`, `DocumentType`, или `XmlDeclaration`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-524">This method moves the reader to one of the following node types: `Element`, `DocumentType`, or `XmlDeclaration`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-525">Следующий пример отображает все атрибуты на текущем узле.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-525">The following example displays all attributes on the current node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToFirstAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToFirstAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToFirstAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToFirstAttribute : unit -&gt; bool" Usage="xmlTextReader.MoveToFirstAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c0e0-526">Переходит к первому атрибуту.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-526">Moves to the first attribute.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-527">Значение <see langword="true" />, если атрибут существует (средство чтения перемещается к первому атрибуту); в противном случае — <see langword="false" /> (позиция средства чтения не изменяется).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-527"><see langword="true" /> if an attribute exists (the reader moves to the first attribute); otherwise, <see langword="false" /> (the position of the reader does not change).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-528">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-528">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-529">Следующий пример возвращает значение первого атрибута корневого узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-529">The following example gets the value of the first attribute of the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToFirstAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToFirstAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9c0e0-530">В примере используется файл `attrs.xml`качестве входных данных.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-530">The example uses the file, `attrs.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.MoveToFirstAttribute Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToFirstAttribute Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToNextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToNextAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToNextAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToNextAttribute : unit -&gt; bool" Usage="xmlTextReader.MoveToNextAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c0e0-531">Переходит к следующему атрибуту.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-531">Moves to the next attribute.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-532">Значение <see langword="true" />, если присутствует следующий атрибут; значение <see langword="false" />, если другие атрибуты отсутствуют.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-532"><see langword="true" /> if there is a next attribute; <see langword="false" /> if there are no more attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-533">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-533">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-534">Если текущий узел является узлом элемента, этот метод эквивалентен <xref:System.Xml.XmlTextReader.MoveToFirstAttribute%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-534">If the current node is an element node, this method is equivalent to <xref:System.Xml.XmlTextReader.MoveToFirstAttribute%2A>.</span></span> <span data-ttu-id="9c0e0-535">Если `MoveToNextAttribute` возвращает `true`, средство чтения перемещается к следующему атрибуту; в противном случае позиция средства чтения не изменяется.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-535">If `MoveToNextAttribute` returns `true`, the reader moves to the next attribute; otherwise, the position of the reader does not change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-536">Следующий пример отображает все атрибуты на текущем узле.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-536">The following example displays all attributes on the current node.</span></span>  
  
 [!code-cpp[Classic WebData XmlReader.HasAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlReader.HasAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlReader.HasAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlReader.HasAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlReader.HasAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlReader.HasAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlTextReader.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-537">Возвращает полное имя текущего узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-537">Gets the qualified name of the current node.</span></span></summary>
        <value><span data-ttu-id="9c0e0-538">Полное имя текущего узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-538">The qualified name of the current node.</span></span> <span data-ttu-id="9c0e0-539">Например <see langword="Name" /> — <see langword="bk:book" /> для элемента <c>&lt;bk: book&gt;</c>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-539">For example, <see langword="Name" /> is <see langword="bk:book" /> for the element <c>&lt;bk:book&gt;</c>.</span></span>  
  
<span data-ttu-id="9c0e0-540">Возвращаемое имя зависит от значения свойства <see cref="P:System.Xml.XmlTextReader.NodeType" /> узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-540">The name returned is dependent on the <see cref="P:System.Xml.XmlTextReader.NodeType" /> of the node.</span></span> <span data-ttu-id="9c0e0-541">Значения возвращаются для представленных ниже типов узлов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-541">The following node types return the listed values.</span></span> <span data-ttu-id="9c0e0-542">Для других типов узлов возвращается пустая строка.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-542">All other node types return an empty string.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="9c0e0-543">Тип узла</span><span class="sxs-lookup"><span data-stu-id="9c0e0-543">Node Type</span></span> 
 </term><description> <span data-ttu-id="9c0e0-544">name</span><span class="sxs-lookup"><span data-stu-id="9c0e0-544">Name</span></span> 
 </description></listheader><item><term><see langword="Attribute" /></term><description> <span data-ttu-id="9c0e0-545">Имя атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-545">The name of the attribute.</span></span>  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> <span data-ttu-id="9c0e0-546">Имя типа документа.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-546">The document type name.</span></span>  
  
 </description></item><item><term><see langword="Element" /></term><description> <span data-ttu-id="9c0e0-547">Имя тега.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-547">The tag name.</span></span>  
  
 </description></item><item><term><see langword="EntityReference" /></term><description> <span data-ttu-id="9c0e0-548">Имя сущности, на которую существует ссылка.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-548">The name of the entity referenced.</span></span>  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> <span data-ttu-id="9c0e0-549">Цель инструкции по обработке.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-549">The target of the processing instruction.</span></span>  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> <span data-ttu-id="9c0e0-550">Строка символов <see langword="xml" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-550">The literal string <see langword="xml" />.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-551">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-551">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-552">В следующем примере считывает XML-файла и отображает всех узлов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-552">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9c0e0-553">В примере используется файл `items.xml`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-553">The sample uses the file `items.xml`.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : bool with get, set" Usage="System.Xml.XmlTextReader.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-554">Возвращает или задает значение, указывающее, поддерживаются ли пространства имен.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-554">Gets or sets a value indicating whether to do namespace support.</span></span></summary>
        <value><span data-ttu-id="9c0e0-555">Значение <see langword="true" /> — поддержка осуществляется; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-555"><see langword="true" /> to do namespace support; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="9c0e0-556">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-556">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-557">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-557">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-558">Это свойство определяет, поддерживает ли средство чтения W3C для пространств имен в XML, расположенный www.w3.org/TR/REC-xml-names.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-558">This property determines whether the reader supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.</span></span>  
  
 <span data-ttu-id="9c0e0-559">`Namespaces` Невозможно задать свойство после операции чтения.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-559">The `Namespaces` property cannot be set after a read operation has occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c0e0-560">Установка значения этого свойства после того, как выполнена операция чтения (значение <see cref="P:System.Xml.XmlTextReader.ReadState" /> не равно <see langword="ReadState.Initial" />).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-560">Setting this property after a read operation has occurred (<see cref="P:System.Xml.XmlTextReader.ReadState" /> is not <see langword="ReadState.Initial" />).</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public override string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlTextReader.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-561">Возвращает URI пространства имен (определенное в спецификации W3C Namespace) узла, на который позиционировано средство чтения.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-561">Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.</span></span></summary>
        <value><span data-ttu-id="9c0e0-562">URI пространства имен текущего узла; в противном случае — пустая строка.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-562">The namespace URI of the current node; otherwise an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-563">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-563">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-564">Это свойство относится к `Element` и `Attribute` только узлы.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-564">This property is relevant to `Element` and `Attribute` nodes only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-565">В следующем примере отображается локальное имя каждого узла, и, если они существуют, префикс и URI пространства имен.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-565">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9c0e0-566">В примере используется файл `book2.xml`качестве входных данных.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-566">The example uses the file, `book2.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.LocalName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlTextReader.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-567">Возвращает класс <see cref="T:System.Xml.XmlNameTable" />, связанный с данной реализацией.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-567">Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this implementation.</span></span></summary>
        <value><span data-ttu-id="9c0e0-568"><see langword="XmlNameTable" />, позволяющий получать в узле разделенную версию строки.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-568">The <see langword="XmlNameTable" /> enabling you to get the atomized version of a string within the node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-569">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-569">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-570">Возвращаются все имена узлов и атрибутов из <xref:System.Xml.XmlTextReader> , разделены с помощью `NameTable`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-570">All node and attribute names returned from <xref:System.Xml.XmlTextReader> are atomized using the `NameTable`.</span></span> <span data-ttu-id="9c0e0-571">Когда же имя возвращается несколько раз (например, `Customer`), то же `String` возвращается объект для этого имени.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-571">When the same name is returned multiple times (for example, `Customer`), then the same `String` object is returned for that name.</span></span> <span data-ttu-id="9c0e0-572">Это позволяет писать эффективный код, сравнения объектов для этих строк вместо сравнения строк дорого.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-572">This makes it possible for you to write efficient code that does object comparisons on these strings instead of expensive string comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlTextReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-573">Возвращает тип текущего узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-573">Gets the type of the current node.</span></span></summary>
        <value><span data-ttu-id="9c0e0-574">Одно из значений <see cref="T:System.Xml.XmlNodeType" />, предоставляющее тип текущего узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-574">One of the <see cref="T:System.Xml.XmlNodeType" /> values representing the type of the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-575">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-575">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-576">Это свойство не возвращает следующие `XmlNodeType` типов: `Document`, `DocumentFragment`, `Entity`, `EndEntity`, или `Notation`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-576">This property never returns the following `XmlNodeType` types: `Document`, `DocumentFragment`, `Entity`, `EndEntity`, or `Notation`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-577">В следующем примере считывает XML-файла и отображает всех узлов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-577">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9c0e0-578">В примере используется файл `items.xml`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-578">The sample uses the file `items.xml`.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Normalization">
      <MemberSignature Language="C#" Value="public bool Normalization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Normalization" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Normalization" />
      <MemberSignature Language="VB.NET" Value="Public Property Normalization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Normalization { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Normalization : bool with get, set" Usage="System.Xml.XmlTextReader.Normalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-579">Возвращает или задает значение, определяющее необходимость нормализации символов-разделителей и значений атрибутов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-579">Gets or sets a value indicating whether to normalize white space and attribute values.</span></span></summary>
        <value><span data-ttu-id="9c0e0-580">Значение <see langword="true" /> для нормализации; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-580"><see langword="true" /> to normalize; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="9c0e0-581">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-581">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-582">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-582">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-583">Это свойство можно изменить в любое время и вступает в силу при следующей операции чтения.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-583">This property can be changed at any time and takes effect on the next read operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-584">Если <xref:System.Xml.XmlTextReader> используется для создания <xref:System.Xml.XmlValidatingReader>, чтобы нормализация значений атрибутов, `Normalization` должно быть присвоено `true`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-584">If the <xref:System.Xml.XmlTextReader> is used to construct an <xref:System.Xml.XmlValidatingReader>, to normalize attribute values, `Normalization` must be set to `true`.</span></span>  
  
 <span data-ttu-id="9c0e0-585">Если `Normalization` присваивается `false`, это также отключает проверку символьных диапазонов для числовых сущностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-585">If `Normalization` is set to `false`, this also disables character range checking for numeric entities.</span></span> <span data-ttu-id="9c0e0-586">В результате сущности-символы, такие как `&#0;`, разрешены.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-586">As a result, character entities, such as `&#0;`, are allowed.</span></span>  
  
 <span data-ttu-id="9c0e0-587">Ниже описаны нормализация значений атрибутов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-587">The following describes attribute value normalization:</span></span>  
  
-   <span data-ttu-id="9c0e0-588">Для символьной ссылки символ, на который указывает ссылка, добавляется к значению атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-588">For a character reference, append the referenced character to the attribute value.</span></span>  
  
-   <span data-ttu-id="9c0e0-589">Для ссылки на сущность рекурсивно обрабатывается заменяемый текст этой сущности.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-589">For an entity reference, recursively process the replacement text of the entity.</span></span>  
  
-   <span data-ttu-id="9c0e0-590">Для пробельный символ (#x 20, #xD, #xA, #x 9) добавьте #x 20 к нормализованному значению.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-590">For a white space character (#x20, #xD, #xA, #x9), append #x20 to the normalized value.</span></span> <span data-ttu-id="9c0e0-591">(Только единый #x 20 добавляется для «#xD #xA» последовательность, которая является частью проанализированной внешней сущности или значение литерала entity проанализированной внутренней сущности).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-591">(Only a single #x20 is appended for a "#xD#xA" sequence that is part of an external parsed entity or the literal entity value of an internal parsed entity.)</span></span>  
  
-   <span data-ttu-id="9c0e0-592">Остальные символы обрабатываются путем добавления их к нормализованному значению.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-592">Process other characters by appending them to the normalized value.</span></span>  
  
-   <span data-ttu-id="9c0e0-593">Если Декларированное значение не CDATA, отменить все начальные и конечные символы пробела (#x20) и замените последовательности символов пробела (#x20) символов одного пробела (#x20).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-593">If the declared value is not CDATA, discard any leading and trailing space (#x20) characters and replace sequences of space (#x20) characters with a single space (#x20) character.</span></span>  
  
 <span data-ttu-id="9c0e0-594">`XmlTextReader` Выполняет только атрибут или нормализации CDATA.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-594">The `XmlTextReader` only performs attribute or CDATA normalization.</span></span> <span data-ttu-id="9c0e0-595">Это не происходит нормализации конкретного DTD, если не заключено в `XmlValidatingReader`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-595">It does not do DTD-specific normalization unless wrapped within an `XmlValidatingReader`.</span></span>  
  
 <span data-ttu-id="9c0e0-596">См. рекомендации W3C XML 1.0 для дальнейшего обсуждения нормализации.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-596">Refer to the W3C XML 1.0 recommendation for further discussion on normalization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-597">В следующем примере показано поведение средства чтения с нормализацией, включении и отключении.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-597">The following example shows reader behavior with normalization turned on and then off.</span></span>  
  
 [!code-cpp[XmlTextReader.Normalization#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.Normalization/CPP/readnormal.cpp#1)]
 [!code-csharp[XmlTextReader.Normalization#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.Normalization/CS/readnormal.cs#1)]
 [!code-vb[XmlTextReader.Normalization#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.Normalization/VB/readnormal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c0e0-598">Установка значения этого свойства после закрытия средства чтения (<see cref="P:System.Xml.XmlTextReader.ReadState" /> равно <see langword="ReadState.Closed" />).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-598">Setting this property when the reader is closed (<see cref="P:System.Xml.XmlTextReader.ReadState" /> is <see langword="ReadState.Closed" />).</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Xml.XmlTextReader.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-599">Возвращает префикс пространства имен, связанный с текущим узлом.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-599">Gets the namespace prefix associated with the current node.</span></span></summary>
        <value><span data-ttu-id="9c0e0-600">Префикс пространства имен, связанный с текущим узлом.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-600">The namespace prefix associated with the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-601">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-601">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-602">В следующем примере отображается локальное имя каждого узла, и, если они существуют, префикс и URI пространства имен.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-602">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9c0e0-603">В примере используется файл `book2.xml`качестве входных данных.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-603">The example uses the file, `book2.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.LocalName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ProhibitDtd">
      <MemberSignature Language="C#" Value="public bool ProhibitDtd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProhibitDtd" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.ProhibitDtd" />
      <MemberSignature Language="VB.NET" Value="Public Property ProhibitDtd As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProhibitDtd { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProhibitDtd : bool with get, set" Usage="System.Xml.XmlTextReader.ProhibitDtd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.Obsolete("Use DtdProcessing property instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-604">Возвращает или задает значение, определяющее, следует ли разрешить обработку DTD.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-604">Gets or sets a value indicating whether to allow DTD processing.</span></span> <span data-ttu-id="9c0e0-605">Это свойство устарело.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-605">This property is obsolete.</span></span> <span data-ttu-id="9c0e0-606">Взамен рекомендуется использовать <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-606">Use <see cref="P:System.Xml.XmlTextReader.DtdProcessing" /> instead.</span></span></summary>
        <value><span data-ttu-id="9c0e0-607">Значение <see langword="true" /> для отключения обработки DTD; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-607"><see langword="true" /> to disallow DTD processing; otherwise <see langword="false" />.</span></span> <span data-ttu-id="9c0e0-608">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-608">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-609">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-609">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-610">Обработка DTD включена по умолчанию для обеспечения обратной совместимости.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-610">DTD processing is enabled by default for backwards compatibility.</span></span> <span data-ttu-id="9c0e0-611">Тем не менее если приложению не требуется обработка DTD, следует отключить этот параметр.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-611">However, unless your application requires DTD processing, you should disable this setting.</span></span> <span data-ttu-id="9c0e0-612">Отключение обработки DTD может быть полезным для предотвращения некоторых разновидностей атак типа «отказ в обслуживании».</span><span class="sxs-lookup"><span data-stu-id="9c0e0-612">Disabling DTD processing can be useful in preventing certain denial of service attacks.</span></span> <span data-ttu-id="9c0e0-613">Если значение `true`, модуль чтения создает <xref:System.Xml.XmlException> при обнаружении любое содержимое DTD.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-613">If set to `true`, the reader throws an <xref:System.Xml.XmlException> when any DTD content is encountered.</span></span>  
  
 <span data-ttu-id="9c0e0-614">Если обработка DTD включена, необходимо Имейте в виду, в том числе DTD из ненадежных источников и возможных отказ в обслуживании.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-614">If you have DTD processing enabled, you need to be aware of including DTDs from untrusted sources and possible denial of service attacks.</span></span> <span data-ttu-id="9c0e0-615">Используйте <xref:System.Xml.XmlSecureResolver> для ограничения ресурсов, <xref:System.Xml.XmlTextReader> доступны.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-615">Use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlTextReader> can access.</span></span> <span data-ttu-id="9c0e0-616">Кроме того, можно создать собственное приложение, ограничивающее объем памяти и время, выделяемое на обработку XML.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-616">You can also design your application so that the XML processing is memory and time constrained.</span></span> <span data-ttu-id="9c0e0-617">Например можно ограничить время ожидания в приложении ASP.NET</span><span class="sxs-lookup"><span data-stu-id="9c0e0-617">For example, configure time-out limits in your ASP.NET application</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public override char QuoteChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char QuoteChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char" Usage="System.Xml.XmlTextReader.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-618">Возвращает знак кавычек, используемый для выделения значения узла атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-618">Gets the quotation mark character used to enclose the value of an attribute node.</span></span></summary>
        <value><span data-ttu-id="9c0e0-619">Знак кавычек (" или ') для выделения значения узла атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-619">The quotation mark character (" or ') used to enclose the value of an attribute node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-620">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-620">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-621">Это свойство применяется только к узлам атрибутов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-621">This property applies only to an attribute node.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="xmlTextReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c0e0-622">Считывает следующий узел из потока.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-622">Reads the next node from the stream.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-623">Значение <see langword="true" />, если чтение прошло успешно; значение <see langword="false" />, если отсутствуют узлы для чтения.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-623"><see langword="true" /> if the next node was read successfully; <see langword="false" /> if there are no more nodes to read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-624">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-624">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-625">Если средство чтения сначала создается и инициализируется, существует сведения недоступны.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-625">When a reader is first created and initialized, there is no information available.</span></span> <span data-ttu-id="9c0e0-626">Необходимо вызвать метод `Read` для чтения первого узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-626">You must call `Read` to read the first node.</span></span>  
  
 <span data-ttu-id="9c0e0-627">Этот метод требует по крайней мере четыре байта из потока данных, чтобы начать анализ.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-627">This method requires at least four bytes from the data stream in order to begin parsing.</span></span> <span data-ttu-id="9c0e0-628">Если возвращено менее четырех байтов и отсутствуют дополнительные данные в потоке, метод завершится с ошибкой.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-628">If fewer than four bytes are returned and there is no more data in the stream, the method will fail.</span></span> <span data-ttu-id="9c0e0-629">Есть ли дополнительные данные в потоке, метод остановит анализ до получения четвертый байт.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-629">If there is more data in the stream, the method will block parsing until receipt of the fourth byte.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-630">Следующий пример считывает XML-файла и отображает каждый узел.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-630">The following example reads an XML file and displays each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9c0e0-631">В примере используется файл `items.xml`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-631">The sample uses the file `items.xml`.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="9c0e0-632">Произошла ошибка при синтаксическом анализе XML.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-632">An error occurred while parsing the XML.</span></span></exception>
        <altmember cref="T:System.Xml.EntityHandling" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeValue">
      <MemberSignature Language="C#" Value="public override bool ReadAttributeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ReadAttributeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadAttributeValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAttributeValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ReadAttributeValue();" />
      <MemberSignature Language="F#" Value="override this.ReadAttributeValue : unit -&gt; bool" Usage="xmlTextReader.ReadAttributeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c0e0-633">Разбирает значение атрибута в один или несколько узлов <see langword="Text" />, <see langword="EntityReference" /> или <see langword="EndEntity" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-633">Parses the attribute value into one or more <see langword="Text" />, <see langword="EntityReference" />, or <see langword="EndEntity" /> nodes.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-634">Значение <see langword="true" />, если присутствуют возвращаемые узлы.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-634"><see langword="true" /> if there are nodes to return.</span></span>  
  
 <span data-ttu-id="9c0e0-635">Значение <see langword="false" />, если средство чтения не расположено на узле атрибута при первом вызове или все значения атрибута считаны.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-635"><see langword="false" /> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</span></span>  
  
<span data-ttu-id="9c0e0-636">Пустой атрибут (например, <c>misc=""</c>) возвращает значение <see langword="true" /> с отдельным узлом, имеющим значение <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-636">An empty attribute, such as, <c>misc=""</c>, returns <see langword="true" /> with a single node with a value of <see langword="String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-637">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-637">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-638">Используйте этот метод после вызова метода `MoveToAttribute` просмотрите узлы ссылок на текст или сущности, составляющие значение атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-638">Use this method after calling `MoveToAttribute` to read through the text or entity reference nodes that make up the attribute value.</span></span> <span data-ttu-id="9c0e0-639"><xref:System.Xml.XmlReader.Depth%2A> Узлов атрибутов значение вычисляется как единица плюс глубина узла атрибута; оно увеличивается и уменьшается на единицу при переходах по ссылкам на общую сущность.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-639">The <xref:System.Xml.XmlReader.Depth%2A> of the attribute value nodes is one plus the depth of the attribute node; it increments and decrements by one when you step into and out of general entity references.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-640">В следующем примере считывается атрибут с текстом и узлов сущностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-640">The following example reads an attribute with text and entity nodes.</span></span>  
  
 [!code-cpp[XmlTextReader.ReadAttributeValue#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.ReadAttributeValue/CPP/readattrval.cpp#1)]
 [!code-csharp[XmlTextReader.ReadAttributeValue#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.ReadAttributeValue/CS/readattrval.cs#1)]
 [!code-vb[XmlTextReader.ReadAttributeValue#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.ReadAttributeValue/VB/readattrval.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadBase64">
      <MemberSignature Language="C#" Value="public int ReadBase64 (byte[] array, int offset, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadBase64(unsigned int8[] array, int32 offset, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadBase64 (array As Byte(), offset As Integer, len As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadBase64(cli::array &lt;System::Byte&gt; ^ array, int offset, int len);" />
      <MemberSignature Language="F#" Value="member this.ReadBase64 : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadBase64 (array, offset, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="9c0e0-641">Массив символов, выполняющий функции буфера, в который записывается текстовое содержимое.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-641">The array of characters that serves as the buffer to which the text contents are written.</span></span></param>
        <param name="offset"><span data-ttu-id="9c0e0-642">Начинающийся с нуля индекс в массиве, указывающий место, с которого метод начнет запись в буфер.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-642">The zero-based index into the array specifying where the method can begin to write to the buffer.</span></span></param>
        <param name="len"><span data-ttu-id="9c0e0-643">Число байтов для записи в буфер.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-643">The number of bytes to write into the buffer.</span></span></param>
        <summary><span data-ttu-id="9c0e0-644">Декодирует данные из кодировки Base64 и возвращает результат в виде декодированных двоичных байтов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-644">Decodes Base64 and returns the decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-645">Количество байтов, записанных в буфер.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-645">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-646">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-646">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-647">Как и <xref:System.Xml.XmlTextReader.ReadChars%2A>, этот метод может последовательно вызываться для чтения больших потоков внедренного текста.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-647">Like <xref:System.Xml.XmlTextReader.ReadChars%2A>, this method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="9c0e0-648">Он декодируют содержимое Base64 и возвращает декодированные двоичные байты (например, встроенный Base64 кодирования изображения в формате GIF) в буфер.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-648">It decodes Base64 content and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</span></span> <span data-ttu-id="9c0e0-649">См. в разделе RFC 1521.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-649">See RFC 1521.</span></span> <span data-ttu-id="9c0e0-650">(Вы можете получить RFC с [запроса веб-сайте](https://www.rfc-editor.org).)</span><span class="sxs-lookup"><span data-stu-id="9c0e0-650">(You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-651">В следующем примере считывается файл, содержащий данные Base64 и BinHex.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-651">The following example reads a file containing Base64 and BinHex data.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9c0e0-652">В примере используется файл `binary.xml`</span><span class="sxs-lookup"><span data-stu-id="9c0e0-652">The sample uses the file `binary.xml`</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.ReadBase64 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="9c0e0-653">Недопустимая последовательность Base64.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-653">The Base64 sequence is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c0e0-654">Значение <paramref name="array" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-654">The value of <paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9c0e0-655">Значение параметра <paramref name="offset" /> &lt; равно 0 или <paramref name="len" /> &lt; равно 0, или <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-655"><paramref name="offset" /> &lt; 0, or <paramref name="len" /> &lt; 0, or <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</span></span></exception>
        <altmember cref="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadBinHex">
      <MemberSignature Language="C#" Value="public int ReadBinHex (byte[] array, int offset, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadBinHex(unsigned int8[] array, int32 offset, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadBinHex (array As Byte(), offset As Integer, len As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadBinHex(cli::array &lt;System::Byte&gt; ^ array, int offset, int len);" />
      <MemberSignature Language="F#" Value="member this.ReadBinHex : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadBinHex (array, offset, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="9c0e0-656">Массив байтов, выполняющий функции буфера, в который записываются декодированные двоичные байты.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-656">The byte array that serves as the buffer to which the decoded binary bytes are written.</span></span></param>
        <param name="offset"><span data-ttu-id="9c0e0-657">Начинающийся с нуля индекс в массиве, указывающий место, с которого метод начнет запись в буфер.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-657">The zero-based index into the array specifying where the method can begin to write to the buffer.</span></span></param>
        <param name="len"><span data-ttu-id="9c0e0-658">Число байтов для записи в буфер.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-658">The number of bytes to write into the buffer.</span></span></param>
        <summary><span data-ttu-id="9c0e0-659">Декодирует <see langword="BinHex" /> и возвращает результат в виде декодированных двоичных байтов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-659">Decodes <see langword="BinHex" /> and returns the decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-660">Количество байтов, записываемых в буфер.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-660">The number of bytes written to your buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-661">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-661">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-662">Как и <xref:System.Xml.XmlTextReader.ReadChars%2A>, этот метод может последовательно вызываться для чтения больших потоков внедренного текста.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-662">Like <xref:System.Xml.XmlTextReader.ReadChars%2A>, this method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="9c0e0-663">Декодирует его `BinHex` содержимого и возвращает декодированные двоичные байты (например, встроенный `BinHex` кодируемого изображения GIF) в буфер.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-663">It decodes `BinHex` content and returns the decoded binary bytes (for example, an inline `BinHex` encoded GIF image) into the buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-664">В следующем примере считывается файл, содержащий `Base64` и `BinHex` данных.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-664">The following example reads a file containing `Base64` and `BinHex` data.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9c0e0-665">В примере используется файл `binary.xml`</span><span class="sxs-lookup"><span data-stu-id="9c0e0-665">The sample uses the file `binary.xml`</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.ReadBase64 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="9c0e0-666">Недопустимая последовательность <see langword="BinHex" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-666">The <see langword="BinHex" /> sequence is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c0e0-667">Значение <paramref name="array" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-667">The value of <paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9c0e0-668">Значение параметра <paramref name="offset" /> &lt; равно 0 или <paramref name="len" /> &lt; равно 0, или <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-668"><paramref name="offset" /> &lt; 0, or <paramref name="len" /> &lt; 0, or <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadChars">
      <MemberSignature Language="C#" Value="public int ReadChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadChars (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.ReadChars : char[] * int * int -&gt; int" Usage="xmlTextReader.ReadChars (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9c0e0-669">Массив символов, выполняющий функции буфера, в который записывается текстовое содержимое.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-669">The array of characters that serves as the buffer to which the text contents are written.</span></span></param>
        <param name="index"><span data-ttu-id="9c0e0-670">Положение в <paramref name="buffer" />, с которого метод начинает запись текстового содержимого.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-670">The position within <paramref name="buffer" /> where the method can begin writing text contents.</span></span></param>
        <param name="count"><span data-ttu-id="9c0e0-671">Число символов, записываемых в <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-671">The number of characters to write into <paramref name="buffer" />.</span></span></param>
        <summary><span data-ttu-id="9c0e0-672">Считывает текстовое содержимое элемента в буфер символов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-672">Reads the text contents of an element into a character buffer.</span></span> <span data-ttu-id="9c0e0-673">Этот метод предназначен для чтения больших потоков внедренного текста путем его последовательного вызова.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-673">This method is designed to read large streams of embedded text by calling it successively.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-674">Число прочитанных знаков.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-674">The number of characters read.</span></span> <span data-ttu-id="9c0e0-675">Если средство чтения находится не на элементе или отсутствует возвращаемый текст, это значение может быть равно <see langword="0" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-675">This can be <see langword="0" /> if the reader is not positioned on an element or if there is no more text content to return in the current context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-676">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-676">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-677">Это наиболее эффективный способ обработки очень больших потоков внедренного текста в XML-документа.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-677">This is the most efficient way to process very large streams of text embedded in an XML document.</span></span> <span data-ttu-id="9c0e0-678">Вместо распределения больших строковых объектов `ReadChars` возвращает текстовое содержимое в буфер за раз.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-678">Rather than allocating large string objects, `ReadChars` returns text content a buffer at a time.</span></span> <span data-ttu-id="9c0e0-679">Этот метод предназначен для работы только с узлами элементов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-679">This method is designed to work only on element nodes.</span></span> <span data-ttu-id="9c0e0-680">Прочие типы узлов Причина `ReadChars` для возврата `0`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-680">Other node types cause `ReadChars` to return `0`.</span></span>  
  
 <span data-ttu-id="9c0e0-681">В следующем XML, если средство чтения находится на открывающий тег `ReadChars` возвращает `test` и перемещает средство чтения после закрывающего тега.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-681">In the following XML, if the reader is positioned on the start tag, `ReadChars` returns `test` and positions the reader after the end tag.</span></span>  
  
```xml  
<Item>test</Item>  
```  
  
 <span data-ttu-id="9c0e0-682">`ReadChars` имеет следующие функциональные возможности:</span><span class="sxs-lookup"><span data-stu-id="9c0e0-682">`ReadChars` has the following functionality:</span></span>  
  
-   <span data-ttu-id="9c0e0-683">Этот метод предназначен для работы только с узлами элементов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-683">This method is designed to work on element nodes only.</span></span> <span data-ttu-id="9c0e0-684">Прочие типы узлов Причина `ReadChars` возвращает значение 0.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-684">Other node types cause `ReadChars` to return 0.</span></span>  
  
-   <span data-ttu-id="9c0e0-685">Этот метод возвращает фактическое содержимое символа.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-685">This method returns the actual character content.</span></span> <span data-ttu-id="9c0e0-686">Нет без попытки разрешения сущностей, CDATA или любой другой разметки.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-686">There is no attempt to resolve entities, CDATA, or any other markup encountered.</span></span> <span data-ttu-id="9c0e0-687">`ReadChars` Возвращает содержимое между открывающим и закрывающим тегами, включая разметку.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-687">`ReadChars` returns everything between the start tag and the end tag, including markup.</span></span>  
  
-   <span data-ttu-id="9c0e0-688">`ReadChars` не обрабатывает XML-разметку, которая имеет неправильный формат.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-688">`ReadChars` ignores XML markup that is not well-formed.</span></span> <span data-ttu-id="9c0e0-689">Например, при чтении следующую строку XML `<A>1<A>2</A>`, `ReadChars` возвращает `1<A>2</A>`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-689">For example, when reading the following XML string `<A>1<A>2</A>`, `ReadChars` returns `1<A>2</A>`.</span></span> <span data-ttu-id="9c0e0-690">(Он возвращает разметку из соответствующей пары элементов и игнорирует другие.)</span><span class="sxs-lookup"><span data-stu-id="9c0e0-690">(It returns markup from the matching element pair and ignores others.)</span></span>  
  
-   <span data-ttu-id="9c0e0-691">Этот метод не выполняет нормализацию.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-691">This method does not do any normalization.</span></span>  
  
-   <span data-ttu-id="9c0e0-692">Когда `ReadChars` достигло конца потока символов, он возвращает значение 0 и средство чтения находится после закрывающего тега.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-692">When `ReadChars` has reached the end of the character stream, it returns the value 0 and the reader is positioned after the end tag.</span></span>  
  
-   <span data-ttu-id="9c0e0-693">Атрибут чтения методы недоступны при использовании `ReadChars`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-693">Attribute read methods are not available while using `ReadChars`.</span></span>  
  
 <span data-ttu-id="9c0e0-694">Например используя следующий код XML:</span><span class="sxs-lookup"><span data-stu-id="9c0e0-694">For example, using the following XML:</span></span>  
  
```xml  
<thing>  
 some text  
</thing>  
<item>  
</item>  
```  
  
 <span data-ttu-id="9c0e0-695">Средство чтения находится на `<item>` элемент в конце цикла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-695">The reader is positioned on the `<item>` element at the end of the while loop.</span></span>  
  
```csharp  
if (XmlNodeType.Element == reader.NodeType && "thing" == reader.Name)  
{  
 while(0 != reader.ReadChars(buffer, 0, 1)  
 {  
 // Do something.  
 // Attribute values are not available at this point.  
 }  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-696">В следующем примере считываются в XML с помощью `ReadChars`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-696">The following example reads in XML using `ReadChars`.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.ReadChars Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadChars Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.ReadChars Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadChars Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.ReadChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.ReadChars Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9c0e0-697">В примере в качестве входных данных используется файл `items.xml`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-697">The example uses the `items.xml` file as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c0e0-698"><paramref name="count" /> больше, чем размер, указанный в <paramref name="buffer" /> (размер буфера — <paramref name="index" />).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-698"><paramref name="count" /> is greater than the space specified in the <paramref name="buffer" /> (buffer size - <paramref name="index" />).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c0e0-699">Значение <paramref name="buffer" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-699">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9c0e0-700"><paramref name="index" />
          <see langword="&lt; 0" /> или <paramref name="count" /><see langword="&lt; 0" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-700"><paramref name="index" />
          <see langword="&lt; 0" /> or <paramref name="count" /><see langword="&lt; 0" />.</span></span></exception>
        <altmember cref="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9c0e0-701">Буфер, в который копируется полученный текст.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-701">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="9c0e0-702">Это значение не может быть равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-702">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="9c0e0-703">Смещение в буфере, с которого следует начать копировать результат.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-703">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="9c0e0-704">Максимальное количество копируемых в буфер байтов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-704">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="9c0e0-705">Этот метод возвращает фактическое количество скопированных байтов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-705">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="9c0e0-706">Считывает содержимое и возвращает раскодированные двоичные байты <see langword="Base64" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-706">Reads the content and returns the <see langword="Base64" /> decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-707">Количество байтов, записанных в буфер.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-707">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-708">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-708">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-709">Этот метод создает поток содержимого, декодирует `Base64` содержимого и возвращает декодированные двоичные байты (например, встроенный `Base64`-кодируемого изображения GIF) в буфер.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-709">This method streams the content, decodes the `Base64` content, and returns the decoded binary bytes (for example, an inline `Base64`-encoded GIF image) into the buffer.</span></span> <span data-ttu-id="9c0e0-710">Этот метод может последовательно вызываться для чтения больших потоков внедренного текста.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-710">This method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="9c0e0-711">Дополнительные сведения см. в разделе RFC 1521 «часть MIME (Multipurpose Internet Mail Extensions) один: Механизмы для определения и описания формат тел сообщений Интернета».</span><span class="sxs-lookup"><span data-stu-id="9c0e0-711">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="9c0e0-712">Вы можете получить RFC с [запроса веб-сайте](https://www.rfc-editor.org).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-712">You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-713">Вы не должны работать с каких-либо свойств модуля чтения между вызовами <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> пока, метод возвращает значение 0.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-713">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> method until the method returns the value 0.</span></span>  
  
 <span data-ttu-id="9c0e0-714">Этот метод имеет следующие особенности:</span><span class="sxs-lookup"><span data-stu-id="9c0e0-714">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="9c0e0-715"><xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> Возвращает значение 0, если он был достигнут конец потока байтов, на котором он работает.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-715"><xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> returns the value 0 when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="9c0e0-716">Средство чтения находится на первом узле без содержимого.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-716">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="9c0e0-717">Если указать меньшее или точное число байтов, остающихся в потоке чтения остается в текущей позиции.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-717">If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="9c0e0-718"><xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> не поддерживается для следующих типов узлов XML: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-718"><xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> is not supported on the following XML node types: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c0e0-719">Значение <paramref name="buffer" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-719">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c0e0-720">Метод <see cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> не поддерживается в текущем узле.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-720"><see cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> is not supported in the current node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9c0e0-721">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-721">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9c0e0-722">Буфер, в который копируется полученный текст.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-722">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="9c0e0-723">Это значение не может быть равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-723">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="9c0e0-724">Смещение в буфере, с которого следует начать копировать результат.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-724">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="9c0e0-725">Максимальное количество копируемых в буфер байтов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-725">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="9c0e0-726">Этот метод возвращает фактическое количество скопированных байтов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-726">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="9c0e0-727">Считывает содержимое и возвращает раскодированные двоичные байты <see langword="BinHex" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-727">Reads the content and returns the <see langword="BinHex" /> decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-728">Количество байтов, записанных в буфер.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-728">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-729">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-729">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-730">Этот метод создает поток содержимого, декодирует `BinHex` содержимого и возвращает декодированные двоичные байты (например, встроенный `BinHex` кодируемого изображения GIF) в буфер.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-730">This method streams the content, decodes the `BinHex` content, and returns the decoded binary bytes (for example, an inline `BinHex` encoded GIF image) into the buffer.</span></span> <span data-ttu-id="9c0e0-731">Этот метод может последовательно вызываться для чтения больших потоков внедренного текста.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-731">This method can be called successively to read large streams of embedded text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-732">Вы не должны работать с каких-либо свойств модуля чтения между вызовами <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> пока, метод возвращает значение 0.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-732">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> method until the method returns the value 0.</span></span>  
  
 <span data-ttu-id="9c0e0-733">Этот метод имеет следующие особенности:</span><span class="sxs-lookup"><span data-stu-id="9c0e0-733">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="9c0e0-734"><xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> Возвращает значение 0, если он был достигнут конец потока байтов, на котором он работает.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-734"><xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> returns the value 0 when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="9c0e0-735">Средство чтения находится на первом узле без содержимого.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-735">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="9c0e0-736">Если указать меньшее или точное число байтов, остающихся в потоке чтения остается в текущей позиции.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-736">If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="9c0e0-737"><xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> не поддерживается для следующих типов узлов XML: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-737"><xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> is not supported on the following XML node types: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c0e0-738">Значение <paramref name="buffer" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-738">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c0e0-739">Метод <see cref="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> не поддерживается на текущем узле.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-739"><see cref="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> is not supported on the current node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9c0e0-740">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-740">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9c0e0-741">Реализация <see cref="T:System.Xml.XmlTextReader" /> не поддерживает данный метод.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-741">The <see cref="T:System.Xml.XmlTextReader" /> implementation does not support this method.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadElementContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9c0e0-742">Буфер, в который копируется полученный текст.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-742">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="9c0e0-743">Это значение не может быть равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-743">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="9c0e0-744">Смещение в буфере, с которого следует начать копировать результат.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-744">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="9c0e0-745">Максимальное количество копируемых в буфер байтов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-745">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="9c0e0-746">Этот метод возвращает фактическое количество скопированных байтов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-746">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="9c0e0-747">Считывает элемент и декодирует его из кодировки Base64.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-747">Reads the element and decodes the Base64 content.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-748">Количество байтов, записанных в буфер.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-748">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-749">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-749">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-750">Этот метод считывает содержимое элемента, декодирует его с помощью кодировки Base64 и возвращает декодированные двоичные байты (например, встроенный Base64 кодирования изображения в формате GIF) в буфер.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-750">This method reads the element content, decodes it using Base64 encoding, and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</span></span> <span data-ttu-id="9c0e0-751">Дополнительные сведения см. в разделе RFC 1521 «часть MIME (Multipurpose Internet Mail Extensions) один: Механизмы для определения и описания формат тел сообщений Интернета».</span><span class="sxs-lookup"><span data-stu-id="9c0e0-751">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="9c0e0-752">Вы можете получить RFC с [запроса веб-сайте](https://www.rfc-editor.org).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-752">You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
 <span data-ttu-id="9c0e0-753">Этот метод может считывать только элементы с простым содержимым.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-753">This method can only read simple-content elements.</span></span> <span data-ttu-id="9c0e0-754">Элемент может содержать текст, пробелы, значимые пробелы, разделы CDATA, комментарии и инструкции по обработке.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-754">The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</span></span> <span data-ttu-id="9c0e0-755">Он также может содержать ссылки на сущности, которые автоматически развернуты.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-755">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="9c0e0-756">Элемент не может иметь дочерние элементы.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-756">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="9c0e0-757">Этот метод аналогичен <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> метода, за исключением того, он может вызываться только для типов узлов элементов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-757">This method is very similar to the <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> method except that it can only be called on element node types.</span></span>  
  
 <span data-ttu-id="9c0e0-758">Если `count` значение больше, чем число байтов в документе, или равно количеству байтов в документе, <xref:System.Xml.XmlTextReader> считывает все оставшиеся байты в документе и возвращает число считанных байтов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-758">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlTextReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="9c0e0-759">Следующий <xref:System.Xml.XmlTextReader> вызов метода возвращает нулевое значение и перемещает средство чтения на следующий узел <xref:System.Xml.XmlNodeType.EndElement>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-759">The next <xref:System.Xml.XmlTextReader> method call returns a zero and moves the reader to the node following the <xref:System.Xml.XmlNodeType.EndElement>.</span></span>  
  
 <span data-ttu-id="9c0e0-760">При вызове метода <xref:System.Xml.XmlTextReader.Read%2A> до исчерпания всех содержимого элемента чтения может повести себя, как если бы было потреблено первого содержимого и затем <xref:System.Xml.XmlTextReader.Read%2A> был вызван метод.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-760">If you call <xref:System.Xml.XmlTextReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlTextReader.Read%2A> method was called.</span></span> <span data-ttu-id="9c0e0-761">Это означает, что средство чтения считывает весь текст, пока не будет обнаружен конечный элемент.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-761">This means that the reader reads all the text until the end element is encountered.</span></span> <span data-ttu-id="9c0e0-762">Затем он считывает узел конечного тега, считывает следующий узел и перемещает себя на последующем узле.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-762">It then reads the end tag node, reads the next node, and then positions itself on the next subsequent node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-763">См. в разделе <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A?displayProperty=nameWithType> пример с помощью этого метода.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-763">See <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A?displayProperty=nameWithType> to see an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c0e0-764">Значение <paramref name="buffer" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-764">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c0e0-765">Текущий узел не является узлом элемента.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-765">The current node is not an element node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9c0e0-766">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-766">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9c0e0-767">Реализация <see cref="T:System.Xml.XmlTextReader" /> не поддерживает данный метод.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-767">The <see cref="T:System.Xml.XmlTextReader" /> implementation does not support this method.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="9c0e0-768">Элемент содержит смешанное содержимое.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-768">The element contains mixed-content.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="9c0e0-769">Не удается преобразовать содержимое в требуемый тип.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-769">The content cannot be converted to the requested type.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadElementContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9c0e0-770">Буфер, в который копируется полученный текст.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-770">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="9c0e0-771">Это значение не может быть равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-771">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="9c0e0-772">Смещение в буфере, с которого следует начать копировать результат.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-772">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="9c0e0-773">Максимальное количество копируемых в буфер байтов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-773">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="9c0e0-774">Этот метод возвращает фактическое количество скопированных байтов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-774">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="9c0e0-775">Считывает элемент и декодирует содержимое <see langword="BinHex" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-775">Reads the element and decodes the <see langword="BinHex" /> content.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-776">Количество байтов, записанных в буфер.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-776">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-777">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-777">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-778">Этот метод считывает содержимое элемента, декодирует его с помощью `BinHex` кодирования и возвращает декодированные двоичные байты (например, встроенный `BinHex` кодируемого изображения GIF) в буфер.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-778">This method reads the element content, decodes it using `BinHex` encoding, and returns the decoded binary bytes (for example, an inline `BinHex` encoded GIF image) into the buffer.</span></span>  
  
 <span data-ttu-id="9c0e0-779">Этот метод может считывать только элементы с простым содержимым.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-779">This method can only read simple-content elements.</span></span> <span data-ttu-id="9c0e0-780">Элемент может содержать текст, пробелы, значимые пробелы, разделы CDATA, комментарии и инструкции по обработке.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-780">The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</span></span> <span data-ttu-id="9c0e0-781">Он также может содержать ссылки на сущности, которые автоматически развернуты.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-781">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="9c0e0-782">Элемент не может иметь дочерние элементы.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-782">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="9c0e0-783">Этот метод аналогичен <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> метода, за исключением того, он может вызываться только для типов узлов элементов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-783">This method is very similar to the <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> method except that it can only be called on element node types.</span></span>  
  
 <span data-ttu-id="9c0e0-784">Если `count` значение больше, чем число байтов в документе, или равно количеству байтов в документе, <xref:System.Xml.XmlTextReader> считывает все оставшиеся байты в документе и возвращает число считанных байтов.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-784">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlTextReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="9c0e0-785">Следующий <xref:System.Xml.XmlTextReader> вызов метода возвращает нулевое значение и перемещает средство чтения на следующий узел <xref:System.Xml.XmlNodeType.EndElement>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-785">The next <xref:System.Xml.XmlTextReader> method call returns a zero and moves the reader to the node following the <xref:System.Xml.XmlNodeType.EndElement>.</span></span>  
  
 <span data-ttu-id="9c0e0-786">При вызове метода <xref:System.Xml.XmlTextReader.Read%2A> до исчерпания всех содержимого элемента чтения может повести себя, как если бы было потреблено первого содержимого и затем <xref:System.Xml.XmlTextReader.Read%2A> был вызван метод.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-786">If you call <xref:System.Xml.XmlTextReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlTextReader.Read%2A> method was called.</span></span> <span data-ttu-id="9c0e0-787">Это означает, что средство чтения считывает весь текст, пока не будет обнаружен конечный элемент.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-787">This means that the reader reads all the text until the end element is encountered.</span></span> <span data-ttu-id="9c0e0-788">Затем он считывает узел конечного тега, считывает следующий узел и перемещает себя на последующем узле.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-788">It then reads the end tag node, reads the next node, and then positions itself on the next subsequent node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-789">См. в разделе <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A?displayProperty=nameWithType> пример с помощью этого метода.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-789">See <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A?displayProperty=nameWithType> to see an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c0e0-790">Значение <paramref name="buffer" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-790">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c0e0-791">Текущий узел не является узлом элемента.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-791">The current node is not an element node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9c0e0-792">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-792">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9c0e0-793">Реализация <see cref="T:System.Xml.XmlReader" /> не поддерживает данный метод.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-793">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="9c0e0-794">Элемент содержит смешанное содержимое.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-794">The element contains mixed-content.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="9c0e0-795">Не удается преобразовать содержимое в требуемый тип.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-795">The content cannot be converted to the requested type.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadState">
      <MemberSignature Language="C#" Value="public override System.Xml.ReadState ReadState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ReadState ReadState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.ReadState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReadState As ReadState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::ReadState ReadState { System::Xml::ReadState get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadState : System.Xml.ReadState" Usage="System.Xml.XmlTextReader.ReadState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ReadState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-796">Возвращает состояние средства чтения.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-796">Gets the state of the reader.</span></span></summary>
        <value><span data-ttu-id="9c0e0-797">Одно из значений <see cref="T:System.Xml.ReadState" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-797">One of the <see cref="T:System.Xml.ReadState" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-798">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-798">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public override string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadString();" />
      <MemberSignature Language="F#" Value="override this.ReadString : unit -&gt; string" Usage="xmlTextReader.ReadString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c0e0-799">Считывает содержимое элемента или текстового узла в виде строки.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-799">Reads the contents of an element or a text node as a string.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-800">Содержимое элемента или текстового узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-800">The contents of the element or text node.</span></span> <span data-ttu-id="9c0e0-801">Если средство чтения позиционировано не на элемент или текстовый узел, а также если отсутствует возвращаемый текст, это может быть пустая строка.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-801">This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.</span></span>  
  
 <span data-ttu-id="9c0e0-802"><see langword="Note:" /> Текстовым узлом может быть элемент или текстовой узел атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-802"><see langword="Note:" /> The text node can be either an element or an attribute text node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-803">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-803">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-804">Если средство чтения находится на элементе, `ReadString` объединяет текст, значимые пробелы, пустое пространство, и `CData` типы узел раздела, а затем возвращает объединенные данные в качестве содержимого элемента.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-804">If positioned on an element, `ReadString` concatenates all text, significant white space, white space, and `CData` section node types together and returns the concatenated data as the element content.</span></span> <span data-ttu-id="9c0e0-805">Он останавливается при нахождении разметки, включая комментарии и инструкции по обработке.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-805">It stops when any markup is encountered, including comments and processing instructions.</span></span> <span data-ttu-id="9c0e0-806">Это может случиться в модели смешанного содержимого или во время считывания закрывающего тега элемента.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-806">This could occur in a mixed content model, or when an element end tag is read.</span></span>  
  
 <span data-ttu-id="9c0e0-807">Если средство чтения находится на текстовый узел, `ReadString` выполняет такое же объединение с текстовый узел закрывающим тегом элемента.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-807">If positioned on a text node, `ReadString` performs the same concatenation from the text node to the element end tag.</span></span> <span data-ttu-id="9c0e0-808">Если модуль чтения расположен в текстовом узле атрибута, метод `ReadString` работает так же, как в случае, когда модуль чтения располагается в открывающем теге элемента,</span><span class="sxs-lookup"><span data-stu-id="9c0e0-808">If the reader is positioned on an attribute text node, `ReadString` has the same functionality as if the reader were position on the element start tag.</span></span> <span data-ttu-id="9c0e0-809">и возвращает все объединенные текстовые узлы элемента.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-809">It returns all the concatenated element text nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-810">В следующем примере показано текстовое содержимое каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-810">The following example displays the text content of each element.</span></span>  
  
 [!code-cpp[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9c0e0-811">В примере используется файл `elems.xml`качестве входных данных.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-811">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlReader.IsStartElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="9c0e0-812">Произошла ошибка при синтаксическом анализе XML.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-812">An error occurred while parsing the XML.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c0e0-813">Предпринята попытка выполнить недопустимую операцию.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-813">An invalid operation was attempted.</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ResetState">
      <MemberSignature Language="C#" Value="public void ResetState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ResetState" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetState();" />
      <MemberSignature Language="F#" Value="member this.ResetState : unit -&gt; unit" Usage="xmlTextReader.ResetState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c0e0-814">Сбрасывает состояние средства чтения на ReadState.Initial.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-814">Resets the state of the reader to ReadState.Initial.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-815">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-815">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-816">Этот метод позволяет анализировать несколько XML-документов в отдельном потоке.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-816">This method enables you to parse multiple XML documents in a single stream.</span></span> <span data-ttu-id="9c0e0-817">Если достигнут конец XML-документа, можно вызвать `ResetState` сбросить состояние средства чтения для следующего документа XML.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-817">When you reach the end of an XML document, you can call `ResetState` to reset the state of the reader in preparation for the next XML document.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9c0e0-818">Документы в потоке должны совместно использовать ту же кодировку.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-818">The documents in the stream must share the same encoding.</span></span> <span data-ttu-id="9c0e0-819">Если это условие не выполняется, когда `ResetState` называется <xref:System.Xml.XmlException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-819">If this is not the case, when `ResetState` is called an <xref:System.Xml.XmlException> is thrown.</span></span> <span data-ttu-id="9c0e0-820">(Это изменение в поведении относительно платформы .NET Framework версии 1.1 и более ранних версий).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-820">(This is a change in behavior from .NET Framework version 1.1 and earlier).</span></span>  
  
 <span data-ttu-id="9c0e0-821">Следующие свойства, не подвержены `ResetState`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-821">The following properties are not affected by `ResetState`.</span></span>  
  
-   <xref:System.Xml.XmlTextReader.Normalization%2A>  
  
-   <xref:System.Xml.XmlTextReader.Namespaces%2A>  
  
-   <xref:System.Xml.XmlTextReader.XmlResolver%2A>  
  
-   <xref:System.Xml.XmlTextReader.WhitespaceHandling%2A>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-822">В следующем примере анализируется два XML-документа в отдельном потоке.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-822">The following example parses two XML documents in a single stream.</span></span>  
  
 [!code-cpp[XmlTextReader.ResetState#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.ResetState/CPP/resetstate.cpp#1)]
 [!code-csharp[XmlTextReader.ResetState#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.ResetState/CS/resetstate.cs#1)]
 [!code-vb[XmlTextReader.ResetState#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.ResetState/VB/resetstate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c0e0-823">Вызывает <see langword="ResetState" />, если средство чтения было создано с помощью <see cref="T:System.Xml.XmlParserContext" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-823">Calling <see langword="ResetState" /> if the reader was constructed using an <see cref="T:System.Xml.XmlParserContext" />.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="9c0e0-824">У документов в одном потоке разная кодировка.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-824">Documents in a single stream do not share the same encoding.</span></span></exception>
        <altmember cref="T:System.Xml.ReadState" />
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public override void ResolveEntity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResolveEntity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResolveEntity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResolveEntity();" />
      <MemberSignature Language="F#" Value="override this.ResolveEntity : unit -&gt; unit" Usage="xmlTextReader.ResolveEntity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c0e0-825">Разрешает ссылки на сущности для узлов <see langword="EntityReference" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-825">Resolves the entity reference for <see langword="EntityReference" /> nodes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-826">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-826">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-827">Если средство чтения находится на `EntityReference` узел (`XmlNodeType.EntityReference`), если <xref:System.Xml.XmlTextReader.Read%2A> вызывается после вызова этого метода, текст замены сущности анализируется.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-827">If the reader is positioned on an `EntityReference` node (`XmlNodeType.EntityReference`), if <xref:System.Xml.XmlTextReader.Read%2A> is called after calling this method, the entity replacement text is parsed.</span></span> <span data-ttu-id="9c0e0-828">По завершении текст замены сущности `EndEntity` возвращается узел, чтобы закрыть области действия ссылок на сущности.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-828">When the entity replacement text is finished, an `EndEntity` node is returned to close the entity reference scope.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-829">После вызова этого метода, если сущность является частью значения атрибута, необходимо вызвать <xref:System.Xml.XmlTextReader.ReadAttributeValue%2A> для доступа к сущности.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-829">After calling this method, if the entity is part of an attribute value, you must call <xref:System.Xml.XmlTextReader.ReadAttributeValue%2A> to step into the entity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlReaderSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlReaderSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Settings" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Settings As XmlReaderSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlReaderSettings ^ Settings { System::Xml::XmlReaderSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Xml.XmlReaderSettings" Usage="System.Xml.XmlTextReader.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReaderSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-830">Получает объект <see cref="T:System.Xml.XmlReaderSettings" />, используемый для создания данного экземпляра <see cref="T:System.Xml.XmlTextReader" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-830">Gets the <see cref="T:System.Xml.XmlReaderSettings" /> object used to create this <see cref="T:System.Xml.XmlTextReader" /> instance.</span></span></summary>
        <value><span data-ttu-id="9c0e0-831">Объект <see cref="T:System.Xml.XmlReaderSettings" />, используемый для создания этого экземпляра <see cref="T:System.Xml.XmlTextReader" />; <see langword="null" /> если средство чтения не было создано с помощью метода <see cref="Overload:System.Xml.XmlReader.Create" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-831">The <see cref="T:System.Xml.XmlReaderSettings" /> object used to create this <see cref="T:System.Xml.XmlTextReader" /> instance; <see langword="null" /> if the reader was not created using the <see cref="Overload:System.Xml.XmlReader.Create" /> method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> <span data-ttu-id="9c0e0-832">В [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] рекомендованной практикой является создание экземпляров <xref:System.Xml.XmlReader> с помощью класса <xref:System.Xml.XmlReaderSettings> и метода <xref:System.Xml.XmlReader.Create%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-832">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="9c0e0-833">Это позволяет полностью использовать преимущества всех новых возможностей [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="9c0e0-833">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c0e0-834">Дополнительные сведения см. в разделе "Примечания" в <xref:System.Xml.XmlReader> справочной странице.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-834">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public override void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Skip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Skip();" />
      <MemberSignature Language="F#" Value="override this.Skip : unit -&gt; unit" Usage="xmlTextReader.Skip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c0e0-835">Пропускает дочерний узел текущего узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-835">Skips the children of the current node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-836">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-836">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-837">В следующем XML ввода, если средство чтения находится на `<a>` узла или любой из его атрибутов, вызов `Skip` переместит модуль чтения `<b>` узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-837">In the following XML input if the reader is positioned on the `<a>` node or any of its attributes, calling `Skip` positions the reader to the `<b>` node.</span></span>  
  
 <span data-ttu-id="9c0e0-838">Если средство чтения находится на конечном узле, уже (такие как `<x>` текст или узел `abc`), вызов `Skip` является равносилен вызову метода <xref:System.Xml.XmlTextReader.Read%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-838">If the reader is positioned on a leaf node already (such as the `<x>` node or the text node `abc`), calling `Skip` is the same as calling <xref:System.Xml.XmlTextReader.Read%2A>.</span></span>  
  
```xml  
<a name="bob" age="123">  
  <x/>abc<y/>  
</a>  
<b>  
 ...  
</b>  
```  
  
 <span data-ttu-id="9c0e0-839">Этот метод проверяет корректный XML.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-839">This method checks for well-formed XML.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlLineInfo.HasLineInfo">
      <MemberSignature Language="C#" Value="bool IXmlLineInfo.HasLineInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Xml.IXmlLineInfo.HasLineInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.System#Xml#IXmlLineInfo#HasLineInfo" />
      <MemberSignature Language="VB.NET" Value="Function HasLineInfo () As Boolean Implements IXmlLineInfo.HasLineInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Xml.IXmlLineInfo.HasLineInfo() = System::Xml::IXmlLineInfo::HasLineInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlLineInfo.HasLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c0e0-840">Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-840">For a description of this member, see <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" />.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-841">Значение <see langword="true" />, если могут быть предоставлены свойства <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> и <see cref="P:System.Xml.IXmlLineInfo.LinePosition" />, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-841"><see langword="true" /> if <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition" /> can be provided; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="9c0e0-842">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-842">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9c0e0-843">Он может использоваться только при условии, что экземпляр класса <xref:System.Xml.XmlTextReader> приведен к типу интерфейса <xref:System.Xml.IXmlLineInfo>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-843">It can be used only when the <xref:System.Xml.XmlTextReader> instance is cast to an <xref:System.Xml.IXmlLineInfo> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.GetNamespacesInScope">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IDictionary&lt;string,string&gt; IXmlNamespaceResolver.GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String) Implements IXmlNamespaceResolver.GetNamespacesInScope" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System::Xml::XmlNamespaceScope scope) = System::Xml::IXmlNamespaceResolver::GetNamespacesInScope;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="9c0e0-844">С помощью значения <see cref="T:System.Xml.XmlNamespaceScope" /> указывается тип узлов пространства имен, которые следует возвратить.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-844">An <see cref="T:System.Xml.XmlNamespaceScope" /> value that specifies the type of namespace nodes to return.</span></span></param>
        <summary><span data-ttu-id="9c0e0-845">Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-845">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-846">Объект <see cref="T:System.Collections.IDictionary" />, содержащий текущие пространства имен в области.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-846">An <see cref="T:System.Collections.IDictionary" /> that contains the current in-scope namespaces.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e0-847">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-847">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9c0e0-848">Он может использоваться только при условии, что экземпляр класса <xref:System.Xml.XmlTextReader> приведен к типу интерфейса <xref:System.Xml.IXmlNamespaceResolver>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-848">It can be used only when the <xref:System.Xml.XmlTextReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupNamespace">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupNamespace (prefix As String) As String Implements IXmlNamespaceResolver.LookupNamespace" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupNamespace(System::String ^ prefix) = System::Xml::IXmlNamespaceResolver::LookupNamespace;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="9c0e0-849">Префикс, URI пространства имен которого нужно найти.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-849">The prefix whose namespace URI you wish to find.</span></span></param>
        <summary><span data-ttu-id="9c0e0-850">Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-850">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-851">URI пространства имен, сопоставленное с префиксом; <see langword="null" />, если префикс не сопоставлен с URI пространства имен.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-851">The namespace URI that is mapped to the prefix; <see langword="null" /> if the prefix is not mapped to a namespace URI.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e0-852">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-852">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9c0e0-853">Он может использоваться только при условии, что экземпляр класса <xref:System.Xml.XmlTextReader> приведен к типу интерфейса <xref:System.Xml.IXmlNamespaceResolver>.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-853">It can be used only when the <xref:System.Xml.XmlTextReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupPrefix">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupPrefix (string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupPrefix(string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupPrefix (namespaceName As String) As String Implements IXmlNamespaceResolver.LookupPrefix" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupPrefix(System::String ^ namespaceName) = System::Xml::IXmlNamespaceResolver::LookupPrefix;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="namespaceName"><span data-ttu-id="9c0e0-854">URI пространства имен, префикс которого нужно найти.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-854">The namespace URI whose prefix you wish to find.</span></span></param>
        <summary><span data-ttu-id="9c0e0-855">Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-855">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="9c0e0-856">Префикс, сопоставленный с URI пространства имен; <see langword="null" /> если URI пространства имен не сопоставлен с префиксом.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-856">The prefix that is mapped to the namespace URI; <see langword="null" /> if the namespace URI is not mapped to a prefix.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Xml.XmlTextReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-857">Возвращает текстовое значение текущего узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-857">Gets the text value of the current node.</span></span></summary>
        <value><span data-ttu-id="9c0e0-858">Возвращаемое значение зависит от значения свойства <see cref="P:System.Xml.XmlTextReader.NodeType" /> узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-858">The value returned depends on the <see cref="P:System.Xml.XmlTextReader.NodeType" /> of the node.</span></span> <span data-ttu-id="9c0e0-859">В следующей таблице представлен список возвращаемых типов узлов со значениями.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-859">The following table lists node types that have a value to return.</span></span> <span data-ttu-id="9c0e0-860">Все прочие типы узлов возвращают значение <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-860">All other node types return <see langword="String.Empty" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="9c0e0-861">Тип узла</span><span class="sxs-lookup"><span data-stu-id="9c0e0-861">Node Type</span></span> 
 </term><description> <span data-ttu-id="9c0e0-862">Значение</span><span class="sxs-lookup"><span data-stu-id="9c0e0-862">Value</span></span> 
 </description></listheader><item><term><see langword="Attribute" /></term><description> <span data-ttu-id="9c0e0-863">Значение атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-863">The value of the attribute.</span></span>  
  
 </description></item><item><term><see langword="CDATA" /></term><description> <span data-ttu-id="9c0e0-864">Содержимое раздела CDATA.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-864">The content of the CDATA section.</span></span>  
  
 </description></item><item><term><see langword="Comment" /></term><description> <span data-ttu-id="9c0e0-865">Содержимое комментария.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-865">The content of the comment.</span></span>  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> <span data-ttu-id="9c0e0-866">Внутреннее подмножество.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-866">The internal subset.</span></span>  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> <span data-ttu-id="9c0e0-867">Все содержимое, за исключением цели.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-867">The entire content, excluding the target.</span></span>  
  
 </description></item><item><term><see langword="SignificantWhitespace" /></term><description> <span data-ttu-id="9c0e0-868">Пустое пространство в области <see langword="xml:space" />= 'preserve'.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-868">The white space within an <see langword="xml:space" />= 'preserve' scope.</span></span>  
  
 </description></item><item><term><see langword="Text" /></term><description> <span data-ttu-id="9c0e0-869">Содержимое текстового узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-869">The content of the text node.</span></span>  
  
 </description></item><item><term><see langword="Whitespace" /></term><description> <span data-ttu-id="9c0e0-870">Пробелы между разметкой.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-870">The white space between markup.</span></span>  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> <span data-ttu-id="9c0e0-871">Содержимое декларации.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-871">The content of the declaration.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-872">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-872">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-873">Следующий пример считывает XML-файла и отображает каждый узел.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-873">The following example reads an XML file and displays each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9c0e0-874">В примере используется файл `items.xml`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-874">The sample uses the file `items.xml`.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="WhitespaceHandling">
      <MemberSignature Language="C#" Value="public System.Xml.WhitespaceHandling WhitespaceHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WhitespaceHandling WhitespaceHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.WhitespaceHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property WhitespaceHandling As WhitespaceHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::WhitespaceHandling WhitespaceHandling { System::Xml::WhitespaceHandling get(); void set(System::Xml::WhitespaceHandling value); };" />
      <MemberSignature Language="F#" Value="member this.WhitespaceHandling : System.Xml.WhitespaceHandling with get, set" Usage="System.Xml.XmlTextReader.WhitespaceHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WhitespaceHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-875">Возвращает или задает значение, определяющее способ обработки символов-разделителей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-875">Gets or sets a value that specifies how white space is handled.</span></span></summary>
        <value><span data-ttu-id="9c0e0-876">Одно из значений <see cref="T:System.Xml.WhitespaceHandling" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-876">One of the <see cref="T:System.Xml.WhitespaceHandling" /> values.</span></span> <span data-ttu-id="9c0e0-877">По умолчанию используется значение <see langword="WhitespaceHandling.All" /> (возвращает узлы <see langword="Whitespace" /> и <see langword="SignificantWhitespace" />).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-877">The default is <see langword="WhitespaceHandling.All" /> (returns <see langword="Whitespace" /> and <see langword="SignificantWhitespace" /> nodes).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-878">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-878">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-879">Это свойство можно изменить в любое время и вступает в силу при следующей операции чтения.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-879">This property can be changed at any time and takes effect on the next read operation.</span></span>  
  
 <span data-ttu-id="9c0e0-880">Так как `XmlTextReader` не имеет сведений о DTD, `SignificantWhitepsace` возвращаются только узлы внутри `xml:space='preserve'` области.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-880">Because the `XmlTextReader` does not have DTD information available to it, `SignificantWhitepsace` nodes are only returned within an `xml:space='preserve'` scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-881">В следующем примере считывается XML-фрагмент.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-881">The following example reads an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.WhitespaceHandling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.WhitespaceHandling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.WhitespaceHandling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.WhitespaceHandling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.WhitespaceHandling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.WhitespaceHandling Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9c0e0-882">Указано недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-882">Invalid value specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c0e0-883">Установка значения этого свойства после закрытия средства чтения (<see cref="P:System.Xml.XmlTextReader.ReadState" /> равно <see langword="ReadState.Closed" />).</span><span class="sxs-lookup"><span data-stu-id="9c0e0-883">Setting this property when the reader is closed (<see cref="P:System.Xml.XmlTextReader.ReadState" /> is <see langword="ReadState.Closed" />).</span></span></exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlTextReader.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-884">Возвращает текущую область действия <see langword="xml:lang" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-884">Gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="9c0e0-885">Текущая область действия <see langword="xml:lang" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-885">The current <see langword="xml:lang" /> scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-886">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-886">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-887">Это свойство представляет `xml:lang` определить область, в котором находится текущий узел.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-887">This property represents the `xml:lang` scope within which the current node resides.</span></span> <span data-ttu-id="9c0e0-888">Например, ниже приведен фрагмент XML `xml:lang` присвоено английского (США) в корневом элементе:</span><span class="sxs-lookup"><span data-stu-id="9c0e0-888">For example, here is an XML fragment with `xml:lang` set to US English in the root element:</span></span>  
  
 <span data-ttu-id="9c0e0-889">\<root xml:lang="en-us"></span><span class="sxs-lookup"><span data-stu-id="9c0e0-889">\<root xml:lang="en-us"></span></span>  
  
 <span data-ttu-id="9c0e0-890">\<имя > Fred \< /name ></span><span class="sxs-lookup"><span data-stu-id="9c0e0-890">\<name>Fred\</name></span></span>  
  
 <span data-ttu-id="9c0e0-891">\</ root ></span><span class="sxs-lookup"><span data-stu-id="9c0e0-891">\</root></span></span>  
  
 <span data-ttu-id="9c0e0-892">Если средство чтения находится на `name` элемент, это свойство можно использовать для поиска, что это за рамки английского (США) `xml:lang` атрибута.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-892">When the reader is positioned on the `name` element, you can use this property to find that it is in the scope of a US English `xml:lang` attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-893">В следующем примере отображается `xml:lang` значение для каждого узла.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-893">The following example displays the `xml:lang` value for each of the nodes.</span></span>  
  
 [!code-cpp[XmlTextReader.XmlLang#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.XmlLang/CPP/readlang.cpp#1)]
 [!code-csharp[XmlTextReader.XmlLang#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.XmlLang/CS/readlang.cs#1)]
 [!code-vb[XmlTextReader.XmlLang#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.XmlLang/VB/readlang.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.XmlTextReader.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-894">Задает <see cref="T:System.Xml.XmlResolver" /> для разрешения ссылок на DTD.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-894">Sets the <see cref="T:System.Xml.XmlResolver" /> used for resolving DTD references.</span></span></summary>
        <value><span data-ttu-id="9c0e0-895">Используемый <see langword="XmlResolver" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-895">The <see langword="XmlResolver" /> to use.</span></span> <span data-ttu-id="9c0e0-896">Если он имеет значение <see langword="null" />, внешние ресурсы не разрешаются.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-896">If set to <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="9c0e0-897">В [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] версии 1.1 вызывающий объект должен иметь полное доверие, чтобы иметь возможность указывать <see langword="XmlResolver" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-897">In version 1.1 of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the caller must be fully trusted in order to specify an <see langword="XmlResolver" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-898">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-898">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9c0e0-899">Средство чтения использует `XmlResolver` для разрешения расположения файла, загружаемого в средство чтения, так и для разрешения ссылок на DTD.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-899">The reader uses `XmlResolver` to resolve the location of the file loaded into the reader and also to resolve DTD references.</span></span> <span data-ttu-id="9c0e0-900">Например, если XML-КОДЕ содержится объявление DOCTYPE `<!DOCTYPE book SYSTEM book.dtd>` чтения разрешает этот внешний файл и гарантирует, что DTD имеет правильный формат.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-900">For example, if your XML included the DOCTYPE declaration, `<!DOCTYPE book SYSTEM book.dtd>` the reader resolves this external file and ensures that the DTD is well-formed.</span></span> <span data-ttu-id="9c0e0-901">Средство чтения не использует DTD для проверки.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-901">The reader does not use the DTD for validation.</span></span>  
  
 <span data-ttu-id="9c0e0-902">Это свойство можно изменить в любое время и вступает в силу при следующей операции чтения.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-902">This property can be changed at any time and takes effect on the next read operation.</span></span> <span data-ttu-id="9c0e0-903">Если это свойство имеет значение `null`, не разрешаются любые ссылки на DTD, обнаруженные средством чтения.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-903">If this property is set to `null`, any external DTD references encountered by the reader are not resolved.</span></span>  
  
 <span data-ttu-id="9c0e0-904">В версии 1.1 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], если это свойство не задано, уровень доверия приложения определяет поведение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-904">In version 1.1 of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], if this property is not set, the trust level of the application determines the default behavior.</span></span>  
  
 <span data-ttu-id="9c0e0-905">`Fully trusted code:` Средство чтения использует значение по умолчанию <xref:System.Xml.XmlUrlResolver> без пользовательских учетных данных.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-905">`Fully trusted code:` The reader uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="9c0e0-906">Если требуется проверка подлинности для доступа к сетевому ресурсу, используйте `XmlResolver` свойство, чтобы указать `XmlResolver` с необходимыми учетными данными.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-906">If authentication is required to access a network resource, use the `XmlResolver` property to specify an `XmlResolver` with the necessary credentials.</span></span>  
  
 <span data-ttu-id="9c0e0-907">`Semi-trusted code:` `XmlResolver` Свойству `null`.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-907">`Semi-trusted code:` The `XmlResolver` property is set to `null`.</span></span> <span data-ttu-id="9c0e0-908">Внешние ресурсы не разрешаются.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-908">External resources are not resolved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-909">В следующем примере используется `XmlResolver` свойство, чтобы указать учетные данные, необходимые для доступа к сетевому файлу.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-909">The following example uses the `XmlResolver` property to specify the credentials necessary to access the networked file.</span></span>  
  
 [!code-cpp[XmlTextReader.XmlResolver#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.XmlResolver/CPP/rdr_resolver.cpp#1)]
 [!code-csharp[XmlTextReader.XmlResolver#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.XmlResolver/CS/rdr_resolver.cs#1)]
 [!code-vb[XmlTextReader.XmlResolver#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.XmlResolver/VB/rdr_resolver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlUrlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlTextReader.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c0e0-910">Возвращает текущую область действия <see langword="xml:space" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-910">Gets the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="9c0e0-911">Одно из значений <see cref="T:System.Xml.XmlSpace" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-911">One of the <see cref="T:System.Xml.XmlSpace" /> values.</span></span> <span data-ttu-id="9c0e0-912">Если область действия <see langword="xml:space" /> отсутствует, данное свойство принимает значение <see langword="XmlSpace.None" />.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-912">If no <see langword="xml:space" /> scope exists, this property defaults to <see langword="XmlSpace.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9c0e0-913">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlReader> экземпляров с помощью <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-913">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e0-914">В следующем примере выполняет синтаксический анализ файла и возвращает значащий пробел, если `xml:space='preserve'` найти область.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-914">The following example parses a file and returns significant white space if an `xml:space='preserve'` scope is found.</span></span>  
  
 [!code-cpp[XmlTextReader.XmlSpace#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.XmlSpace/CPP/readspace.cpp#1)]
 [!code-csharp[XmlTextReader.XmlSpace#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.XmlSpace/CS/readspace.cs#1)]
 [!code-vb[XmlTextReader.XmlSpace#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.XmlSpace/VB/readspace.vb#1)]  
  
 <span data-ttu-id="9c0e0-915">В примере используется файл `authors.xml`качестве входных данных.</span><span class="sxs-lookup"><span data-stu-id="9c0e0-915">The example uses the file, `authors.xml`, as input.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
  </Members>
</Type>